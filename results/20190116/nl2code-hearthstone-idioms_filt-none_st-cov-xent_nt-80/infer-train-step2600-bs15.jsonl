{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -0.08785088948718567, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -0.00355066591873765, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -0.00785684585571289, -0.0012665987014770508, -6.675719760096399e-06, -0.006687164306640625, -4.9591064453125e-05, 0.0, -0.00150662986561656, -0.00014650750381406397, 0.0, -0.0002956390380859375, -3.814697265625e-06, -2.442288678139448e-05, 0.0, -3.2901640224736184e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "<UNK>", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -4.546834237552247, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwamp<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -4.470037937164307, -0.0005370535072870553, -1.1444091796875e-05, -2.86102294921875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.0517578125e-05, -2.3841855067985307e-07, -1.9073468138230965e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.72747802734375e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.48763229441829e-05, -5.614756446448155e-05, -0.001159938983619213, -0.000408172607421875, -0.00022457630257122219, -4.053113570989808e-06, -0.0040950775146484375, -5.14984130859375e-05, -8.7738037109375e-05, -2.288818359375e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.000637054443359375, -1.9073486328125e-06, -2.6702880859375e-05, -0.0003566741943359375, -9.918212890625e-05, -5.7220458984375e-06, -0.03814639151096344, -0.0035440067294985056, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -0.007847309112548828, -0.0012627840042114258, -6.675719760096399e-06, -0.0066986083984375, -4.9591064453125e-05, 0.0, -0.0015044842148199677, -0.00014650750381406397, 0.0, -0.00031280517578125, -1.9073486328125e-06, -2.3351574782282114e-05, 0.0, -3.182877117069438e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwamp<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "<UNK>", "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -4.598109128304827, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "<UNK>Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -4.400859832763672, -0.1385456919670105, -0.012261253781616688, -0.0002231597900390625, -2.47955322265625e-05, -8.96453857421875e-05, -1.9073486328125e-06, -0.008283257484436035, -0.001123189926147461, -1.58548318722751e-05, -0.0073184967041015625, -5.7220458984375e-06, 0.0, -0.001319464878179133, -0.0001518712379038334, 0.0, -0.00020599365234375, -1.9073486328125e-06, -2.525467425584793e-05, 0.0, -2.9921451641712338e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Bounce", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -4.718666811209566, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Bounce"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -4.555144309997559, -0.0004222725401632488, -0.0001430511474609375, -0.04366111755371094, -0.002506256103515625, 0.0, -0.07908201217651367, -0.0005201101303100586, -6.556510470545618e-06, -0.00313568115234375, -0.000125885009765625, 0.0, -0.005697925109416246, -0.00020730149117298424, 0.0, -0.000335693359375, -1.9073486328125e-06, -2.2399239242076874e-05, -1.1920928244535389e-07, -3.230563015677035e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Bounce(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Kill", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -5.071837734477526, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Kill"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -4.893882751464844, -1.0371154530730564e-05, -3.814697265625e-06, -7.62939453125e-06, -0.08969497680664062, 0.0, -0.03655433654785156, -0.0004101991653442383, -1.0013580322265625e-05, -0.021749496459960938, -1.71661376953125e-05, 0.0, -0.0013605818385258317, -0.00018095785344485193, 0.0, -0.000274658203125, -1.9073486328125e-06, -2.4541513994336128e-05, 0.0, -3.242481034249067e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), WeaponSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "<UNK>", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -5.661597452422598, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "Acidic<UNK>Ooze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -5.581772327423096, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -0.00355066591873765, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -0.00785684585571289, -0.0012665987014770508, -6.675719760096399e-06, -0.006687164306640625, -4.9591064453125e-05, 0.0, -0.00150662986561656, -0.00014650750381406397, 0.0, -0.0002956390380859375, -3.814697265625e-06, -2.442288678139448e-05, 0.0, -3.2901640224736184e-05, 0.0, -3.814697265625e-06], "inferred_code": "class Acidic<UNK>Ooze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Ooze", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -5.733926549942737, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicOozeOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -5.468320369720459, -0.19699467718601227, -0.0006191448774188757, -2.09808349609375e-05, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -2.9802276912960224e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -9.1552734375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -8.428029832430184e-05, -5.626677375403233e-05, -0.001138382125645876, -0.00040435791015625, -0.00022171574528329074, -4.053113570989808e-06, -0.0040683746337890625, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.0439109802246094e-05, -2.503394853192731e-06, -0.00063323974609375, -1.9073486328125e-06, -2.6702880859375e-05, -0.0003604888916015625, -9.918212890625e-05, -5.7220458984375e-06, -0.03796966373920441, -0.0035579123068600893, -0.000125885009765625, -7.62939453125e-06, -0.000553131103515625, 0.0, -0.007869243621826172, -0.0012704133987426758, -6.675719760096399e-06, -0.0066967010498046875, -4.9591064453125e-05, 0.0, -0.00150579574983567, -0.00014650750381406397, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.4899025447666645e-05, 0.0, -3.421294968575239e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicOozeOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 111, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -5.76320436741446, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -5.679364204406738, -0.0001220703125, -0.0005435943603515625, -0.0001468658447265625, -7.62939453125e-06, 0.0, -6.961822509765625e-05, -2.622604142743512e-06, -0.0008220672607421875, -1.9073486328125e-06, -2.288818359375e-05, -0.000396728515625, -0.000118255615234375, -5.7220458984375e-06, -0.03669227659702301, -0.003935740329325199, -0.000125885009765625, -7.62939453125e-06, -0.00054931640625, 0.0, -0.007930278778076172, -0.001267552375793457, -6.675719760096399e-06, -0.0067958831787109375, -4.76837158203125e-05, 0.0, -0.0015109218657016754, -0.00014686511713080108, 0.0, -0.000293731689453125, -3.814697265625e-06, -2.4423119612038136e-05, 0.0, -3.266322164563462e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "weapon", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -6.172400557864535, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroyweapon"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -6.033756732940674, -8.821482879284304e-06, -0.043933868408203125, -1.1444091796875e-05, -0.008687973022460938, 0.0, -0.009163737297058105, -0.0006048679351806641, -9.536741345073096e-06, -0.008619308471679688, -1.1444091796875e-05, 0.0, -0.001431432319805026, -0.00012230791617184877, 0.0, -0.0002384185791015625, -1.9073486328125e-06, -2.573092933744192e-05, 0.0, -3.433215897530317e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroyweapon(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "<UNK>", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -6.824292601639286, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "<UNK>"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -4.400859832763672, -2.289346218109131, -0.000988006591796875, -0.03919219970703125, -0.04543495178222656, -3.814697265625e-06, -0.014810201711952686, -0.0006319284439086914, -1.2874597814516164e-05, -0.004039764404296875, -1.71661376953125e-05, -1.9073486328125e-06, -0.0007776359561830759, -0.00016653462080284953, -1.9073486328125e-06, -0.0003376007080078125, -1.9073486328125e-06, -2.0850333385169506e-05, 0.0, -2.5391527742613107e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(<UNK>(), WeaponSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -6.948169837456703, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "DestroyDestroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -6.834976673126221, -0.00044412133865989745, -0.00016021728515625, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -0.018252134323120117, -0.001771092414855957, -7.987022399902344e-06, -0.022454261779785156, -6.4849853515625e-05, 0.0, -0.0036396454088389874, -0.00013756607950199395, 0.0, -0.000247955322265625, -3.814697265625e-06, -2.763792872428894e-05, 0.0, -3.719309461303055e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(DestroyDestroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Hero", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -6.966885239997396, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "EnemyPlayer"}], "_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -0.00355066591873765, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -6.8889479637146, -0.0013108253479003906, -8.106231689453125e-06, -0.0047130584716796875, -7.62939453125e-06, 0.0, -0.0013876144075766206, -0.00015580494073219597, 0.0, -0.0003108978271484375, -3.814697265625e-06, -2.8114416636526585e-05, 0.0, -3.7312340282369405e-05, 0.0, -3.814697265625e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), HeroSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Heal", "<EOS>", 302, 93, 213, "Blood", "Fury", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -7.543395568007433, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "BloodFury"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -0.00355066591873765, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -5.668253421783447, -0.007138490676879883, -1.71661376953125e-05, -0.37894344329833984, 0.0, -1.364930272102356, -0.0539182685315609, -4.4583364797290415e-05, -0.00012969970703125, -3.814697265625e-06, -2.2163207177072763e-05, -1.1920928244535389e-07, -2.19344328797888e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(), Heal(\n            BloodFury())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 304, 93, 213, "Destroy", "<EOS>", 93, 213, "Turn", "Ended", "<EOS>", 93, 213, "Turn", "Ended", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -7.952082134515479, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"args": [{"_type": "Template16", "hole0": "Destroy"}, {"_type": "Template16", "hole0": "TurnEnded"}, {"_type": "Template16", "hole0": "TurnEnded"}], "_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "AcidicSwampOoze"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -0.00355066591873765, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -0.00785684585571289, -0.0012665987014770508, -6.675719760096399e-06, -5.639078140258789, -0.00373077392578125, 0.0, -0.5960959196090698, -0.008017461746931076, -0.02350139617919922, 0.0, -0.33682483434677124, -0.10797783732414246, 0.0, -0.7412261962890625, 0.0, -0.3848607838153839, -0.026678290218114853, 0.0, -0.0049495697021484375, -9.5367431640625e-06, -1.6566249541938305e-05, -3.576278118089249e-07, -1.215934389620088e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(Destroy(), TurnEnded(), TurnEnded())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 314], "score": -25.353790283203125, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -7.62939453125e-06, -25.353761672973633], "inferred_code": ""}], "index": 0}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156], "score": -0.4213251119274375, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -0.02229166030883789, -2.86102294921875e-05, -0.0335845947265625, -0.003673553466796875, -7.62939453125e-06, -2.288818359375e-05, -0.000576019287109375, -0.0012226104736328125, -0.0046672821044921875, -0.008576035499572754, -1.1920928244535389e-07, -0.0025005340576171875, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 113, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156], "score": -2.4000859504360434, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -2.0753517150878906, -0.02071964740753174, -3.814697265625e-05, -0.07455825805664062, -0.0042057037353515625, -7.62939453125e-06, -2.47955322265625e-05, -0.0024042129516601562, -0.000911712646484375, -0.004638671875, -0.008607029914855957, -1.1920928244535389e-07, -0.00238800048828125, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -3.211724425646935, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -2.8572473526000977, -0.0002155303955078125, -0.0005092620849609375, -1.33514404296875e-05, 0.0, -0.0011920928955078125, -1.9073486328125e-06, -1.52587890625e-05, -0.1857585906982422, -0.006963610649108887, -5.245195097813848e-06, -8.392333984375e-05, -0.004322052001953125, -2.09808349609375e-05, -0.0029010772705078125, -0.000148773193359375, -0.0017185211181640625, -0.0008314836886711419, -5.841253368998878e-06, -1.9073486328125e-05, -0.02925586700439453, -0.010601043701171875, -0.000789642333984375, -3.814697265625e-06, -0.010084152221679688, -0.04040789604187012, -1.9073486328125e-05, -0.02935791015625, -3.24249267578125e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 61, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156], "score": -3.835659527032469, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template64"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -3.419255256652832, -0.05364251136779785, -2.8729025871143676e-05, -7.05718994140625e-05, -0.002834320068359375, -2.09808349609375e-05, -0.0015468597412109375, -5.14984130859375e-05, -0.00328826904296875, -0.0006363364518620074, -8.34464663057588e-06, -7.62939453125e-06, -0.007340431213378906, -0.027011871337890625, -0.00072479248046875, -3.814697265625e-06, -0.10175132751464844, -0.018573284149169922, -2.6702880859375e-05, -0.08034896850585938, -0.0038471221923828125, -7.62939453125e-06, -2.47955322265625e-05, -0.0005970001220703125, -0.0013275146484375, -0.0040798187255859375, -0.00875234603881836, -1.1920928244535389e-07, -0.0026044845581054688, -5.7220458984375e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -4.7420674932987765, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -3.9059581756591797, -0.041614532470703125, -0.001178741455078125, -0.0001468658447265625, -0.007758498191833496, -0.0015736944042146206, -0.001750946044921875, -0.0001049041748046875, -0.00118255615234375, -2.09808349609375e-05, -0.0002841949462890625, -9.1552734375e-05, -0.0003662109375, -0.01843583583831787, -0.0006524324417114258, -0.018367767333984375, -0.0004100799560546875, -0.0007343292236328125, -3.62396240234375e-05, -0.0005588531494140625, -0.0001163482666015625, -0.0031747817993164062, -1.9073486328125e-06, -0.047954559326171875, -0.005508898291736841, -2.3841855067985307e-07, -5.7220458984375e-06, -0.4285287857055664, -0.00025177001953125, -0.00406646728515625, -0.00042724609375, -7.62939453125e-06, 0.0, -0.0048847198486328125, -0.0033195018768310547, -4.1961669921875e-05, -0.0011720657348632812, -0.000270843505859375, -0.000156402587890625, 0.0, -0.006051063537597656, -0.004999399185180664, -5.9604644775390625e-06, -0.000743865966796875, 0.0, -0.0010225772857666016, -2.0265579223632812e-06, -0.000152587890625, -0.01798534393310547, -0.0001087188720703125, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001087188720703125, -0.0059814453125, -0.010890483856201172, -1.5497195136049413e-06, -4.38690185546875e-05, -0.00177764892578125, -5.340576171875e-05, -0.012542724609375, -0.0001621246337890625, -0.0020856857299804688, -0.0008366103866137564, -3.3378591979271732e-06, -1.52587890625e-05, -0.06395244598388672, -0.0047969818115234375, -0.0007677078247070312, -1.9073486328125e-06, -0.027011871337890625, -0.05625128746032715, -1.52587890625e-05, -0.01589679718017578, -2.09808349609375e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 96, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156], "score": -4.79592635685384, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template19"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -0.02229166030883789, -2.86102294921875e-05, -4.140131950378418, -0.18077564239501953, -7.43865966796875e-05, -7.62939453125e-06, -0.0006494522094726562, -0.0007152557373046875, -0.04405403137207031, -0.06052708625793457, -3.576278118089249e-07, -0.0024967193603515625, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self.target)\n        self.target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "increase_health", "<EOS>", 113, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156], "score": -4.909830713810372, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -4.51781702041626, -9.5367431640625e-06, -0.026193618774414062, -0.004734039306640625, -1.9073486328125e-06, -7.62939453125e-06, -0.0007266998291015625, -0.0013446807861328125, -0.004364013671875, -0.0073517560958862305, -1.1920928244535389e-07, -0.0031061172485351562, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            increase_health()), self)\n        self.target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156], "score": -5.036338707785937, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template19"}}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -3.719698905944824, -2.288818359375e-05, -0.14418888092041016, -0.5004576444625854, -3.933862171834335e-05, -0.07918965816497803, -3.576272320060525e-06, -0.0001316070556640625, -0.12502479553222656, -9.34600830078125e-05, -0.001865386962890625, -1.1444091796875e-05, -0.0013685226440429688, -0.0007156084175221622, -7.629387255292386e-06, -1.1444091796875e-05, -0.04728507995605469, -0.00167083740234375, -0.0005207061767578125, -1.9073486328125e-06, -0.2214813232421875, -0.03072679042816162, -2.09808349609375e-05, -0.04374408721923828, -0.0033092498779296875, -9.5367431640625e-06, -2.47955322265625e-05, -0.0005626678466796875, -0.0010662078857421875, -0.004288673400878906, -0.009132146835327148, -1.1920928244535389e-07, -0.00241851806640625, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.hero.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -5.231033110214412, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -2.8572473526000977, -0.0002155303955078125, -0.0005092620849609375, -1.33514404296875e-05, 0.0, -0.0011920928955078125, -1.9073486328125e-06, -1.52587890625e-05, -2.1460742950439453, -0.05135941505432129, -5.4238757002167404e-05, -8.392333984375e-05, -0.004260063171386719, -3.4332275390625e-05, -0.001934051513671875, -0.0001506805419921875, -0.0031480789184570312, -0.0007837997400201857, -7.6293927122605965e-06, -2.09808349609375e-05, -0.023148536682128906, -0.013906478881835938, -0.0007886886596679688, -3.814697265625e-06, -0.008147239685058594, -0.036229848861694336, -1.71661376953125e-05, -0.05245018005371094, -3.62396240234375e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -5.533243097281655, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -3.9059581756591797, -0.041614532470703125, -0.001178741455078125, -0.0001468658447265625, -0.007758498191833496, -0.0015736944042146206, -0.001750946044921875, -0.0001049041748046875, -0.00118255615234375, -2.09808349609375e-05, -0.0002841949462890625, -9.1552734375e-05, -0.0003662109375, -0.01843583583831787, -0.0006524324417114258, -0.018367767333984375, -0.0004100799560546875, -0.0007343292236328125, -3.62396240234375e-05, -0.0005588531494140625, -0.0001163482666015625, -0.0031747817993164062, -1.9073486328125e-06, -0.047954559326171875, -0.005508898291736841, -2.3841855067985307e-07, -5.7220458984375e-06, -1.2187395095825195, -5.53131103515625e-05, -0.0007266998291015625, -0.0006656646728515625, -2.47955322265625e-05, 0.0, -0.005738258361816406, -0.001552581787109375, -1.71661376953125e-05, -0.0008974075317382812, -0.000225067138671875, -0.0001430511474609375, 0.0, -0.0050868988037109375, -0.009252667427062988, -5.9604644775390625e-06, -0.0006618499755859375, -1.9073486328125e-06, -0.0013430118560791016, -2.0265579223632812e-06, -0.000156402587890625, -0.015410423278808594, -0.0001163482666015625, -3.814697265625e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.33514404296875e-05, -2.288818359375e-05, -0.0001010894775390625, -0.0063381195068359375, -0.01337730884552002, -1.6689286894688848e-06, -4.57763671875e-05, -0.001705169677734375, -5.7220458984375e-05, -0.013448715209960938, -0.0001811981201171875, -0.004276275634765625, -0.0009127852390520275, -3.3378591979271732e-06, -1.52587890625e-05, -0.06070518493652344, -0.004909515380859375, -0.000782012939453125, -1.9073486328125e-06, -0.02716350555419922, -0.05779910087585449, -1.52587890625e-05, -0.015900611877441406, -2.09808349609375e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 144, 163, 302, 76, 164, 61, "taunt", "<EOS>", 68, 156], "score": -6.01468100601619, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template64"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -0.02229166030883789, -2.86102294921875e-05, -0.0335845947265625, -0.003673553466796875, -7.62939453125e-06, -2.288818359375e-05, -0.000576019287109375, -0.0012226104736328125, -5.604881286621094, -0.0014615058898925781, 0.0, -0.0027570724487304688, -3.814697265625e-06], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        target.taunt = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 115, 156], "score": -6.128810310902054, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -0.02229166030883789, -2.86102294921875e-05, -4.447081565856934, -0.001827239990234375, -0.0001316070556640625, 0.0, -0.01335906982421875, -0.22805416584014893, -7.62939453125e-06, -0.03486156463623047, -9.5367431640625e-06, -8.0108642578125e-05, -9.34600830078125e-05, -5.7220458984375e-06, 0.0, -0.7419776916503906, -0.21295034885406494, -1.1444091796875e-05, -2.47955322265625e-05, -0.0818328857421875, -1.1444091796875e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self.target.calculate_max_health())\n        target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -6.305664206089432, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -0.02229166030883789, -2.86102294921875e-05, -4.447081565856934, -0.001827239990234375, -0.0001316070556640625, 0.0, -0.01335906982421875, -0.22805416584014893, -7.62939453125e-06, -0.03486156463623047, -9.5367431640625e-06, -8.0108642578125e-05, -9.34600830078125e-05, -5.7220458984375e-06, 0.0, -0.7555046081542969, -0.2709697484970093, -5.7220458984375e-06, -5.7220458984375e-06, -0.18715953826904297, -1.71661376953125e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self.target.calculate_max_health())\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 115, 156], "score": -6.392439866604263, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "AncestralHealing"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -2.0753517150878906, -0.02071964740753174, -3.814697265625e-05, -2.908815383911133, -0.0009021759033203125, -0.0002040863037109375, 0.0, -0.011473655700683594, -0.18513119220733643, -7.62939453125e-06, -0.035004615783691406, -7.62939453125e-06, -7.82012939453125e-05, -8.58306884765625e-05, -5.7220458984375e-06, 0.0, -0.6429309844970703, -0.22159063816070557, -1.33514404296875e-05, -2.47955322265625e-05, -0.0838165283203125, -1.1444091796875e-05], "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(target.\n            calculate_max_health()), self.target.calculate_max_health())\n        target.increase_health(4)\n"}, {"choice_history": [139, 193, 314], "score": -25.534975051879883, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.918212890625e-05, -3.814697265625e-06, -25.53487205505371], "inferred_code": ""}], "index": 1}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -5.858319268761299, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.8561304807662964, -3.933906555175781e-06, -0.004505157470703125, -0.0004673004150390625, -0.0001354217529296875, -0.0001010894775390625, -0.03487873077392578, -0.0001163482666015625, -0.013579368591308594, -3.814697265625e-06, -0.018174171447753906, 0.0, -0.007502555847167969, -1.9073486328125e-06, -0.16969144344329834, -2.9802317840221804e-06, -0.009021876379847527, -3.576277322281385e-06, -1.573146104812622, -0.0005551576614379883, -0.018329620361328125, -0.0002613067626953125, -9.34600830078125e-05, -1.33514404296875e-05, -0.004398345947265625, -3.814697265625e-06, -0.027977824211120605, -0.00022721197456121445, -0.0006313323974609375, -3.0517578125e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.0031833648681640625, -3.62396240234375e-05, -0.0016994476318359375, 0.0, -0.06598246097564697, -2.1457672119140625e-06, -0.0052890777587890625, -0.016941070556640625, -0.0001010894775390625, -0.013886570930480957, -0.0002534211671445519, -0.0001506805419921875, -5.7220458984375e-06, -1.1444091796875e-05, -0.007610321044921875, -0.0004138946533203125, -1.9073486328125e-05, -0.0006856918334960938, -3.814697265625e-06, -0.07174551486968994, -6.69937435304746e-05, -0.006706236395984888, -1.33514404296875e-05, -0.0002593994140625, -0.006099700927734375, -0.00040435791015625, -5.7220458984375e-06, -0.010004997253417969, -0.0012035368708893657, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.0038690567016601562, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.013102531433105469, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.000774383544921875, -0.0003719329833984375, -0.11914443969726562, -6.103515625e-05, -3.0517578125e-05, -0.00063323974609375, -8.7738037109375e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011956627713516355, -3.814697265625e-06, -0.003800511360168457, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014514923095703125, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030689239501953125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.00626373291015625, -1.71661376953125e-05, -0.006053924560546875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Misha(), hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -5.9727349267791325, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.816451907157898, -0.00021183490753173828, -0.06686210632324219, -0.9111452102661133, -1.71661376953125e-05, -0.0027322769165039062, -1.9073486328125e-06, -0.4529905319213867, -1.9073486328125e-06, -0.0004074573516845703, -5.7220458984375e-06, -0.13202857971191406, -0.0003414154052734375, -7.2479248046875e-05, -3.814697265625e-06, -0.038275718688964844, -3.0517578125e-05, -0.05632972717285156, -1.9073486328125e-06, -0.017815589904785156, 0.0, -0.03203010559082031, -1.9073486328125e-06, -0.25432610511779785, -3.218649908376392e-06, -0.010263203643262386, -6.43729799776338e-06, -1.3785151243209839, -0.00015163421630859375, -0.010044097900390625, -9.72747802734375e-05, -9.5367431640625e-06, -0.018053054809570312, -9.5367431640625e-06, -0.06356406211853027, -0.00035536158247850835, -0.0024471282958984375, -3.24249267578125e-05, -0.00049591064453125, 0.0, -0.0023174285888671875, -5.7220458984375e-05, -0.0020934343338012695, 0.0, -0.08859968185424805, -2.0265579223632812e-06, -0.005218505859375, -0.015378952026367188, -8.20159912109375e-05, -0.015877842903137207, -0.00018524398910813034, -0.0001850128173828125, -7.62939453125e-06, -9.5367431640625e-06, -0.005702972412109375, -0.000400543212890625, -1.33514404296875e-05, -0.0006837844848632812, -3.814697265625e-06, -0.03584015369415283, -6.0318408941384405e-05, -0.006743668112903833, -1.52587890625e-05, -0.000263214111328125, -0.00775146484375, -0.00038909912109375, -5.7220458984375e-06, -0.008976936340332031, -0.001027345540933311, -3.814697265625e-06, -0.0001277923583984375, -0.000133514404296875, 0.0, 0.0, -0.003925323486328125, -2.300739288330078e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.012929916381835938, -0.00012302398681640625, 0.0, -0.000213623046875, -2.6702880859375e-05, -0.0009307861328125, -5.7220458984375e-06, -0.0001926422119140625, -0.0019969940185546875, -0.0006046295166015625, -0.0001201629638671875, -0.0014257431030273438, -0.0007724761962890625, -0.0003719329833984375, -0.11811447143554688, -6.103515625e-05, -3.0517578125e-05, -0.0006341934204101562, -8.58306884765625e-05, -0.000698089599609375, -3.814697265625e-06, -0.00011920866381842643, -3.814697265625e-06, -0.0038024187088012695, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014495849609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030698776245117188, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.006054878234863281, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.Leokk(), CARD_RARITY.EPIC,\n            hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Huffer", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -6.220954882086737, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -2.09122633934021, -3.814697265625e-06, -0.00528717041015625, -0.000431060791015625, -0.000530242919921875, -8.20159912109375e-05, -0.0023593902587890625, -0.0001125335693359375, -0.00354766845703125, -7.62939453125e-06, -0.038285255432128906, 0.0, -0.02430438995361328, -1.9073486328125e-06, -0.30757951736450195, -2.861022494471399e-06, -0.013931750319898129, -2.9802317840221804e-06, -1.5643353462219238, -0.0005856752395629883, -0.0178985595703125, -0.00028228759765625, -8.20159912109375e-05, -1.1444091796875e-05, -0.004311561584472656, -1.9073486328125e-06, -0.028949856758117676, -0.00022017868468537927, -0.0006151199340820312, -3.24249267578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.00316619873046875, -3.4332275390625e-05, -0.0017070770263671875, 0.0, -0.065338134765625, -2.1457672119140625e-06, -0.0050506591796875, -0.017145156860351562, -9.918212890625e-05, -0.013840794563293457, -0.0002562820154707879, -0.0001506805419921875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0075168609619140625, -0.0004138946533203125, -1.9073486328125e-05, -0.0006818771362304688, -3.814697265625e-06, -0.07023918628692627, -6.66361374896951e-05, -0.006716726813465357, -1.33514404296875e-05, -0.0002593994140625, -0.0061168670654296875, -0.00040435791015625, -5.7220458984375e-06, -0.009914398193359375, -0.001211047056131065, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.0038661956787109375, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.013092994689941406, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.000774383544921875, -0.0003719329833984375, -0.11916351318359375, -6.103515625e-05, -3.0517578125e-05, -0.00063323974609375, -8.7738037109375e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011956627713516355, -3.814697265625e-06, -0.003800511360168457, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014514923095703125, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030689239501953125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.00626373291015625, -1.71661376953125e-05, -0.006053924560546875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Huffer(), hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -6.272337661637032, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.6315535306930542, -0.00010824203491210938, -0.6259222030639648, -0.0002803802490234375, -0.0003719329833984375, -8.0108642578125e-05, -0.0010042190551757812, -4.76837158203125e-05, -0.0013570785522460938, -9.5367431640625e-06, -0.07608604431152344, 0.0, -0.015686988830566406, -1.9073486328125e-06, -0.24750685691833496, -3.3378591979271732e-06, -0.011228321120142937, -3.218649908376392e-06, -1.4997835159301758, -0.0003777742385864258, -0.017877578735351562, -0.000308990478515625, -8.392333984375e-05, -1.1444091796875e-05, -0.0038938522338867188, -3.814697265625e-06, -0.028691768646240234, -0.00021755610941909254, -0.0005817413330078125, -2.86102294921875e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.0033550262451171875, -3.62396240234375e-05, -0.0018167495727539062, 0.0, -0.0592273473739624, -2.1457672119140625e-06, -0.004825592041015625, -0.017302513122558594, -0.0001010894775390625, -0.013851284980773926, -0.00025246766745112836, -0.000148773193359375, -5.7220458984375e-06, -1.1444091796875e-05, -0.007476806640625, -0.0004062652587890625, -1.9073486328125e-05, -0.000682830810546875, -3.814697265625e-06, -0.06939327716827393, -6.615932943532243e-05, -0.006722210440784693, -1.33514404296875e-05, -0.0002593994140625, -0.0061473846435546875, -0.0004024505615234375, -5.7220458984375e-06, -0.009922981262207031, -0.0011987684993073344, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.0038700103759765625, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.01309967041015625, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.000774383544921875, -0.0003719329833984375, -0.11918830871582031, -6.103515625e-05, -3.0517578125e-05, -0.00063323974609375, -8.7738037109375e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011956627713516355, -3.814697265625e-06, -0.003800511360168457, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014514923095703125, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030689239501953125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.00626373291015625, -1.71661376953125e-05, -0.006053924560546875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.hunter(), hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -6.444353211317541, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.8561304807662964, -3.933906555175781e-06, -0.004505157470703125, -0.0004673004150390625, -0.0001354217529296875, -0.0001010894775390625, -0.03487873077392578, -0.0001163482666015625, -0.013579368591308594, -3.814697265625e-06, -0.018174171447753906, 0.0, -0.007502555847167969, -1.9073486328125e-06, -0.16969144344329834, -2.9802317840221804e-06, -0.009021876379847527, -3.576277322281385e-06, -1.4439704418182373, -9.310245513916016e-05, -0.7289905548095703, -0.0001678466796875, -0.000377655029296875, -3.4332275390625e-05, -0.0030975341796875, -3.814697265625e-06, -0.029495954513549805, -0.0002019397506956011, -0.00081634521484375, -3.814697265625e-05, -0.000118255615234375, -1.9073486328125e-06, -0.0032482147216796875, -3.62396240234375e-05, -0.001689910888671875, 0.0, -0.07022345066070557, -2.1457672119140625e-06, -0.0063571929931640625, -0.015993118286132812, -0.0001049041748046875, -0.013833165168762207, -0.0002423367404844612, -0.0001506805419921875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0078582763671875, -0.0004100799560546875, -1.9073486328125e-05, -0.0006999969482421875, -3.814697265625e-06, -0.07143890857696533, -6.604012742172927e-05, -0.006686090026050806, -1.33514404296875e-05, -0.0002593994140625, -0.00614166259765625, -0.00040435791015625, -5.7220458984375e-06, -0.010035514831542969, -0.0011882780818268657, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.003879547119140625, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.013090133666992188, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.0007762908935546875, -0.0003719329833984375, -0.11919403076171875, -6.103515625e-05, -3.0517578125e-05, -0.00063323974609375, -8.7738037109375e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011956627713516355, -3.814697265625e-06, -0.003800511360168457, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014514923095703125, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030689239501953125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.00626373291015625, -1.71661376953125e-05, -0.006053924560546875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Misha(), hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -6.4774339166192405, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.816451907157898, -0.00021183490753173828, -0.06686210632324219, -0.9111452102661133, -1.71661376953125e-05, -0.0027322769165039062, -1.9073486328125e-06, -0.4529905319213867, -1.9073486328125e-06, -0.0004074573516845703, -5.7220458984375e-06, -0.13202857971191406, -0.0003414154052734375, -7.2479248046875e-05, -3.814697265625e-06, -0.038275718688964844, -3.0517578125e-05, -0.05632972717285156, -1.9073486328125e-06, -0.017815589904785156, 0.0, -0.03203010559082031, -1.9073486328125e-06, -0.25432610511779785, -3.218649908376392e-06, -0.010263203643262386, -6.43729799776338e-06, -1.6088818311691284, -0.000680088996887207, -0.08115386962890625, -4.1961669921875e-05, -9.5367431640625e-06, -0.02545166015625, -9.5367431640625e-06, -0.2789442539215088, -0.000540373264811933, -0.0029449462890625, -2.47955322265625e-05, -0.0003147125244140625, 0.0, -0.0020875930786132812, -5.91278076171875e-05, -0.0019894838333129883, 0.0, -0.07229053974151611, -2.0265579223632812e-06, -0.0039653778076171875, -0.015996932983398438, -7.82012939453125e-05, -0.016176462173461914, -0.00019168049038853496, -0.0001811981201171875, -7.62939453125e-06, -9.5367431640625e-06, -0.0051174163818359375, -0.0003986358642578125, -1.33514404296875e-05, -0.0006618499755859375, -3.814697265625e-06, -0.032999634742736816, -6.0318408941384405e-05, -0.006776569876819849, -1.52587890625e-05, -0.0002651214599609375, -0.007904052734375, -0.0003871917724609375, -5.7220458984375e-06, -0.0088958740234375, -0.001023530843667686, -3.814697265625e-06, -0.0001277923583984375, -0.0001316070556640625, 0.0, 0.0, -0.0039196014404296875, -2.300739288330078e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.012941360473632812, -0.00012302398681640625, 0.0, -0.0002117156982421875, -2.6702880859375e-05, -0.0009288787841796875, -5.7220458984375e-06, -0.0001926422119140625, -0.0019969940185546875, -0.0006046295166015625, -0.0001201629638671875, -0.0014257431030273438, -0.0007724761962890625, -0.0003719329833984375, -0.11791801452636719, -6.103515625e-05, -3.0517578125e-05, -0.00063323974609375, -8.58306884765625e-05, -0.000698089599609375, -3.814697265625e-06, -0.00011932787310797721, -3.814697265625e-06, -0.0038024187088012695, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014514923095703125, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030698776245117188, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.006054878234863281, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.Leokk(), CARD_RARITY.EPIC,\n            hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Huffer", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -6.848102796542882, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -2.09122633934021, -3.814697265625e-06, -0.00528717041015625, -0.000431060791015625, -0.000530242919921875, -8.20159912109375e-05, -0.0023593902587890625, -0.0001125335693359375, -0.00354766845703125, -7.62939453125e-06, -0.038285255432128906, 0.0, -0.02430438995361328, -1.9073486328125e-06, -0.30757951736450195, -2.861022494471399e-06, -0.013931750319898129, -2.9802317840221804e-06, -1.5311007499694824, -8.52346420288086e-05, -0.6694221496582031, -0.000152587890625, -0.000408172607421875, -3.4332275390625e-05, -0.0032672882080078125, -3.814697265625e-06, -0.03187227249145508, -0.00020360868074931204, -0.0007886886596679688, -3.814697265625e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.0031871795654296875, -3.4332275390625e-05, -0.0016794204711914062, 0.0, -0.07071709632873535, -2.1457672119140625e-06, -0.0063724517822265625, -0.01601123809814453, -0.000102996826171875, -0.013880372047424316, -0.0002471042680554092, -0.0001506805419921875, -5.7220458984375e-06, -1.1444091796875e-05, -0.00777435302734375, -0.000408172607421875, -1.9073486328125e-05, -0.0007009506225585938, -3.814697265625e-06, -0.07131493091583252, -6.62785314489156e-05, -0.006692050490528345, -1.33514404296875e-05, -0.0002593994140625, -0.0060977935791015625, -0.00040435791015625, -5.7220458984375e-06, -0.009995460510253906, -0.001208305242471397, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.0038776397705078125, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.013086318969726562, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.0007762908935546875, -0.0003719329833984375, -0.11925315856933594, -6.103515625e-05, -3.0517578125e-05, -0.00063323974609375, -8.7738037109375e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011956627713516355, -3.814697265625e-06, -0.0037995576858520508, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014514923095703125, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030689239501953125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034608840942382812, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.00626373291015625, -1.71661376953125e-05, -0.006053924560546875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Huffer(), hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -7.959566470185557, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.8561304807662964, -3.933906555175781e-06, -0.004505157470703125, -0.0004673004150390625, -0.0001354217529296875, -0.0001010894775390625, -0.03487873077392578, -0.0001163482666015625, -0.013579368591308594, -3.814697265625e-06, -0.018174171447753906, 0.0, -0.007502555847167969, -1.9073486328125e-06, -0.16969144344329834, -2.9802317840221804e-06, -0.009021876379847527, -3.576277322281385e-06, -1.957993745803833, -3.933906555175781e-06, -0.0039386749267578125, -0.000484466552734375, -0.00014495849609375, -0.0001010894775390625, -0.050126075744628906, -0.0001010894775390625, -0.020029067993164062, -3.814697265625e-06, -0.015436172485351562, 0.0, -0.0110931396484375, -1.9073486328125e-06, -0.21039032936096191, -3.099440846199286e-06, -0.009595511481165886, -3.576277322281385e-06, -1.4054715633392334, -8.26120376586914e-05, -0.008974075317382812, -0.0001773834228515625, -7.62939453125e-06, -0.01655292510986328, -1.1444091796875e-05, -0.05127561092376709, -0.00034892396070063114, -0.0015802383422851562, -3.24249267578125e-05, -0.0003719329833984375, 0.0, -0.002437591552734375, -5.91278076171875e-05, -0.0022546052932739258, 0.0, -0.07216119766235352, -2.0265579223632812e-06, -0.00485992431640625, -0.014858245849609375, -6.866455078125e-05, -0.016814708709716797, -0.00016915233572945, -0.000186920166015625, -7.62939453125e-06, -9.5367431640625e-06, -0.00604248046875, -0.000415802001953125, -1.1444091796875e-05, -0.0006799697875976562, -3.814697265625e-06, -0.030947208404541016, -6.008000491419807e-05, -0.006743429694324732, -1.52587890625e-05, -0.00026702880859375, -0.008272171020507812, -0.0003833770751953125, -5.7220458984375e-06, -0.0088958740234375, -0.0009938477305695415, -3.814697265625e-06, -0.000125885009765625, -0.0001316070556640625, 0.0, 0.0, -0.003948211669921875, -2.300739288330078e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.012927055358886719, -0.00012302398681640625, 0.0, -0.000213623046875, -2.6702880859375e-05, -0.0009288787841796875, -5.7220458984375e-06, -0.00019073486328125, -0.0019989013671875, -0.000606536865234375, -0.0001201629638671875, -0.00142669677734375, -0.0007724761962890625, -0.0003719329833984375, -0.11706352233886719, -6.103515625e-05, -3.0517578125e-05, -0.0006351470947265625, -8.58306884765625e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011908946180483326, -3.814697265625e-06, -0.0038033723831176758, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014495849609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.003070831298828125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.003459930419921875, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.0060558319091796875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Misha(), hearthbreaker.cards.minions.Misha(),\n            hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 304, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -8.079285485898232, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.8561304807662964, -3.933906555175781e-06, -0.004505157470703125, -0.0004673004150390625, -0.0001354217529296875, -0.0001010894775390625, -0.03487873077392578, -0.0001163482666015625, -0.013579368591308594, -3.814697265625e-06, -0.018174171447753906, 0.0, -0.007502555847167969, -1.9073486328125e-06, -0.16969144344329834, -2.9802317840221804e-06, -0.009021876379847527, -3.576277322281385e-06, -1.573146104812622, -0.0005551576614379883, -0.018329620361328125, -0.0002613067626953125, -9.34600830078125e-05, -1.33514404296875e-05, -0.004398345947265625, -3.814697265625e-06, -0.027977824211120605, -0.00022721197456121445, -0.0006313323974609375, -3.0517578125e-05, -9.72747802734375e-05, -1.9073486328125e-06, -0.0031833648681640625, -3.62396240234375e-05, -0.0016994476318359375, 0.0, -0.06598246097564697, -2.1457672119140625e-06, -0.0052890777587890625, -0.016941070556640625, -0.0001010894775390625, -0.013886570930480957, -0.0002534211671445519, -0.0001506805419921875, -5.7220458984375e-06, -1.1444091796875e-05, -0.007610321044921875, -0.0004138946533203125, -1.9073486328125e-05, -0.0006856918334960938, -3.814697265625e-06, -0.07174551486968994, -6.69937435304746e-05, -0.006706236395984888, -1.33514404296875e-05, -0.0002593994140625, -0.006099700927734375, -0.00040435791015625, -5.7220458984375e-06, -0.010004997253417969, -0.0012035368708893657, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.0038690567016601562, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.013102531433105469, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.000774383544921875, -0.0003719329833984375, -2.1937971115112305, -0.001956939697265625, -0.0001316070556640625, -0.0007648468017578125, -7.82012939453125e-05, -0.0023527145385742188, -3.814697265625e-06, -0.00014364378876052797, -1.9073486328125e-06, -0.03972828388214111, 0.0, -0.0004367828369140625, -0.00257110595703125, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0007381439208984375, -4.00543212890625e-05, -4.57763671875e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.000858306884765625, -1.1920928244535389e-07, -7.62939453125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.004185676574707031, -0.00010764582839328796, -1.1920928244535389e-07, -8.58306884765625e-05, -0.0058345794677734375, -2.47955322265625e-05, -0.007502555847167969, -0.0229949951171875, -0.0039272308349609375, -8.20159912109375e-05, -3.24249267578125e-05, -0.000522613525390625, 0.0, -0.009524345397949219, -7.152555099310121e-07, -5.7220458984375e-06, -0.0001220703125, -1.9073486328125e-06, -0.057647705078125, -0.00031399723957292736, -1.1920928244535389e-07, -9.34600830078125e-05, -0.005008697509765625, -3.0517578125e-05, -0.0052089691162109375, -5.7220458984375e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Misha(), hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 304, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -8.202944632271489, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.816451907157898, -0.00021183490753173828, -0.06686210632324219, -0.9111452102661133, -1.71661376953125e-05, -0.0027322769165039062, -1.9073486328125e-06, -0.4529905319213867, -1.9073486328125e-06, -0.0004074573516845703, -5.7220458984375e-06, -0.13202857971191406, -0.0003414154052734375, -7.2479248046875e-05, -3.814697265625e-06, -0.038275718688964844, -3.0517578125e-05, -0.05632972717285156, -1.9073486328125e-06, -0.017815589904785156, 0.0, -0.03203010559082031, -1.9073486328125e-06, -0.25432610511779785, -3.218649908376392e-06, -0.010263203643262386, -6.43729799776338e-06, -1.3785151243209839, -0.00015163421630859375, -0.010044097900390625, -9.72747802734375e-05, -9.5367431640625e-06, -0.018053054809570312, -9.5367431640625e-06, -0.06356406211853027, -0.00035536158247850835, -0.0024471282958984375, -3.24249267578125e-05, -0.00049591064453125, 0.0, -0.0023174285888671875, -5.7220458984375e-05, -0.0020934343338012695, 0.0, -0.08859968185424805, -2.0265579223632812e-06, -0.005218505859375, -0.015378952026367188, -8.20159912109375e-05, -0.015877842903137207, -0.00018524398910813034, -0.0001850128173828125, -7.62939453125e-06, -9.5367431640625e-06, -0.005702972412109375, -0.000400543212890625, -1.33514404296875e-05, -0.0006837844848632812, -3.814697265625e-06, -0.03584015369415283, -6.0318408941384405e-05, -0.006743668112903833, -1.52587890625e-05, -0.000263214111328125, -0.00775146484375, -0.00038909912109375, -5.7220458984375e-06, -0.008976936340332031, -0.001027345540933311, -3.814697265625e-06, -0.0001277923583984375, -0.000133514404296875, 0.0, 0.0, -0.003925323486328125, -2.300739288330078e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.012929916381835938, -0.00012302398681640625, 0.0, -0.000213623046875, -2.6702880859375e-05, -0.0009307861328125, -5.7220458984375e-06, -0.0001926422119140625, -0.0019969940185546875, -0.0006046295166015625, -0.0001201629638671875, -0.0014257431030273438, -0.0007724761962890625, -0.0003719329833984375, -2.201984405517578, -0.0019626617431640625, -0.0001316070556640625, -0.0007648468017578125, -7.82012939453125e-05, -0.0023469924926757812, -3.814697265625e-06, -0.0001428093819413334, -1.9073486328125e-06, -0.03972446918487549, 0.0, -0.0004367828369140625, -0.002567291259765625, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0007381439208984375, -4.00543212890625e-05, -4.57763671875e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.000858306884765625, -1.1920928244535389e-07, -7.62939453125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.004185676574707031, -0.00010764582839328796, -1.1920928244535389e-07, -8.58306884765625e-05, -0.005833625793457031, -2.47955322265625e-05, -0.007503509521484375, -0.023024559020996094, -0.00392913818359375, -8.20159912109375e-05, -3.24249267578125e-05, -0.000522613525390625, 0.0, -0.009517669677734375, -7.152555099310121e-07, -5.7220458984375e-06, -0.0001220703125, -1.9073486328125e-06, -0.057654380798339844, -0.00031399723957292736, -1.1920928244535389e-07, -9.34600830078125e-05, -0.005008697509765625, -3.0517578125e-05, -0.005209922790527344, -5.7220458984375e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.Leokk(), CARD_RARITY.EPIC,\n            hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Huffer", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -8.317872998313753, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -2.09122633934021, -3.814697265625e-06, -0.00528717041015625, -0.000431060791015625, -0.000530242919921875, -8.20159912109375e-05, -0.0023593902587890625, -0.0001125335693359375, -0.00354766845703125, -7.62939453125e-06, -0.038285255432128906, 0.0, -0.02430438995361328, -1.9073486328125e-06, -0.30757951736450195, -2.861022494471399e-06, -0.013931750319898129, -2.9802317840221804e-06, -1.8774151802062988, -3.933906555175781e-06, -0.0047607421875, -0.0005092620849609375, -0.0001430511474609375, -0.0001220703125, -0.050628662109375, -0.0001010894775390625, -0.019019126892089844, -3.814697265625e-06, -0.014598846435546875, 0.0, -0.013597488403320312, -1.9073486328125e-06, -0.25243186950683594, -3.099440846199286e-06, -0.010699866339564323, -3.4570680327306036e-06, -1.4254059791564941, -8.344650268554688e-05, -0.009548187255859375, -0.0001735687255859375, -7.62939453125e-06, -0.0158233642578125, -1.1444091796875e-05, -0.05144774913787842, -0.0003501160826999694, -0.0015020370483398438, -3.24249267578125e-05, -0.0003566741943359375, 0.0, -0.0024871826171875, -5.91278076171875e-05, -0.0022460222244262695, 0.0, -0.07253801822662354, -2.0265579223632812e-06, -0.004779815673828125, -0.014826774597167969, -6.866455078125e-05, -0.016765117645263672, -0.00016903315554372966, -0.000186920166015625, -7.62939453125e-06, -9.5367431640625e-06, -0.006072998046875, -0.0004177093505859375, -1.1444091796875e-05, -0.0006780624389648438, -3.814697265625e-06, -0.031153202056884766, -6.008000491419807e-05, -0.006745337042957544, -1.52587890625e-05, -0.00026702880859375, -0.008270263671875, -0.0003833770751953125, -5.7220458984375e-06, -0.008851051330566406, -0.0009994505671784282, -3.814697265625e-06, -0.000125885009765625, -0.0001316070556640625, 0.0, 0.0, -0.003948211669921875, -2.300739288330078e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.012926101684570312, -0.00012302398681640625, 0.0, -0.000213623046875, -2.6702880859375e-05, -0.0009288787841796875, -5.7220458984375e-06, -0.00019073486328125, -0.0019989013671875, -0.000606536865234375, -0.0001201629638671875, -0.00142669677734375, -0.0007724761962890625, -0.0003719329833984375, -0.11709213256835938, -6.103515625e-05, -3.0517578125e-05, -0.0006351470947265625, -8.58306884765625e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011908946180483326, -3.814697265625e-06, -0.0038033723831176758, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014495849609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.003070831298828125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.003459930419921875, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.0060558319091796875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Huffer(), hearthbreaker.cards.minions.Misha(),\n            hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Huffer", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -8.356765028949887, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.8561304807662964, -3.933906555175781e-06, -0.004505157470703125, -0.0004673004150390625, -0.0001354217529296875, -0.0001010894775390625, -0.03487873077392578, -0.0001163482666015625, -0.013579368591308594, -3.814697265625e-06, -0.018174171447753906, 0.0, -0.007502555847167969, -1.9073486328125e-06, -0.16969144344329834, -2.9802317840221804e-06, -0.009021876379847527, -3.576277322281385e-06, -2.1601016521453857, -1.9073486328125e-06, -0.0062885284423828125, -0.000446319580078125, -0.00055694580078125, -0.0001049041748046875, -0.0031671524047851562, -0.000102996826171875, -0.00530242919921875, -5.7220458984375e-06, -0.026092529296875, 0.0, -0.04399681091308594, -1.9073486328125e-06, -0.3250173330307007, -2.861022494471399e-06, -0.014501928351819515, -2.9802317840221804e-06, -1.491861343383789, -7.474422454833984e-05, -0.0142669677734375, -0.0002117156982421875, -9.5367431640625e-06, -0.014223098754882812, -1.33514404296875e-05, -0.05307316780090332, -0.0003921969619113952, -0.0014715194702148438, -3.62396240234375e-05, -0.0003376007080078125, 0.0, -0.002460479736328125, -5.91278076171875e-05, -0.002179265022277832, 0.0, -0.07234680652618408, -2.0265579223632812e-06, -0.0049037933349609375, -0.014699935913085938, -6.67572021484375e-05, -0.016995906829833984, -0.00016974832396954298, -0.00018310546875, -7.62939453125e-06, -9.5367431640625e-06, -0.0060272216796875, -0.000415802001953125, -1.1444091796875e-05, -0.0006799697875976562, -3.814697265625e-06, -0.03057241439819336, -5.9960802900604904e-05, -0.006758926901966333, -1.52587890625e-05, -0.00026702880859375, -0.00824737548828125, -0.0003833770751953125, -5.7220458984375e-06, -0.0088348388671875, -0.0010051726130768657, -3.814697265625e-06, -0.000125885009765625, -0.0001316070556640625, 0.0, 0.0, -0.0039501190185546875, -2.300739288330078e-05, -7.62939453125e-06, -0.0003948211669921875, -1.9073486328125e-06, -0.012915611267089844, -0.00012302398681640625, 0.0, -0.000213623046875, -2.6702880859375e-05, -0.0009307861328125, -5.7220458984375e-06, -0.0001926422119140625, -0.0019989013671875, -0.000606536865234375, -0.0001201629638671875, -0.00142669677734375, -0.0007724761962890625, -0.0003719329833984375, -0.11719131469726562, -6.103515625e-05, -3.0517578125e-05, -0.0006361007690429688, -8.58306884765625e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011908946180483326, -3.814697265625e-06, -0.0038024187088012695, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014495849609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.003070831298828125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.003459930419921875, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.0060558319091796875, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Misha(), hearthbreaker.cards.minions.Huffer(),\n            hearthbreaker.cards.minions.hunter()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Misha", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -8.391502254632535, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Misha", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.8561304807662964, -3.933906555175781e-06, -0.004505157470703125, -0.0004673004150390625, -0.0001354217529296875, -0.0001010894775390625, -0.03487873077392578, -0.0001163482666015625, -0.013579368591308594, -3.814697265625e-06, -0.018174171447753906, 0.0, -0.007502555847167969, -1.9073486328125e-06, -0.16969144344329834, -2.9802317840221804e-06, -0.009021876379847527, -3.576277322281385e-06, -1.957993745803833, -3.933906555175781e-06, -0.0039386749267578125, -0.000484466552734375, -0.00014495849609375, -0.0001010894775390625, -0.050126075744628906, -0.0001010894775390625, -0.020029067993164062, -3.814697265625e-06, -0.015436172485351562, 0.0, -0.0110931396484375, -1.9073486328125e-06, -0.21039032936096191, -3.099440846199286e-06, -0.009595511481165886, -3.576277322281385e-06, -1.588014841079712, -0.0004950761795043945, -0.07184600830078125, -5.340576171875e-05, -7.62939453125e-06, -0.03188896179199219, -1.1444091796875e-05, -0.2330566644668579, -0.0005667174118570983, -0.0019788742065429688, -2.288818359375e-05, -0.0001926422119140625, 0.0, -0.002635955810546875, -6.67572021484375e-05, -0.002106785774230957, 0.0, -0.062099337577819824, -2.0265579223632812e-06, -0.00348663330078125, -0.015313148498535156, -6.866455078125e-05, -0.016907334327697754, -0.00017856905469670892, -0.00018310546875, -7.62939453125e-06, -9.5367431640625e-06, -0.0054988861083984375, -0.0004177093505859375, -1.1444091796875e-05, -0.0006475448608398438, -3.814697265625e-06, -0.031157493591308594, -6.043761459295638e-05, -0.006801246199756861, -1.52587890625e-05, -0.0002689361572265625, -0.008319854736328125, -0.0003814697265625, -5.7220458984375e-06, -0.008820533752441406, -0.0009909867076203227, -3.814697265625e-06, -0.000125885009765625, -0.00012969970703125, 0.0, 0.0, -0.003936767578125, -2.300739288330078e-05, -7.62939453125e-06, -0.000392913818359375, -1.9073486328125e-06, -0.01294708251953125, -0.00012302398681640625, 0.0, -0.0002117156982421875, -2.6702880859375e-05, -0.000926971435546875, -5.7220458984375e-06, -0.00019073486328125, -0.0019989013671875, -0.000606536865234375, -0.0001201629638671875, -0.00142669677734375, -0.0007724761962890625, -0.0003719329833984375, -0.11690902709960938, -6.103515625e-05, -3.0517578125e-05, -0.0006341934204101562, -8.58306884765625e-05, -0.0006999969482421875, -3.814697265625e-06, -0.00011908946180483326, -3.814697265625e-06, -0.003804326057434082, 0.0, -0.0002193450927734375, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014495849609375, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.003070831298828125, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.003459930419921875, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.006054878234863281, -5.340576171875e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Misha(), hearthbreaker.cards.minions.Misha(),\n            hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Huffer", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 144, 163, 302, 84, 194, "card", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 304, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -8.441747530498084, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Huffer", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "card"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "AnimalCompanion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -2.09122633934021, -3.814697265625e-06, -0.00528717041015625, -0.000431060791015625, -0.000530242919921875, -8.20159912109375e-05, -0.0023593902587890625, -0.0001125335693359375, -0.00354766845703125, -7.62939453125e-06, -0.038285255432128906, 0.0, -0.02430438995361328, -1.9073486328125e-06, -0.30757951736450195, -2.861022494471399e-06, -0.013931750319898129, -2.9802317840221804e-06, -1.5643353462219238, -0.0005856752395629883, -0.0178985595703125, -0.00028228759765625, -8.20159912109375e-05, -1.1444091796875e-05, -0.004311561584472656, -1.9073486328125e-06, -0.028949856758117676, -0.00022017868468537927, -0.0006151199340820312, -3.24249267578125e-05, -8.58306884765625e-05, -1.9073486328125e-06, -0.00316619873046875, -3.4332275390625e-05, -0.0017070770263671875, 0.0, -0.065338134765625, -2.1457672119140625e-06, -0.0050506591796875, -0.017145156860351562, -9.918212890625e-05, -0.013840794563293457, -0.0002562820154707879, -0.0001506805419921875, -5.7220458984375e-06, -1.1444091796875e-05, -0.0075168609619140625, -0.0004138946533203125, -1.9073486328125e-05, -0.0006818771362304688, -3.814697265625e-06, -0.07023918628692627, -6.66361374896951e-05, -0.006716726813465357, -1.33514404296875e-05, -0.0002593994140625, -0.0061168670654296875, -0.00040435791015625, -5.7220458984375e-06, -0.009914398193359375, -0.001211047056131065, -3.814697265625e-06, -0.0001220703125, -0.0001392364501953125, 0.0, 0.0, -0.0038661956787109375, -2.300739288330078e-05, -9.5367431640625e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.013092994689941406, -0.00012505054473876953, 0.0, -0.0002079010009765625, -2.47955322265625e-05, -0.0009365081787109375, -5.7220458984375e-06, -0.0001926422119140625, -0.0019893646240234375, -0.000598907470703125, -0.0001201629638671875, -0.0014238357543945312, -0.000774383544921875, -0.0003719329833984375, -2.1936473846435547, -0.001956939697265625, -0.0001316070556640625, -0.0007648468017578125, -7.82012939453125e-05, -0.0023517608642578125, -3.814697265625e-06, -0.00014364378876052797, -1.9073486328125e-06, -0.03972733020782471, 0.0, -0.0004367828369140625, -0.0025691986083984375, -6.866455078125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0007381439208984375, -4.00543212890625e-05, -4.57763671875e-05, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.000858306884765625, -1.1920928244535389e-07, -7.62939453125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -0.004185676574707031, -0.00010764582839328796, -1.1920928244535389e-07, -8.58306884765625e-05, -0.0058345794677734375, -2.47955322265625e-05, -0.007502555847167969, -0.022994041442871094, -0.0039272308349609375, -8.20159912109375e-05, -3.24249267578125e-05, -0.000522613525390625, 0.0, -0.009524345397949219, -7.152555099310121e-07, -5.7220458984375e-06, -0.0001220703125, -1.9073486328125e-06, -0.057647705078125, -0.00031399723957292736, -1.1920928244535389e-07, -9.34600830078125e-05, -0.005008697509765625, -3.0517578125e-05, -0.0052089691162109375, -5.7220458984375e-05], "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Huffer(), hearthbreaker.cards.minions.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions\n            ) < 7 and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 314], "score": -25.40159797668457, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, -1.9073486328125e-06, -25.401586532592773], "inferred_code": ""}], "index": 2}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -0.17790987248712753, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -0.0043792724609375, -1.1920928244535389e-07, -7.05718994140625e-05, -0.019603729248046875, -7.82012939453125e-05, -0.000857298553455621, -5.638598304358311e-05, -0.0002918243408203125, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -3.169670239121615, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -2.2098045349121094, -1.33514404296875e-05, -3.814697265625e-06, -2.372236667724792e-05, -3.266334533691406e-05, -3.2066785934148356e-05, -2.86102294921875e-05, -6.67572021484375e-05, -0.0021686553955078125, -0.00011444091796875, -0.0003223419189453125, -3.4332275390625e-05, -0.0004291534423828125, -1.9073486328125e-06, -0.19868838787078857, -2.86102294921875e-05, -0.7113304138183594, -0.0019969940185546875, -5.7220458984375e-06, -3.814697265625e-06, -1.3709068298339844e-05, -0.0002593994140625, -7.2479248046875e-05, -0.0002460479736328125, -0.0001659393310546875, -0.00421142578125, -0.0001220703125, -0.0020627975463867188, -3.62396240234375e-05, -0.003276824951171875, -5.340576171875e-05, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.0009431838989257812, -1.9073486328125e-06, -0.001526474952697754, -1.537799835205078e-05, -8.58306884765625e-05, -0.0001201629638671875, -2.288818359375e-05, -6.866455078125e-05, -0.00032682681921869516, -2.15768777707126e-05, -0.0002040863037109375, -0.0001697540283203125, 0.0, -1.33514404296875e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.43865966796875e-05, -0.001804351806640625, -0.003565311199054122, -2.0265579223632812e-06, -7.2479248046875e-05, -0.018865585327148438, -8.0108642578125e-05, -0.0008729128167033195, -5.435942512121983e-05, -0.00029754638671875, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -3.190968770624515, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -2.2098045349121094, -1.33514404296875e-05, -3.814697265625e-06, -2.372236667724792e-05, -3.266334533691406e-05, -3.2066785934148356e-05, -2.86102294921875e-05, -6.67572021484375e-05, -0.0021686553955078125, -0.00011444091796875, -0.0003223419189453125, -3.4332275390625e-05, -0.0004291534423828125, -1.9073486328125e-06, -0.19868838787078857, -2.86102294921875e-05, -0.7247905731201172, -0.0008602142333984375, -1.71661376953125e-05, -3.814697265625e-06, -2.6106834411621094e-05, -0.0002595186233520508, -8.20159912109375e-05, -0.0002002716064453125, -0.0001983642578125, -0.012987136840820312, -7.2479248046875e-05, -0.0022420883178710938, -1.33514404296875e-05, -0.004047393798828125, -6.103515625e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0007314682006835938, -3.814697265625e-06, -0.0016303062438964844, -1.537799835205078e-05, -0.0001392364501953125, -0.0001163482666015625, -1.9073486328125e-05, -6.29425048828125e-05, -0.00031443272018805146, -1.5377996533061378e-05, -0.000202178955078125, -0.0001125335693359375, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.00200653076171875, -0.003826618194580078, -1.1920928244535389e-07, -6.866455078125e-05, -0.017879486083984375, -7.62939453125e-05, -0.0008793500019237399, -5.614756446448155e-05, -0.00029754638671875, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -4.054313552712976, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "DREAM", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -2.2098045349121094, -1.33514404296875e-05, -3.814697265625e-06, -2.372236667724792e-05, -3.266334533691406e-05, -3.2066785934148356e-05, -2.86102294921875e-05, -6.67572021484375e-05, -0.0021686553955078125, -0.00011444091796875, -0.0003223419189453125, -3.4332275390625e-05, -0.0004291534423828125, -1.9073486328125e-06, -1.7603834867477417, -8.392333984375e-05, -0.03285694122314453, -0.0031490325927734375, -1.33514404296875e-05, -3.814697265625e-06, -2.110004425048828e-05, -0.0001468658447265625, -6.4849853515625e-05, -0.000240325927734375, -0.000331878662109375, -0.00316619873046875, -0.0001068115234375, -0.0027980804443359375, -2.86102294921875e-05, -0.00336456298828125, -5.91278076171875e-05, -3.814697265625e-06, -6.67572021484375e-05, 0.0, -0.0008697509765625, -1.9073486328125e-06, -0.0015482902526855469, -1.537799835205078e-05, -9.34600830078125e-05, -0.000118255615234375, -2.288818359375e-05, -6.866455078125e-05, -0.000336360651999712, -1.9550319848349318e-05, -0.0002117156982421875, -0.0001544952392578125, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.2479248046875e-05, -0.0019073486328125, -0.0036368367727845907, -1.1920928244535389e-07, -7.2479248046875e-05, -0.019161224365234375, -8.0108642578125e-05, -0.0008721977937966585, -5.435942512121983e-05, -0.00029754638671875, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 79, 171, 35, 302, 79, 171, 17, 164, 25, 194, "game", "<EOS>", "<UNK>", "<EOS>", 303, 108, 111, 113, 156], "score": -5.478903965736883, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Template36"}, {"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Template24"}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -0.0043792724609375, -1.1920928244535389e-07, -7.05718994140625e-05, -4.166189193725586, -7.62939453125e-06, -0.0050220489501953125, -6.103515625e-05, -0.07279014587402344, -0.006191253662109375, -0.45941925048828125, -4.76837158203125e-05, -0.0001163482666015625, 0.0, -0.033080101013183594, -5.7220458984375e-05, -0.009536504745483398, -8.106231689453125e-06, -0.0037384033203125, -0.2474803924560547, -0.3179931640625, -0.000152587890625, -1.9073486328125e-06], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 3)), self\n                )\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -5.759392138202884, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -5.589402198791504, -9.655952453613281e-06, -0.0001277923583984375, -0.0004215240478515625, -8.20159912109375e-05, -0.008556365966796875, -4.1961669921875e-05, -0.001728057861328125, 0.0, -0.006384054198861122, -1.8358150555286556e-05, -5.91278076171875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 303, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.4467146188678655, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -6.360156059265137, -0.013455390930175781, -5.7220458984375e-06, -0.0010301527800038457, -0.0005817413330078125, -0.00017260175081901252, -3.814697265625e-06, -2.47955322265625e-05, -0.009883880615234375, -1.9073486328125e-06, -0.00016307820624206215, -7.987022399902344e-06, -0.0001373291015625, -0.00110626220703125, -8.392333984375e-05, -0.020971298217773438, -0.0007476806640625, -0.0015163421630859375, -5.7220458984375e-06, -0.0021762847900390625, -5.91278076171875e-05, -1.71661376953125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0016546249389648438, -1.9073486328125e-06, -0.0022672414779663086, -1.3470649719238281e-05, -0.000133514404296875, -0.0001277923583984375, -6.103515625e-05, -6.29425048828125e-05, -0.0001993040059460327, -1.4662741705251392e-05, -0.0001392364501953125, -8.20159912109375e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -1.71661376953125e-05, -9.5367431640625e-05, -0.0017242431640625, -0.0046274662017822266, -1.1920928244535389e-07, -6.866455078125e-05, -0.017086029052734375, -7.2479248046875e-05, -0.000861706561408937, -5.7935703807743266e-05, -0.000286102294921875, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "MAGE", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.730975266944135, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -6.556472301483154, -1.1682510375976562e-05, -0.0001277923583984375, -0.001251220703125, -1.1444091796875e-05, -9.918212890625e-05, -0.00039976119296625257, -6.43729799776338e-06, -0.00029754638671875, -3.24249267578125e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -1.71661376953125e-05, -7.2479248046875e-05, -0.0022792816162109375, -0.0038164854049682617, -1.1920928244535389e-07, -6.67572021484375e-05, -0.017484664916992188, -7.82012939453125e-05, -0.0008599215652793646, -5.614756446448155e-05, -0.000286102294921875, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.MAGE(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 114, 113, 156], "score": -6.882761912132757, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -0.0043792724609375, -1.1920928244535389e-07, -7.05718994140625e-05, -6.650545120239258, -0.07520008087158203, -5.7220458984375e-06], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.949461372445278, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "MINION_TYPE"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -6.468589782714844, 0.0, -0.3009871244430542, -1.9073486328125e-06, -0.010334014892578125, -1.9073486328125e-06, -1.1444091796875e-05, -0.00015079975128173828, -7.62939453125e-06, -6.4849853515625e-05, -0.0001010894775390625, -0.00025177001953125, -0.000972747802734375, -0.00014495849609375, -0.0037384033203125, -1.33514404296875e-05, -0.0003757476806640625, -5.91278076171875e-05, -3.4332275390625e-05, -1.9073486328125e-05, -3.814697265625e-06, -0.0013780593872070312, -3.814697265625e-06, -0.002036452293395996, -1.728534698486328e-05, -0.0001316070556640625, -0.000118255615234375, -2.6702880859375e-05, -6.29425048828125e-05, -0.0002693835413083434, -1.5377996533061378e-05, -0.0002918243408203125, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.71661376953125e-05, -7.82012939453125e-05, -0.001758575439453125, -0.0041381120681762695, -1.1920928244535389e-07, -7.2479248046875e-05, -0.01898193359375, -7.82012939453125e-05, -0.0008650451200082898, -5.626677375403233e-05, -0.0002899169921875, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, MINION_TYPE.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 156], "score": -7.030850359856913, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -6.560506820678711, -0.038785092532634735, -3.457069396972656e-05, -2.09808349609375e-05, -0.007008552551269531, 0.0, -0.0025577545166015625, -0.27143394947052, -2.2530530259246007e-05, -1.9073486328125e-06], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            targets.append(game.other_player.hero)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 79, 171, 35, 302, 79, 171, 17, 164, 25, 194, "game", "<EOS>", "<UNK>", "<EOS>", 303, 109, 115, 113, 156], "score": -7.244962887550848, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Template24"}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -0.0043792724609375, -1.1920928244535389e-07, -7.05718994140625e-05, -4.166189193725586, -7.62939453125e-06, -0.0050220489501953125, -6.103515625e-05, -0.07279014587402344, -0.006191253662109375, -0.45941925048828125, -4.76837158203125e-05, -0.0001163482666015625, 0.0, -0.033080101013183594, -5.7220458984375e-05, -0.009536504745483398, -8.106231689453125e-06, -0.0037384033203125, -1.7281436920166016, -0.43387794494628906, -0.16965198516845703, -1.33514404296875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.<UNK>(1, 4)), self\n                )\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 102, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -7.34996359909632, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -7.112398147583008, -0.040435791015625, -1.9073486328125e-06, -3.814697265625e-06, -3.313985507702455e-05, -1.549720036564395e-05, -0.000125885009765625, -0.0005340576171875, -0.0001316070556640625, -0.024549484252929688, -0.0001316070556640625, -0.003975868225097656, -1.1444091796875e-05, -0.0007419586181640625, -9.72747802734375e-05, -3.814697265625e-05, -2.09808349609375e-05, -3.814697265625e-06, -0.0010051727294921875, -3.814697265625e-06, -0.0019267797470092773, -1.537799835205078e-05, -0.000118255615234375, -0.0001125335693359375, -5.14984130859375e-05, -6.103515625e-05, -0.0001875047746580094, -1.251697449333733e-05, -0.000225067138671875, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -1.33514404296875e-05, -8.58306884765625e-05, -0.0021648406982421875, -0.0042552947998046875, -1.1920928244535389e-07, -6.866455078125e-05, -0.023433685302734375, -7.62939453125e-05, -0.0008489559404551983, -5.614756446448155e-05, -0.0002765655517578125, -1.1444091796875e-05], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 79, 171, 35, 302, 79, 171, 35, 302, 79, 171, 25, 194, "Mana", "Change", "<EOS>", 302, 134, 286, 160, 39, 79, 170, 25, 194, "Card", "Selector", "<EOS>", 310, 138, 291, "players", "<EOS>", 32, 213, "Current", "Player", "<EOS>", 156], "score": -7.696773658217346, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"args": [{"args": [{"_type": "UnaryOp", "operand": {"_type": "Template38"}, "op": {"_type": "USub"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}], "_type": "Call", "func": {"_type": "Template24"}}], "_type": "Call", "func": {"_type": "Template24"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "CurrentPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "CardSelector"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneExplosion"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -0.0043792724609375, -1.1920928244535389e-07, -7.05718994140625e-05, -4.166189193725586, -7.62939453125e-06, -0.0050220489501953125, -6.103515625e-05, -0.07279014587402344, -0.006191253662109375, -1.4144554138183594, -0.000701904296875, -0.09766387939453125, -0.004279136657714844, -0.21268749237060547, -1.9073486328125e-06, -0.0735621452331543, -0.0011627012863755226, -1.4781950994802173e-05, -0.01375579833984375, -0.21598243713378906, -0.000179290771484375, -0.0021381378173828125, -0.015964508056640625, -0.35463619232177734, -0.0001983642578125, -5.53131103515625e-05, 0.0, -0.2955533266067505, -0.0016243457794189453, -7.62939453125e-06, -2.47955322265625e-05, -2.09808349609375e-05, -3.62396240234375e-05, -0.11741828918457031, -1.1920922133867862e-06, -5.14984130859375e-05, -9.1552734375e-05, -0.46427762508392334, -0.0029315948486328125, -1.71661376953125e-05, -5.7220458984375e-06], "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(player.\n                effective_spell_damage(ManaChange(-1))), CardSelector(\n                players=CurrentPlayer()))\n"}, {"choice_history": [139, 193, 314], "score": -25.41173553466797, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -25.411727905273438], "inferred_code": ""}], "index": 3}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -0.14276242189203003, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -0.01735687255859375, -0.0007781982421875, 0.0, -5.7220458984375e-06, -0.0022296905517578125, -0.000286102294921875, 0.0, -0.009604454040527344, -0.0010119816288352013, -7.235829252749681e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -3.7876947973566075, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -3.0732507705688477, -0.000270843505859375, -5.7220458984375e-06, -8.141662692651153e-05, -4.38690185546875e-05, -7.033334895822918e-06, -1.3589859008789062e-05, -3.814697265625e-05, -0.0030078887939453125, 0.0, -0.0003795623779296875, 0.0, -0.0016326904296875, -2.1219253540039062e-05, -0.07690620422363281, -1.1444091796875e-05, -0.021240234375, -0.0015544891357421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0002765655517578125, -4.029273986816406e-05, -9.72747802734375e-05, -0.000110626220703125, -0.0004253387451171875, -0.5555906295776367, -0.000377655029296875, -0.002201080322265625, -3.814697265625e-06, -0.02204155921936035, -6.723403930664062e-05, -2.288818359375e-05, -2.6702880859375e-05, -3.4332275390625e-05, 0.0, -0.0010542867239564657, -7.891387213021517e-05, -0.0001430511474609375, -0.000164031982421875, -0.00020599365234375, -0.01015472412109375, -0.000621795654296875, 0.0, -7.62939453125e-06, -0.0021724700927734375, -0.00034332275390625, 0.0, -0.009173393249511719, -0.0010415271390229464, -6.484842742793262e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -4.653905147082924, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -3.0732507705688477, -0.000270843505859375, -5.7220458984375e-06, -8.141662692651153e-05, -4.38690185546875e-05, -7.033334895822918e-06, -1.3589859008789062e-05, -3.814697265625e-05, -0.0030078887939453125, 0.0, -0.0003795623779296875, 0.0, -0.0016326904296875, -2.1219253540039062e-05, -0.07690620422363281, -1.1444091796875e-05, -0.021240234375, -0.0015544891357421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0002765655517578125, -4.029273986816406e-05, -9.72747802734375e-05, -0.000110626220703125, -0.0004253387451171875, -1.4657583236694336, -1.9073486328125e-06, -1.9073486328125e-06, -0.00212860107421875, -0.000385284423828125, 0.0, -0.0033273696899414062, -0.00018560838361736387, -1.3232223864179105e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "game", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -4.8228292748824515, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "game"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -4.7059102058410645, -8.618831634521484e-05, -4.57763671875e-05, -2.47955322265625e-05, -0.00054931640625, -1.9073486328125e-06, -0.000978705589659512, -0.0002262349153170362, -0.000202178955078125, -0.0001983642578125, -0.000545501708984375, -0.013574600219726562, -0.00070953369140625, 0.0, -5.7220458984375e-06, -0.002544403076171875, -0.000335693359375, 0.0, -0.015783309936523438, -0.0010969125432893634, -6.210665742401034e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for game in range(0, 2):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -4.826944880453766, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -4.714418888092041, -9.894368304230738e-06, -3.814697265625e-05, -1.71661376953125e-05, -0.000102996826171875, 0.0, -0.000910162809304893, -5.471576878335327e-05, -0.000152587890625, -0.0002460479736328125, -0.0002880096435546875, -0.013919830322265625, -0.0006694793701171875, 0.0, -7.62939453125e-06, -0.0022983551025390625, -0.0003681182861328125, 0.0, -0.012226104736328125, -0.0012024114839732647, -6.651716103078797e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 156, 156], "score": -4.871463168455875, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Template37_stmt_seq"}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -4.810783386230469, -1.9073486328125e-05], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 52, "draw", "<EOS>", 156], "score": -5.1508162561437985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -0.01735687255859375, -0.0007781982421875, 0.0, -5.7220458984375e-06, -0.0022296905517578125, -0.000286102294921875, 0.0, -4.921478271484375, -0.09722799807786942, -3.635865141404793e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            minion.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 169, 17, 164, 25, 194, "game", "<EOS>", "check_delayed", "<EOS>", 156], "score": -6.203322277829784, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "check_delayed", "value": {"_type": "Name", "id": "game"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -4.132923126220703, -0.001659393310546875, -0.0001659393310546875, -3.62396240234375e-05, -0.9634885787963867, -0.0010967254638671875, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.000240325927734375, 0.0, -0.00249481201171875, -1.1563301086425781e-05, -0.009443283081054688, -2.0265579223632812e-06, -0.008314132690429688, -0.08735179901123047, -0.0001506805419921875, -0.08469343185424805, -1.823901038733311e-05, -0.020215988159179688, -5.7220458984375e-06, -3.814697265625e-06, -0.0168304443359375, -9.918212890625e-05, 0.0, -0.28781795501708984, -5.7220458984375e-06, -0.3445841073989868, -0.0007790327072143555, -0.12894010543823242, -0.0004947179113514721, -1.9073486328125e-06], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            minion = game.random_choice(minions)\n            game.check_delayed()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 151, 181, 21, 174, 17, 164, 43, "mana", "<EOS>", 299, 14, 302, 86, 198, "10", "<EOS>", 315, 145, 165, 17, 164, 43, "mana", "<EOS>", 140, 39, 156], "score": -6.229346916427403, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "If", "body": [{"_type": "AugAssign", "target": {"_type": "Attribute", "attr": "mana", "value": {"_type": "Template43"}}, "value": {"_type": "Template38"}, "op": {"_type": "Add"}}], "test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Attribute", "attr": "mana", "value": {"_type": "Template43"}}, "comparators": [{"n": 10, "_type": "Num"}]}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -3.0732507705688477, -0.000270843505859375, -5.7220458984375e-06, -8.141662692651153e-05, -4.38690185546875e-05, -7.033334895822918e-06, -1.3589859008789062e-05, -3.814697265625e-05, -0.0030078887939453125, 0.0, -0.0003795623779296875, 0.0, -0.0016326904296875, -2.1219253540039062e-05, -0.07690620422363281, -1.1444091796875e-05, -0.021240234375, -0.0015544891357421875, -9.72747802734375e-05, -7.62939453125e-06, -0.0002765655517578125, -4.029273986816406e-05, -9.72747802734375e-05, -0.000110626220703125, -0.0004253387451171875, -1.6626052856445312, -0.06425094604492188, -0.017084121704101562, -0.000457763671875, -0.2548198699951172, 0.0, -0.0007381439208984375, -0.6310685873031616, -2.503394853192731e-06, -3.0517578125e-05, -0.01896953582763672, -3.24249267578125e-05, -0.17260360717773438, -0.0019779205322265625, -0.0037844092585146427, -0.0002243518829345703, -0.011678695678710938, -0.0083160400390625, -0.010033607482910156, -0.0038614273071289062, -3.814697265625e-06, -0.00024890899658203125, -0.1671883463859558, -7.390974587906385e-06, -0.014780044555664062, -0.002475738525390625, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.mana += 1\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 106, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.443666609294951, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -5.785129547119141, -0.4671173095703125, 0.0, -1.9073486328125e-06, 0.0, -0.01537322998046875, -6.198883056640625e-06, -6.783007847843692e-05, -2.491474151611328e-05, -3.814697265625e-06, -2.288818359375e-05, -0.0003091096878051758, -1.1563301086425781e-05, -1.33514404296875e-05, -0.0024404525756835938, -0.01540374755859375, -0.04607582092285156, -0.0001506805419921875, -0.0005168914794921875, -1.9073486328125e-06, -0.0242692232131958, -5.7697296142578125e-05, -1.52587890625e-05, -2.09808349609375e-05, -9.918212890625e-05, 0.0, -0.0011590716894716024, -7.331142842303962e-05, -0.000156402587890625, -0.000293731689453125, -0.000164031982421875, -0.014413833618164062, -0.00092315673828125, 0.0, -7.62939453125e-06, -0.0025348663330078125, -0.000274658203125, 0.0, -0.012824058532714844, -0.0011075020302087069, -7.843759522074834e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.455679464371883, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -4.132923126220703, -0.001659393310546875, -0.0001659393310546875, -3.62396240234375e-05, -0.5427675247192383, -2.09808349609375e-05, -0.568233847618103, -0.0029735409189015627, -0.008268356323242188, -0.000102996826171875, -0.0006923675537109375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.007482409477233887, -5.841255187988281e-06, -0.13509666919708252, -4.768370445162873e-07, -0.028806686401367188, -0.024292945861816406, -0.000850677490234375, -0.08002686500549316, -3.409367855056189e-05, -0.12557029724121094, -1.9073486328125e-06, -3.814697265625e-06, -0.017116546630859375, -9.5367431640625e-05, 0.0, -0.6656608581542969, -0.001333790016360581, -1.7881295207189396e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            minions = game.random_choice(minions)\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.4946438278418555, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -6.325523853302002, -0.0014599537244066596, -0.011984825134277344, -5.7220458984375e-06, -0.00054931640625, -0.0002193450927734375, -1.33514404296875e-05, -4.9591064453125e-05, -0.0007076263427734375, -0.000476837158203125, -0.023000717163085938, -0.0003261566162109375, -0.0004634857177734375, -1.9073486328125e-06, -0.03411972522735596, -5.9485435485839844e-05, -2.288818359375e-05, -1.9073486328125e-05, -0.000240325927734375, 0.0, -0.0014218090800568461, -4.208021709928289e-05, -0.00017547607421875, -0.0004291534423828125, -0.0001277923583984375, -0.022838592529296875, -0.000713348388671875, 0.0, -5.7220458984375e-06, -0.002422332763671875, -0.0002765655517578125, 0.0, -0.009587287902832031, -0.000986374099738896, -7.080866635078564e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.024528588009844, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -4.132923126220703, -0.001659393310546875, -0.0001659393310546875, -3.62396240234375e-05, -0.9634885787963867, -0.0010967254638671875, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -0.000240325927734375, 0.0, -0.00249481201171875, -1.1563301086425781e-05, -0.009443283081054688, -2.0265579223632812e-06, -0.008314132690429688, -0.08735179901123047, -0.0001506805419921875, -0.08469343185424805, -1.823901038733311e-05, -0.020215988159179688, -5.7220458984375e-06, -3.814697265625e-06, -0.0168304443359375, -9.918212890625e-05, 0.0, -1.5825824737548828, -0.0012326024007052183, -1.4781891877646558e-05, 0.0], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            minion = game.random_choice(minions)\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 169, 17, 164, 25, 194, "game", "<EOS>", "check_delayed", "<EOS>", 156], "score": -7.272285849288551, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "check_delayed", "value": {"_type": "Name", "id": "game"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneIntellect"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -4.132923126220703, -0.001659393310546875, -0.0001659393310546875, -3.62396240234375e-05, -0.5427675247192383, -2.09808349609375e-05, -0.568233847618103, -0.0029735409189015627, -0.008268356323242188, -0.000102996826171875, -0.0006923675537109375, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.007482409477233887, -5.841255187988281e-06, -0.13509666919708252, -4.768370445162873e-07, -0.028806686401367188, -0.024292945861816406, -0.000850677490234375, -0.08002686500549316, -3.409367855056189e-05, -0.12557029724121094, -1.9073486328125e-06, -3.814697265625e-06, -0.017116546630859375, -9.5367431640625e-05, 0.0, -0.7960290908813477, -9.5367431640625e-06, -0.554280161857605, -0.0007170438766479492, -0.1319921612739563, -0.0005890124011784792, -1.9073486328125e-06], "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            minions = game.random_choice(minions)\n            game.check_delayed()\n"}, {"choice_history": [139, 193, 314], "score": -25.925277709960938, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -25.92527198791504], "inferred_code": ""}], "index": 4}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -0.17040022930291343, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -0.03772610053420067, -0.00011110231571365148, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.0005283355712890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0031363964080810547, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.000667572021484375, -0.0032281875610351562, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.00018310546875, -5.91278076171875e-05, -0.0023059844970703125, -0.007921508513391018, -0.0001388729433529079, -0.00022125244140625, -0.02222728729248047, -0.0064258575439453125, -6.67572021484375e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 156], "score": -3.838297844286217, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -3.427032232284546, -2.7775631679105572e-05, -0.2343730926513672, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -3.24249267578125e-05, -0.0023136138916015625, -0.003555057104676962, -0.0001666545867919922, -6.4849853515625e-05, -0.026299476623535156, 0.0, -0.0004482269287109375, -0.012093083932995796, -9.465207403991371e-05, -0.0001201629638671875, -7.62939453125e-06, -1.71661376953125e-05, -0.0006847381591796875, -0.0004863739013671875, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -3.814697265625e-05, -7.62939453125e-06, -0.0030660629272460938, -2.09808349609375e-05, -0.0009263753308914602, -1.9073486328125e-06, -0.0006198883056640625, -0.0032548904418945312, -0.03904914855957031], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -4.230948292961557, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -0.03772610053420067, -0.00011110231571365148, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.0005283355712890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0031363964080810547, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.000667572021484375, -0.0032281875610351562, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.00018310546875, -5.91278076171875e-05, -0.0023059844970703125, -0.007921508513391018, -0.0001388729433529079, -0.00022125244140625, -4.082415580749512, -0.0001888275146484375, -0.002813097555190325, -0.0005011556786485016, -0.0033168792724609375, -3.24249267578125e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "Damage", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -5.14472692116874, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -4.75205659866333, -7.390969585685525e-06, -0.22225570678710938, -0.000823974609375, -0.014478683471679688, -0.00089263916015625, -0.005402046255767345, -0.0003479680744931102, -0.008459091186523438, -0.003429412841796875, -5.340576171875e-05, -9.5367431640625e-06, -0.000972747802734375, -3.24249267578125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.52587890625e-05, -1.52587890625e-05, 0.0, -0.0008697509765625, -5.841255187988281e-06, -0.0016673803329467773, -3.826618194580078e-05, -8.7738037109375e-05, -0.000591278076171875, -3.814697265625e-06, -6.29425048828125e-05, -0.00019441958284005523, -7.987004210008308e-06, -4.1961669921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.9591064453125e-05, -6.4849853515625e-05, -0.00214385986328125, -0.010536431334912777, -0.000473856896860525, -0.000164031982421875, -0.005509376525878906, 0.0, -0.000347137451171875, -0.037969909608364105, -0.00010573795589152724, -0.000164031982421875, -1.1444091796875e-05, -1.33514404296875e-05, -0.00067901611328125, -0.000537872314453125, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -4.1961669921875e-05, -7.62939453125e-06, -0.003287076950073242, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.00067138671875, -0.0032215118408203125, -8.7738037109375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.82012939453125e-05, -0.000202178955078125, -5.53131103515625e-05, -0.0022640228271484375, -0.007684383541345596, -0.00013732319348491728, -0.000225067138671875, -0.02184295654296875, -0.006232261657714844, -6.4849853515625e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in Damage(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -5.524859482897455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "c"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -5.365265369415283, -4.4226646423339844e-05, -0.00051116943359375, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.017026305198669434, -6.699562072753906e-05, -0.0001354217529296875, -4.57763671875e-05, -0.0014352798461914062, -0.0011444091796875, -0.006186626385897398, -0.00020527266315184534, -0.005822181701660156, -0.003520965576171875, -6.103515625e-05, -1.33514404296875e-05, -0.0011444091796875, -3.0517578125e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.0009250640869140625, -5.841255187988281e-06, -0.0014214515686035156, -2.8848648071289062e-05, -0.0001010894775390625, -0.000370025634765625, -3.814697265625e-06, -5.91278076171875e-05, -0.00020681605383288115, -8.225420970120467e-06, -6.4849853515625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.38690185546875e-05, -7.2479248046875e-05, -0.0020656585693359375, -0.008848307654261589, -0.0004092454619240016, -0.000141143798828125, -0.006022453308105469, 0.0, -0.0003376007080078125, -0.03789423033595085, -0.00011074470239691436, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.000530242919921875, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0031365156173706055, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.0006656646728515625, -0.003223419189453125, -7.43865966796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.000186920166015625, -5.7220458984375e-05, -0.0023040771484375, -0.007812103256583214, -0.00013791938545182347, -0.00022125244140625, -0.022258758544921875, -0.006398200988769531, -6.67572021484375e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -5.85261963688049, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -3.427032232284546, -2.7775631679105572e-05, -2.2900123596191406, -1.1444091796875e-05, -2.6702880859375e-05, -0.0032949447631835938, -0.00019073486328125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0025779008865356445, -2.288818359375e-05, -0.0010068416595458984, -1.9073486328125e-06, -0.00069427490234375, -0.00392913818359375, -0.0001010894775390625, -1.9073486328125e-06, -9.5367431640625e-06, -5.91278076171875e-05, -0.00016021728515625, -8.58306884765625e-05, -0.00252532958984375, -0.009765395894646645, -0.00015019721467979252, -0.00023651123046875, -0.02081298828125, -0.006344795227050781, -8.392333984375e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.minions)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "damage", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -5.866322324105795, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 0}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -5.704802989959717, -0.001164997578598559, -0.0050411224365234375, -0.0040283203125, -6.67572021484375e-05, -2.6702880859375e-05, -0.00086212158203125, -0.0004062652587890625, -5.7220458984375e-06, -6.4849853515625e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.0008220672607421875, -7.748603820800781e-06, -0.0011620521545410156, -1.9311904907226562e-05, -9.34600830078125e-05, -0.0005970001220703125, -3.814697265625e-06, -5.7220458984375e-05, -0.0001788055815268308, -8.463837730232626e-06, -4.1961669921875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -3.4332275390625e-05, -0.002506256103515625, -0.00929068960249424, -0.0005055665387772024, -0.0001068115234375, -0.00719451904296875, 0.0, -0.000331878662109375, -0.03238438069820404, -0.00011193666432518512, -0.0001316070556640625, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006923675537109375, -0.0004596710205078125, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -4.57763671875e-05, -7.62939453125e-06, -0.0037772655487060547, -2.09808349609375e-05, -0.000864863395690918, -1.9073486328125e-06, -0.000640869140625, -0.0031414031982421875, -4.1961669921875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -8.392333984375e-05, -0.0001811981201171875, -6.4849853515625e-05, -0.0021076202392578125, -0.007523773703724146, -0.00012957501166965812, -0.0002155303955078125, -0.022207260131835938, -0.006667137145996094, -5.91278076171875e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(0)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 156], "score": -6.053995725549839, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -0.03772610053420067, -0.00011110231571365148, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.0005283355712890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -5.877164363861084, -2.920626684499439e-05, -0.00986635684967041, -1.728534698486328e-05, -1.1444091796875e-05, -0.00661468505859375, 0.0, -0.000286102294921875, -0.00020253552065696567, -1.847738167271018e-05, -8.96453857421875e-05, -4.38690185546875e-05, -1.9073486328125e-06, -3.814697265625e-06, -6.4849853515625e-05, -2.47955322265625e-05, -0.001613616943359375, -0.00697553064674139, -0.00042724606464616954, -0.000110626220703125, -0.00269317626953125, 0.0, -0.0003566741943359375, -0.02454586699604988, -9.322044206783175e-05, -3.4332275390625e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "3", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -6.28509185738028, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "3", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -6.097112655639648, -8.344646857949556e-07, -0.04888725280761719, -5.7220458984375e-06, -1.1444091796875e-05, -0.005015373229980469, -0.001956939697265625, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -2.288818359375e-05, -7.62939453125e-06, -0.0049784183502197266, -2.09808349609375e-05, -0.0007190704345703125, -1.9073486328125e-06, -0.000659942626953125, -0.002925872802734375, -8.0108642578125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.0002117156982421875, -2.47955322265625e-05, -0.0022430419921875, -0.006507514044642448, -0.00011181436275364831, -0.000270843505859375, -0.024260520935058594, -0.005518913269042969, -4.76837158203125e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.3)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "copy", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156], "score": -6.311146425456172, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -6.148475170135498, -1.049041748046875e-05, -0.000446319580078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.1563301086425781e-05, -1.1444091796875e-05, -1.9073486328125e-05, -0.0004425048828125, -1.71661376953125e-05, -0.0005664825439453125, -0.0009098052978515625, -0.002109527587890625, -3.814697265625e-06, -0.01124584674835205, -2.503394853192731e-06, -0.00043487548828125, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.01593339443206787, -4.44650613644626e-05, -9.34600830078125e-05, -5.340576171875e-05, -0.001323699951171875, -0.001110076904296875, -0.006349817384034395, -0.0002173123211832717, -0.006016731262207031, -0.0035619735717773438, -6.103515625e-05, -1.33514404296875e-05, -0.0011501312255859375, -3.24249267578125e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.0009517669677734375, -5.841255187988281e-06, -0.0014433860778808594, -3.075599670410156e-05, -9.918212890625e-05, -0.000415802001953125, -3.814697265625e-06, -5.91278076171875e-05, -0.0002012140757869929, -8.106212590064388e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.67572021484375e-05, -0.002105712890625, -0.008922813460230827, -0.00040936467121355236, -0.000141143798828125, -0.00615692138671875, 0.0, -0.0003376007080078125, -0.03788480535149574, -0.00011086389713454992, -0.000164031982421875, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.00052642822265625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.1961669921875e-05, -7.62939453125e-06, -0.0031468868255615234, -2.09808349609375e-05, -0.0009224414243362844, -1.9073486328125e-06, -0.000667572021484375, -0.0032243728637695312, -7.82012939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.43865966796875e-05, -0.0001888275146484375, -6.103515625e-05, -0.00228118896484375, -0.007894601672887802, -0.00013791938545182347, -0.00022125244140625, -0.02217578887939453, -0.0063648223876953125, -6.67572021484375e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.copy,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 133, 282, "3", "<EOS>", 156], "score": -6.362760749258314, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -0.03772610053420067, -0.00011110231571365148, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.0005283355712890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0031363964080810547, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.000667572021484375, -0.0032281875610351562, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.00018310546875, -5.91278076171875e-05, -0.0023059844970703125, -0.007921508513391018, -0.0001388729433529079, -0.00022125244140625, -0.02222728729248047, -6.195456504821777, -0.000156402587890625, -0.003057837253436446, -0.00017666799249127507, -5.7220458984375e-06], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, player.effective_spell_damage(3))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 156], "score": -6.539835834808628, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -0.03772610053420067, -0.00011110231571365148, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.0005283355712890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0031363964080810547, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.000667572021484375, -0.0032281875610351562, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.00018310546875, -5.91278076171875e-05, -6.168342590332031, -0.004027671180665493, -0.003822088008746505, -0.0001010894775390625, -0.21967601776123047, -1.9073486328125e-06, -0.000354766845703125, -0.012278951704502106, -7.891547284089029e-05, -5.91278076171875e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            targets.append(game.other_player.hero)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 61, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 156], "score": -6.858249840434155, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "target": {"_type": "Template64"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -6.206430435180664, -0.008393287658691406, -9.5367431640625e-06, -0.02830028533935547, -1.9073486328125e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.017093658447265625, -3.814697265625e-06, -0.009868860244750977, -1.52587890625e-05, -8.96453857421875e-05, -0.0008668899536132812, -1.9073486328125e-06, -9.918212890625e-05, -0.0002294630539836362, -1.347058241663035e-05, -0.0023670196533203125, -0.08545207977294922, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -1.52587890625e-05, -6.103515625e-05, -0.4254770278930664, -0.03531694412231445, -0.00011110305786132812, -8.0108642578125e-05, -0.003345489501953125, 0.0, -0.000324249267578125, -0.023412778973579407, -6.866446346975863e-05, -0.0002956390380859375], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for target in copy.copy(game.other_player.minions):\n            targets.append(game.other_player.hero)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.965806146263503, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "copy"}}}], "name": "use"}], "name": "ArcaneMissiles"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -5.800451755523682, -7.319450378417969e-05, -0.0006256103515625, -0.18619823455810547, -3.0517578125e-05, -0.00025177001953125, -0.0014759543118998408, -1.0013547580456361e-05, -0.001190185546875, -0.49530029296875, 0.0, -7.62939453125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -3.0517578125e-05, -0.42647361755371094, -0.0015455480897799134, -3.933904736186378e-06, -2.86102294921875e-05, -0.024112701416015625, -4.00543212890625e-05, -0.0017453423934057355, -9.357866656500846e-05, -9.34600830078125e-05, -2.6702880859375e-05], "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 314], "score": -25.1663818359375, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -25.166378021240234], "inferred_code": ""}], "index": 5}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -0.14835980992211262, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -0.13396501541137695, -0.00021970272064208984, -2.6702880859375e-05, -0.00032806396484375, -1.52587890625e-05, -1.52587890625e-05, -0.0011382102966308594, -2.2649765014648438e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, -0.00017571449279785156, -1.71661376953125e-05, -0.000263214111328125, -5.53131103515625e-05, -0.0006313323974609375, -1.7404556274414062e-05, -0.0023746490478515625, -0.00018310546875, -5.7220458984375e-06, -0.0004558563232421875, -0.0007476806640625, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00104522705078125, -0.0003739595413208008, 0.0, -1.52587890625e-05, -0.00103759765625, -8.58306884765625e-05, -0.0023744567297399044, -5.7220458984375e-06, -0.000186920166015625, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -2.9181720972192124, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -2.905177593231201, -3.814697265625e-06, -3.24249267578125e-05, -0.0002307891845703125, -4.00543212890625e-05, -4.00543212890625e-05, -0.0017124414443969727, -2.0265579223632812e-06, -0.000133514404296875, 0.0, -0.0001277923583984375, -0.00024819374084472656, -1.1444091796875e-05, -0.000247955322265625, -1.33514404296875e-05, -0.000324249267578125, -2.110004425048828e-05, -0.0014629364013671875, -0.000324249267578125, -5.7220458984375e-06, -0.00026702880859375, -0.0008335113525390625, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.0007038116455078125, -0.0003186464309692383, 0.0, -1.52587890625e-05, -0.0009765625, -0.000125885009765625, -0.0024109957739710808, -5.7220458984375e-06, -0.0002040863037109375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.4532382666729973, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -3.439591884613037, -3.814697265625e-06, -2.6702880859375e-05, -7.82012939453125e-05, -2.86102294921875e-05, -2.09808349609375e-05, -0.0013973712921142578, -2.0265579223632812e-06, -0.0003452301025390625, 0.0, -0.00040435791015625, -0.00018715858459472656, -1.1444091796875e-05, -0.0002288818359375, -2.47955322265625e-05, -0.0006256103515625, -5.841255187988281e-06, -0.0019588470458984375, -0.0002536773681640625, -3.814697265625e-06, -0.0004558563232421875, -0.0007381439208984375, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006618499755859375, -0.0003396272659301758, 0.0, -1.52587890625e-05, -0.000995635986328125, -9.1552734375e-05, -0.0023937521036714315, -5.7220458984375e-06, -0.00019073486328125, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.6548901974820183, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -3.6412711143493652, -1.71661376953125e-05, -3.0517578125e-05, -0.000255584716796875, -5.14984130859375e-05, -2.288818359375e-05, -0.0009763240814208984, -2.2649765014648438e-06, -0.0001220703125, 0.0, -0.00046539306640625, -0.00017964839935302734, -1.71661376953125e-05, -0.0002193450927734375, -3.814697265625e-05, -0.00057220458984375, -9.655952453613281e-06, -0.00209808349609375, -0.0002117156982421875, -3.814697265625e-06, -0.0004634857177734375, -0.0008697509765625, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007801055908203125, -0.0003548860549926758, 0.0, -1.52587890625e-05, -0.001018524169921875, -9.1552734375e-05, -0.0023904142435640097, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.310435044964834, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -0.13396501541137695, -0.00021970272064208984, -2.6702880859375e-05, -0.00032806396484375, -1.52587890625e-05, -1.52587890625e-05, -0.0011382102966308594, -2.2649765014648438e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, -0.00017571449279785156, -1.71661376953125e-05, -0.000263214111328125, -5.53131103515625e-05, -0.0006313323974609375, -1.7404556274414062e-05, -0.0023746490478515625, -0.00018310546875, -5.7220458984375e-06, -0.0004558563232421875, -0.0007476806640625, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00104522705078125, -0.0003739595413208008, 0.0, -1.52587890625e-05, -0.00103759765625, -8.58306884765625e-05, -6.164405822753906, -6.29425048828125e-05, -0.0001735687255859375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "CHARACTER_CLASS", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.394929665526433, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "CHARACTER_CLASS", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -6.379295825958252, -3.814697265625e-06, -4.57763671875e-05, -0.0023555755615234375, -9.72747802734375e-05, -0.0001850128173828125, -0.0006401538848876953, -3.933906555175781e-06, -4.57763671875e-05, 0.0, -0.0003814697265625, -0.00017571449279785156, -1.9073486328125e-05, -0.0002155303955078125, -4.00543212890625e-05, -0.0006313323974609375, -7.748603820800781e-06, -0.0022106170654296875, -0.0002288818359375, -3.814697265625e-06, -0.000499725341796875, -0.0006427764892578125, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0009937286376953125, -0.0003625154495239258, 0.0, -1.52587890625e-05, -0.0010204315185546875, -9.5367431640625e-05, -0.0023765861988067627, -5.7220458984375e-06, -0.000186920166015625, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.CHARACTER_CLASS,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "Started", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.796927588678955, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "Started", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -6.7825140953063965, -3.62396240234375e-05, -4.9591064453125e-05, -0.0002918243408203125, -3.62396240234375e-05, -6.29425048828125e-05, -0.0012865066528320312, -2.1457672119140625e-06, -0.000133514404296875, 0.0, -0.0004367828369140625, -0.00016629695892333984, -1.9073486328125e-05, -0.00026702880859375, -4.57763671875e-05, -0.0006313323974609375, -9.655952453613281e-06, -0.002445220947265625, -0.000209808349609375, -5.7220458984375e-06, -0.000431060791015625, -0.000843048095703125, -3.814697265625e-06, -2.09808349609375e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007953643798828125, -0.0003567934036254883, 0.0, -1.52587890625e-05, -0.001010894775390625, -9.1552734375e-05, -0.0023902945686131716, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.Started,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "9", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.888467091754137, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "9", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -6.874682903289795, -2.288818359375e-05, -2.6702880859375e-05, -0.0002613067626953125, -4.57763671875e-05, -1.9073486328125e-05, -0.0011518001556396484, -2.2649765014648438e-06, -0.0001735687255859375, 0.0, -0.0003814697265625, -0.00019109249114990234, -1.33514404296875e-05, -0.0002460479736328125, -4.00543212890625e-05, -0.0005283355712890625, -7.748603820800781e-06, -0.0022678375244140625, -0.0002193450927734375, -3.814697265625e-06, -0.0004291534423828125, -0.000762939453125, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0007953643798828125, -0.0003510713577270508, 0.0, -1.52587890625e-05, -0.001007080078125, -9.1552734375e-05, -0.002387672895565629, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.9, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "choose_option", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.098090541934653, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -7.0842485427856445, -0.0001964569091796875, -3.24249267578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.9073486328125e-05, -0.0011403560638427734, -2.2649765014648438e-06, -0.000133514404296875, 0.0, -0.000240325927734375, -0.00018537044525146484, -1.71661376953125e-05, -0.000240325927734375, -3.62396240234375e-05, -0.0006427764892578125, -7.748603820800781e-06, -0.002368927001953125, -0.000213623046875, -3.814697265625e-06, -0.0004444122314453125, -0.0006999969482421875, -3.814697265625e-06, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0008144378662109375, -0.0003529787063598633, 0.0, -1.52587890625e-05, -0.0010051727294921875, -9.34600830078125e-05, -0.002390170469880104, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.choose_option,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 4, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.220920239960833, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -0.13396501541137695, -0.00021970272064208984, -2.6702880859375e-05, -0.00032806396484375, -1.52587890625e-05, -1.52587890625e-05, -0.0011382102966308594, -2.2649765014648438e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, -0.00017571449279785156, -1.71661376953125e-05, -0.000263214111328125, -5.53131103515625e-05, -0.0006313323974609375, -1.7404556274414062e-05, -7.06201171875, -0.011793136596679688, -0.0003643035888671875, -0.000308990478515625, -7.2479248046875e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.0028591156005859375, -0.00033986568450927734, 0.0, -1.9073486328125e-05, -0.00118255615234375, -7.82012939453125e-05, -0.0022551286965608597, -7.62939453125e-06, -0.0001773834228515625, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "Enemy", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.553292883945687, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "Enemy", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -7.437586784362793, -0.10216045379638672, -7.43865966796875e-05, -0.000179290771484375, -4.00543212890625e-05, -1.9073486328125e-05, -0.0007303953170776367, -2.384185791015625e-06, -0.0001506805419921875, 0.0, -0.0003414154052734375, -0.00018155574798583984, -1.71661376953125e-05, -0.00026702880859375, -3.62396240234375e-05, -0.0006198883056640625, -9.655952453613281e-06, -0.0024261474609375, -0.000217437744140625, -3.814697265625e-06, -0.000415802001953125, -0.000843048095703125, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -0.00075531005859375, -0.0003510713577270508, 0.0, -1.52587890625e-05, -0.0010089874267578125, -9.1552734375e-05, -0.0024044765159487724, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.Enemy,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 114, 113, 156], "score": -7.599597680768056, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -0.13396501541137695, -0.00021970272064208984, -2.6702880859375e-05, -0.00032806396484375, -1.52587890625e-05, -1.52587890625e-05, -0.0011382102966308594, -2.2649765014648438e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, -0.00017571449279785156, -1.71661376953125e-05, -0.000263214111328125, -5.53131103515625e-05, -0.0006313323974609375, -1.7404556274414062e-05, -0.0023746490478515625, -0.00018310546875, -5.7220458984375e-06, -0.0004558563232421875, -0.0007476806640625, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00104522705078125, -0.0003739595413208008, 0.0, -1.52587890625e-05, -7.4423017501831055, -0.01262664794921875, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.775887686679198, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -7.649326324462891, -0.113922119140625, -1.1444091796875e-05, -2.86102294921875e-05, -3.4332275390625e-05, -0.0018149614334106445, -2.384185791015625e-06, -4.57763671875e-05, -3.814697265625e-06, -0.000125885009765625, -0.0004220008850097656, -7.62939453125e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.000164031982421875, -1.7762184143066406e-05, -0.0011348724365234375, -0.000518798828125, -1.1444091796875e-05, -0.0004901885986328125, -0.000789642333984375, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001445770263671875, -0.0003720521926879883, 0.0, -1.52587890625e-05, -0.0010223388671875, -7.2479248046875e-05, -0.0023624603636562824, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "TOTEM", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.833148971818218, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ArcaneShot"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -7.819710731506348, -4.57763671875e-05, -2.09808349609375e-05, -0.0001277923583984375, -5.7220458984375e-05, -2.09808349609375e-05, -0.0008374452590942383, -2.622604142743512e-06, -0.000141143798828125, 0.0, -0.0003452301025390625, -0.00018548965454101562, -1.9073486328125e-05, -0.000225067138671875, -3.62396240234375e-05, -0.0006008148193359375, -9.655952453613281e-06, -0.0023059844970703125, -0.00022125244140625, -3.814697265625e-06, -0.00045013427734375, -0.000751495361328125, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.000827789306640625, -0.0003529787063598633, 0.0, -1.52587890625e-05, -0.0010089874267578125, -9.1552734375e-05, -0.002393749775364995, -5.7220458984375e-06, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.TOTEM,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 314], "score": -24.78516960144043, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -24.785167694091797], "inferred_code": ""}], "index": 6}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 102, 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -0.09690535222728158, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -0.07411670684814453, -0.0002231597900390625, -7.62939453125e-06, -3.814697265625e-06, -0.002194523811340332, -8.463859558105469e-06, -0.00125885009765625, -0.000125885009765625, -0.0003223419189453125, -0.000652313232421875, -0.0014133453369140625, -0.0009136199951171875, -0.0003643035888671875, -7.05718994140625e-05, -0.0013256072998046875, -0.000102996826171875, -0.000141143798828125], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 101, 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -3.1556309477012974, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.1254920959472656, -0.000911712646484375, -9.5367431640625e-06, -3.814697265625e-06, -0.007095813751220703, -2.622604142743512e-06, -0.001354217529296875, -0.0007495880126953125, -0.0002880096435546875, -0.0006046295166015625, -0.00249481201171875, -0.0008087158203125, -0.00037384033203125, -7.2479248046875e-05, -0.001445770263671875, -9.918212890625e-05, -0.000164031982421875], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -4.917751373402666, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.743290901184082, -1.9073486328125e-06, 0.0, 0.0, -0.0017124414443969727, -2.7418136596679688e-05, -0.4337967038154602, -4.0531158447265625e-06, -0.7153587341308594, -0.0001049041748046875, 0.0, -0.0020313262939453125, -3.814697265625e-06, -0.0005035400390625, -0.001583099365234375, -0.000270843505859375, -0.0007991790771484375, -0.001819610595703125, -0.0006961822509765625, -0.0003509521484375, -6.866455078125e-05, -0.0014190673828125, -0.00012969970703125, -0.000118255615234375], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -5.02259421160818, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.743290901184082, -1.9073486328125e-06, 0.0, 0.0, -0.0017124414443969727, -2.7418136596679688e-05, -1.0580527782440186, -0.00016283646982628852, -0.1884136199951172, -1.9073486328125e-05, -1.9073486328125e-06, -0.004200100898742676, -3.933906555175781e-06, -0.0003910064697265625, -0.0013561248779296875, -0.0002422332763671875, -0.00083160400390625, -0.002819061279296875, -0.005534172058105469, -0.0005035400390625, -7.82012939453125e-05, -0.0010662078857421875, -9.34600830078125e-05, -0.0001316070556640625], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 102, 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -5.568260549712818, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Reaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -5.475552082061768, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -0.07411670684814453, -0.0002231597900390625, -7.62939453125e-06, -3.814697265625e-06, -0.002194523811340332, -8.463859558105469e-06, -0.00125885009765625, -0.000125885009765625, -0.0003223419189453125, -0.000652313232421875, -0.0014133453369140625, -0.0009136199951171875, -0.0003643035888671875, -7.05718994140625e-05, -0.0013256072998046875, -0.000102996826171875, -0.000141143798828125], "inferred_code": "class <UNK>Reaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 97, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -5.796248616330217, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template20"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.743290901184082, -1.9073486328125e-06, 0.0, 0.0, -0.0017124414443969727, -2.7418136596679688e-05, -0.4337967038154602, -4.0531158447265625e-06, -1.5970869064331055, -7.62939453125e-06, 0.0, -0.0009347200393676758, -3.814697265625e-06, -0.000682830810546875, -0.0002841949462890625, -0.0003795623779296875, -0.00046539306640625, -0.0014743804931640625, -0.0004730224609375, -0.0003833770751953125, -7.43865966796875e-05, -0.00125885009765625, -0.000110626220703125, -0.0001354217529296875], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 100, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -5.8048784152193775, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template25"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.743290901184082, -1.9073486328125e-06, 0.0, 0.0, -0.0017124414443969727, -2.7418136596679688e-05, -0.4337967038154602, -4.0531158447265625e-06, -1.6027345657348633, -9.5367431640625e-06, 0.0, -0.0017491579055786133, -1.9073486328125e-06, -0.00048065185546875, -0.0014858245849609375, -0.0002593994140625, -0.0007991790771484375, -0.0019826889038085938, -0.000736236572265625, -0.000392913818359375, -5.91278076171875e-05, -0.0014438629150390625, -0.0001239776611328125, -0.000125885009765625], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.LEGENDARY)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 119, 150, 178, "create_weapon", "<EOS>", 3, 316, 144, 163, 302, 84, 194, "weapon", "<EOS>", 20, 171, 73, 303, 116, 111, 153, 200, 25, 194, "weapon", "<EOS>", 156], "score": -6.1073853149688375, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "weapon"}], "value": {"args": [{"_type": "Template46"}, {"_type": "Template40"}], "_type": "Call", "func": {"_type": "Template79"}}}, {"_type": "Return", "value": {"_type": "Name", "id": "weapon"}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -5.068642616271973, -5.14984130859375e-05, -5.7220458984375e-06, -5.0782055041054264e-05, -2.0027157006552443e-05, -4.172238186583854e-05, -0.0045320987701416016, -0.0034332275390625, -0.18227672576904297, -8.0108642578125e-05, -2.09808349609375e-05, 0.0, -0.0013129711151123047, -1.1324880688334815e-05, -0.02174786478281021, -2.0265579223632812e-06, -0.11135005950927734, -0.0004634857177734375, -0.000133514404296875, -1.71661376953125e-05, -0.007326245307922363, -5.841255187988281e-06, -0.000591278076171875, -0.14502716064453125, -0.022787094116210938, -0.000396728515625, -0.000202178955078125, -0.0071392059326171875, -5.7220458984375e-06, -0.015592694282531738, -3.3259260817430913e-05, -0.051776885986328125, -0.0005321502685546875, -0.008259773254394531, -0.0002651214599609375, -0.0064849853515625, -0.15882492065429688, -0.25681400299072266, -0.000873565673828125, -0.0016088485717773438, 0.0, -0.022609949111938477, -4.172325134277344e-06, -9.5367431640625e-06], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        weapon = Weapon(5, 3)\n        return weapon\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 103, 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -6.460568191163134, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -6.4326019287109375, -0.0032749176025390625, -3.814697265625e-05, -7.62939453125e-06, -0.004380583763122559, -8.344650268554688e-06, -0.001087188720703125, -0.0001583099365234375, -0.0002689361572265625, -0.0005340576171875, -0.0014638900756835938, -0.0009613037109375, -0.0003643035888671875, -6.866455078125e-05, -0.001453399658203125, -9.72747802734375e-05, -0.0001392364501953125], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 105, 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -6.688707234016533, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -6.665009021759033, -0.000396728515625, -7.62939453125e-06, -1.9073486328125e-06, -0.002768874168395996, -1.0848044439626392e-05, -0.0011196136474609375, -0.000232696533203125, -0.0002880096435546875, -0.0005645751953125, -0.0015802383422851562, -0.000919342041015625, -0.0003662109375, -7.05718994140625e-05, -0.0014705657958984375, -9.5367431640625e-05, -0.00014495849609375], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 102, 94, 119, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -7.220506072144985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template27"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -5.068642616271973, -5.14984130859375e-05, -5.7220458984375e-06, -5.0782055041054264e-05, -2.0027157006552443e-05, -4.172238186583854e-05, -0.0045320987701416016, -0.0034332275390625, -1.8804244995117188, -0.00011444091796875, -0.0029010772705078125, -0.0017833709716796875, -0.000118255615234375, -0.024467110633850098, -2.002716064453125e-05, -0.0003948211669921875, -0.2179889678955078, -0.00055694580078125, -0.00093841552734375, -0.004353523254394531, -0.001194000244140625, -0.00048828125, -6.866455078125e-05, -0.00171661376953125, -6.29425048828125e-05, -0.0001163482666015625], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 119, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -7.420123137632459, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -5.068642616271973, -5.14984130859375e-05, -5.7220458984375e-06, -5.0782055041054264e-05, -2.0027157006552443e-05, -4.172238186583854e-05, -0.0045320987701416016, -0.0034332275390625, -0.18227672576904297, -8.0108642578125e-05, -2.09808349609375e-05, 0.0, -0.0013129711151123047, -1.1324880688334815e-05, -0.02174786478281021, -2.0265579223632812e-06, -0.11135005950927734, -0.0004634857177734375, -0.000133514404296875, -1.71661376953125e-05, -0.007326245307922363, -5.841255187988281e-06, -0.000591278076171875, -2.004711151123047, -0.0003986358642578125, -0.0017833709716796875, -0.0021209716796875, -0.0006198883056640625, -0.0004062652587890625, -6.866455078125e-05, -0.0016345977783203125, -8.20159912109375e-05, -0.00016021728515625], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 115, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -7.5420209780855885, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.743290901184082, -1.9073486328125e-06, 0.0, 0.0, -0.0017124414443969727, -2.7418136596679688e-05, -0.4337967038154602, -4.0531158447265625e-06, -3.3406457901000977, -0.0001087188720703125, 0.0, -0.0009442567825317383, -3.814697265625e-06, -0.0006504058837890625, -0.00125885009765625, -0.0002689361572265625, -0.0004558563232421875, -0.0023984909057617188, -0.0005645751953125, -0.000400543212890625, -6.29425048828125e-05, -0.0015048980712890625, -0.0001354217529296875, -0.0001239776611328125], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.PALADIN, 4)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 115, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156], "score": -7.685235021620997, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template46"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "ArcaniteReaper"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -3.743290901184082, -1.9073486328125e-06, 0.0, 0.0, -0.0017124414443969727, -2.7418136596679688e-05, -1.0580527782440186, -0.00016283646982628852, -2.854189872741699, -0.000125885009765625, -1.9073486328125e-06, -0.0017856359481811523, -3.933906555175781e-06, -0.0006160736083984375, -0.00083160400390625, -0.000270843505859375, -0.000591278076171875, -0.0031023025512695312, -0.0049533843994140625, -0.0005359649658203125, -8.7738037109375e-05, -0.0009860992431640625, -9.5367431640625e-05, -0.000148773193359375], "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.HUNTER, 4)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n"}, {"choice_history": [139, 193, 314], "score": -26.978086471557617, "model_output": {"_type": "Module", "body": []}, "score_history": [-0.0001468658447265625, -1.9073486328125e-06, -26.977937698364258], "inferred_code": ""}], "index": 7}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -0.08643615033905405, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -0.017030715942382812, -1.9073486328125e-06, -3.814697265625e-06, -0.001468658447265625, -0.004538893699645996, -7.62939453125e-06, -7.05718994140625e-05, -0.0003662109375, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -4.081286189828447, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -3.7678632736206055, -0.005649566650390625, -0.12443733215332031, -0.00064849853515625, -3.814697265625e-06, -0.14683830738067627, -5.1856040954589844e-05, -0.0021409988403320312, 0.0, -8.392333984375e-05, -0.0009196996688842773, -3.230568836443126e-05, -5.7220458984375e-06, -7.62939453125e-06, -2.2888181774760596e-05, -1.1920928244535389e-07, -0.0002727508544921875, -6.29425048828125e-05, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, -4.9591064453125e-05, -0.02219390869140625, -1.9073486328125e-06, -3.814697265625e-06, -0.0014858245849609375, -0.00457763671875, -7.62939453125e-06, -7.2479248046875e-05, -0.00037384033203125, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -4.628417728212284, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -4.554603576660156, -0.03178691864013672, -0.0016307830810546875, -0.000171661376953125, -3.814697265625e-06, -0.012176513671875, -2.3484230041503906e-05, -0.000213623046875, 0.0, -8.0108642578125e-05, -0.0010333061218261719, -3.528591332724318e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003261566162109375, -6.103515625e-05, -1.71661376953125e-05, -1.52587890625e-05, -1.71661376953125e-05, -4.9591064453125e-05, -0.016002655029296875, -1.9073486328125e-06, -3.814697265625e-06, -0.001506805419921875, -0.0047446489334106445, -7.62939453125e-06, -7.05718994140625e-05, -0.000370025634765625, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -4.93846678521912, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -4.084291458129883, -7.62939453125e-06, 0.0, -0.0004930496215820312, -0.7907085418701172, -1.8358230590820312e-05, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "draw", "<EOS>", 156], "score": -5.603810069825371, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -4.084291458129883, -7.62939453125e-06, 0.0, -0.0004930496215820312, -1.4560670852661133, -3.099440846199286e-06, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.664235826321587, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -4.617438316345215, -0.0009746551513671875, -6.67572021484375e-05, -0.0053969621658325195, -7.748603820800781e-06, -6.4849853515625e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.0009435415267944336, -2.2172887838678434e-05, -0.0005474090576171875, -0.0001506805419921875, -0.01877117156982422, -5.7220440794480965e-06, -0.004817962646484375, -0.0003070831298828125, -0.0001049041748046875, -7.82012939453125e-05, -0.0001850128173828125, -3.814697265625e-05, -0.00063323974609375, -0.005465984344482422, -2.1457672119140625e-06, -0.008959770202636719, -2.09808349609375e-05, -0.000179290771484375, -0.0007476806640625, -0.00536346435546875, -0.0002155303955078125, -0.007433891296386719, 0.0, -0.03148365020751953, -0.030794141814112663, -1.1920928244535389e-07, -9.5367431640625e-06, -0.7197580337524414, -0.0001392364501953125, -0.000469207763671875, -0.002010345458984375, -2.6702880859375e-05, -7.62939453125e-06, -0.014852523803710938, -0.05371582508087158, -5.7220458984375e-06, -0.0008487701416015625, -0.0005283355712890625, -1.71661376953125e-05, 0.0, -0.009977340698242188, -0.05552864074707031, -1.9073486328125e-06, -0.0004596710205078125, -1.9073486328125e-06, -0.0004673004150390625, 0.0, -0.0003452301025390625, -4.9591064453125e-05, -2.288818359375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.00028228759765625, -1.9073486328125e-06, -3.814697265625e-06, -0.001678466796875, -0.015882492065429688, -5.7220458984375e-06, -2.86102294921875e-05, -0.0004405975341796875, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.7560907553142755, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -4.617438316345215, -0.0009746551513671875, -6.67572021484375e-05, -0.0053969621658325195, -7.748603820800781e-06, -6.4849853515625e-05, -1.9073486328125e-06, -7.62939453125e-05, -0.0009435415267944336, -2.2172887838678434e-05, -0.0005474090576171875, -0.0001506805419921875, -0.01877117156982422, -5.7220440794480965e-06, -0.004817962646484375, -0.0003070831298828125, -0.0001049041748046875, -7.82012939453125e-05, -0.0001850128173828125, -3.814697265625e-05, -0.00063323974609375, -0.005465984344482422, -2.1457672119140625e-06, -0.008959770202636719, -2.09808349609375e-05, -0.000179290771484375, -0.0007476806640625, -0.00536346435546875, -0.0002155303955078125, -0.007433891296386719, 0.0, -0.03148365020751953, -0.030794141814112663, -1.1920928244535389e-07, -9.5367431640625e-06, -0.7563591003417969, -0.000308990478515625, -5.53131103515625e-05, -0.0014171600341796875, -7.2479248046875e-05, -1.9073486328125e-06, -0.009158134460449219, -0.01338803768157959, -3.814697265625e-06, -0.00060272216796875, -0.0007343292236328125, -1.9073486328125e-05, 0.0, -0.009947776794433594, -0.1586446762084961, -3.814697265625e-06, -0.0004024505615234375, -1.9073486328125e-06, -0.0004291534423828125, 0.0, -0.0003070831298828125, -5.53131103515625e-05, -2.288818359375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.000263214111328125, -1.9073486328125e-06, -3.814697265625e-06, -0.0015697479248046875, -0.015153526328504086, -5.7220458984375e-06, -2.6702880859375e-05, -0.0004520416259765625, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "die", "<EOS>", 156], "score": -6.444627521303104, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -4.084291458129883, -7.62939453125e-06, 0.0, -0.0004930496215820312, -2.296860694885254, -2.8848648071289062e-05, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 106, 99, 310, 138, 291, "overload", "<EOS>", 38, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -6.547475693505753, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template36"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -3.7678632736206055, -0.005649566650390625, -0.12443733215332031, -0.00064849853515625, -3.814697265625e-06, -2.5380420684814453, -6.794906312279636e-06, -0.06252670288085938, -8.58306884765625e-05, -1.1444091796875e-05, -1.811981201171875e-05, -5.960462772236497e-07, -4.9591064453125e-05, -3.62396240234375e-05, -1.71661376953125e-05, -0.0040645599365234375, -3.814697265625e-06, -1.52587890625e-05, -0.03262901306152344, -1.9073486328125e-06, -1.9073486328125e-06, -0.00274658203125, -0.004765748977661133, -7.62939453125e-06, -5.14984130859375e-05, -0.0003643035888671875, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -6.665323612900451, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -4.084291458129883, -7.62939453125e-06, 0.0, -0.0004930496215820312, -2.517544746398926, -3.707403448061086e-05, -3.814697265625e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -6.695199964307889, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -6.064146041870117, -0.0084381103515625, -0.5798826217651367, -0.000148773193359375, -1.9073486328125e-06, -0.013565778732299805, -2.8848648071289062e-05, -0.0002155303955078125, 0.0, -9.918212890625e-05, -0.0010010004043579102, -3.767009548028e-05, -7.62939453125e-06, -7.62939453125e-06, -1.8835065930034034e-05, -1.1920928244535389e-07, -0.0002765655517578125, -5.7220458984375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.017124176025390625, -1.9073486328125e-06, -3.814697265625e-06, -0.00152587890625, -0.004638791084289551, -7.62939453125e-06, -7.05718994140625e-05, -0.0003681182861328125, -1.9073486328125e-06], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Assassinate", "<EOS>", 116, 103, 94, 119, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -6.7737464851379485, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -6.3186540603637695, -6.67572021484375e-05, -2.47955322265625e-05, 0.0, -0.00011991983774350956, -0.00034332275390625, -0.23405742645263672, -0.0028533935546875, -0.0016422271728515625, -1.9073486328125e-06, -0.18844985961914062, -0.0001049041748046875, -0.001125454786233604, -1.5735626220703125e-05, -8.58306884765625e-05, 0.0, -0.0001621246337890625, -0.0012252330780029297, -3.600119816837832e-05, -3.814697265625e-06, -9.5367431640625e-06, -2.9087066650390625e-05, -1.1920928244535389e-07, -0.00113677978515625, -4.9591064453125e-05, -2.09808349609375e-05, -7.62939453125e-06, -7.62939453125e-06, -5.340576171875e-05, -0.015367507934570312, -1.9073486328125e-06, -1.9073486328125e-06, -0.002368927001953125, -0.004236578941345215, -5.7220458984375e-06, -3.4332275390625e-05, -0.0003070831298828125, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 106, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -7.008594387880734, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -3.7678632736206055, -0.005649566650390625, -2.218390464782715, -0.0006694793701171875, -8.20159912109375e-05, -0.029988884925842285, -5.9604644775390625e-06, -0.0006847381591796875, -1.9073486328125e-06, -6.4849853515625e-05, -0.0008983612060546875, -2.7894933737115934e-05, -0.0005054473876953125, -0.0001430511474609375, -0.02659320831298828, -6.31808916295995e-06, -0.0040531158447265625, -0.000316619873046875, -0.0001068115234375, -7.62939453125e-05, -0.0001773834228515625, -3.62396240234375e-05, -0.0006160736083984375, -0.005313396453857422, -2.1457672119140625e-06, -0.008728981018066406, -1.71661376953125e-05, -0.0001811981201171875, -0.0007648468017578125, -0.0053539276123046875, -0.000209808349609375, -0.007184028625488281, 0.0, -0.032372474670410156, -0.03195500001311302, -1.1920928244535389e-07, -9.5367431640625e-06, -0.6981658935546875, -0.0001392364501953125, -0.00048065185546875, -0.0020351409912109375, -2.6702880859375e-05, -7.62939453125e-06, -0.014997482299804688, -0.05345261096954346, -5.7220458984375e-06, -0.0008449554443359375, -0.000530242919921875, -1.71661376953125e-05, 0.0, -0.010018348693847656, -0.05572795867919922, -1.9073486328125e-06, -0.000453948974609375, -1.9073486328125e-06, -0.0004634857177734375, 0.0, -0.0003452301025390625, -4.9591064453125e-05, -2.288818359375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.0002841949462890625, -1.9073486328125e-06, -3.814697265625e-06, -0.001682281494140625, -0.015847206115722656, -5.7220458984375e-06, -2.86102294921875e-05, -0.0004405975341796875, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -7.437311766294428, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Assassinate"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -0.017030715942382812, -1.9073486328125e-06, -3.814697265625e-06, -0.001468658447265625, -6.152581691741943, -3.933904736186378e-06, -0.0001544952392578125, -0.19615745544433594, -0.0001926422119140625, -0.003559112548828125, -0.000244140625, -0.02233600616455078, -0.0014617441920563579, -7.867813110351562e-06, -8.0108642578125e-05, -0.031194686889648438, -0.21558380126953125, -0.0034160614013671875, 0.0, -0.01531219482421875, -0.34894323348999023, -1.33514404296875e-05, -0.36461830139160156, 0.0], "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 314], "score": -23.418949127197266, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -23.418943405151367], "inferred_code": ""}], "index": 8}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -0.09896253378849451, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -0.020233154296875, -0.000247955322265625, -0.0001926422119140625, -0.0004100799560546875, -5.7220458984375e-06, -3.814697265625e-06, -0.004024505615234375, -0.004473686218261719, -9.5367431640625e-06, -0.0001239776611328125, -0.000396728515625, -3.814697265625e-05, 0.0, -0.0037736892700195312, -0.0058193206787109375, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -0.0003339052200317383, -1.9073486328125e-06, -0.0001277923583984375, -0.0005321502685546875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001926422119140625, -5.7220458984375e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.0024700164794921875, -0.0009765625, -0.0015963244950398803, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 106, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.195908535074182, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -5.083531379699707, -0.009959220886230469, -0.0004482269287109375, -0.0009708404541015625, -0.0044708251953125, -0.00035858154296875, -0.0160981398075819, -0.008575795218348503, -0.00045013427734375, -0.00025177001953125, -0.0006999969482421875, -0.0009822845458984375, -0.001712799072265625, -0.00038909912109375, -6.29425048828125e-05, -0.0021723508834838867, -3.2901763916015625e-05, -0.004212379455566406, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021257400512695312, -6.29425048828125e-05, -0.0014781951904296875, -7.62939453125e-06, -0.00182342529296875, -0.004387497901916504, 0.0, -1.71661376953125e-05, -0.020437240600585938, -0.0002574920654296875, -0.0001964569091796875, -0.0004062652587890625, -5.7220458984375e-06, -3.814697265625e-06, -0.003981590270996094, -0.004436492919921875, -9.5367431640625e-06, -0.0001239776611328125, -0.0003986358642578125, -3.814697265625e-05, 0.0, -0.003765106201171875, -0.0058383941650390625, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -0.0003358125686645508, -1.9073486328125e-06, -0.0001277923583984375, -0.0005321502685546875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001926422119140625, -5.7220458984375e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.0024738311767578125, -0.0009746551513671875, -0.0015962055185809731, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.SHAMAN, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "undamaged", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.198374980630092, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_funcundamaged", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -5.104714393615723, -0.0022207628935575485, -0.000713348388671875, -0.0001621246337890625, -0.000499725341796875, -0.000946044921875, -0.0009365081787109375, -0.00019073486328125, -8.392333984375e-05, -0.0025942325592041016, -2.3245811462402344e-05, -0.005311012268066406, -5.53131103515625e-05, -0.00012969970703125, -0.0002536773681640625, -0.0024623870849609375, -6.67572021484375e-05, -0.0008411407470703125, -7.62939453125e-06, -0.0019016265869140625, -0.0034755468368530273, 0.0, -9.5367431640625e-06, -0.019881248474121094, -0.0002422332763671875, -0.00017547607421875, -0.0003986358642578125, -5.7220458984375e-06, -3.814697265625e-06, -0.003964424133300781, -0.004421234130859375, -9.5367431640625e-06, -0.000125885009765625, -0.00041961669921875, -4.00543212890625e-05, 0.0, -0.0036211013793945312, -0.0056972503662109375, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -0.0003453493118286133, -1.9073486328125e-06, -0.0001277923583984375, -0.000522613525390625, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.00019073486328125, -5.7220458984375e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.002471923828125, -0.0009765625, -0.001595729379914701, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_funcundamaged=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.432091225905083, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -5.34554386138916, -0.0001125335693359375, -0.0001354217529296875, -0.0003643035888671875, -7.62939453125e-06, 0.0, -0.006148338317871094, -0.004772305488586426, -5.7220458984375e-06, -0.0001468658447265625, -0.000225067138671875, -2.6702880859375e-05, 0.0, -0.0050258636474609375, -0.010485649108886719, -1.9073486328125e-06, -0.000141143798828125, -3.814697265625e-06, -0.0003854036331176758, -1.9073486328125e-06, -0.0001125335693359375, -0.0005588531494140625, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0002231597900390625, -5.7220458984375e-06, -2.47955322265625e-05, -0.0007915496826171875, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.00235748291015625, -0.0009288787841796875, -0.0015845241723582149, -1.9073486328125e-06, -0.000202178955078125, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 12, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.569095239427611, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -4.9644012451171875, -4.76837158203125e-05, -0.5215635299682617, -0.000537872314453125, -5.7220458984375e-06, -1.9073486328125e-06, -0.008260726928710938, -0.004353523254394531, -9.5367431640625e-06, -0.0001373291015625, -0.00022125244140625, -3.0517578125e-05, 0.0, -0.004161834716796875, -0.006183624267578125, -1.9073486328125e-06, -0.000133514404296875, -3.814697265625e-06, -0.0003986358642578125, -1.9073486328125e-06, -0.0001220703125, -0.00045013427734375, -1.71661376953125e-05, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.0001354217529296875, -3.814697265625e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002862215042114258, 0.0, -7.62939453125e-06, -0.0025310516357421875, -0.0009441375732421875, -0.0016230244655162096, -1.9073486328125e-06, -0.0002002716064453125, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 102, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.62300292650491, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -5.532309532165527, -0.000720977783203125, -0.00031280517578125, -0.00115203857421875, -0.00162506103515625, -0.000179290771484375, -0.00717387069016695, -0.008118702098727226, -0.000339508056640625, -0.000152587890625, -0.0006618499755859375, -0.001220703125, -0.0014820098876953125, -0.00041961669921875, -6.4849853515625e-05, -0.002222895622253418, -3.0994415283203125e-05, -0.004279136657714844, -8.0108642578125e-05, -0.0001659393310546875, -0.0002841949462890625, -0.002193450927734375, -6.29425048828125e-05, -0.001495361328125, -7.62939453125e-06, -0.0018110275268554688, -0.004356026649475098, 0.0, -1.71661376953125e-05, -0.020421981811523438, -0.000247955322265625, -0.0001964569091796875, -0.0004062652587890625, -5.7220458984375e-06, -3.814697265625e-06, -0.00399017333984375, -0.004428863525390625, -9.5367431640625e-06, -0.0001239776611328125, -0.000396728515625, -3.814697265625e-05, 0.0, -0.0037784576416015625, -0.005825042724609375, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -0.0003358125686645508, -1.9073486328125e-06, -0.0001277923583984375, -0.0005283355712890625, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.00019073486328125, -5.7220458984375e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.0024738311767578125, -0.0009746551513671875, -0.0015981127507984638, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 13, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.050779082963913, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "IsNot"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -5.764860153198242, -7.62939453125e-06, -0.19502639770507812, -0.0006237030029296875, -5.7220458984375e-06, 0.0, -0.010158538818359375, -0.007378578186035156, -5.7220458984375e-06, -0.00016021728515625, -0.0001678466796875, -2.47955322265625e-05, 0.0, -0.0050411224365234375, -0.007904052734375, -1.9073486328125e-06, -0.0001277923583984375, -1.9073486328125e-06, -0.0004407167434692383, -1.9073486328125e-06, -0.0001220703125, -0.0005512237548828125, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -9.918212890625e-05, -3.814697265625e-06, -2.288818359375e-05, -0.000835418701171875, -0.0002938508987426758, 0.0, -7.62939453125e-06, -0.0026569366455078125, -0.000919342041015625, -0.0016468595713376999, -1.9073486328125e-06, -0.0001983642578125, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health is not target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.069367408903986, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -0.020233154296875, -0.000247955322265625, -0.0001926422119140625, -0.0004100799560546875, -5.7220458984375e-06, -3.814697265625e-06, -0.004024505615234375, -0.004473686218261719, -9.5367431640625e-06, -0.0001239776611328125, -0.000396728515625, -3.814697265625e-05, 0.0, -0.0037736892700195312, -5.975228309631348, -7.62939453125e-06, -0.0002079010009765625, -3.814697265625e-06, -0.0008544921875, -1.9073486328125e-06, -7.82012939453125e-05, -0.0005054473876953125, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -5.340576171875e-05, -3.814697265625e-06, -3.4332275390625e-05, -0.0009212493896484375, -0.0003148317337036133, 0.0, -7.62939453125e-06, -0.002964019775390625, -0.0008525848388671875, -0.0017321156337857246, -1.9073486328125e-06, -0.0001850128173828125, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.1414314589115975, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -0.020233154296875, -0.000247955322265625, -0.0001926422119140625, -0.0004100799560546875, -5.7220458984375e-06, -3.814697265625e-06, -0.004024505615234375, -6.038590431213379, -1.1563301086425781e-05, -0.003040313720703125, -0.0007076263427734375, -2.47955322265625e-05, 0.0, -0.0018329620361328125, -0.012927055358886719, -3.814697265625e-06, -0.0001354217529296875, -3.814697265625e-06, -0.000194549560546875, -1.9073486328125e-06, -0.0001239776611328125, -0.000850677490234375, -2.47955322265625e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.000492095947265625, -7.62939453125e-06, -2.86102294921875e-05, -0.0007877349853515625, -0.0002728700637817383, 0.0, -7.62939453125e-06, -0.0020771026611328125, -0.0009765625, -0.0015218383632600307, -1.9073486328125e-06, -0.0002040863037109375, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.spell_targetable() and target.spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 14, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.396641129779368, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -6.317900657653809, -7.62939453125e-06, -0.00103759765625, -0.000232696533203125, -1.71661376953125e-05, 0.0, -0.005738258361816406, -0.0044318437576293945, -5.7220458984375e-06, -8.0108642578125e-05, -0.0003643035888671875, -4.76837158203125e-05, 0.0, -0.0025091171264648438, -0.00495147705078125, -1.9073486328125e-06, -0.000156402587890625, -3.814697265625e-06, -0.0005475282669067383, -1.9073486328125e-06, -0.0001373291015625, -0.0004405975341796875, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.000164031982421875, -5.7220458984375e-06, -2.47955322265625e-05, -0.0008144378662109375, -0.0002862215042114258, 0.0, -7.62939453125e-06, -0.002475738525390625, -0.0009613037109375, -0.0016025295481085777, -1.9073486328125e-06, -0.000202178955078125, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health < target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 52, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.4086757961546255, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template54"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -0.020233154296875, -0.000247955322265625, -0.0001926422119140625, -0.0004100799560546875, -5.7220458984375e-06, -3.814697265625e-06, -0.004024505615234375, -0.004473686218261719, -9.5367431640625e-06, -0.0001239776611328125, -0.000396728515625, -3.814697265625e-05, 0.0, -6.294828414916992, -0.024110794067382812, -5.9604644775390625e-06, -0.0002689361572265625, -3.814697265625e-06, -0.0016194581985473633, 0.0, -5.91278076171875e-05, -0.000396728515625, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -0.000171661376953125, -5.7220458984375e-06, -2.288818359375e-05, -0.0005893707275390625, -0.0003091096878051758, 0.0, -5.7220458984375e-06, -0.0020580291748046875, -0.0007762908935546875, -0.001614104607142508, -1.9073486328125e-06, -0.0001850128173828125, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and minion.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "card", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.51163648340173, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "card", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -6.400218486785889, -1.9073486328125e-06, -0.0001163482666015625, -0.036728858947753906, -0.000232696533203125, -0.0001983642578125, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.0047435760498046875, -0.004776954650878906, -7.62939453125e-06, -0.0001239776611328125, -0.0003643035888671875, -3.814697265625e-05, 0.0, -0.003972053527832031, -0.0049114227294921875, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-06, -0.000278472900390625, -1.9073486328125e-06, -0.00012969970703125, -0.000583648681640625, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001888275146484375, -5.7220458984375e-06, -2.288818359375e-05, -0.0008258819580078125, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.002490997314453125, -0.0009593963623046875, -0.0016003770288079977, -1.9073486328125e-06, -0.0002002716064453125, -3.814697265625e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            card == target.calculate_max_health() and target.spell_targetable()\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.7640070938747385, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -6.366019248962402, -5.7220458984375e-06, -5.7220458984375e-06, -6.43729799776338e-06, -1.1324875231366605e-05, -0.0001316070556640625, -0.08743476867675781, -1.52587890625e-05, -0.0001049041748046875, 0.0, -1.9073486328125e-06, -0.28601741790771484, -7.62939453125e-06, -0.0001087188720703125, -0.0023250579833984375, -0.00020420551300048828, 0.0, -1.1444091796875e-05, -0.002155303955078125, -0.0009822845458984375, -0.0016586811980232596, -1.9073486328125e-06, -0.00026702880859375, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 79, 171, 35, 302, 79, 169, 17, 164, 17, 164, 33, "calculate_attack", "<EOS>", "calculate_attack", "<EOS>", 113, 156], "score": -8.64235054996118, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}}], "_type": "Call", "func": {"_type": "Template24"}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Backstab"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -0.020233154296875, -0.000247955322265625, -0.0001926422119140625, -0.0004100799560546875, -5.7220458984375e-06, -3.814697265625e-06, -0.004024505615234375, -0.004473686218261719, -9.5367431640625e-06, -0.0001239776611328125, -0.000396728515625, -3.814697265625e-05, 0.0, -0.0037736892700195312, -0.0058193206787109375, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -0.0003339052200317383, -1.9073486328125e-06, -0.0001277923583984375, -0.0005321502685546875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001926422119140625, -5.7220458984375e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002747774124145508, 0.0, -7.62939453125e-06, -6.576495170593262, -0.0016155242919921875, -0.003177642822265625, -0.011211395263671875, -0.1375293731689453, -0.14562225341796875, -3.814697265625e-06, -5.7220458984375e-06, -0.10913467407226562, -1.9073486328125e-06, -0.1063680648803711, -0.8492813110351562, -7.867813110351562e-06, -0.591961145401001, -3.24249267578125e-05, -0.016188621520996094, -1.9073486328125e-06], "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(self.target.\n            calculate_attack.calculate_attack()), self)\n"}, {"choice_history": [139, 193, 314], "score": -23.95929718017578, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -23.959287643432617], "inferred_code": ""}], "index": 9}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -0.3790608237102333, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -0.05016911029815674, -0.00018703937530517578, -1.33514404296875e-05, -0.03286552429199219, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -0.07522010803222656, -0.005817292258143425, -5.7220458984375e-06, -7.62939453125e-06, -0.012969970703125, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 156], "score": -3.122505029903323, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -2.5061445236206055, -6.103515625e-05, -0.13033199310302734, 0.0, 0.0, -0.00016021728515625, -1.9073486328125e-06, -1.52587890625e-05, -0.22674274444580078, -0.15547633171081543, -0.00011265277862548828, -1.1444091796875e-05, -0.09023571014404297, 0.0], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -3.6372791125975255, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -3.3455657958984375, -1.728534698486328e-05, -1.9073486328125e-05, -0.02333831787109375, -0.0005970001220703125, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.04799175262451172, -0.006695269141346216, -7.62939453125e-06, -7.62939453125e-06, -0.011316299438476562, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -3.80815823889111, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -0.05016911029815674, -0.00018703937530517578, -1.33514404296875e-05, -3.486830711364746, -5.7220458984375e-05, 0.0, 0.0, -9.1552734375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.04969215393066406, -0.003811001079156995, -5.7220458984375e-06, -1.1444091796875e-05, -0.015594482421875, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 318, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -4.459405979381472, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -4.26808500289917, -2.6702880859375e-05, -0.000179290771484375, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-05, -0.0048828125, -0.05279660224914551, -0.00010132789611816406, -1.9073486328125e-05, -0.0318450927734375, -3.814697265625e-05, 0.0, -3.814697265625e-06, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.02641010284423828, -0.01113128662109375, -7.62939453125e-06, -7.62939453125e-06, -0.008632659912109375, -0.00232696533203125, 0.0, -2.09808349609375e-05, -0.0007038116455078125, 0.0, -1.9073486328125e-06, -0.023591995239257812, -0.006615757942199707, -5.7220458984375e-06, -1.1444091796875e-05, -0.00855255126953125, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 17, 164, 33, "increase_health", "<EOS>", "append", "<EOS>", 302, 115, 156], "score": -4.512395223842475, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -0.05016911029815674, -0.00018703937530517578, -1.33514404296875e-05, -0.03286552429199219, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -2.845245361328125, -5.7220458984375e-05, -0.014685630798339844, -0.6327594518661499, -3.576278118089249e-07, -0.41064393520355225, -1.9073486328125e-06, -3.814697265625e-06, -0.3239574432373047, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health.append(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 115, 156], "score": -4.598801812396914, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -0.05016911029815674, -0.00018703937530517578, -1.33514404296875e-05, -0.03286552429199219, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -4.293277740478516, -0.008402228355407715, -1.0132789611816406e-05, -5.7220458984375e-06, -0.012065887451171875, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 111, 156], "score": -4.797306139261991, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -0.05016911029815674, -0.00018703937530517578, -1.33514404296875e-05, -0.03286552429199219, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -0.07522010803222656, -0.005817292258143425, -5.7220458984375e-06, -7.62939453125e-06, -4.431215286254883, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -5.018949350582034, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -2.5061445236206055, -6.103515625e-05, -0.13033199310302734, 0.0, 0.0, -0.00016021728515625, -1.9073486328125e-06, -1.52587890625e-05, -0.22674274444580078, -2.097238302230835, -1.919269561767578e-05, -1.1444091796875e-05, -0.04500770568847656, -3.814697265625e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "deathrattle", "<EOS>", "append", "<EOS>", 302, 111, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -5.050671653081508, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Attribute", "attr": "deathrattle", "value": {"_type": "Template19"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -3.6405258178710938, -4.1961669921875e-05, -0.00311279296875, -0.36263418197631836, -1.5616367818438448e-05, -0.009114024229347706, 0.0, -1.1444091796875e-05, -0.794001579284668, -0.000217437744140625, 0.0, 0.0, -0.0041484832763671875, -1.9073486328125e-06, -3.814697265625e-06, -0.05129051208496094, -0.004340646788477898, -5.7220458984375e-06, -7.62939453125e-06, -0.010351181030273438, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.deathrattle.append(3)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -5.503223261104495, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -2.5061445236206055, -6.103515625e-05, -0.13033199310302734, 0.0, 0.0, -0.00016021728515625, -1.9073486328125e-06, -1.52587890625e-05, -0.22674274444580078, -0.15547633171081543, -0.00011265277862548828, -1.1444091796875e-05, -2.470952033996582, -1.9073486328125e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "deathrattle", "<EOS>", "append", "<EOS>", 302, 79, 171, 71, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 76, 164, 33, "card", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -7.134723436147112, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template77"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Attribute", "attr": "deathrattle", "value": {"_type": "Template19"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -3.6405258178710938, -4.1961669921875e-05, -0.00311279296875, -0.36263418197631836, -1.5616367818438448e-05, -0.009114024229347706, 0.0, -1.1444091796875e-05, -0.8780755996704102, -0.23515033721923828, -0.004151344299316406, -2.6702880859375e-05, -0.00583648681640625, -0.00164031982421875, -0.0011835098266601562, -1.9073486328125e-06, -0.005668499507009983, -4.3034422560594976e-05, -0.0008068084716796875, -0.030443191528320312, -3.814697265625e-06, -0.2984132766723633, -0.262239933013916, -2.872943878173828e-05, -0.594212532043457, -4.38690185546875e-05, -0.004973649978637695, -3.814697265625e-05, -3.576278118089249e-07, -0.2404499053955078, -1.71661376953125e-05, 0.0, -0.0001087188720703125, -9.5367431640625e-06, -1.9073486328125e-06, -0.16958141326904297, -0.20006079971790314, -7.05718994140625e-05, -3.814697265625e-06, -0.015132904052734375, -3.814697265625e-06], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.deathrattle.append(Deathrattle(Summon(self.target.card),\n            PlayerSelector()))\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 321, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 131, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 122, 103, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 115, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 155, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 115, 144, 163, 302, 84, 194, "option", "<EOS>", 20, 171, 17, 164, 17, 164, 17, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Blessing", "<EOS>", 93, 213, "Blessing", "<EOS>", 110, 114, 144, 163, 302, 126, 33, 144, 163, 302, 84, 194, "option", "<EOS>", 20, 171, 17, 164, 17, 164, 17, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Blessing", "<EOS>", 93, 213, "Blessing", "<EOS>", 110, 114, 156], "score": -11.181184247108597, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"bases": [{"_type": "Template75"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Template78"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"_type": "Template19"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -3.7523698806762695, -0.30953121185302734, -0.0198516845703125, -0.0018089929362758994, -0.46090927720069885, -4.52994936495088e-06, -0.05026831477880478, -2.288818359375e-05, -0.20945358276367188, -0.000270843505859375, 0.0, 0.0, -0.001886606216430664, -9.536738616588991e-07, -0.0019588470458984375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -3.814697265625e-06, -0.016529083251953125, -9.1552734375e-05, -0.002490997314453125, -0.00031280517578125, -0.00011444091796875, -0.00025948972324840724, -0.00020456252968870103, -0.00015616000746376812, -9.1552734375e-05, -0.004196192603558302, -0.1353893280029297, -0.037573814392089844, -0.018629074096679688, -7.62939453125e-06, -0.00028228759765625, -3.24249267578125e-05, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, -2.2649763195659034e-05, -1.6689286894688848e-06, -3.0517578125e-05, -0.09612560272216797, -0.07372760772705078, 0.0, 0.0, -0.000133514404296875, -1.9073486328125e-06, -1.33514404296875e-05, -0.1799173355102539, -0.006959437392652035, -3.7670110032195225e-05, -1.1444091796875e-05, -0.017000198364257812, -0.10449600219726562, -0.000125885009765625, -1.9073486328125e-06, -0.0001983642578125, -0.000598907470703125, -0.19133567810058594, -0.13705742359161377, -1.1920928244535389e-07, -0.002407073974609375, -0.21892547607421875, -0.30008792877197266, -0.0001659393310546875, -0.0001888275146484375, -0.5129327774047852, -0.006266593933105469, -6.866455078125e-05, -0.00055694580078125, -3.814697265625e-06, -0.2582111358642578, -1.33514404296875e-05, -0.030861496925354004, -1.9073486328125e-06, -0.003052949905395508, -2.0265579223632812e-06, -0.0004520416259765625, -0.003116607666015625, -9.918212890625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -0.0001506805419921875, -5.7220458984375e-06, -0.0003662109375, -0.03444790840148926, -1.561641511216294e-05, -1.9073486328125e-06, -0.09514427185058594, -0.6536474227905273, -1.1444091796875e-05, -3.814697265625e-06, -0.1480731964111328, -1.9073486328125e-06, -0.4486891031265259, -7.188075687736273e-05, -0.09580516815185547, -8.96453857421875e-05, -0.000652313232421875, -1.9073486328125e-06, -0.005551338195800781, -1.9073486328125e-06, -0.060425758361816406, -5.7220458984375e-06, -0.0048656463623046875, 0.0, -0.0036611557006835938, -9.5367431640625e-06, -0.008358948864042759, -0.004476653411984444, -0.1482531726360321, -0.003514425130560994, -0.02086150459945202, -0.0003023147291969508, -0.00022125244140625, -0.006714820861816406, -0.0002307891845703125, -0.0014820098876953125, -0.024692535400390625, -1.9073486328125e-06, -0.015820706263184547, -0.021754087880253792, -0.002483367919921875, 0.0, -0.09834912419319153, -0.034131743013858795, -0.5304393768310547, -0.03263568878173828, -0.0014934539794921875, -0.001178741455078125, -0.0003337860107421875, -0.18649959564208984, -0.046698570251464844, -0.02705860137939453, -0.0016841888427734375, -0.0003566741943359375, -0.0027074813842773438, -7.62939453125e-06, -0.0912482738494873, -0.0002456601650919765, -0.25174522399902344, -4.9591064453125e-05, -0.0004558563232421875, -1.1444091796875e-05, -0.0032825469970703125, -1.9073486328125e-06, -0.0056705474853515625, -1.9073486328125e-06, -0.019922256469726562, 0.0, -0.016074180603027344, -7.62939453125e-06, -0.012235879898071289, -0.0015684011159464717, -0.09857740998268127, -0.00226724985986948, -0.01706075482070446, -0.0002738237089943141, -0.000209808349609375, -0.0063495635986328125, -0.0001926422119140625, -0.00144195556640625, -0.059967041015625, -1.9073486328125e-06, -0.018928835168480873, -0.01982198841869831, -0.001575469970703125, 0.0, -0.07322150468826294, -0.030291195958852768, -0.4548530578613281, -0.030836105346679688, -0.004573822021484375], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n\n\n        class BlessingOfKings(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Blessing of Kings', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False, target_func=\n                    hearthbreaker.targeting.find_minion_spell_target)\n\n            def use(self, player, game):\n                target.increase_health(4)\n                self.target.taunt = True\n        super().use(player, game)\n        targets = game.random_choice(targets)\n        target.increase_health(4)\n        option = game.current_player.agent.choose_option([Blessing(),\n            Blessing()], player)\n        target = self.target\n        option = game.current_player.agent.choose_option([Blessing(),\n            Blessing()], player)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 321, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 131, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 122, 103, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 115, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 155, 144, 163, 302, 84, 194, "option", "<EOS>", 20, 171, 17, 164, 17, 164, 17, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Blessing", "<EOS>", 93, 213, "Blessing", "<EOS>", 110, 114, 144, 163, 302, 126, 33, 144, 163, 302, 84, 194, "option", "<EOS>", 20, 171, 17, 164, 17, 164, 17, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Blessing", "<EOS>", 93, 213, "Blessing", "<EOS>", 110, 114, 144, 163, 302, 126, 33, 144, 163, 302, 84, 194, "option", "<EOS>", 20, 171, 17, 164, 17, 164, 17, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Blessing", "<EOS>", 93, 213, "Blessing", "<EOS>", 110, 114, 156], "score": -11.401416084128634, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"bases": [{"_type": "Template75"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"_type": "Template19"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template64"}], "value": {"_type": "Template19"}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "option"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template16", "hole0": "Blessing"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}}}}}], "name": "use"}], "name": "BlessingOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -3.7523698806762695, -0.30953121185302734, -0.0198516845703125, -0.0018089929362758994, -0.46090927720069885, -4.52994936495088e-06, -0.05026831477880478, -2.288818359375e-05, -0.20945358276367188, -0.000270843505859375, 0.0, 0.0, -0.001886606216430664, -9.536738616588991e-07, -0.0019588470458984375, -1.1444091796875e-05, -0.0001678466796875, 0.0, -3.814697265625e-06, -0.016529083251953125, -9.1552734375e-05, -0.002490997314453125, -0.00031280517578125, -0.00011444091796875, -0.00025948972324840724, -0.00020456252968870103, -0.00015616000746376812, -9.1552734375e-05, -0.004196192603558302, -0.1353893280029297, -0.037573814392089844, -0.018629074096679688, -7.62939453125e-06, -0.00028228759765625, -3.24249267578125e-05, -0.000370025634765625, -3.24249267578125e-05, -3.4332275390625e-05, -2.2649763195659034e-05, -1.6689286894688848e-06, -3.0517578125e-05, -0.09612560272216797, -0.07372760772705078, 0.0, 0.0, -0.000133514404296875, -1.9073486328125e-06, -1.33514404296875e-05, -0.1799173355102539, -0.006959437392652035, -3.7670110032195225e-05, -1.1444091796875e-05, -0.017000198364257812, -0.10449600219726562, -0.000125885009765625, -1.9073486328125e-06, -0.0001983642578125, -0.000598907470703125, -0.19133567810058594, -0.13705742359161377, -1.1920928244535389e-07, -0.002407073974609375, -0.21892547607421875, -0.30008792877197266, -0.0001659393310546875, -0.0001888275146484375, -1.063497543334961, -6.4849853515625e-05, -0.036714792251586914, -9.48860906646587e-05, -0.05141258239746094, -9.5367431640625e-05, -0.0005321502685546875, -1.9073486328125e-05, -0.0012254714965820312, -1.9073486328125e-06, -0.0031681060791015625, -7.62939453125e-06, -0.02008819580078125, 0.0, -0.012422561645507812, -7.62939453125e-06, -0.007900595664978027, -0.0020679335575550795, -0.09260952472686768, -0.001759002567268908, -0.02268659695982933, -0.00026953217457048595, -0.0002231597900390625, -0.005156517028808594, -0.0001964569091796875, -0.0013065338134765625, -0.05365180969238281, -1.9073486328125e-06, -0.015101825818419456, -0.019115688279271126, -0.0026760101318359375, 0.0, -0.07482907176017761, -0.03050483576953411, -0.5209217071533203, -0.03313255310058594, -0.0014858245849609375, -0.0013275146484375, -0.0003337860107421875, -0.16104698181152344, -0.03349494934082031, -0.02483367919921875, -0.001628875732421875, -0.0003147125244140625, -0.0031185150146484375, -7.62939453125e-06, -0.08926522731781006, -0.0002586507180240005, -0.2560920715332031, -5.7220458984375e-05, -0.0004329681396484375, -1.1444091796875e-05, -0.0032033920288085938, -1.9073486328125e-06, -0.0052394866943359375, -1.9073486328125e-06, -0.02033710479736328, 0.0, -0.016762733459472656, -7.62939453125e-06, -0.012331247329711914, -0.0015520949382334948, -0.09971807897090912, -0.002256408566609025, -0.017101405188441277, -0.00027084347675554454, -0.00020599365234375, -0.006348609924316406, -0.0001926422119140625, -0.001430511474609375, -0.05994224548339844, -1.9073486328125e-06, -0.01890309900045395, -0.019894709810614586, -0.001583099365234375, 0.0, -0.07339754700660706, -0.030449865385890007, -0.45583057403564453, -0.03088092803955078, -0.00171661376953125, -0.0013484954833984375, -0.0003337860107421875, -0.17963790893554688, -0.051575660705566406, -0.02646160125732422, -0.001689910888671875, -0.0003604888916015625, -0.0028324127197265625, -7.62939453125e-06, -0.09501636028289795, -0.0002441108226776123, -0.26921653747558594, -4.9591064453125e-05, -0.0004673004150390625, -1.1444091796875e-05, -0.0033998489379882812, -1.9073486328125e-06, -0.006058692932128906, -1.9073486328125e-06, -0.019800186157226562, 0.0, -0.016260147094726562, -7.62939453125e-06, -0.01240241527557373, -0.0015931575326249003, -0.0994747206568718, -0.002274035010486841, -0.01708650402724743, -0.00026893612812273204, -0.0002079010009765625, -0.0063934326171875, -0.00019073486328125, -0.001445770263671875, -0.05968189239501953, -1.9073486328125e-06, -0.01929243467748165, -0.019805539399385452, -0.0015468597412109375, 0.0, -0.0719456598162651, -0.03033696673810482, -0.4525270462036133, -0.030745506286621094, -0.0045719146728515625], "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n\n\n        class BlessingOfKings(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Blessing of Kings', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False, target_func=\n                    hearthbreaker.targeting.find_minion_spell_target)\n\n            def use(self, player, game):\n                target.increase_health(4)\n                self.target.taunt = True\n        super().use(player, game)\n        option = game.current_player.agent.choose_option([Blessing(),\n            Blessing()], player)\n        target = self.target\n        option = game.current_player.agent.choose_option([Blessing(),\n            Blessing()], player)\n        target = self.target\n        option = game.current_player.agent.choose_option([Blessing(),\n            Blessing()], player)\n"}, {"choice_history": [139, 193, 314], "score": -21.251821517944336, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.52587890625e-05, -1.9073486328125e-06, -21.25180435180664], "inferred_code": ""}], "index": 10}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -0.1190235205413046, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015484809875488281, -0.0829923152923584, -9.918209980241954e-05, -1.9073486328125e-06, -0.00179290771484375, -0.00022125244140625], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 111, 156], "score": -2.6888798066192976, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015484809875488281, -2.638669729232788, -1.9669532775878906e-05, -1.9073486328125e-06, -0.015513420104980469, -0.000759124755859375], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -5.6245122121599636, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -5.406898498535156, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -7.903565710876137e-05, -1.1920928244535389e-07, -0.006894291378557682, -0.00011467641161289066, -0.08786392211914062, -0.00138092041015625, -5.14984130859375e-05, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.000213623046875, -0.0001850128173828125, -5.340576171875e-05, -9.72747802734375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.33514404296875e-05, -1.71661376953125e-05, -0.015460014343261719, -0.0909888744354248, -0.00010859963367693126, -1.9073486328125e-06, -0.0018978118896484375, -0.0001926422119140625], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "increase_health", "<EOS>", 302, 111, 156], "score": -5.840119320961094, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -5.689583778381348, -0.0999678373336792, -2.348422094655689e-05, -9.5367431640625e-06, -0.028670310974121094, -0.0034332275390625], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.increase_health(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 111, 156], "score": -6.06896896964281, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015484809875488281, -5.887038230895996, -0.00012087746290490031, -0.00011444091796875, -0.14753341674804688, -0.0002460479736328125], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "deathrattle", "<EOS>", "append", "<EOS>", 302, 111, 156], "score": -6.138206443349418, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Attribute", "attr": "deathrattle", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.452713966369629, -2.09808349609375e-05, -0.0073757171630859375, -1.3714090585708618, -0.0001202770508825779, -0.06318414956331253, -3.2186455882765586e-06, -7.62939453125e-06, -0.22345638275146484, -0.001483917236328125], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.deathrattle.append(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_temp_attack", "<EOS>", 302, 111, 156], "score": -6.198973018746983, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015484809875488281, -6.1624274253845215, -4.172325134277344e-06, -7.62939453125e-06, -0.0024557113647460938, -0.0001621246337890625], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -6.427566571661373, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -6.316766262054443, -0.0010149871231988072, -0.0035266876220703125, -0.001346588134765625, -0.0001468658447265625, -0.0001239776611328125, -1.9073486328125e-06, -1.0132789611816406e-05, 0.0, -0.0001544952392578125, -0.0004367828369140625, -3.24249267578125e-05, -0.0001277923583984375, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.1444091796875e-05, -1.71661376953125e-05, -0.00951385498046875, -0.08278727531433105, -0.00012290476297494024, -1.9073486328125e-06, -0.0017986297607421875, -0.0002613067626953125], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -6.438912644534867, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOf"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -6.322323799133301, -0.000102996826171875, -0.000743865966796875, -3.814697265625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -9.179115295410156e-05, -0.0007197982049547136, -1.52587890625e-05, -1.71661376953125e-05, -9.5367431640625e-05, 0.0, -2.47955322265625e-05, -0.0009975433349609375, -5.7220458984375e-06, -0.001316070556640625, -3.814697265625e-06, -5.91278076171875e-05, -1.811964830267243e-05, -0.00022398306464310735, -9.953604603651911e-05, -0.00016665445582475513, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002193450927734375, -1.9073486328125e-06, -0.0002536773681640625, -1.9073486328125e-06, -0.0008585163741372526, -2.5510591513011605e-05, -0.0025329142808914185, -6.163088255561888e-05, -0.0049152374267578125, -0.00052642822265625, -0.000141143798828125, -7.62939453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002765655517578125, -0.00045013427734375, -3.4332275390625e-05, -7.62939453125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015161514282226562, -0.08266329765319824, -9.918209980241954e-05, -1.9073486328125e-06, -0.0017948150634765625, -0.0002193450927734375], "inferred_code": "class BlessingOf(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 111, 156], "score": -7.036938431772789, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.452713966369629, -2.09808349609375e-05, -0.0073757171630859375, -2.249229907989502, -0.0003883084573317319, -0.30408525466918945, -1.1920928244535389e-07, -8.7738037109375e-05, -0.004063606262207031, -0.00054168701171875], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.hero.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "change_attack", "<EOS>", "append", "<EOS>", 302, 111, 156], "score": -7.093779701748616, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.452713966369629, -2.09808349609375e-05, -0.0073757171630859375, -1.9773842096328735, -1.6927657270571217e-05, -0.5627594590187073, -2.3841855067985307e-07, -3.814697265625e-06, -0.07362937927246094, -0.0014438629150390625], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack.append(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -7.2222822495514265, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015484809875488281, -2.638669729232788, -1.9669532775878906e-05, -1.9073486328125e-06, -4.54466438293457, -0.0050106048583984375], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "player", "<EOS>", "change_temp_attack", "<EOS>", 302, 111, 156], "score": -7.65606935687174, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "player", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -4.452713966369629, -2.09808349609375e-05, -0.0073757171630859375, -0.9925652742385864, -1.7165990357170813e-05, -2.171834945678711, 0.0, -0.0013484954833984375, -0.011151313781738281, -0.0006103515625], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.player.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 95, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 111, 156], "score": -8.23497978746672, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "BlessingOfMight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -7.114960670471191, -2.86102294921875e-05, -5.91278076171875e-05, -1.5377907402580604e-05, -0.00022672793420497328, -0.00013661154662258923, -0.0002499818510841578, -9.274479089071974e-05, -0.000923871819395572, -0.000698089599609375, -0.7120599746704102, -0.0042095184326171875, -0.0001926422119140625, -1.52587890625e-05, -0.0002880096435546875, -1.71661376953125e-05, -5.7220458984375e-06, -6.4373016357421875e-06, -1.1920928244535389e-07, -2.288818359375e-05, -0.00011444091796875, -0.0019073486328125, -4.57763671875e-05, 0.0, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.05941200256347656, -0.3104206323623657, -1.7404556274414062e-05, -3.814697265625e-06, -0.02207660675048828, -0.0008525848388671875], "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"choice_history": [139, 193, 314], "score": -24.18486976623535, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -24.184852600097656], "inferred_code": ""}], "index": 11}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -0.023926644788843987, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -0.010408401489257812, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -2.491474151611328e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.0020151138305664062, -9.5367431640625e-06, -0.000217437744140625, -1.33514404296875e-05, -0.00025337893748655915, -1.9073486328125e-06, -5.245107240625657e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -4.645553367447974, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -4.628863334655762, -6.103515625e-05, -0.0008716583251953125, -7.43865966796875e-05, -1.728534698486328e-05, -7.82012939453125e-05, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.004282951354980469, -1.1444091796875e-05, -0.00019073486328125, -1.1444091796875e-05, -0.0002819770888891071, -1.9073486328125e-06, -5.23318667546846e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.23799297630103, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 2}], "name": "create_minion"}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.034298896789551, -1.9073486328125e-06, -0.0050678253173828125, -3.4332275390625e-05, -1.9073486328125e-06, -1.549708758830093e-05, -2.0623201635316946e-05, -2.706014311115723e-05, -2.4795530407573096e-05, -0.000690460205078125, -0.0001163482666015625, -0.014192581176757812, -0.09360218048095703, -5.53131103515625e-05, -3.373578147147782e-05, -6.0796710386057384e-06, -0.3834962844848633, -0.0003833770751953125, -0.0005779266357421875, -5.340576171875e-05, -6.472870882134885e-05, -6.985420623095706e-05, -9.64367063716054e-05, 0.0, -0.7031302452087402, -7.62939453125e-06, -0.0007381439208984375, -4.1961669921875e-05], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -6.6333042783981, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -0.010408401489257812, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -2.491474151611328e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -6.6108293533325195, -3.814697265625e-06, -5.91278076171875e-05, -2.09808349609375e-05, -0.0009641157812438905, -2.1457672119140625e-06, -6.127250526333228e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 111, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -7.514013578917911, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -7.488525390625, -0.0002880096435546875, -0.013378143310546875, -1.9073486328125e-05, -5.14984130859375e-05, -9.5367431640625e-06, -2.8848648071289062e-05, -4.00543212890625e-05, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.001247406005859375, -9.5367431640625e-06, -0.00022125244140625, -1.1444091796875e-05, -0.00019439127936493605, -1.9073486328125e-06, -5.066301309852861e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -7.5875896032184755, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.034298896789551, -1.9073486328125e-06, -0.0050678253173828125, -3.4332275390625e-05, -1.9073486328125e-06, -1.549708758830093e-05, -2.0623201635316946e-05, -2.706014311115723e-05, -2.4795530407573096e-05, -0.000690460205078125, -0.0001163482666015625, -0.014192581176757812, -2.5318689346313477, -7.62939453125e-06, -2.7655463782139122e-05, -2.7060508728027344e-05, -1.883503864519298e-05, -1.9073486328125e-06, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 100, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -8.06855986845676, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template25"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -8.052413940429688, -0.0001239776611328125, -0.0001773834228515625, -4.1961669921875e-05, -2.491474151611328e-05, -5.340576171875e-05, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.0043487548828125, -1.1444091796875e-05, -0.0001850128173828125, -1.33514404296875e-05, -0.0003457205602899194, -1.9073486328125e-06, -5.388151839724742e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "2", "<EOS>", 156], "score": -8.338117328627959, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -0.010408401489257812, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -2.491474151611328e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.0020151138305664062, -9.5367431640625e-06, -0.000217437744140625, -1.33514404296875e-05, -8.314399719238281, -1.9073486328125e-06, -9.297991346102208e-05, -1.9073486328125e-06, -3.814697265625e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 100, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -8.538961608920545, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template25"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -7.898909568786621, -0.0008068084716796875, -3.814697265625e-06, -8.809211431071162e-05, -2.2411331883631647e-05, -0.00010716341057559475, -0.0001043081283569336, -0.0056324005126953125, -0.000926971435546875, -0.2106304168701172, -0.00034332275390625, -1.1444091796875e-05, -0.40848827362060547, -1.52587890625e-05, -4.982948303222656e-05, -3.62396240234375e-05, -3.24249267578125e-05, 0.0, -1.33514404296875e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.004193305969238281, -1.71661376953125e-05, -0.000225067138671875, -1.1444091796875e-05, -0.00047479767818003893, -1.9073486328125e-06, -5.388151839724742e-05, 0.0, -3.814697265625e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "<UNK>", "<EOS>", 108, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -8.81019381810529, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen <UNK>"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -8.786421775817871, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -0.010408401489257812, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -2.491474151611328e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.0020151138305664062, -9.5367431640625e-06, -0.000217437744140625, -1.33514404296875e-05, -0.00025337893748655915, -1.9073486328125e-06, -5.245107240625657e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen <UNK>', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -8.897518212753312, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -0.010408401489257812, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -2.491474151611328e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -8.875347137451172, -2.0265579223632812e-06, -0.000560760498046875, -7.62939453125e-06, -0.0001927266566781327, -2.1457672119140625e-06, -4.041140709887259e-05, 0.0, -3.814697265625e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.HUNTER)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 100, 119, 310, 135, 154, 205, "3", "<EOS>", "2", "<EOS>", 156], "score": -9.233942225827377, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template25"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -7.898909568786621, -0.0008068084716796875, -3.814697265625e-06, -8.809211431071162e-05, -2.2411331883631647e-05, -0.00010716341057559475, -0.0001043081283569336, -0.0056324005126953125, -0.000926971435546875, -0.2106304168701172, -0.00034332275390625, -1.1444091796875e-05, -1.1082687377929688, -0.000141143798828125, -2.47955322265625e-05, -0.00010798603761941195, -2.300739288330078e-05, -4.8874953790800646e-05, -7.62939453125e-06, -1.9073486328125e-06], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 23, 189, 304, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 92, 79, 171, 58, 303, 93, 213, "Target", "<EOS>", 79, 171, 49, 304, 79, 171, 25, 194, "Not", "<EOS>", 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 93, 213, "Enemy", "Player", "<EOS>", 93, 213, "User", "Picker", "<EOS>", 110, 156], "score": -9.396379701738624, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template60"}}, {"args": [{"_type": "Template16", "hole0": "Target"}, {"args": [{"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "func": {"_type": "Name", "id": "Not"}}, {"_type": "Template16", "hole0": "EnemyPlayer"}, {"_type": "Template16", "hole0": "UserPicker"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 3, "hole1": 2}], "name": "create_minion"}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.034298896789551, -1.9073486328125e-06, -0.0050678253173828125, -3.4332275390625e-05, -1.9073486328125e-06, -1.549708758830093e-05, -2.0623201635316946e-05, -2.706014311115723e-05, -2.4795530407573096e-05, -0.000690460205078125, -0.0001163482666015625, -0.014192581176757812, -0.09360218048095703, -5.53131103515625e-05, -3.373578147147782e-05, -6.0796710386057384e-06, -0.3834962844848633, -0.0003833770751953125, -0.0005779266357421875, -5.340576171875e-05, -6.472870882134885e-05, -6.985420623095706e-05, -9.64367063716054e-05, 0.0, -0.7956805229187012, 0.0, -0.0004711151123046875, -2.09808349609375e-05, -0.0038890838623046875, -1.52587890625e-05, -7.62939453125e-06, -0.0002288818359375, -0.003856658935546875, -0.0024776458740234375, -1.1444091796875e-05, -0.014110205695033073, -3.814697265625e-06, -0.4152841567993164, -0.00103759765625, -5.7220458984375e-06, -0.008051872253417969, -0.002994537353515625, -0.25237274169921875, -3.814697265625e-06, -1.1548175811767578, -0.09281134605407715, -0.022258758544921875, -3.814697265625e-06, -0.0008831024169921875, -0.24072742462158203, -0.016204833984375, -5.7220458984375e-06, -0.0077056884765625, 0.0, -0.38179492950439453, -0.00046575069427490234, -0.000125885009765625, -0.11146354675292969, -3.4332275390625e-05, -0.0873861312866211, -0.0001659393310546875, -0.0049991607666015625, 0.0, -5.7220458984375e-06, 0.0, -8.0108642578125e-05, -1.33514404296875e-05, -0.013016819953918457, -7.748603820800781e-06, -0.0009860992431640625, -9.5367431640625e-06, -0.04118797183036804, -0.00033450123737566173, -1.9073486328125e-06, -0.0022983551025390625, 0.0, -0.17184463143348694, -0.0029686889611184597, -1.33514404296875e-05, -0.007022857666015625, -0.0001354217529296875], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Target(), MinionSelector(Not(IsType(MINION_TYPE.BEAST)),\n            EnemyPlayer(), UserPicker()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "3", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 23, 189, 304, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 92, 79, 171, 58, 303, 93, 213, "Raptor", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -10.322367587930785, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template60"}}, {"args": [{"_type": "Template16", "hole0": "Raptor"}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 3, "hole1": 2}], "name": "create_minion"}], "name": "BloodfenRaptor"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.034298896789551, -1.9073486328125e-06, -0.0050678253173828125, -3.4332275390625e-05, -1.9073486328125e-06, -1.549708758830093e-05, -2.0623201635316946e-05, -2.706014311115723e-05, -2.4795530407573096e-05, -0.000690460205078125, -0.0001163482666015625, -0.014192581176757812, -0.09360218048095703, -5.53131103515625e-05, -3.373578147147782e-05, -6.0796710386057384e-06, -1.5270347595214844, -0.000301361083984375, -0.0042171478271484375, -0.00130462646484375, -0.0001354217529296875, -2.288818359375e-05, -0.026660561561584473, -1.9073486328125e-06, -0.002422332763671875, -0.25546741485595703, -0.000118255615234375, -0.0006109967944212258, -1.1205629562027752e-05, -7.54576685721986e-05, 0.0, -0.13099122047424316, -1.9073486328125e-06, -0.0006561279296875, -1.52587890625e-05, -0.023550033569335938, -1.33514404296875e-05, -7.62939453125e-06, -0.0002193450927734375, -0.00921630859375, -0.0017986297607421875, -1.1444091796875e-05, -0.009202713146805763, -3.814697265625e-06, -0.2614316940307617, -0.00247955322265625, -9.5367431640625e-06, -0.02281475067138672, -0.005245208740234375, -0.2717914581298828, -1.9073486328125e-06, -1.2422384023666382, -0.13423635065555573, -0.4651460647583008, 0.0, -0.7646570205688477, -0.0035104751586914062, -4.172325134277344e-06, -0.0053234100341796875, -7.2479248046875e-05], "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, p):\n        return Minion(3, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(Raptor(), MinionSelector())])\n"}, {"choice_history": [139, 193, 314], "score": -24.58466911315918, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -24.58461570739746], "inferred_code": ""}], "index": 12}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 111, 156], "score": -0.08631765653807832, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -0.02761077880859375, 0.0, -3.62396240234375e-05, -9.34600830078125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0009059906005859375, -0.004201531410217285, -7.62939453125e-06, -7.62939453125e-06, -0.009572982788085938, -9.5367431640625e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 108, 156], "score": -4.966019270917961, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -0.02761077880859375, 0.0, -3.62396240234375e-05, -9.34600830078125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0009059906005859375, -0.004201531410217285, -7.62939453125e-06, -7.62939453125e-06, -4.8892822265625, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 111, 156], "score": -6.235861742030124, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -6.12620735168457, -0.017393076792359352, -8.344646857949556e-07, -0.012076377868652344, -0.032390594482421875, 0.0, -3.0517578125e-05, -5.340576171875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0008182525634765625, -0.004160881042480469, -7.62939453125e-06, -7.62939453125e-06, -0.00962066650390625, -7.62939453125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 101, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 111, 156], "score": -6.2661517828146245, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -6.160113334655762, -0.02364349365234375, -3.814697265625e-06, -4.1961669921875e-05, -0.0003362885909155011, -9.655952453613281e-06, -0.00020599365234375, -0.0015802383422851562, -0.000507354736328125, -0.011318206787109375, -1.9073486328125e-05, -0.0006618499755859375, -0.009334564208984375, -0.0001049041748046875, -0.004772186279296875, -0.00029682915192097425, -1.1920928244535389e-07, -0.006313323974609375, -0.02653026580810547, 0.0, -3.4332275390625e-05, -7.2479248046875e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.00084686279296875, -0.004315018653869629, -7.62939453125e-06, -7.62939453125e-06, -0.010082244873046875, -7.62939453125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 115, 156], "score": -6.350746748945305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -0.02761077880859375, 0.0, -3.62396240234375e-05, -9.34600830078125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0009059906005859375, -0.004201531410217285, -7.62939453125e-06, -7.62939453125e-06, -6.272703170776367, -0.001308441162109375], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 156, 156], "score": -8.76354610836097, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Template37_stmt_seq"}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -8.734892845153809, -0.014072418212890625], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 17, 164, 52, "health", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "game", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "<UNK>", "<EOS>", 302, 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 156], "score": -9.090798010543828, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "<UNK>"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template54"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -0.3710489273071289, -1.9073486328125e-06, -0.05218982696533203, -0.09680330753326416, -1.0728830375228426e-06, -0.00048828125, -0.5267171859741211, -1.52587890625e-05, -0.0046710968017578125, -0.11624526977539062, -0.0030269622802734375, -0.00208282470703125, -9.5367431640625e-05, -0.11031627655029297, -0.0005207061767578125, -0.09519684314727783, -0.00011050283501390368, -0.3249683380126953, -0.07023811340332031, -4.76837158203125e-05, -1.33514404296875e-05, -0.9751014709472656, -2.47955322265625e-05, -0.4288768768310547, -9.5367431640625e-06, -0.16206121444702148, -2.2649765014648438e-06, -0.0002155303955078125, -0.28174877166748047, -0.00060272216796875, -0.8381029367446899, -3.814697265625e-06, -0.03842353820800781, -4.76837158203125e-05, -2.86102294921875e-05, -0.00182342529296875, -0.0037021636962890625, -3.24249267578125e-05, -0.058422088623046875, -3.814697265625e-06, -0.05989980697631836, -3.7312303902581334e-05, -0.22449088096618652, -3.933906555175781e-06, -0.000652313232421875, -0.4171333312988281, -0.00081634521484375, -0.0010585784912109375, 0.0, -0.0038720369338989258, -5.483625955093885e-06, -4.57763671875e-05, -0.001628875732421875, -0.000293731689453125, -0.002033233642578125, -0.0008367264526896179, -4.410743713378906e-06, -2.288818359375e-05], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.health > 0:\n                <UNK> = game.random_choice(game)\n                <UNK>.<UNK>(len(player.minions))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 17, 164, 52, "health", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Damage", "<EOS>", 93, 213, "Damage", "<UNK>", "<EOS>", 110, 114, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -11.157550509485525, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Damage"}, {"_type": "Template16", "hole0": "Damage<UNK>"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template54"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -0.3710489273071289, -1.9073486328125e-06, -0.05218982696533203, -0.09680330753326416, -1.0728830375228426e-06, -0.00048828125, -0.5267171859741211, -1.52587890625e-05, -0.0046710968017578125, -0.11624526977539062, -0.0030269622802734375, -0.00208282470703125, -9.5367431640625e-05, -0.11031627655029297, -0.0005207061767578125, -0.09519684314727783, -0.00011050283501390368, -0.3249683380126953, -0.07023811340332031, -4.76837158203125e-05, -1.33514404296875e-05, -0.5201396942138672, -3.24249267578125e-05, -0.005261421203613281, -0.030461657792329788, -0.0004572868347167969, -0.15767395496368408, -1.1682510375976562e-05, -0.000446319580078125, -1.1652898788452148, -0.025635719299316406, -0.01168060302734375, -0.06329727172851562, -7.62939453125e-06, -1.0041180849075317, -0.08852238953113556, -0.020612716674804688, -1.9073486328125e-06, -0.46685680747032166, -0.29956573247909546, -0.005400991067290306, -0.04538536071777344, -0.016592979431152344, -0.000644683837890625, -9.5367431640625e-06, -8.0108642578125e-05, -0.0014781951904296875, -6.103515625e-05, 0.0, -0.43844032287597656, -1.9073486328125e-06, -0.001468658447265625, -0.7233378887176514, -2.21728696487844e-05, -0.028424732387065887, -9.5367431640625e-06, -1.71661376953125e-05, -0.4473695755004883, -3.814697265625e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.health > 0:\n                <UNK> = player.agent.choose_option([Damage(), Damage<UNK>()\n                    ], player)\n                player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 17, 164, 52, "health", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Damage", "<EOS>", 93, 213, "Damage", "<UNK>", "<EOS>", 110, 114, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 111, 156], "score": -11.77120178512029, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Damage"}, {"_type": "Template16", "hole0": "Damage<UNK>"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template54"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -0.3710489273071289, -1.9073486328125e-06, -0.05218982696533203, -0.09680330753326416, -1.0728830375228426e-06, -0.00048828125, -0.5267171859741211, -1.52587890625e-05, -0.0046710968017578125, -0.11624526977539062, -0.0030269622802734375, -0.00208282470703125, -9.5367431640625e-05, -0.11031627655029297, -0.0005207061767578125, -0.09519684314727783, -0.00011050283501390368, -0.3249683380126953, -0.07023811340332031, -4.76837158203125e-05, -1.33514404296875e-05, -0.5201396942138672, -3.24249267578125e-05, -0.005261421203613281, -0.030461657792329788, -0.0004572868347167969, -0.15767395496368408, -1.1682510375976562e-05, -0.000446319580078125, -1.1652898788452148, -0.025635719299316406, -0.01168060302734375, -0.06329727172851562, -7.62939453125e-06, -1.0041180849075317, -0.08852238953113556, -0.020612716674804688, -1.9073486328125e-06, -0.46685680747032166, -0.29956573247909546, -0.005400991067290306, -0.04538536071777344, -0.016592979431152344, -0.000644683837890625, -9.5367431640625e-06, -8.0108642578125e-05, -0.0014781951904296875, -6.103515625e-05, 0.0, -0.43844032287597656, -1.9073486328125e-06, -0.001468658447265625, -0.7233378887176514, -2.21728696487844e-05, -0.028424732387065887, -9.5367431640625e-06, -1.71661376953125e-05, -1.061018943786621, -5.7220458984375e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if minion.health > 0:\n                <UNK> = player.agent.choose_option([Damage(), Damage<UNK>()\n                    ], player)\n                player.hero.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 68, 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -11.813534360933708, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Template72"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Name", "id": "<UNK>"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -1.2535018920898438, -6.866455078125e-05, -0.000659942626953125, -9.5367431640625e-06, -0.0004600286192726344, -2.384185791015625e-06, -0.00032806396484375, -0.005550384521484375, -0.0001125335693359375, -0.04198169708251953, -0.0008647440117783844, -3.576278118089249e-07, -0.0001697540283203125, -0.5335483551025391, -8.7738037109375e-05, -0.0001506805419921875, -0.18958377838134766, -0.0009860992431640625, -9.918212890625e-05, -1.1444091796875e-05, -0.0030679702758789062, -0.000335693359375, -0.48146533966064453, -5.721941124647856e-05, -0.11328792572021484, -0.07930374145507812, -3.4332275390625e-05, -1.9073486328125e-05, -0.42084598541259766, -3.814697265625e-05, -0.00365447998046875, -0.02974294126033783, -0.0003775358200073242, -0.136025071144104, -1.3589859008789062e-05, -0.000396728515625, -0.6295051574707031, -7.62939453125e-06, -0.04928779602050781, -0.44469690322875977, -5.7220458984375e-06, -0.0027256011962890625, -0.0001926422119140625, -0.000484466552734375, -2.47955322265625e-05, -0.0013427734375, -0.0006313323974609375, -0.0006961822509765625, -0.032834529876708984, -3.2305710192304105e-05, -0.03861236572265625, -1.6156635284423828, -1.9073486328125e-06, -1.9073486328125e-05, -0.0047607421875, -0.0011882781982421875, -6.29425048828125e-05, -0.026174545288085938, -1.9073486328125e-06, -0.34383952617645264, -1.4781926438445225e-05, -0.8531464338302612, -3.814697265625e-06, -0.0009784698486328125, -0.6558122634887695, -1.33514404296875e-05], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if len(player.minions) > 0:\n                <UNK> = player.agent.choose_option(player.game, lambda x: True)\n                <UNK>.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 68, 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "<UNK>", "<EOS>", 302, 121, 156], "score": -11.86398432831804, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Template72"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "<UNK>"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -1.2535018920898438, -6.866455078125e-05, -0.000659942626953125, -9.5367431640625e-06, -0.0004600286192726344, -2.384185791015625e-06, -0.00032806396484375, -0.005550384521484375, -0.0001125335693359375, -0.04198169708251953, -0.0008647440117783844, -3.576278118089249e-07, -0.0001697540283203125, -0.5335483551025391, -8.7738037109375e-05, -0.0001506805419921875, -0.18958377838134766, -0.0009860992431640625, -9.918212890625e-05, -1.1444091796875e-05, -0.0030679702758789062, -0.000335693359375, -0.48146533966064453, -5.721941124647856e-05, -0.11328792572021484, -0.07930374145507812, -3.4332275390625e-05, -1.9073486328125e-05, -0.42084598541259766, -3.814697265625e-05, -0.00365447998046875, -0.02974294126033783, -0.0003775358200073242, -0.136025071144104, -1.3589859008789062e-05, -0.000396728515625, -0.6295051574707031, -7.62939453125e-06, -0.04928779602050781, -0.44469690322875977, -5.7220458984375e-06, -0.0027256011962890625, -0.0001926422119140625, -0.000484466552734375, -2.47955322265625e-05, -0.0013427734375, -0.0006313323974609375, -0.0006961822509765625, -0.032834529876708984, -3.2305710192304105e-05, -0.03861236572265625, -1.6156635284423828, -1.9073486328125e-06, -1.9073486328125e-05, -0.0047607421875, -0.0011882781982421875, -6.29425048828125e-05, -0.026174545288085938, -1.9073486328125e-06, -0.34383952617645264, -1.4781926438445225e-05, -1.2837613821029663, -1.1920928244535389e-07, -0.009035110473632812, -0.2675924301147461, -1.52587890625e-05], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if len(player.minions) > 0:\n                <UNK> = player.agent.choose_option(player.game, lambda x: True)\n                <UNK>.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 68, 149, 177, 52, 17, 164, 52, "deathrattle", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 111, 156], "score": -11.946493369176025, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Template72"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "deathrattle", "value": {"_type": "Template54"}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -1.2535018920898438, -6.866455078125e-05, -0.000659942626953125, -9.5367431640625e-06, -0.0004600286192726344, -2.384185791015625e-06, -0.00032806396484375, -0.005550384521484375, -0.0001125335693359375, -0.04198169708251953, -0.0008647440117783844, -3.576278118089249e-07, -0.0001697540283203125, -0.5335483551025391, -8.7738037109375e-05, -0.0001506805419921875, -0.18958377838134766, -0.0009860992431640625, -9.918212890625e-05, -1.1444091796875e-05, -0.0030679702758789062, -0.000335693359375, -0.48146533966064453, -5.721941124647856e-05, -0.11328792572021484, -0.07930374145507812, -3.4332275390625e-05, -1.9073486328125e-05, -0.42084598541259766, -3.814697265625e-05, -0.00365447998046875, -0.02974294126033783, -0.0003775358200073242, -0.136025071144104, -1.3589859008789062e-05, -0.000396728515625, -0.6295051574707031, -7.62939453125e-06, -0.04928779602050781, -0.44469690322875977, -5.7220458984375e-06, -0.0027256011962890625, -0.0001926422119140625, -0.000484466552734375, -2.47955322265625e-05, -0.0013427734375, -0.0006313323974609375, -0.0006961822509765625, -0.032834529876708984, -3.2305710192304105e-05, -0.03861236572265625, -1.9616432189941406, -0.0031185150146484375, -0.2181711196899414, -0.10252761840820312, -5.7220458984375e-06, -0.46593475341796875, -0.5477341413497925, -1.1920928244535389e-07, -0.03196907043457031, -0.0015048980712890625, 0.0, -9.5367431640625e-06, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.10013389587402344, -0.19163978099822998, -3.814697265625e-05, -3.814697265625e-06, -0.010133743286132812, -1.9073486328125e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if len(player.minions) > 0:\n                <UNK> = player.agent.choose_option(player.game, lambda x: True)\n                for minion in minion.deathrattle:\n                    minion.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 68, 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "change_temp_attack", "<EOS>", 302, 111, 156], "score": -12.06199226956408, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Template72"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Name", "id": "<UNK>"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -1.2535018920898438, -6.866455078125e-05, -0.000659942626953125, -9.5367431640625e-06, -0.0004600286192726344, -2.384185791015625e-06, -0.00032806396484375, -0.005550384521484375, -0.0001125335693359375, -0.04198169708251953, -0.0008647440117783844, -3.576278118089249e-07, -0.0001697540283203125, -0.5335483551025391, -8.7738037109375e-05, -0.0001506805419921875, -0.18958377838134766, -0.0009860992431640625, -9.918212890625e-05, -1.1444091796875e-05, -0.0030679702758789062, -0.000335693359375, -0.48146533966064453, -5.721941124647856e-05, -0.11328792572021484, -0.07930374145507812, -3.4332275390625e-05, -1.9073486328125e-05, -0.42084598541259766, -3.814697265625e-05, -0.00365447998046875, -0.02974294126033783, -0.0003775358200073242, -0.136025071144104, -1.3589859008789062e-05, -0.000396728515625, -0.6295051574707031, -7.62939453125e-06, -0.04928779602050781, -0.44469690322875977, -5.7220458984375e-06, -0.0027256011962890625, -0.0001926422119140625, -0.000484466552734375, -2.47955322265625e-05, -0.0013427734375, -0.0006313323974609375, -0.0006961822509765625, -0.032834529876708984, -3.2305710192304105e-05, -0.03861236572265625, -1.6156635284423828, -1.9073486328125e-06, -1.9073486328125e-05, -0.0047607421875, -0.0011882781982421875, -6.29425048828125e-05, -0.026174545288085938, -1.9073486328125e-06, -0.34383952617645264, -1.4781926438445225e-05, -0.8531464338302612, -3.814697265625e-06, -0.0009784698486328125, -0.9042778015136719, -5.7220458984375e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if len(player.minions) > 0:\n                <UNK> = player.agent.choose_option(player.game, lambda x: True)\n                <UNK>.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 151, 181, 21, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 9, 302, 122, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 17, 164, 43, "agent", "<EOS>", "choose_option", "<EOS>", 303, 82, 189, 304, 93, 213, "Damage", "<EOS>", 93, 213, "Damage", "<UNK>", "<EOS>", 110, 114, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -12.068532215025634, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "List", "elts": [{"_type": "Template16", "hole0": "Damage"}, {"_type": "Template16", "hole0": "Damage<UNK>"}, {"_type": "Template39_expr_seq"}]}, {"_type": "Template43"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "choose_option", "value": {"_type": "Attribute", "attr": "agent", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Bloodlust"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -3.7667064666748047, -0.00091552734375, -0.0001277923583984375, -0.0023403167724609375, -1.2535018920898438, -6.866455078125e-05, -0.000659942626953125, -9.5367431640625e-06, -0.0004600286192726344, -2.384185791015625e-06, -0.00032806396484375, -0.005550384521484375, -0.0001125335693359375, -0.04198169708251953, -0.0008647440117783844, -3.576278118089249e-07, -0.0001697540283203125, -0.5335483551025391, -8.7738037109375e-05, -0.0001506805419921875, -0.18958377838134766, -0.0009860992431640625, -9.918212890625e-05, -1.1444091796875e-05, -0.0030679702758789062, -0.000335693359375, -0.48146533966064453, -5.721941124647856e-05, -0.11328792572021484, -0.07930374145507812, -3.4332275390625e-05, -1.9073486328125e-05, -0.42084598541259766, -3.814697265625e-05, -0.00365447998046875, -0.02974294126033783, -0.0003775358200073242, -0.136025071144104, -1.3589859008789062e-05, -0.000396728515625, -1.0373992919921875, -0.02575397491455078, -0.012628555297851562, -0.04038810729980469, -5.7220458984375e-06, -1.1050304174423218, -0.07378492504358292, -0.020917892456054688, -1.9073486328125e-06, -0.5558755397796631, -0.3865004777908325, -0.0052738552913069725, -0.04535102844238281, -0.015508651733398438, -0.0009098052978515625, -9.5367431640625e-06, -7.43865966796875e-05, -0.002399444580078125, -5.53131103515625e-05, 0.0, -0.392333984375, 0.0, -0.001308441162109375, -0.7282037734985352, -2.2530493879457936e-05, -0.03116868995130062, -7.62939453125e-06, -1.52587890625e-05, -0.47682666778564453, -3.814697265625e-06], "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            if len(player.minions) > 0:\n                <UNK> = player.agent.choose_option([Damage(), Damage<UNK>()\n                    ], player)\n                player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 314], "score": -22.146398544311523, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -22.146377563476562], "inferred_code": ""}], "index": 13}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -0.054263772459535176, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -0.036197662353515625, -6.67572021484375e-05, -3.528594970703125e-05, -9.655922440288123e-06, -6.6756979322235566e-06, -2.0265558760002023e-06, -0.004160709213465452, -1.9073486328125e-06, -6.103515625e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Charge", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -4.6236449950929455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Charge"}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -3.341367721557617, -7.2479248046875e-05, -2.86102294921875e-05, -0.0003528594970703125, -0.0019779205322265625, -0.0013637542724609375, -0.000377655029296875, -0.009729385375976562, -3.814697265625e-05, -0.0004024505615234375, -1.9073486328125e-06, -0.054772257804870605, -5.9604562920867465e-06, -0.0003509521484375, -0.0002155303955078125, 0.0, -0.4282442331314087, -1.33514404296875e-05, -0.0026187896728515625, -0.000110626220703125, -0.00873565673828125, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002193450927734375, -0.006511688232421875, -0.083221435546875, 0.0, -0.10459821671247482, -9.655952453613281e-06, -0.0048389434814453125, -9.5367431640625e-06, -0.0050106048583984375, -0.5405731201171875, -0.000396728515625, -5.7220458984375e-06, -0.0006923675537109375, -9.5367431640625e-06, -0.0002231597900390625, 0.0, -3.814697265625e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.009103536605834961, -1.9073486328125e-06, -4.1961669921875e-05, -5.7220458984375e-06, -0.0035207271575927734, -4.1961662645917386e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, auras=[Aura(Charge(),\n            MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "charge", "<EOS>", 68, 156], "score": -4.882770056431582, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -3.341367721557617, -7.2479248046875e-05, -2.86102294921875e-05, -0.0003528594970703125, -0.0019779205322265625, -0.0013637542724609375, -0.000377655029296875, -0.009729385375976562, -3.814697265625e-05, -0.0004024505615234375, -1.9073486328125e-06, -0.054772257804870605, -5.9604562920867465e-06, -0.0003509521484375, -0.0002155303955078125, 0.0, -1.4577995538711548, -2.4914739697123878e-05, -0.0001201629638671875, -4.57763671875e-05], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Charge", "<EOS>", 79, 171, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 110, 156], "score": -4.981138514883241, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Charge"}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -3.341367721557617, -7.2479248046875e-05, -2.86102294921875e-05, -0.0003528594970703125, -0.0019779205322265625, -0.0013637542724609375, -0.000377655029296875, -0.009729385375976562, -3.814697265625e-05, -0.0004024505615234375, -1.9073486328125e-06, -0.054772257804870605, -5.9604562920867465e-06, -0.0003509521484375, -0.0002155303955078125, 0.0, -0.4282442331314087, -1.33514404296875e-05, -0.0026187896728515625, -0.000110626220703125, -0.00873565673828125, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002193450927734375, -0.006511688232421875, -0.083221435546875, 0.0, -0.10459821671247482, -9.655952453613281e-06, -0.0048389434814453125, -9.5367431640625e-06, -0.0050106048583984375, -0.8801202774047852, -0.00986480712890625, -1.9073486328125e-06, -0.00018310546875, -4.38690185546875e-05, -0.0004119873046875, 0.0, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.02136385440826416, -1.9073486328125e-06, -0.0001621246337890625, -3.814697265625e-06], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, auras=[Aura(Charge(),\n            MinionSelector(IsType(MINION_TYPE.MURLOC)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -5.4283841797828245, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -5.42448616027832, -0.00235748291015625, -9.1552734375e-05, -3.2067298889160156e-05, -1.0132738680113107e-05, -1.5497193999181036e-06, 0.0, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -6.14146541695208, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -6.128283500671387, -1.1444091796875e-05, -0.0022879804018884897, -1.1920928244535389e-07, -8.821442861517426e-06, 0.0, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "divine_shield", "<EOS>", 68, 156], "score": -6.279716486637881, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "divine_shield", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -3.341367721557617, -7.2479248046875e-05, -2.86102294921875e-05, -0.0003528594970703125, -0.0019779205322265625, -0.0013637542724609375, -0.000377655029296875, -0.009729385375976562, -3.814697265625e-05, -0.0004024505615234375, -1.9073486328125e-06, -0.054772257804870605, -5.9604562920867465e-06, -0.0003509521484375, -0.0002155303955078125, 0.0, -2.8548073768615723, -1.5020368664409034e-05, -9.918212890625e-05, -1.52587890625e-05], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.362606132885162, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -6.337459087371826, 0.0, -0.0019989013671875, -3.814697265625e-06, -1.919269561767578e-05, -1.1444046322139911e-05, -2.47955322265625e-05, -4.00543212890625e-05, -0.012296676635742188, -4.38690185546875e-05, -4.088878631591797e-05, -1.0013547580456361e-05, -6.9141146923357155e-06, -1.5497195136049413e-06, -0.004408329725265503, -1.9073486328125e-06, -5.14984130859375e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "divine_shield", "<EOS>", 68, 156], "score": -6.8370617577040775, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "divine_shield", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -0.036197662353515625, -6.67572021484375e-05, -3.528594970703125e-05, -9.655922440288123e-06, -6.6756979322235566e-06, -2.0265558760002023e-06, -6.786975860595703, -1.33514404296875e-05, -3.0517578125e-05, -1.9073486328125e-06], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.171876725756647, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.127188205718994, -5.7220458984375e-06, -0.0001392364501953125, -3.814697265625e-06, -1.3709068298339844e-05, -1.1920878932869527e-05, -3.0517578125e-05, -5.53131103515625e-05, -0.034046173095703125, -5.340576171875e-05, -3.707408905029297e-05, -9.655922440288123e-06, -6.6756979322235566e-06, -1.9073468138230965e-06, -0.004028978291898966, -1.9073486328125e-06, -5.53131103515625e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "6", "<EOS>", 92, 110, 156], "score": -7.4863669821688745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 6}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -3.341367721557617, -7.2479248046875e-05, -2.86102294921875e-05, -0.0003528594970703125, -0.0019779205322265625, -0.0013637542724609375, -0.000377655029296875, -0.009729385375976562, -3.814697265625e-05, -0.0004024505615234375, -1.9073486328125e-06, -0.054772257804870605, -5.9604562920867465e-06, -0.0003509521484375, -0.0002155303955078125, 0.0, -0.4282442331314087, -1.33514404296875e-05, -0.0026187896728515625, -0.000110626220703125, -0.00873565673828125, -3.62396240234375e-05, -1.9073486328125e-06, -0.0002193450927734375, -0.006511688232421875, -2.6692543029785156, -5.7220458984375e-06, -0.8567162752151489, -4.0531158447265625e-06, -0.07231330871582031, -0.016740798950195312, -6.103515625e-05], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True, auras=[Aura(ChangeAttack(6),\n            SelfSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "minion_type", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.99119002184716, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -7.908417224884033, 0.0, -0.012508392333984375, -1.9073486328125e-06, -9.655952453613281e-06, -9.059865078597795e-06, -3.814697265625e-05, -5.7220458984375e-05, -0.059329986572265625, -6.866455078125e-05, -5.626678466796875e-05, -1.2874543244834058e-05, -7.271740287251305e-06, -2.50339189733495e-06, -0.0044130790047347546, -1.9073486328125e-06, -6.866455078125e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.minion_type)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "User", "<EOS>", 68, 156], "score": -8.419187421461402, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "User", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -0.036197662353515625, -6.67572021484375e-05, -3.528594970703125e-05, -9.655922440288123e-06, -6.6756979322235566e-06, -2.0265558760002023e-06, -8.36760425567627, -4.38690185546875e-05, -0.0014972686767578125, -1.9073486328125e-06], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, User=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "auras", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -8.522744512610757, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "auras", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 1}], "name": "create_minion"}], "name": "BluegillWarrior"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -8.479120254516602, 0.0, -0.0015735626220703125, -3.814697265625e-06, -1.919269561767578e-05, -1.4781869140279014e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.030750274658203125, -4.00543212890625e-05, -5.817413330078125e-05, -1.1682462172757369e-05, -7.510157047363464e-06, -1.5497195136049413e-06, -0.0048267655074596405, -1.9073486328125e-06, -4.76837158203125e-05, 0.0], "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.auras)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n"}, {"choice_history": [139, 193, 314], "score": -24.434797286987305, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -24.434743881225586], "inferred_code": ""}], "index": 14}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -0.08101211614938819, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -0.024721145629882812, -5.340576171875e-05, -9.5367431640625e-06, -0.00022125244140625, -0.0001964569091796875, -0.00011456012725830078, -9.179115295410156e-05, -0.0018558502197265625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0011444091796875, -1.9073486328125e-06, -0.000415802001953125, -7.62939453125e-05, -0.0008518565446138382, 0.0, -5.131566467753146e-06, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 158, 283, "1", "<EOS>", "1", "<EOS>", 156], "score": -3.2923943234377404, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Template9", "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -3.034712791442871, -0.0001621246337890625, -0.010578155517578125, -0.00022125244140625, -1.1444091796875e-05, -2.8609820219571702e-05, -2.145764938177308e-06, -0.026782989501953125, -0.0018768310546875, -0.0007915496826171875, -0.00421142578125, -0.0012760162353515625, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002593994140625, 0.0, -0.004776120185852051, -1.3828277587890625e-05, -0.1918182373046875, -2.6702880859375e-05, -0.0011157989501953125, -9.417532055522315e-06, -0.0016002655029296875, -0.000209808349609375, -0.001079559326171875, -0.0003681182861328125, -0.000152587890625, -0.000110626220703125, -0.0005563497543334961, -3.814697265625e-06, -0.00457763671875, -0.0022430419921875, -0.000274658203125, -0.00037603441160172224, -0.000277872895821929, -0.0006860530702397227, -5.578994387178682e-05, -5.7220458984375e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 97, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -3.864282346757129, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template20"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -3.72189998626709, -0.0026798248291015625, -3.814697265625e-06, -5.91278076171875e-05, -0.0001068115234375, -7.390975952148438e-05, -5.733966827392578e-05, -0.08532428741455078, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.00121307373046875, -1.9073486328125e-06, -0.00049591064453125, -7.2479248046875e-05, -0.0010326877236366272, 0.0, -8.469517524645198e-06, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -4.858048964725853, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -3.034712791442871, -0.0001621246337890625, -0.010578155517578125, -0.00022125244140625, -1.1444091796875e-05, -2.8609820219571702e-05, -2.145764938177308e-06, -0.026782989501953125, -0.0018768310546875, -0.0007915496826171875, -0.00421142578125, -0.0012760162353515625, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002593994140625, 0.0, -0.004776120185852051, -1.3828277587890625e-05, -1.7707252502441406, -0.0002117156982421875, -0.00026182952569797635, -1.1920928244535389e-07, -1.9152391814714065e-06, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 97, 119, 310, 138, 291, "minion_type", "<EOS>", 36, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.291583332560542, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template20"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -3.72189998626709, -0.0026798248291015625, -3.814697265625e-06, -5.91278076171875e-05, -0.0001068115234375, -7.390975952148438e-05, -5.733966827392578e-05, -2.5143327713012695, -0.000675201416015625, -6.4849853515625e-05, -0.00036765693221241236, -2.384185791015625e-06, -1.230216003023088e-05, -4.172325134277344e-06, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 36, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.438939712919357, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -0.024721145629882812, -5.340576171875e-05, -9.5367431640625e-06, -0.00022125244140625, -0.0001964569091796875, -0.00011456012725830078, -9.179115295410156e-05, -6.361181259155273, -0.0008068084716796875, -8.20159912109375e-05, -0.00019978173077106476, -2.861022494471399e-06, -1.160483225248754e-05, -4.0531158447265625e-06, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Boar", "<EOS>", 122, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 158, 283, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.929384806997852, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Template9", "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -3.034712791442871, -0.0001621246337890625, -0.010578155517578125, -0.00022125244140625, -1.1444091796875e-05, -2.8609820219571702e-05, -2.145764938177308e-06, -3.657258987426758, -0.000568389892578125, -0.0003814697265625, -0.0030364990234375, -0.000946044921875, -8.96453857421875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.0001926422119140625, 0.0, -0.005353093147277832, -1.5616416931152344e-05, -0.20095252990722656, -3.4332275390625e-05, -0.0009899139404296875, -6.914137884450611e-06, -0.00164031982421875, -0.000217437744140625, -0.001129150390625, -0.000385284423828125, -0.000171661376953125, -0.00011444091796875, -0.0005294084548950195, -3.814697265625e-06, -0.004375457763671875, -0.002239227294921875, -0.0002727508544921875, -0.00039235976873897016, -0.0002900334366131574, -0.0009086775244213641, -5.9247013268759474e-05, -3.814697265625e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "1", "<EOS>", 156], "score": -7.213287358734128, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -0.024721145629882812, -5.340576171875e-05, -9.5367431640625e-06, -0.00022125244140625, -0.0001964569091796875, -0.00011456012725830078, -9.179115295410156e-05, -0.0018558502197265625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0011444091796875, -1.9073486328125e-06, -0.000415802001953125, -7.62939453125e-05, -7.133120059967041, -5.960462772236497e-07, -1.1574682503123768e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.818436999779799, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -3.034712791442871, -0.0001621246337890625, -4.75865364074707, -6.103515625e-05, -7.62939453125e-06, -5.245195097813848e-06, -8.22540732769994e-06, -0.0004901885986328125, -1.71661376953125e-05, -0.0061511993408203125, -5.53131103515625e-05, -0.016077041625976562, -0.0008544921875, -1.1443992661952507e-05, -6.961593317100778e-05, -1.457519829273224e-07, -1.1563271073100623e-05, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.821664771588971, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -0.024721145629882812, -5.340576171875e-05, -9.5367431640625e-06, -0.00022125244140625, -0.0001964569091796875, -0.00011456012725830078, -9.179115295410156e-05, -0.0018558502197265625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -7.73825740814209, -1.9073486328125e-06, -0.0001468658447265625, -2.86102294921875e-05, -0.0046952590346336365, -1.1920928244535389e-07, -1.788621739251539e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Boar", "<EOS>", 122, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -8.44937338308658, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -3.034712791442871, -0.0001621246337890625, -0.010578155517578125, -0.00022125244140625, -1.1444091796875e-05, -2.8609820219571702e-05, -2.145764938177308e-06, -3.657258987426758, -0.000568389892578125, -0.0003814697265625, -0.0030364990234375, -0.000946044921875, -8.96453857421875e-05, -1.9073486328125e-06, -2.09808349609375e-05, -0.0001926422119140625, 0.0, -0.005353093147277832, -1.5616416931152344e-05, -1.7341785430908203, -0.000232696533203125, -0.00029028981225565076, -1.1920928244535389e-07, -1.7965387542062672e-06, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 99, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -8.756737667054033, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -8.693227767944336, -0.000278472900390625, -2.6702880859375e-05, -0.0001354217529296875, -0.0002727508544921875, -0.0001087188720703125, -8.034706115722656e-05, -0.008507728576660156, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0013179779052734375, -1.9073486328125e-06, -0.0004520416259765625, -7.43865966796875e-05, -0.000994281843304634, 0.0, -6.444313839892857e-06, 0.0, -1.9073486328125e-06], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 310, 135, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -9.21149982489441, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -0.024721145629882812, -5.340576171875e-05, -9.5367431640625e-06, -9.134746551513672, -0.0004177093505859375, -0.000270843505859375, -5.483597306010779e-06, -2.467606282152701e-05, -4.979665391147137e-07, -8.70227722771233e-06, 0.0], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 154, 205, "1", "<EOS>", "1", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -10.641178850305998, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"_type": "Template0", "hole0": 1, "hole1": 1}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "Boar"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -10.23175048828125, -0.003757476806640625, -0.00016547436825931072, -0.00022802266175858676, -8.82242511579534e-06, -2.002696055569686e-05, -0.4022483825683594, -0.0016689300537109375, -9.428018529433757e-05, -0.00042739638593047857, -6.676320936094271e-06, -4.5298667828319594e-05, -0.0002231597900390625], "inferred_code": "class Boar(MinionCard):\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 314], "score": -23.059547424316406, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -23.059484481811523], "inferred_code": ""}], "index": 15}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "<EOS>", 156], "score": -0.37868209025327815, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -0.19891774654388428, -4.0411949157714844e-05, -3.4332275390625e-05, -0.0011386871337890625, -0.0002288818359375, -0.0008754730224609375, -4.76837158203125e-05, -0.00447845458984375, -0.0032291412353515625, -0.02412710338830948, -0.005719758104532957, -0.0001068115234375], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 108, 156], "score": -2.704091905434325, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -1.9188522100448608, -9.5367431640625e-06, -7.62939453125e-06, -0.6454677581787109, -1.71661376953125e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -3.4061363924338366, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -1.9188522100448608, -9.5367431640625e-06, -7.62939453125e-06, -1.3473119735717773, -0.000217437744140625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 156], "score": -3.5021480312500373, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -2.9787731170654297, -0.000202178955078125, -5.7220458984375e-06, -1.6808508007670753e-05, -1.1920928244535389e-07, -3.814697265625e-05, -0.17623424530029297, -0.0015125274658203125, -0.000102996826171875, 0.0, -1.9073486328125e-06, -0.0001087188720703125, -7.62939453125e-06, -7.62939453125e-06, -0.009081840515136719, -0.318697452545166, -2.288818359375e-05, -5.7220458984375e-06, -0.009067535400390625, -0.0001373291015625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 111, 156], "score": -3.607518075783446, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -1.9188522100448608, -9.5367431640625e-06, -7.62939453125e-06, -1.548874855041504, -3.62396240234375e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 156], "score": -3.7344567764594103, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -3.547621011734009, -0.00014495849609375, -1.33514404296875e-05, -0.04691123962402344, -2.86102294921875e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.change_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "<EOS>", 156], "score": -4.019664189132527, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -3.6739070415496826, -9.071826934814453e-05, -2.288818359375e-05, -1.9073486328125e-06, -8.106231689453125e-06, -2.0265579223632812e-06, -0.0001277923583984375, -0.01079559326171875, -9.5367431640625e-05, -0.0011348724365234375, -3.814697265625e-06, -2.288818359375e-05, -9.5367431640625e-06, -1.52587890625e-05, -3.4332275390625e-05, -0.00014495849609375, -0.012860894203186035, -3.445148468017578e-05, -1.33514404296875e-05, -0.0048923492431640625, -9.34600830078125e-05, 0.0, -1.52587890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.00072479248046875, -0.2101372480392456, -4.0411949157714844e-05, -3.24249267578125e-05, -0.0011577606201171875, -0.000213623046875, -0.0008831024169921875, -4.76837158203125e-05, -0.0044841766357421875, -0.0032482147216796875, -0.024361468851566315, -0.005554839503020048, -0.0001068115234375], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "<EOS>", 156], "score": -5.063658756196894, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -2.9787731170654297, -0.000202178955078125, -5.7220458984375e-06, -1.6808508007670753e-05, -1.1920928244535389e-07, -3.814697265625e-05, -0.17623424530029297, -0.0015125274658203125, -0.000102996826171875, 0.0, -1.9073486328125e-06, -0.0001087188720703125, -7.62939453125e-06, -7.62939453125e-06, -0.009081840515136719, -1.838085651397705, -3.886222839355469e-05, -4.76837158203125e-05, -0.0002613067626953125, -0.000110626220703125, -0.0001544952392578125, -7.62939453125e-06, -0.010162353515625, -0.000896453857421875, -0.01801847293972969, -0.02157610096037388, -8.20159912109375e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "<EOS>", 156], "score": -5.402731020745705, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -5.021946907043457, -1.2040129149681889e-05, -3.814697265625e-05, -3.814697265625e-06, -1.3709068298339844e-05, -2.0265579223632812e-06, -0.000476837158203125, -0.052374839782714844, -0.0002803802490234375, -0.00102996826171875, -1.9073486328125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-05, -3.4332275390625e-05, -0.0001316070556640625, -0.014759540557861328, -3.24249267578125e-05, -1.33514404296875e-05, -0.0038166046142578125, -8.392333984375e-05, 0.0, -1.33514404296875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0007419586181640625, -0.20197105407714844, -4.0411949157714844e-05, -3.4332275390625e-05, -0.001125335693359375, -0.0002307891845703125, -0.0008831024169921875, -4.9591064453125e-05, -0.004817962646484375, -0.00348663330078125, -0.024289824068546295, -0.005485517904162407, -0.0001087188720703125], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -5.4464979146723635, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -0.19891774654388428, -4.0411949157714844e-05, -3.4332275390625e-05, -0.0011386871337890625, -0.0002288818359375, -0.0008754730224609375, -4.76837158203125e-05, -0.00447845458984375, -0.0032291412353515625, -5.097497463226318, -5.4596464906353503e-05, -0.000217437744140625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "Attack", "<EOS>", 156], "score": -5.578437185662551, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "<UNK>Attack"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -0.19891774654388428, -4.0411949157714844e-05, -3.4332275390625e-05, -0.0011386871337890625, -0.0002288818359375, -0.0008754730224609375, -4.76837158203125e-05, -0.00447845458984375, -0.0032291412353515625, -0.02412710338830948, -5.205440521240234, -3.8146954466355965e-06, -0.0001373291015625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>Attack()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "<EOS>", 156], "score": -5.579927188337244, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "<UNK>"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -2.9787731170654297, -0.000202178955078125, -5.7220458984375e-06, -1.6808508007670753e-05, -1.1920928244535389e-07, -3.814697265625e-05, -1.8329391479492188, -0.0001811981201171875, -0.01803874969482422, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0008678436279296875, -0.01734316349029541, -2.86102294921875e-05, -7.62939453125e-06, -0.002719879150390625, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.0065402984619140625, -0.681794285774231, -2.5153160095214844e-05, -4.9591064453125e-05, -0.000888824462890625, -0.0001544952392578125, -0.00060272216796875, -3.62396240234375e-05, -0.006175994873046875, -0.0016384124755859375, -0.013620631769299507, -0.008836235851049423, -8.20159912109375e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 108, 156], "score": -5.605156301513709, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -2.9787731170654297, -0.000202178955078125, -5.7220458984375e-06, -1.6808508007670753e-05, -1.1920928244535389e-07, -3.814697265625e-05, -0.17623424530029297, -0.0015125274658203125, -0.000102996826171875, 0.0, -1.9073486328125e-06, -0.0001087188720703125, -7.62939453125e-06, -7.62939453125e-06, -0.009081840515136719, -2.351797580718994, -1.9073486328125e-06, -1.1444091796875e-05, -0.07901191711425781, -0.0001163482666015625], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 108, 156], "score": -6.022253631607093, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Charge"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -2.9787731170654297, -0.000202178955078125, -5.7220458984375e-06, -1.6808508007670753e-05, -1.1920928244535389e-07, -3.814697265625e-05, -1.8329391479492188, -0.0001811981201171875, -0.01803874969482422, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -0.0008678436279296875, -0.01734316349029541, -2.86102294921875e-05, -7.62939453125e-06, -0.002719879150390625, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -3.0517578125e-05, -0.0065402984619140625, -0.7582789659500122, -5.7220458984375e-06, -7.62939453125e-06, -0.3979196548461914, -1.9073486328125e-05], "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n"}, {"choice_history": [139, 193, 314], "score": -22.796127319335938, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.52587890625e-05, -7.62939453125e-06, -22.796104431152344], "inferred_code": ""}], "index": 16}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -0.02389159396156515, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -0.0057315826416015625, -7.62939453125e-06, -1.3351391316973604e-05, -2.3841855067985307e-07, -7.867813110351562e-05, -4.768370445162873e-07, -3.814697265625e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -5.399132501027367, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -5.3093767166137695, 0.0, -0.0053691864013671875, -7.62939453125e-06, -3.62396240234375e-05, -5.006785613659304e-06, -2.503394352970645e-05, -2.2172722310642712e-05, -0.00011897087097167969, -0.0004253387451171875, -0.0010471343994140625, -0.0011920928955078125, -3.814697265625e-05, -0.004421234130859375, -3.814697265625e-06, -2.47955322265625e-05, -1.71661376953125e-05, -3.814697265625e-05, 0.0, 0.0, 0.0, -0.0002288818359375, -3.814697265625e-06, -0.07156085968017578, 0.0, -8.0108642578125e-05, -0.0005283355712890625, -0.00014780770288780332, -2.3841855067985307e-07, -0.00010645086877048016, -3.576278118089249e-07, -5.7220458984375e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 119, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -5.5139618177746, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -5.475276947021484, -4.9591064453125e-05, -1.33514404296875e-05, -1.1324866136419587e-05, -2.7537291316548362e-05, -9.65590606938349e-06, -0.0004943609237670898, -0.009000778198242188, -0.004116058349609375, -0.013031005859375, -0.002063751220703125, -0.0002803802490234375, -0.00012969970703125, -9.536734637549671e-07, -2.0265579223632812e-06, -0.00017309185932390392, -2.0265579223632812e-06, -5.7220458984375e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -6.103560634822173, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "<UNK>Yeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -6.083166122436523, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -0.0057315826416015625, -7.62939453125e-06, -1.3351391316973604e-05, -2.3841855067985307e-07, -7.867813110351562e-05, -4.768370445162873e-07, -3.814697265625e-06], "inferred_code": "class <UNK>Yeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 116, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -6.368804838098157, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -6.350028038024902, -4.00543212890625e-05, -1.71661376953125e-05, -0.0035037994384765625, -3.814697265625e-06, -2.3603301087860018e-05, -2.0265579223632812e-06, -5.0425507652107626e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Force", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -7.0629371700393335, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ForceYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -6.798409461975098, -0.24323680996894836, -5.364411117625423e-05, -5.7220458984375e-06, -4.76837158203125e-05, -1.33514404296875e-05, -9.34600830078125e-05, -5.7220458984375e-06, -7.736682891845703e-05, -1.5497195136049413e-06, -1.9073486328125e-06, -4.76837158203125e-05, -3.814697265625e-06, 0.0, 0.0, -0.00555419921875, 0.0, -0.006313323974609375, -7.62939453125e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2516897186287679e-05, -3.24249267578125e-05, -0.0021152496337890625, -0.00051116943359375, -0.0002613067626953125, -0.0059413909912109375, -7.62939453125e-06, -1.3589802620117553e-05, -2.1457672119140625e-06, -8.058547973632812e-05, -3.576278118089249e-07, -3.814697265625e-06], "inferred_code": "class ForceYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Thaddius", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 156], "score": -7.21721029276614, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "deathrattle", "_type": "Template6", "hole3": {"args": [{"args": [{"_type": "Template16", "hole0": "Thaddius"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template77"}}, "hole0": 4, "hole1": 5}], "name": "create_minion"}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -5.975279808044434, -1.33514404296875e-05, -8.82148651726311e-06, -2.5510509658488445e-05, -0.006504058837890625, -0.000476837158203125, -0.0009136199951171875, -0.00022125244140625, -0.0005633049877360463, -9.512448741588742e-05, -0.0004668217443395406, -3.3378591979271732e-06, -0.4108392000198364, -0.000164031982421875, -0.009514808654785156, -4.9591064453125e-05, -0.0001983642578125, -0.5425529479980469, -6.103515625e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.03513491153717041, -0.0002915858931373805, -0.0035686492919921875, -0.000438690185546875, 0.0, -0.15674196183681488, -0.0010565065313130617, -0.03703594207763672, -5.7220458984375e-06, -0.01616954803466797, -3.814697265625e-06, -3.814697265625e-06, -0.0007343292236328125], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "5", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.327825129709709, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 5}], "name": "create_minion"}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -5.975279808044434, -1.33514404296875e-05, -8.82148651726311e-06, -2.5510509658488445e-05, -0.006504058837890625, -0.000476837158203125, -0.0009136199951171875, -0.00022125244140625, -0.0005633049877360463, -9.512448741588742e-05, -0.0004668217443395406, -3.3378591979271732e-06, -1.324691891670227, -1.919269561767578e-05, -0.0004520416259765625, -3.4332275390625e-05], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "<UNK>", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -8.090926247276371, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "Chillwind<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -8.066725730895996, -1.7762184143066406e-05, -4.00543212890625e-05, -5.14984130859375e-05, -9.5367431640625e-06, -7.2479248046875e-05, -5.7220458984375e-06, -7.915496826171875e-05, -4.1723224057932384e-06, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, 0.0, 0.0, -0.0045223236083984375, 0.0, -0.0055999755859375, -9.5367431640625e-06, -1.33514404296875e-05, -4.768367489305092e-06, -2.5510766135994345e-05, -1.2516897186287679e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005035400390625, -0.000263214111328125, -0.007076263427734375, -7.62939453125e-06, -1.0609594028210267e-05, -2.3841855067985307e-07, -8.058547973632812e-05, -3.576278118089249e-07, -3.814697265625e-06], "inferred_code": "class Chillwind<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 120, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -8.11110940176507, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -8.089329719543457, -0.0001850128173828125, -0.0005817413330078125, -0.0058002471923828125, -5.7220458984375e-06, -7.510169780289289e-06, -1.1920928244535389e-07, -6.330013275146484e-05, -3.576278118089249e-07, -1.9073486328125e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "5", "<EOS>", "deathrattle", "<EOS>", 20, 171, 71, 304, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Thaddius", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 79, 171, 25, 194, "In", "Graveyard", "<EOS>", 302, 93, 213, "Stalagg", "<EOS>", 156], "score": -8.304202727443226, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "deathrattle", "_type": "Template6", "hole3": {"args": [{"args": [{"_type": "Template16", "hole0": "Thaddius"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}, {"args": [{"_type": "Template16", "hole0": "Stalagg"}], "_type": "Call", "func": {"_type": "Name", "id": "InGraveyard"}}], "_type": "Call", "func": {"_type": "Template77"}}, "hole0": 4, "hole1": 5}], "name": "create_minion"}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -5.975279808044434, -1.33514404296875e-05, -8.82148651726311e-06, -2.5510509658488445e-05, -0.006504058837890625, -0.000476837158203125, -0.0009136199951171875, -0.00022125244140625, -0.0005633049877360463, -9.512448741588742e-05, -0.0004668217443395406, -3.3378591979271732e-06, -0.4108392000198364, -0.000164031982421875, -0.009514808654785156, -4.9591064453125e-05, -0.0001983642578125, -0.8726749420166016, -7.2479248046875e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0018095970153808594, -0.0001233815710293129, -0.00494384765625, -0.0004444122314453125, -1.9073486328125e-06, -0.1616612672805786, -0.000787070719525218, -0.0001201629638671875, -5.7220458984375e-06, -0.024852991104125977, -5.7220458984375e-06, -1.9073486328125e-06, -0.0006999969482421875, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0067882537841796875, -0.0020139217376708984, -0.0003910064697265625, -0.009569168090820312, -0.000141143798828125, -5.7220458984375e-06, -0.7908119559288025, -0.0025200843811035156, -4.38690185546875e-05], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5, deathrattle=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Stalagg())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Force", "Tank", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -8.562093782996925, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ForceTank"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -6.798409461975098, -1.6978745460510254, -0.04354887083172798, -9.5367431640625e-06, -6.866455078125e-05, -7.62939453125e-06, -0.0001888275146484375, -5.7220458984375e-06, -6.878376007080078e-05, -1.4305104514278355e-06, -3.814697265625e-06, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.004451751708984375, 0.0, -0.007297515869140625, -7.62939453125e-06, -1.52587890625e-05, -4.887576324108522e-06, -2.5153141905320808e-05, -1.2755313036905136e-05, -3.0398367016459815e-05, -0.0020809173583984375, -0.0005340576171875, -0.0002593994140625, -0.0069904327392578125, -9.5367431640625e-06, -1.3947420484328177e-05, -2.3841855067985307e-07, -8.058547973632812e-05, -4.768370445162873e-07, -3.814697265625e-06], "inferred_code": "class ForceTank(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, 205, "4", "<EOS>", "5", "<EOS>", 156], "score": -8.728969834623449, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -8.210678100585938, -0.0017681121826171875, -3.62396240234375e-05, -5.483625955093885e-06, -2.98022641800344e-05, -1.0967194612021558e-05, -0.0001666545867919922, -0.0023899078369140625, -0.023174285888671875, -1.52587890625e-05, -0.01082611083984375, -0.10547256469726562, -4.1961669921875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.000766754150390625, -1.1444091796875e-05, -0.36406147480010986, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -8.177418203558773e-05, -1.1920928244535389e-07, -7.688980258535594e-05, -3.576278118089249e-07, -3.814697265625e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "4", "<EOS>", 156], "score": -9.468488838224374, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 4}], "name": "ChillwindYeti"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -0.0057315826416015625, -7.62939453125e-06, -1.3351391316973604e-05, -2.3841855067985307e-07, -9.444676399230957, 0.0, -3.814697265625e-06], "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 4)\n"}, {"choice_history": [139, 193, 314], "score": -25.03751564025879, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -25.03749656677246], "inferred_code": ""}], "index": 17}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 156], "score": -0.8613583161796825, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -0.37579333782196045, 0.0, -0.00012969970703125, -0.00319671630859375, -0.024262428283691406, -2.47955322265625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0006275177001953125, 0.0, -0.0020055770874023438, -0.0007884501828812063, -4.768360213347478e-06, -0.38565075397491455, -0.0002384185791015625, -4.38690185546875e-05, -0.0027408599853515625, 0.0], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -1.7284809663261669, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -0.37579333782196045, 0.0, -0.00012969970703125, -0.00319671630859375, -0.024262428283691406, -2.47955322265625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0006275177001953125, 0.0, -0.0020055770874023438, -0.0007884501828812063, -4.768360213347478e-06, -1.2527714967727661, 0.0, -0.0001010894775390625, -0.00292205810546875, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 156], "score": -1.8606473519154108, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -1.3267344236373901, -6.866455078125e-05, -5.340576171875e-05, -0.010448455810546875, -0.042278289794921875, -4.38690185546875e-05, -1.9073486328125e-06, -0.001491546630859375, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -0.0028181076049804688, -0.0006619690684601665, -5.364403477869928e-06, -0.40740740299224854, -0.000194549560546875, -4.00543212890625e-05, -0.0023555755615234375, 0.0], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.increase_armor(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -2.6521455361195123, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -1.3267344236373901, -6.866455078125e-05, -5.340576171875e-05, -0.010448455810546875, -0.042278289794921875, -4.38690185546875e-05, -1.9073486328125e-06, -0.001491546630859375, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -0.0028181076049804688, -0.0006619690684601665, -5.364403477869928e-06, -1.1988674402236938, 0.0, -9.5367431640625e-05, -0.0025310516357421875, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -4.513399512795893, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -3.6870129108428955, 0.0, -0.060250282287597656, -0.03191375732421875, -1.33514404296875e-05, -0.010873794555664062, -1.1444091796875e-05, -0.000469207763671875, -0.003917336463928223, -7.867813110351562e-06, -5.7220458984375e-06, -0.001285552978515625, -0.016387939453125, -0.009563446044921875, -7.82012939453125e-05, -3.814697265625e-06, -0.003498077392578125, -1.9073486328125e-06, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -0.0022611618041992188, -0.0004914996679872274, -9.298280929215252e-06, -0.6172792911529541, 0.0, -6.4849853515625e-05, -0.002178192138671875, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 156], "score": -4.751265914468256, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -3.6870129108428955, 0.0, -0.060250282287597656, -0.03191375732421875, -1.33514404296875e-05, -0.010873794555664062, -1.1444091796875e-05, -0.000469207763671875, -0.003917336463928223, -7.867813110351562e-06, -5.7220458984375e-06, -0.001285552978515625, -0.016387939453125, -0.009563446044921875, -7.82012939453125e-05, -3.814697265625e-06, -0.003498077392578125, -1.9073486328125e-06, -9.5367431640625e-06, -4.57763671875e-05, 0.0, -0.0022611618041992188, -0.0004914996679872274, -9.298280929215252e-06, -0.8557007312774658, -6.67572021484375e-05, -4.57763671875e-05, -0.0015773773193359375, 0.0], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.increase_armor(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 156], "score": -5.000182873534179, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -4.159246444702148, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.245207830739673e-06, -1.1682462172757369e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.00012969970703125, 0.0, 0.0, -9.34600830078125e-05, -0.0001049041748046875, -0.00189208984375, -3.814697265625e-06, -1.9073486328125e-06, -9.536738616588991e-07, -0.002212472027167678, -0.00066375732421875, -0.00902557373046875, -0.0034389495849609375, -1.9073486328125e-06, -4.38690185546875e-05, -0.00038516518543474376, -1.3709068298339844e-05, -1.52587890625e-05, -0.0019073486328125, -0.0005893707275390625, -0.006877899169921875, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002727508544921875, 0.0, -0.01681041717529297, -0.0006868839263916016, -2.622600959512056e-06, -0.3765690326690674, 0.0, -0.0001239776611328125, -0.00323486328125, -0.022040367126464844, -2.47955322265625e-05, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0006771087646484375, 0.0, -0.0019989013671875, -0.0007874965085648, -4.768360213347478e-06, -0.38667476177215576, -0.0002384185791015625, -4.38690185546875e-05, -0.0027370452880859375, 0.0], "inferred_code": "class Claw(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 156], "score": -5.143608195679342, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -4.3403167724609375, -0.007209014613181353, -6.43729799776338e-06, -0.3938446044921875, 0.0, -0.0002193450927734375, -0.00070953369140625, -0.0064907073974609375, -2.288818359375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000537872314453125, 0.0, -0.0026531219482421875, -0.0007226465968415141, -4.768360213347478e-06, -0.3393254280090332, -0.0002117156982421875, -4.76837158203125e-05, -0.00286865234375, 0.0], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 108, 156], "score": -5.363785894221671, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -0.37579333782196045, 0.0, -0.00012969970703125, -0.00319671630859375, -4.691621780395508, -0.00014495849609375, -0.028161048889160156, -0.037715911865234375, -4.57763671875e-05, -0.0063419342041015625, -0.012027144432067871, 0.0, -0.0005168914794921875, -0.00017547607421875, 0.0, -3.814697265625e-06, -2.288818359375e-05, -3.0517578125e-05, -7.62939453125e-06, -0.010539054870605469, -0.13046646118164062, -1.9073486328125e-06, -0.000301361083984375, -0.0007762908935546875, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 108, 156], "score": -5.698953540629752, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -1.3267344236373901, -6.866455078125e-05, -5.340576171875e-05, -0.010448455810546875, -4.068096160888672, -6.29425048828125e-05, -0.03949546813964844, -0.029535293579101562, -4.57763671875e-05, -0.0037479400634765625, -0.01599419116973877, 0.0, -0.0009059906005859375, -0.000194549560546875, 0.0, -3.814697265625e-06, -1.71661376953125e-05, -3.4332275390625e-05, -7.62939453125e-06, -0.009677886962890625, -0.1269674301147461, -1.9073486328125e-06, -0.00030517578125, -0.000789642333984375, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        for minion in player.minions:\n            minion.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -5.754679353472156, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -0.37579333782196045, 0.0, -0.00012969970703125, -0.00319671630859375, -0.024262428283691406, -2.47955322265625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0006275177001953125, 0.0, -0.0020055770874023438, -0.0007884501828812063, -4.768360213347478e-06, -5.119241714477539, -1.1920928244535389e-07, -0.08969306945800781, -0.04989910125732422, -4.38690185546875e-05, -0.006378173828125, -1.52587890625e-05, -0.0004329681396484375, -0.006101369857788086, -9.775161743164062e-06, -5.7220458984375e-06, -0.0022144317626953125, -0.007955551147460938, -3.814697265625e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -5.863816029356933, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -4.159246444702148, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.245207830739673e-06, -1.1682462172757369e-05, -2.86102294921875e-05, -1.1444091796875e-05, -0.00012969970703125, 0.0, 0.0, -9.34600830078125e-05, -0.0001049041748046875, -0.00189208984375, -3.814697265625e-06, -1.9073486328125e-06, -9.536738616588991e-07, -0.002212472027167678, -0.00066375732421875, -0.00902557373046875, -0.0034389495849609375, -1.9073486328125e-06, -4.38690185546875e-05, -0.00038516518543474376, -1.3709068298339844e-05, -1.52587890625e-05, -0.0019073486328125, -0.0005893707275390625, -0.006877899169921875, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002727508544921875, 0.0, -0.01681041717529297, -0.0006868839263916016, -2.622600959512056e-06, -0.3765690326690674, 0.0, -0.0001239776611328125, -0.00323486328125, -0.022040367126464844, -2.47955322265625e-05, -1.9073486328125e-06, -6.866455078125e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0006771087646484375, 0.0, -0.0019989013671875, -0.0007874965085648, -4.768360213347478e-06, -1.2503098249435425, 0.0, -0.0001010894775390625, -0.0029144287109375, -1.9073486328125e-06], "inferred_code": "class Claw(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 144, 163, 302, 76, 164, 43, "<UNK>", "<EOS>", 68, 156], "score": -6.089766056842215, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template43"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -0.37579333782196045, 0.0, -0.00012969970703125, -0.00319671630859375, -4.677952766418457, -6.4849853515625e-05, -5.7220458984375e-06, -0.008783340454101562, -1.9073486328125e-06, -0.032787322998046875, -0.7179098129272461, -4.839897155761719e-05, -0.20732688903808594, -1.9073486328125e-06], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.<UNK> = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 144, 163, 302, 76, 164, 43, "<UNK>", "<EOS>", 68, 156], "score": -6.327774794406302, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_armor", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template43"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "Claw"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -1.3267344236373901, -6.866455078125e-05, -5.340576171875e-05, -0.010448455810546875, -4.027593612670898, -7.62939453125e-06, -3.814697265625e-06, -0.0028743743896484375, -1.9073486328125e-06, -0.03227424621582031, -0.6888641119003296, -5.4001808166503906e-05, -0.1730327606201172, 0.0], "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.<UNK> = True\n"}, {"choice_history": [139, 193, 314], "score": -23.74823570251465, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, 0.0, -23.748231887817383], "inferred_code": ""}], "index": 18}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -0.2911182442885476, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -0.07228946685791016, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00046539306640625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063228607177734375, -0.000217437744140625, -0.026238184422254562, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.004459381103515625, -0.0008068084716796875, -0.0010433197021484375, -0.0028543472290039062, -0.0002918243408203125, -0.000507354736328125, -0.000827789306640625, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.0003147125244140625, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005359649658203125, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013561248779296875, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015475273132324219, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -3.2196217240971166, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -2.986543655395508, -0.00081634521484375, -1.9073486328125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0009851455688476562, -0.0025080442428588867, -1.9073486328125e-06, -0.00016021728515625, -0.012392997741699219, -0.00022125244140625, -0.0321853831410408, -3.814697265625e-05, -0.000141143798828125, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004482269287109375, -1.71661376953125e-05, -0.0001735687255859375, -0.0042724609375, -0.0008449554443359375, -0.001049041748046875, -0.0029697418212890625, -0.000286102294921875, -0.000499725341796875, -0.000713348388671875, -4.38690185546875e-05, -1.71661376953125e-05, -8.20159912109375e-05, -2.6702880859375e-05, -0.00032138824462890625, 0.0, -0.0014253854751586914, -1.33514404296875e-05, -0.0004825592041015625, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005388259887695312, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.00237274169921875, -0.001117706298828125, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013637542724609375, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015482902526855469, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(2)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -4.01868092885433, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -0.07228946685791016, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00046539306640625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063228607177734375, -0.000217437744140625, -3.7543766498565674, -0.0002595186233520508, -0.0001735687255859375, -6.103515625e-05, -2.288818359375e-05, -0.0006237030029296875, -1.9073486328125e-05, -0.0001220703125, -0.003932952880859375, -0.00112152099609375, -0.0008182525634765625, -0.0024118423461914062, -0.000247955322265625, -0.0005283355712890625, -0.0007038116455078125, -3.814697265625e-05, -1.71661376953125e-05, -8.7738037109375e-05, -2.86102294921875e-05, -0.00033664703369140625, 0.0, -0.001322627067565918, -1.33514404296875e-05, -0.000476837158203125, 0.0, -3.0517578125e-05, -3.24249267578125e-05, -0.0005712509155273438, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.0022735595703125, -0.0011262893676757812, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013713836669921875, -1.1920928244535389e-07, -0.0001373291015625, -0.000148773193359375, -1.9073486328125e-06, -0.0001125335693359375, -7.34326386009343e-05, -5.7220458984375e-06, -0.0001621246337890625, -0.0154876708984375, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -4.696380137121189, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -4.281777381896973, -3.814697265625e-05, -0.0054454803466796875, -3.159046173095703e-05, -0.0030698776245117188, -8.58306884765625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.001644134521484375, -0.0001316070556640625, -0.0004119873046875, -1.9073486328125e-06, -0.004014134407043457, -2.121924626408145e-05, -0.011658549308776855, -2.09808349609375e-05, -3.24249267578125e-05, -0.09953784942626953, -0.08523750305175781, -1.9073486328125e-06, -0.019012451171875, -1.52587890625e-05, -8.0108642578125e-05, -0.004055023193359375, -0.0009593963623046875, -0.0004520416259765625, -0.00162506103515625, -0.0005645751953125, -0.0004940032958984375, -0.0038890838623046875, -1.71661376953125e-05, -1.33514404296875e-05, -9.1552734375e-05, -2.86102294921875e-05, -0.000331878662109375, 0.0, -0.0013513565063476562, -1.1444091796875e-05, -0.0004425048828125, 0.0, -2.47955322265625e-05, -2.86102294921875e-05, -0.0005884170532226562, -7.62939453125e-06, -6.67572021484375e-05, -3.814697265625e-06, -0.0020751953125, -0.0010890960693359375, -5.7220458984375e-06, -1.52587890625e-05, -9.5367431640625e-06, 0.0, -0.0014238357543945312, -1.1920928244535389e-07, -0.0001373291015625, -0.000156402587890625, -1.9073486328125e-06, -0.00011444091796875, -7.283660670509562e-05, -5.7220458984375e-06, -0.0001697540283203125, -0.015596389770507812, -0.000148773193359375, -0.0001659393310546875, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minions)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.704278218464424, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -4.355379104614258, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -6.103515625e-05, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.0314178466796875, -5.7220458984375e-06, -0.0001735687255859375, -0.0001659393310546875, -1.9073486328125e-06, -4.0531076592742465e-06, -6.079673767089844e-06, -5.7220458984375e-06, -0.0164642333984375, -0.00054931640625, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002472400665283203, -5.9604644775390625e-06, -0.00101470947265625, -0.0039539337158203125, -0.000164031982421875, -0.05486106872558594, -6.866455078125e-05, -2.86102294921875e-05, -0.00179290771484375, -3.24249267578125e-05, -0.01515495777130127, -1.609325408935547e-05, -0.02945995330810547, -0.0001354217529296875, -0.0006628036499023438, -1.9073486328125e-05, -0.003814697265625, 0.0, -0.006795048713684082, -7.62939453125e-06, -0.0022726058959960938, -9.5367431640625e-06, -0.0001678466796875, -0.0004711151123046875, -5.91278076171875e-05, -7.62939453125e-05, -5.364358003134839e-05, -9.775161743164062e-06, -0.008905410766601562, -0.000247955322265625, -0.001079559326171875, -5.7220458984375e-06, -0.007872581481933594, -2.0265579223632812e-06, -0.0035800933837890625, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000576019287109375, -2.0265579223632812e-06, -0.0040435791015625, -0.0001811981201171875, -0.00146484375, -0.0009098052978515625, -0.0003757476806640625, -0.00019073486328125, -8.392333984375e-05, -0.00264739990234375, -0.0005474090576171875, -4.00543212890625e-05, -2.288818359375e-05, 0.0, -0.000732421875, 0.0, -0.007522702217102051, -3.814697265625e-06, -0.006688356399536133, -3.814697265625e-06, -0.0011882781982421875, -0.0054111480712890625, -1.71661376953125e-05, -0.0019445419311523438, -8.249282836914062e-05, -0.0004787445068359375, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0013980865478515625, -0.000125885009765625, -0.0003528594970703125, -3.814697265625e-06, -0.002363920211791992, -3.9696631574770436e-05, -0.009477019309997559, -2.86102294921875e-05, -2.09808349609375e-05, -0.07207298278808594, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.000469207763671875, -0.0015395879745483398, -1.9073486328125e-06, -0.0001697540283203125, -0.0063037872314453125, -0.0002193450927734375, -0.026280749589204788, -2.86102294921875e-05, -0.00012969970703125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 9, 302, 122, 156], "score": -4.839153865931614, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template55"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -0.07228946685791016, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00046539306640625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063228607177734375, -0.000217437744140625, -0.026238184422254562, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.004459381103515625, -0.0008068084716796875, -0.0010433197021484375, -0.0028543472290039062, -0.0002918243408203125, -0.000507354736328125, -0.000827789306640625, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.0003147125244140625, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005359649658203125, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013561248779296875, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -4.55959415435791, -8.7738037109375e-05, -0.004147529602050781, -1.1444091796875e-05], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) > 0\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -5.234507974711043, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -4.040910720825195, -9.5367431640625e-06, -0.0001220703125, -0.00030517578125, -0.00013363361358642578, -9.5367431640625e-06, -0.8210939168930054, -2.288818359375e-05, -1.52587890625e-05, -7.2479248046875e-05, 0.0, -0.0001239776611328125, -3.814697265625e-06, -4.9591064453125e-05, -0.010497093200683594, -8.58306884765625e-05, -0.10301685333251953, -5.340576171875e-05, -1.1444091796875e-05, -0.006999015808105469, -9.5367431640625e-06, -0.008385658264160156, -2.9087066650390625e-05, -0.00551605224609375, -3.24249267578125e-05, -8.7738037109375e-05, -3.814697265625e-06, -0.0010242462158203125, 0.0, -0.005533337593078613, -9.5367431640625e-06, -0.0008955001831054688, -1.1444091796875e-05, -0.000225067138671875, -0.0004329681396484375, -5.14984130859375e-05, -7.62939453125e-05, -5.567006519413553e-05, -9.775161743164062e-06, -0.010768890380859375, -0.0002384185791015625, -0.0016736984252929688, -5.7220458984375e-06, -0.005288243293762207, -2.0265579223632812e-06, -0.002079010009765625, -1.9073486328125e-06, -3.0517578125e-05, -3.814697265625e-06, -0.0003681182861328125, -2.0265579223632812e-06, -0.004039764404296875, -0.000171661376953125, -0.0013675689697265625, -0.0009479522705078125, -0.0003833770751953125, -0.000213623046875, -8.58306884765625e-05, -0.0026922225952148438, -0.000568389892578125, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008029937744140625, 0.0, -0.007169842720031738, -3.814697265625e-06, -0.0067751407623291016, -3.814697265625e-06, -0.001209259033203125, -0.005279541015625, -1.71661376953125e-05, -0.0019397735595703125, -8.249282836914062e-05, -0.0004978179931640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001407623291015625, -0.0001239776611328125, -0.0003490447998046875, -3.814697265625e-06, -0.002374410629272461, -3.93390073440969e-05, -0.009465575218200684, -2.86102294921875e-05, -2.09808349609375e-05, -0.07267093658447266, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0004673004150390625, -0.0015262365341186523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063533782958984375, -0.0002193450927734375, -0.026285706087946892, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.0044460296630859375, -0.0008087158203125, -0.0010433197021484375, -0.002857208251953125, -0.0002918243408203125, -0.0005092620849609375, -0.0008296966552734375, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.000316619873046875, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005340576171875, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013551712036132812, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015477180480957031, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -5.326761355897354, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -4.040910720825195, -9.5367431640625e-06, -0.0001220703125, -0.00030517578125, -0.00013363361358642578, -9.5367431640625e-06, -0.7174590826034546, -0.00023519969545304775, -4.38690185546875e-05, -0.000118255615234375, 0.0, -0.0003337860107421875, -1.9073486328125e-06, -3.62396240234375e-05, -0.0043792724609375, -0.0001277923583984375, -0.3059415817260742, -4.38690185546875e-05, -1.33514404296875e-05, -0.0048656463623046875, -7.62939453125e-06, -0.008974075317382812, -2.9206275939941406e-05, -0.006527900695800781, -3.24249267578125e-05, -8.58306884765625e-05, -5.7220458984375e-06, -0.0010395050048828125, 0.0, -0.005269169807434082, -9.5367431640625e-06, -0.0009098052978515625, -1.1444091796875e-05, -0.0002288818359375, -0.000431060791015625, -5.14984130859375e-05, -7.82012939453125e-05, -5.4716423619538546e-05, -9.775161743164062e-06, -0.010015487670898438, -0.000247955322265625, -0.00160980224609375, -5.7220458984375e-06, -0.005485653877258301, -2.0265579223632812e-06, -0.00209808349609375, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.000377655029296875, -2.0265579223632812e-06, -0.0040950775146484375, -0.000171661376953125, -0.0013675689697265625, -0.0009307861328125, -0.0003833770751953125, -0.0002193450927734375, -8.7738037109375e-05, -0.0026922225952148438, -0.000576019287109375, -4.38690185546875e-05, -2.09808349609375e-05, 0.0, -0.0008068084716796875, 0.0, -0.0070945024490356445, -3.814697265625e-06, -0.006787538528442383, -3.814697265625e-06, -0.00121307373046875, -0.00525665283203125, -1.71661376953125e-05, -0.0019388198852539062, -8.249282836914062e-05, -0.0004978179931640625, -7.82012939453125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0014057159423828125, -0.0001239776611328125, -0.000347137451171875, -3.814697265625e-06, -0.002370595932006836, -3.93390073440969e-05, -0.009459853172302246, -2.86102294921875e-05, -2.09808349609375e-05, -0.07259464263916016, -8.392333984375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0004673004150390625, -0.0015262365341186523, -1.9073486328125e-06, -0.0001697540283203125, -0.00635528564453125, -0.0002193450927734375, -0.02631043642759323, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.0044498443603515625, -0.0008087158203125, -0.0010433197021484375, -0.0028562545776367188, -0.0002918243408203125, -0.0005092620849609375, -0.0008296966552734375, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.000316619873046875, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005340576171875, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013551712036132812, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015477180480957031, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -5.400976043773873, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -5.1266279220581055, -0.0001125335693359375, -8.20159912109375e-05, -3.814697265625e-06, -0.000278472900390625, -2.0265579223632812e-06, -0.0009098052978515625, -0.0018377304077148438, -0.000152587890625, -0.00079345703125, -4.76837158203125e-05, -2.09808349609375e-05, -0.0011425018310546875, -2.288818359375e-05, -0.015773892402648926, -2.753734588623047e-05, -0.0151214599609375, -8.58306884765625e-05, -0.000244140625, -9.5367431640625e-06, -0.0008029937744140625, 0.0, -0.005584836006164551, -7.62939453125e-06, -0.00182342529296875, -9.5367431640625e-06, -0.0001983642578125, -0.0004062652587890625, -5.53131103515625e-05, -7.82012939453125e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.0057735443115234375, -0.0002651214599609375, -0.001071929931640625, -5.7220458984375e-06, -0.008191108703613281, -2.0265579223632812e-06, -0.004166603088378906, -5.7220458984375e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0007476806640625, -2.0265579223632812e-06, -0.0046291351318359375, -0.00016021728515625, -0.001743316650390625, -0.0009479522705078125, -0.0003643035888671875, -0.0001811981201171875, -8.58306884765625e-05, -0.0026140213012695312, -0.000576019287109375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008087158203125, 0.0, -0.0071593523025512695, -3.814697265625e-06, -0.006734132766723633, -3.814697265625e-06, -0.00121307373046875, -0.005283355712890625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0013866424560546875, -0.000125885009765625, -0.000354766845703125, -3.814697265625e-06, -0.002360105514526367, -3.957742592319846e-05, -0.009479880332946777, -2.86102294921875e-05, -2.09808349609375e-05, -0.07221031188964844, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.0004673004150390625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063190460205078125, -0.000217437744140625, -0.026265008375048637, -2.86102294921875e-05, -0.00012969970703125, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.004459381103515625, -0.0008068084716796875, -0.0010433197021484375, -0.0028543472290039062, -0.0002918243408203125, -0.000507354736328125, -0.000827789306640625, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.0003147125244140625, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005359649658203125, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013561248779296875, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015475273132324219, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.COMMON\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "<UNK>", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -5.894936945868487, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "<UNK>"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -5.58770227432251, -2.622604142743512e-06, -0.022835731506347656, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.004488945007324219, -1.9073486328125e-06, -0.0058135986328125, -0.0003032684326171875, -0.0017108917236328125, -0.000896453857421875, -0.000335693359375, -0.0001811981201171875, -9.34600830078125e-05, -0.002552032470703125, -0.0005550384521484375, -4.1961669921875e-05, -2.6702880859375e-05, 0.0, -0.0008783340454101562, 0.0, -0.008379101753234863, -3.814697265625e-06, -0.006507158279418945, -3.814697265625e-06, -0.0012359619140625, -0.005488395690917969, -1.71661376953125e-05, -0.0019435882568359375, -8.249282836914062e-05, -0.0004711151123046875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.00130462646484375, -0.0001239776611328125, -0.0003566741943359375, -3.814697265625e-06, -0.002344846725463867, -3.921979805454612e-05, -0.009279608726501465, -2.86102294921875e-05, -2.09808349609375e-05, -0.07226085662841797, -7.82012939453125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.000469207763671875, -0.0015375614166259766, -1.9073486328125e-06, -0.0001697540283203125, -0.0063648223876953125, -0.00022125244140625, -0.026345280930399895, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.0001926422119140625, -0.0044536590576171875, -0.0008068084716796875, -0.0010423660278320312, -0.0028514862060546875, -0.0002899169921875, -0.0005054473876953125, -0.0008258819580078125, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.0003147125244140625, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005359649658203125, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013561248779296875, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015476226806640625, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for <UNK> in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -6.176723966372258, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -4.568652629852295, -0.00011420224473113194, -0.5022602081298828, -0.000354766845703125, -5.14984130859375e-05, -1.9073486328125e-06, -0.8298931121826172, 0.0, -0.0145951509475708, -7.62939453125e-06, -0.0015517473220825195, -5.7220458984375e-06, -0.000213623046875, -0.000667572021484375, -4.57763671875e-05, -8.20159912109375e-05, -6.127267988631502e-05, -1.1682510375976562e-05, -0.004978179931640625, -0.00028228759765625, -0.0010967254638671875, -5.7220458984375e-06, -0.008374214172363281, -2.0265579223632812e-06, -0.004184722900390625, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0006465911865234375, -2.0265579223632812e-06, -0.004459381103515625, -0.0001621246337890625, -0.0015888214111328125, -0.00095367431640625, -0.0003662109375, -0.0001850128173828125, -8.96453857421875e-05, -0.00263214111328125, -0.0006103515625, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0009098052978515625, 0.0, -0.007069706916809082, -3.814697265625e-06, -0.0067293643951416016, -3.814697265625e-06, -0.0012302398681640625, -0.00519561767578125, -1.71661376953125e-05, -0.0019378662109375, -8.249282836914062e-05, -0.00048828125, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0013866424560546875, -0.000125885009765625, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -0.0722341537475586, -8.20159912109375e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, 0.0, -0.0004673004150390625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.006313323974609375, -0.000217437744140625, -0.02623666450381279, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.004459381103515625, -0.0008068084716796875, -0.0010433197021484375, -0.0028553009033203125, -0.0002918243408203125, -0.000507354736328125, -0.000827789306640625, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.0003147125244140625, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005359649658203125, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.002315521240234375, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013561248779296875, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015475273132324219, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -6.341889244093174, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -5.787100791931152, -0.000171661376953125, -0.009118080139160156, -0.0010914503363892436, -2.4199485778808594e-05, -0.0073528289794921875, -3.814697265625e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -1.52587890625e-05, -0.022687911987304688, 0.0, -0.011060833930969238, -1.0848044439626392e-05, -0.02358555793762207, -1.52587890625e-05, -1.9073486328125e-05, -0.28439998626708984, -0.000263214111328125, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0004978179931640625, -0.0013178586959838867, -1.9073486328125e-06, -0.00011444091796875, -0.0050716400146484375, -0.000152587890625, -0.026269925758242607, -2.47955322265625e-05, -0.0001659393310546875, -4.76837158203125e-05, -5.7220458984375e-06, -0.0004329681396484375, -2.09808349609375e-05, -0.00020599365234375, -0.004100799560546875, -0.000789642333984375, -0.0009975433349609375, -0.0027036666870117188, -0.0002956390380859375, -0.0004825592041015625, -0.0007781982421875, -4.1961669921875e-05, -1.71661376953125e-05, -8.20159912109375e-05, -2.6702880859375e-05, -0.0003032684326171875, 0.0, -0.0014102458953857422, -1.33514404296875e-05, -0.0004787445068359375, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.000545501708984375, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.002307891845703125, -0.0011005401611328125, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013637542724609375, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.0001621246337890625, -0.015470504760742188, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(game.other_player.minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.639469752714831, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -0.07228946685791016, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00046539306640625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063228607177734375, -0.000217437744140625, -0.026238184422254562, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -5.482330322265625, -0.0015869140625, -0.20725345611572266, -3.814697265625e-06, -3.814697265625e-06, -0.000156402587890625, -0.000125885009765625, -0.011486053466796875, -7.748603820800781e-06, -0.006268501281738281, -4.57763671875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000308990478515625, 0.0, -0.40247344970703125, -5.7220458984375e-06, -0.006352663040161133, -7.62939453125e-06, -4.9591064453125e-05, -0.009217262268066406, -0.0001430511474609375, -0.0002288818359375, -4.017334867967293e-05, -9.655952453613281e-06, -0.061280250549316406, -0.00019073486328125, -0.0012350082397460938, -9.5367431640625e-06, -0.03536224365234375, -1.9073486328125e-06, -0.0008649826049804688, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.007937431335449219, -2.0265579223632812e-06, -0.0021686553955078125, -0.000476837158203125, -0.0022335052490234375, -0.0005359649658203125, -0.00043487548828125, -0.000156402587890625, -7.05718994140625e-05, -0.0027723312377929688, -0.0003719329833984375, -2.86102294921875e-05, -2.09808349609375e-05, 0.0, -0.000579833984375, 0.0, -0.004983067512512207, -5.7220458984375e-06, -0.006622433662414551, -3.814697265625e-06, -0.00115966796875, -0.0050525665283203125, -1.71661376953125e-05, -0.0021829605102539062, -7.581710815429688e-05, -0.00051116943359375, -6.866455078125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0012302398681640625, -0.0001220703125, -0.000396728515625, -1.9073486328125e-06, -0.0024057626724243164, -3.707403448061086e-05, -0.00936591625213623, -2.6702880859375e-05, -2.09808349609375e-05, -0.069122314453125, -7.62939453125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0004940032958984375, -0.0015546083450317383, -1.9073486328125e-06, -0.0001697540283203125, -0.006378173828125, -0.00022125244140625, -0.026020914316177368, -2.86102294921875e-05, -0.0001316070556640625, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156], "score": -6.753792523672921, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}], "name": "use"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "GtE"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template36"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "can_use"}], "name": "Cleave"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -5.749288558959961, -7.62939453125e-06, -0.14704716205596924, 0.0, -0.0025997161865234375, -0.047873497009277344, -1.71661376953125e-05, -0.0013571977615356445, -5.066394078312442e-05, -0.2808561325073242, -2.6702880859375e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.001163482666015625, -0.00025177001953125, -0.0014247894287109375, -3.814697265625e-06, -0.009730696678161621, -2.121924626408145e-05, -0.018214702606201172, -1.52587890625e-05, -0.000152587890625, -0.27417469024658203, -0.0987081527709961, -3.814697265625e-06, -0.016628265380859375, -9.5367431640625e-06, -8.7738037109375e-05, -0.00279998779296875, -0.00083160400390625, -0.0005245208740234375, -0.0015621185302734375, -0.0004253387451171875, -0.0002384185791015625, -0.0029964447021484375, -1.52587890625e-05, -1.71661376953125e-05, -8.7738037109375e-05, -3.24249267578125e-05, -0.0003070831298828125, 0.0, -0.0014564990997314453, -1.1444091796875e-05, -0.0004787445068359375, 0.0, -2.47955322265625e-05, -3.0517578125e-05, -0.0005617141723632812, -9.5367431640625e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.00225067138671875, -0.0012111663818359375, -7.62939453125e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0014238357543945312, -1.1920928244535389e-07, -0.0001373291015625, -0.0001544952392578125, -1.9073486328125e-06, -0.0001163482666015625, -7.307501800823957e-05, -5.7220458984375e-06, -0.0001697540283203125, -0.015672683715820312, -0.0001506805419921875, -0.0001659393310546875, -3.814697265625e-06], "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = game.random_choice(minions)\n        minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n"}, {"choice_history": [139, 193, 314], "score": -21.26519775390625, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -21.265180587768555], "inferred_code": ""}], "index": 19}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -0.16217181530413427, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -0.006631373893469572, -1.9311904907226562e-05, -0.00011444091796875, -0.001377105712890625, -3.24249267578125e-05, -0.0008968623587861657, -1.5139572496991605e-05, -0.00019073486328125, -0.019863128662109375, -5.7220458984375e-06, -5.340576171875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002216339111328125, 0.0, -0.003726959228515625, -0.0023484304547309875, -5.9485384554136544e-05, -0.0012181997299194336, 0.0, -6.67572021484375e-05, -0.00019073486328125, -3.62396240234375e-05, -0.0007634523790329695, -3.004073914780747e-05, -9.1552734375e-05, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.8794837502877613, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -3.746614694595337, -4.184246063232422e-05, -0.0016765594482421875, -2.09808349609375e-05, -3.814697265625e-06, -0.001029372215270996, -0.00011456012725830078, -1.33514404296875e-05, -0.07355499267578125, -0.000240325927734375, -0.0013980865478515625, -5.14984130859375e-05, -0.000690460205078125, -6.4849853515625e-05, -5.14984130859375e-05, -0.000286102294921875, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.0012540817260742188, -4.00543212890625e-05, -0.000619053840637207, -2.47955322265625e-05, -0.00020599365234375, -0.0016651153564453125, -7.2479248046875e-05, -4.00543212890625e-05, -5.531308124773204e-05, -0.00019288063049316406, -3.814697265625e-05, -0.000141143798828125, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -9.72747802734375e-05, -3.814697265625e-05, -0.000659942626953125, -0.006505727302283049, -1.9311904907226562e-05, -0.000110626220703125, -0.0013446807861328125, -3.0517578125e-05, -0.000900912971701473, -1.5020364116935525e-05, -0.0001926422119140625, -0.022357940673828125, -5.7220458984375e-06, -5.91278076171875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0021686553955078125, 0.0, -0.0035991668701171875, -0.0023752087727189064, -5.9485384554136544e-05, -0.0011991262435913086, 0.0, -6.4849853515625e-05, -0.000186920166015625, -3.62396240234375e-05, -0.0007573756156489253, -3.004073914780747e-05, -9.1552734375e-05, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.891552645212357, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -3.7872698307037354, -8.20159912109375e-05, -0.0055999755859375, -2.47955322265625e-05, -1.9073486328125e-06, -0.0005475282669067383, -0.0001277923583984375, -1.52587890625e-05, -0.04278373718261719, -0.000652313232421875, -0.001651763916015625, -0.00016021728515625, -0.000827789306640625, -3.814697265625e-05, -5.91278076171875e-05, -0.000240325927734375, 0.0, -3.814697265625e-05, -5.7220458984375e-06, -0.00128936767578125, -2.86102294921875e-05, -0.0005971193313598633, -2.09808349609375e-05, -0.0002422332763671875, -0.0016994476318359375, -6.67572021484375e-05, -4.00543212890625e-05, -5.1736802561208606e-05, -0.00017571449279785156, -3.62396240234375e-05, -0.0001220703125, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -9.72747802734375e-05, -3.814697265625e-05, -0.000675201416015625, -0.006340741645544767, -1.9311904907226562e-05, -0.0001125335693359375, -0.001331329345703125, -3.0517578125e-05, -0.0009062750032171607, -1.5020364116935525e-05, -0.000194549560546875, -0.020263671875, -5.7220458984375e-06, -5.340576171875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0021610260009765625, 0.0, -0.003681182861328125, -0.0023531883489340544, -5.9485384554136544e-05, -0.001208662986755371, 0.0, -6.67572021484375e-05, -0.00019073486328125, -3.62396240234375e-05, -0.0007636900409124792, -3.004073914780747e-05, -9.1552734375e-05, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.004783929389703, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -3.203049659729004, -0.009988784790039062, -3.0517578125e-05, -7.62939453125e-05, -0.7079744338989258, -8.58306884765625e-05, -0.0001201629638671875, -0.0045013427734375, 0.0, -6.29425048828125e-05, -3.814697265625e-06, -0.001789093017578125, -4.00543212890625e-05, -0.0007506608963012695, -1.9073486328125e-05, -0.0001964569091796875, -0.0017910003662109375, -0.0001068115234375, -3.24249267578125e-05, -4.529949001153e-05, -0.00034177303314208984, -5.340576171875e-05, -0.0003528594970703125, 0.0, -3.814697265625e-05, -1.33514404296875e-05, -0.0001125335693359375, -2.86102294921875e-05, -0.0005054473876953125, -0.006514548324048519, -2.6941299438476562e-05, -0.000118255615234375, -0.0017604827880859375, -3.62396240234375e-05, -0.0008706470252946019, -1.549720036564395e-05, -0.0002002716064453125, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.439074076312352, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -0.006631373893469572, -1.9311904907226562e-05, -0.00011444091796875, -0.001377105712890625, -3.24249267578125e-05, -0.0008968623587861657, -1.5139572496991605e-05, -0.00019073486328125, -4.057458877563477, -0.0015506744384765625, -0.001422882080078125, -0.02079010009765625, -2.09808349609375e-05, -0.0732879638671875, -0.007853388786315918, -1.9073486328125e-06, -3.814697265625e-05, -0.000179290771484375, 0.0, -3.62396240234375e-05, -2.6702880859375e-05, -7.2479248046875e-05, -7.43865966796875e-05, -0.0006351470947265625, -0.13569951057434082, -6.079673767089844e-06, -0.000148773193359375, -0.006664276123046875, -7.43865966796875e-05, -0.0012884004972875118, -2.2768972485209815e-05, -0.0002918243408203125, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "extend", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.814913235727033, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"_type": "Template78"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -3.203049659729004, -0.009988784790039062, -3.0517578125e-05, -7.62939453125e-05, -0.7196073532104492, -5.7220458984375e-06, -0.015309572219848633, -4.0650367736816406e-05, -0.000400543212890625, 0.0, -0.0002593994140625, -1.9073486328125e-06, -0.01214587688446045, -5.7339664635946974e-05, -0.0018367767333984375, -0.0017261505126953125, -0.08359527587890625, -0.11226367950439453, -0.00290679931640625, -0.000118255615234375, -0.000301361083984375, -1.0182132720947266, -0.00016021728515625, -1.9073486328125e-06, -0.00014495849609375, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.03499889373779297, -3.826618194580078e-05, -0.0004172325134277344, -0.00013935565948486328, -4.9591064453125e-05, -0.0007371902465820312, -1.1444091796875e-05, -9.34600830078125e-05, -8.213519322453067e-05, -3.0994415283203125e-05, -0.0047931671142578125, -2.47955322265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, -0.11933422088623047, -0.16766725480556488, -0.0008375644683837891, -0.0003204345703125, -0.03449821472167969, -0.024831771850585938, -5.7220458984375e-06, -0.0001506805419921875, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.14309406280517578, 0.0, -0.02798938751220703, -0.0054097347892820835, -0.0001310108054894954, -0.0025392770767211914, 0.0, -7.2479248046875e-05, -0.0002346038818359375, -3.4332275390625e-05, -0.0007029379485175014, -5.114077794132754e-05, -0.0001239776611328125, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(2)\n            game.other_player.hero.damage(player.effective_spell_damage(2),\n                self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 144, 163, 302, 76, 164, 37, "minions", "<EOS>", 68, 156], "score": -6.072958454444631, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -5.1631178855896, -3.516673677950166e-05, -0.00090789794921875, -0.018964767456054688, -1.9073486328125e-05, -0.016022682189941406, -1.9073486328125e-06, -0.03336620330810547, -0.028567910194396973, -0.00042057037353515625, -0.0006847381591796875, -0.0002193450927734375, -0.0038471221923828125, -0.2524080276489258, -9.5367431640625e-06, -1.52587890625e-05, -0.024336814880371094, -9.5367431640625e-06, -0.10517215728759766, -0.17496977746486664, -3.647804260253906e-05, -0.127655029296875, -2.288818359375e-05], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        game.other_player.minions = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.095992546185187, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -0.006631373893469572, -1.9311904907226562e-05, -0.00011444091796875, -0.001377105712890625, -3.24249267578125e-05, -0.0008968623587861657, -1.5139572496991605e-05, -0.00019073486328125, -0.019863128662109375, -5.7220458984375e-06, -5.340576171875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002216339111328125, 0.0, -5.930809020996094, -0.002234339714050293, -6.556507287314162e-06, -0.007863759994506836, 0.0, -0.000141143798828125, -0.00043487548828125, -3.814697265625e-05, -0.0007205508300103247, -3.361701965332031e-05, -7.05718994140625e-05, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 103, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.452578902365019, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -6.371868133544922, -0.0001277923583984375, -0.00011444091796875, -4.38690185546875e-05, -0.0003699056396726519, -0.0001647472381591797, -2.288818359375e-05, -0.007717132568359375, -0.00040435791015625, -0.009122848510742188, -0.00049591064453125, -0.000782012939453125, -3.62396240234375e-05, -5.91278076171875e-05, -0.00014495849609375, 0.0, -2.09808349609375e-05, -7.62939453125e-06, -0.0012979507446289062, -4.57763671875e-05, -0.0006629228591918945, -3.814697265625e-05, -0.000225067138671875, -0.0017690658569335938, -7.43865966796875e-05, -4.00543212890625e-05, -6.031987504684366e-05, -0.00022721290588378906, -5.340576171875e-05, -0.0001506805419921875, 0.0, -4.38690185546875e-05, -1.52587890625e-05, -0.000102996826171875, -4.1961669921875e-05, -0.0006275177001953125, -0.006411075126379728, -2.1219253540039062e-05, -0.0001163482666015625, -0.0013580322265625, -3.0517578125e-05, -0.0009055592236109078, -1.5139572496991605e-05, -0.00019073486328125, -0.031026840209960938, -5.7220458984375e-06, -6.29425048828125e-05, -7.82012939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0034732818603515625, 0.0, -0.0035610198974609375, -0.002479944145306945, -5.888934538234025e-05, -0.0011646747589111328, 0.0, -6.4849853515625e-05, -0.0001888275146484375, -3.62396240234375e-05, -0.0007549943402409554, -3.004073914780747e-05, -9.5367431640625e-05, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "stealth", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.498279888201466, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "stealth", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -6.387684345245361, -0.0008554458618164062, -0.0015735626220703125, -2.288818359375e-05, -3.814697265625e-06, -0.0008802413940429688, -9.548664093017578e-05, -1.33514404296875e-05, -0.051522254943847656, -0.0005970001220703125, -0.0019550323486328125, -8.0108642578125e-05, -0.000591278076171875, -5.340576171875e-05, -5.340576171875e-05, -0.0002269744873046875, 0.0, -3.62396240234375e-05, -5.7220458984375e-06, -0.0012292861938476562, -3.62396240234375e-05, -0.0005913972854614258, -2.47955322265625e-05, -0.0002002716064453125, -0.0015716552734375, -6.866455078125e-05, -3.814697265625e-05, -5.197521750233136e-05, -0.00020051002502441406, -3.4332275390625e-05, -0.000125885009765625, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -9.918212890625e-05, -3.814697265625e-05, -0.000621795654296875, -0.006661891471594572, -1.9311904907226562e-05, -0.0001125335693359375, -0.0013637542724609375, -3.24249267578125e-05, -0.0008990071946755052, -1.5139572496991605e-05, -0.0001926422119140625, -0.020627975463867188, -5.7220458984375e-06, -5.53131103515625e-05, -6.67572021484375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0023145675659179688, 0.0, -0.0036468505859375, -0.002371423877775669, -5.9485384554136544e-05, -0.0012104511260986328, 0.0, -6.67572021484375e-05, -0.00019073486328125, -3.62396240234375e-05, -0.0007635708898305893, -3.004073914780747e-05, -9.1552734375e-05, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.stealth,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.508475922810646, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -6.303896903991699, -0.00016021728515625, -3.814697265625e-06, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.04731273651123047, -1.9073486328125e-06, -0.00102996826171875, -0.01750880666077137, -7.93933795648627e-05, -0.0005484819412231445, 0.0, -3.62396240234375e-05, -0.0004730224609375, -3.814697265625e-05, -0.0005522896535694599, -1.549720036564395e-05, -0.000255584716796875, -0.012540817260742188, -1.1444091796875e-05, -1.71661376953125e-05, -0.00095367431640625, 0.0, -9.5367431640625e-06, -0.0004482269287109375, 0.0, -0.00366973876953125, -0.002263409085571766, -4.827944212593138e-05, -0.0017005205154418945, 0.0, -3.62396240234375e-05, -0.000152587890625, -2.09808349609375e-05, -0.0006214246968738735, -3.719329470186494e-05, -7.62939453125e-05, -7.62939453125e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -6.56938903599297, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -0.006631373893469572, -1.9311904907226562e-05, -0.00011444091796875, -0.001377105712890625, -3.24249267578125e-05, -0.0008968623587861657, -1.5139572496991605e-05, -0.00019073486328125, -4.057458877563477, -0.0015506744384765625, -0.001422882080078125, -0.02079010009765625, -2.09808349609375e-05, -0.0732879638671875, -0.007853388786315918, -1.9073486328125e-06, -3.814697265625e-05, -0.000179290771484375, 0.0, -3.62396240234375e-05, -2.6702880859375e-05, -7.2479248046875e-05, -7.43865966796875e-05, -0.0006351470947265625, -2.1924288272857666, -2.586841583251953e-05, -0.010486602783203125, -0.014308929443359375, -3.0517578125e-05, -0.014804840087890625, -3.814697265625e-06, -0.008257865905761719, -0.026505708694458008, -0.0006656646728515625, -0.00064849853515625, -0.0001659393310546875, -0.006134033203125, -4.76837158203125e-05], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.735103677094628, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -0.006631373893469572, -1.9311904907226562e-05, -0.00011444091796875, -0.001377105712890625, -3.24249267578125e-05, -0.0008968623587861657, -1.5139572496991605e-05, -0.00019073486328125, -0.019863128662109375, -5.7220458984375e-06, -5.340576171875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -6.572929382324219, -0.0074880123138427734, -3.814697265625e-06, -3.62396240234375e-05, -0.0019779205322265625, -4.9591064453125e-05, -0.001013060100376606, -2.562999725341797e-05, -0.000156402587890625, -3.814697265625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.025944623701832, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "Name", "id": "minions"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "remove", "value": {"_type": "Name", "id": "minions"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Consecration"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -3.203049659729004, -0.009988784790039062, -3.0517578125e-05, -7.62939453125e-05, -0.7196073532104492, -5.7220458984375e-06, -0.015309572219848633, -4.0650367736816406e-05, -0.000400543212890625, 0.0, -0.0002593994140625, -1.9073486328125e-06, -0.01214587688446045, -5.7339664635946974e-05, -0.0018367767333984375, -0.0017261505126953125, -0.08359527587890625, -0.11226367950439453, -0.00290679931640625, -0.000118255615234375, -0.000301361083984375, -1.182999610900879, -0.004744529724121094, -1.71661376953125e-05, -4.76837158203125e-05, 0.0, -0.000362396240234375, -7.62939453125e-06, -0.0445556640625, -1.71661376953125e-05, -0.007874250411987305, -3.814697265625e-06, -0.0010166168212890625, -0.47502994537353516, -5.340576171875e-05, -0.003201127052307129, -0.001162528875283897, -0.0077648162841796875, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.000301361083984375, -0.0002765655517578125, -0.013523101806640625, -5.7220458984375e-06, -0.6613970994949341, -0.00011515613732626662, -0.13875353336334229, -1.1563301086425781e-05, -0.0006561279296875, -0.1536397933959961, -0.08793258666992188, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -0.004492759704589844, -0.0064781904220581055, -9.655952453613281e-06, -0.0001239776611328125, -0.0005588531494140625, -9.918212890625e-05, -0.0016080474015325308, -2.193450927734375e-05, -0.0001277923583984375, -9.5367431640625e-06], "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(2)\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 314], "score": -23.74375343322754, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -2.86102294921875e-05, -23.74372100830078], "inferred_code": ""}], "index": 20}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -0.0317581011781769, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -0.001712799072265625, -5.14984130859375e-05, -0.0001049041748046875, -9.5367431640625e-06, -0.000682830810546875, -3.814697265625e-06, -1.1444091796875e-05, -9.918212890625e-05, -3.24249267578125e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0005550384521484375, -1.33514404296875e-05, -0.0008640289306640625, -2.6702880859375e-05, -0.0015040027210488915, -1.1205671398784034e-05, -0.00011336357420077547, -1.1920928244535389e-07, -1.71661376953125e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 119, 310, 135, 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -4.034705639208589, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -3.9919309616088867, -0.000370025634765625, -1.9073486328125e-06, -1.3232186574896332e-05, -0.0005686336662620306, -0.0003148301038891077, -1.52587890625e-05, -0.01959705352783203, -0.0014801025390625, -0.00045013427734375, -0.00260162353515625, -7.62939453125e-06, -0.014377593994140625, -0.0001678466796875, -8.96453857421875e-05, -2.622600959512056e-06, -4.66107958345674e-05, -8.785706449998543e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -6.653171727807596, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -6.437811851501465, 0.0, -0.18603229522705078, -1.1444091796875e-05, -3.814697265625e-06, -7.867782187531702e-06, -0.0004990840679965913, -2.2888001694809645e-05, -1.9073486328125e-06, -0.00141143798828125, -4.38690185546875e-05, -0.00727081298828125, -0.01841259002685547, -0.00052642822265625, -7.510157047363464e-06, -2.598749051685445e-05, -0.00012493015674408525, -1.1920928244535389e-07, -1.9073486328125e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 116, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -6.756593601488468, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -6.725805282592773, -0.0003376007080078125, -0.000247955322265625, -1.52587890625e-05, -0.00087738037109375, -3.814697265625e-06, -1.3470649719238281e-05, -0.0001087188720703125, -2.86102294921875e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0006008148193359375, -1.33514404296875e-05, -0.0010013580322265625, -2.47955322265625e-05, -0.0014330584090203047, -9.417532055522315e-06, -0.00011074104259023443, -1.1920928244535389e-07, -1.71661376953125e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 5, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "5", "<EOS>", 156], "score": -7.20161495292222, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -0.001712799072265625, -5.14984130859375e-05, -0.0001049041748046875, -9.5367431640625e-06, -0.000682830810546875, -3.814697265625e-06, -1.1444091796875e-05, -9.918212890625e-05, -3.24249267578125e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0005550384521484375, -1.33514404296875e-05, -0.0008640289306640625, -2.6702880859375e-05, -7.171450138092041, 0.0, -3.9100315916584805e-05, -1.1920928244535389e-07, -1.33514404296875e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "5", "<EOS>", 156], "score": -7.342892503565501, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -0.001712799072265625, -5.14984130859375e-05, -0.0001049041748046875, -9.5367431640625e-06, -0.000682830810546875, -3.814697265625e-06, -1.1444091796875e-05, -9.918212890625e-05, -3.24249267578125e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0005550384521484375, -1.33514404296875e-05, -0.0008640289306640625, -2.6702880859375e-05, -7.312694072723389, 0.0, -8.034572238102555e-05, -1.1920928244535389e-07, -5.7220458984375e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 135, 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -7.601899599207599, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -0.001712799072265625, -5.14984130859375e-05, -0.0001049041748046875, -9.5367431640625e-06, -7.573251724243164, -0.0006237030029296875, -5.14984130859375e-05, -1.311301275563892e-06, -9.584237704984844e-05, -7.283678132807836e-05, -2.3841855067985307e-07, -1.9073486328125e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -8.489451598396954, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -3.9919309616088867, -0.000370025634765625, -1.9073486328125e-06, -1.3232186574896332e-05, -0.0005686336662620306, -0.0003148301038891077, -1.52587890625e-05, -0.01959705352783203, -0.0014801025390625, -0.00045013427734375, -0.00260162353515625, -7.62939453125e-06, -4.463137626647949, -9.5367431640625e-06, -2.682209014892578e-05, -1.71661376953125e-05, -0.000263214111328125, 0.0, 0.0, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.000591278076171875, -1.1444091796875e-05, -0.0004673004150390625, -2.09808349609375e-05, -0.004733647219836712, -1.5854835510253906e-05, -0.0001928661367855966, 0.0, -1.33514404296875e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -8.55033148392021, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -0.001712799072265625, -5.14984130859375e-05, -0.0001049041748046875, -9.5367431640625e-06, -0.000682830810546875, -3.814697265625e-06, -1.1444091796875e-05, -9.918212890625e-05, -3.24249267578125e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -8.517962455749512, -5.7220458984375e-06, -0.00012969970703125, -1.33514404296875e-05, -0.0034367209300398827, -2.3484210032620467e-05, -9.917907300405204e-05, -1.1920928244535389e-07, -7.62939453125e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -8.709421785149509, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "CoreCore Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -8.542132377624512, -0.13595198094844818, -0.00030612500268034637, -1.9073486328125e-06, -0.000934600830078125, -3.62396240234375e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001354217529296875, -5.7220458984375e-06, -1.1444091796875e-05, -9.1552734375e-05, -3.814697265625e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0004711151123046875, -1.71661376953125e-05, -0.0010204315185546875, -2.86102294921875e-05, -0.0013369899243116379, -1.1324880688334815e-05, -0.00010811885294970125, -1.1920928244535389e-07, -1.71661376953125e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('CoreCore Hound', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 119, 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -8.726403476055566, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -6.437811851501465, 0.0, -2.232457160949707, -0.0002536773681640625, -1.9073486328125e-06, -1.8477399862604216e-05, -0.0005732834106311202, -0.000448345672339201, -1.1444091796875e-05, -0.01897144317626953, -0.00017547607421875, -0.026765823364257812, -0.0031490325927734375, -0.00052642822265625, -0.0035686492919921875, -2.932510687969625e-05, -0.00012576571316458285, -0.0005526536842808127, -3.933906555175781e-06, -3.814697265625e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Core", " ", "Hound", "<EOS>", 116, 95, 94, 119, 310, 135, 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -9.018306732568355, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -3.9919309616088867, -0.000370025634765625, -1.9073486328125e-06, -1.3232186574896332e-05, -0.0005686336662620306, -0.0003148301038891077, -1.52587890625e-05, -5.004390716552734, -0.0023040771484375, -0.0005340576171875, -0.0020542144775390625, -1.71661376953125e-05, -0.012739181518554688, -0.0002288818359375, -0.000125885009765625, -1.6689286894688848e-06, -3.314013156341389e-05, -8.082379645202309e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 5, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Core", " ", "Hound", "<EOS>", 94, 95, 94, 119, 310, 135, 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -9.047428965918009, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template17"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -3.9919309616088867, -0.000370025634765625, -1.9073486328125e-06, -1.3232186574896332e-05, -0.0005686336662620306, -0.0003148301038891077, -1.52587890625e-05, -4.7937726974487305, -0.2442169189453125, -0.001361846923828125, -0.0015735626220703125, -3.0517578125e-05, -0.01024627685546875, -0.0002002716064453125, -0.0001068115234375, -2.264974000354414e-06, -3.5881934309145436e-05, -8.499609248246998e-05, -1.1920928244535389e-07, -1.9073486328125e-06], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', CARD_RARITY.COMMON, CHARACTER_CLASS.\n            ALL, CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156], "score": -9.243345324387967, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "name": "CoreHound"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -9.205755233764648, -7.82012939453125e-05, -0.007442474365234375, -9.5367431640625e-06, -0.000751495361328125, -3.814697265625e-06, -1.3470649719238281e-05, -9.72747802734375e-05, -3.0517578125e-05, 0.0, 0.0, 0.0, -2.288818359375e-05, 0.0, -0.000530242919921875, -1.33514404296875e-05, -0.0010242462158203125, -2.47955322265625e-05, -0.001481981948018074, -9.536741345073096e-06, -0.00011717790766851977, -1.1920928244535389e-07, -1.71661376953125e-05], "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n"}, {"choice_history": [139, 193, 314], "score": -25.701377868652344, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -25.70135498046875], "inferred_code": ""}], "index": 21}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -0.27532112416133003, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -0.009517669677734375, -0.000278472900390625, -5.14984130859375e-05, 0.0, -0.0007085797842592001, -0.007443069946020842, -5.7220458984375e-06, -8.96453857421875e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.049139976501464844, -1.9073486328125e-06, -0.0017757415771484375, -3.814697265625e-06, -0.00496673583984375, -0.0001697540283203125, -7.62939453125e-06, -0.00011444091796875, -1.52587890625e-05, -0.0038661956787109375, -0.00041961669921875, -0.0007152557373046875, 0.0, -0.015534043312072754, 0.0, -0.005817413330078125, -3.814697265625e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -3.587211130135742, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -3.3714115619659424, -1.5854802768444642e-05, -0.0022487640380859375, -9.5367431640625e-06, -0.0034160614013671875, -2.86102294921875e-05, -0.0002956390380859375, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -0.0002689361572265625, -0.0029584169387817383, -1.9431114196777344e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.665157318115234e-05, -1.1920928244535389e-07, -0.0002288818359375, -0.000247955322265625, -5.7220458984375e-06, -0.0029582977294921875, -7.62939453125e-06, -1.1444091796875e-05, -0.000244140625, -1.9073486328125e-06, -1.9073486328125e-06, -0.00276947021484375, -0.039200425148010254, -0.0002671480178833008, -0.0007534027099609375, -0.000606536865234375, -0.0022125244140625, -0.021791458129882812, -2.09808349609375e-05, -0.010042190551757812, -0.0002422332763671875, -4.76837158203125e-05, 0.0, -0.0006834265659563243, -0.007257580291479826, -5.7220458984375e-06, -8.96453857421875e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.05012989044189453, -1.9073486328125e-06, -0.00180816650390625, -3.814697265625e-06, -0.0049190521240234375, -0.0001678466796875, -7.62939453125e-06, -0.0001125335693359375, -1.52587890625e-05, -0.0034656524658203125, -0.00041961669921875, -0.000728607177734375, 0.0, -0.014996051788330078, 0.0, -0.0059452056884765625, -3.814697265625e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "players", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -3.6318896990667255, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -0.009517669677734375, -0.000278472900390625, -5.14984130859375e-05, 0.0, -0.0007085797842592001, -0.007443069946020842, -5.7220458984375e-06, -8.96453857421875e-05, -5.53131103515625e-05, -1.9073486328125e-06, -3.405087471008301, -1.9073486328125e-06, -0.0013895034790039062, -7.62939453125e-06, -0.008831024169921875, -0.00019073486328125, -7.62939453125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0015010833740234375, -0.000301361083984375, -0.00103759765625, 0.0, -0.010903239250183105, 0.0, -0.009786605834960938, -2.6702880859375e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(players=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -4.459172843063804, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -4.243462085723877, -4.768370445162873e-07, -0.0003185272216796875, -5.7220458984375e-06, -0.0053272247314453125, -1.1444091796875e-05, -0.0001926422119140625, -3.814697265625e-06, -0.0001983642578125, 0.0, -0.0002346038818359375, -0.002862095832824707, -2.1338462829589844e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.474422454833984e-05, 0.0, -0.0005474090576171875, -0.000213623046875, -3.814697265625e-06, -0.00183868408203125, -7.62939453125e-06, -1.1444091796875e-05, -0.0003204345703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.002498626708984375, -0.03980898857116699, -0.0002690553665161133, -0.00079345703125, -0.0006103515625, -0.00241851806640625, -0.02222442626953125, -2.288818359375e-05, -0.009492874145507812, -0.0002841949462890625, -5.14984130859375e-05, 0.0, -0.0007005927618592978, -0.007481693755835295, -5.7220458984375e-06, -8.96453857421875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.04931163787841797, -1.9073486328125e-06, -0.0017652511596679688, -3.814697265625e-06, -0.0049724578857421875, -0.00017070770263671875, -7.62939453125e-06, -0.0001125335693359375, -1.52587890625e-05, -0.003810882568359375, -0.000423431396484375, -0.0007305145263671875, 0.0, -0.015599727630615234, 0.0, -0.0058498382568359375, -3.814697265625e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "hand", "<EOS>", 156], "score": -4.630570410557759, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Attribute", "attr": "hand", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -4.162580490112305, -0.000125885009765625, -0.08898258209228516, -5.9604644775390625e-06, -0.0008258819580078125, -0.0003681182861328125, -0.0003833770751953125, -0.1829385757446289, -0.04130351543426514, -5.7220458984375e-06, -1.9073486328125e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(len(player.hand))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -5.067216275240057, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -4.855030536651611, -7.390974587906385e-06, -0.000331878662109375, -7.62939453125e-06, -0.000728607177734375, -1.71661376953125e-05, -0.000400543212890625, -1.1444091796875e-05, -0.0001773834228515625, 0.0, -0.0002269744873046875, -0.0036832094192504883, -2.7060508728027344e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.283687591552734e-05, -1.1920928244535389e-07, -0.000213623046875, -0.00035858154296875, -5.7220458984375e-06, -0.002880096435546875, -7.62939453125e-06, -1.1444091796875e-05, -0.0002574920654296875, -1.9073486328125e-06, -1.9073486328125e-06, -0.0025482177734375, -0.039566636085510254, -0.0002976655960083008, -0.0007305145263671875, -0.000659942626953125, -0.0022754669189453125, -0.022238731384277344, -2.09808349609375e-05, -0.009828567504882812, -0.000244140625, -4.9591064453125e-05, 0.0, -0.0006952282856218517, -0.007193088065832853, -5.7220458984375e-06, -8.96453857421875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.04974555969238281, -1.9073486328125e-06, -0.0018033981323242188, -3.814697265625e-06, -0.0049343109130859375, -0.0001678466796875, -7.62939453125e-06, -0.0001125335693359375, -1.52587890625e-05, -0.0035343170166015625, -0.0004177093505859375, -0.0007457733154296875, 0.0, -0.014833688735961914, 0.0, -0.00600433349609375, -3.62396240234375e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -5.5660810459337355, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -5.417168617248535, -7.62939453125e-06, -2.288818359375e-05, -0.037479400634765625, -0.0007534027099609375], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "<UNK>", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -5.728086708618882, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "Turn<UNK>"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -0.009517669677734375, -0.000278472900390625, -5.14984130859375e-05, 0.0, -0.0007085797842592001, -5.41658878326416, -4.768370445162873e-07, -0.001041412353515625, -1.33514404296875e-05, -2.09808349609375e-05, -0.09398078918457031, -1.9073486328125e-06, -0.0020809173583984375, -9.5367431640625e-06, -0.00531768798828125, -0.0001983642578125, -7.62939453125e-06, -0.0001239776611328125, -1.71661376953125e-05, -0.0032501220703125, -0.0003452301025390625, -0.0008983612060546875, 0.0, -0.012800097465515137, 0.0, -0.00621795654296875, -3.24249267578125e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(Turn<UNK>(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 93, 213, "Turn", "Started", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -5.739421485730183, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "TurnStarted"}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -4.963980674743652, -1.1444091796875e-05, -0.0026644468307495117, -0.5708596706390381, -3.814697265625e-06, -0.0074596405029296875, -0.00016021728515625, -0.0016727447509765625, -0.0002269744873046875, -0.0021305084228515625, -1.9073486328125e-06, -0.012145161628723145, -1.9073486328125e-06, -0.0034351348876953125, -8.392333984375e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(), ActionTag(Kill(),\n            SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_temp_attack", "<EOS>", 302, 111, 156], "score": -5.786064623662007, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -5.432287693023682, -0.000141143798828125, -0.0001659393310546875, -0.24268531799316406, -0.0001354217529296875], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 79, 170, 49, 311, 138, 291, "players", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 156], "score": -6.023146746719924, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -0.009517669677734375, -0.000278472900390625, -5.14984130859375e-05, 0.0, -0.0007085797842592001, -0.007443069946020842, -5.7220458984375e-06, -8.96453857421875e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.049139976501464844, -1.9073486328125e-06, -0.0017757415771484375, -3.814697265625e-06, -0.00496673583984375, -0.0001697540283203125, -7.62939453125e-06, -0.00011444091796875, -1.52587890625e-05, -0.0038661956787109375, -0.00041961669921875, -0.0007152557373046875, 0.0, -0.015534043312072754, 0.0, -5.185986518859863, -0.0004634857177734375, -0.07721900939941406, -0.014583587646484375, -0.00017547607421875, -1.9073486328125e-06, -0.002918243408203125, -1.9073486328125e-06, -0.040370941162109375, -1.33514404296875e-05, -0.08472728729248047, -5.340576171875e-05, -1.9073486328125e-06, -0.0002422332763671875, -7.62939453125e-06, -0.3405570983886719, 0.0, -0.00018310546875, 0.0, -0.0058307647705078125, -0.0001316070556640625, -0.000156402587890625, -5.53131103515625e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), MinionSelector(players=EnemyPlayer(), picker=\n            UserPicker()))))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -6.040233134099019, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -5.928340435028076, -3.62396240234375e-05, -2.47955322265625e-05, -0.001178741455078125, -3.814697265625e-06], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156], "score": -6.116168139309359, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_effect", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -4.963980674743652, -1.1444091796875e-05, -0.0026644468307495117, -0.9509608745574951, 0.0, -0.0018978118896484375, -1.1444091796875e-05, -0.00028228759765625, -0.0001544952392578125, -0.00823211669921875, -9.5367431640625e-06, -0.00960314180701971, -1.9073486328125e-06, -0.003734588623046875, -4.00543212890625e-05], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnEnded(), ActionTag(Kill(),\n            SelfSelector())))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 156], "score": -6.151963709660542, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Corruption"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -5.938692569732666, -0.0004291534423828125, -6.67572021484375e-05, -0.10187244415283203, -0.0002536773681640625], "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n"}, {"choice_history": [139, 193, 314], "score": -22.025409698486328, "model_output": {"_type": "Module", "body": []}, "score_history": [-0.000133514404296875, -0.0002384185791015625, -22.02503776550293], "inferred_code": ""}], "index": 22}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -0.022570354830634187, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -0.0012203451478853822, -4.5299530029296875e-06, -0.0003204345703125, -1.9073486328125e-06], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 115, 311, 138, 291, "spell_damage", "<EOS>", 39, 138, 291, "spell_damage", "<EOS>", 39, 156], "score": -7.192730293785019, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}, {"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -3.99566650390625, -0.0002384185791015625, -0.0002841949462890625, -0.0007114410400390625, -0.014791488647460938, -4.9591064453125e-05, -0.00174713134765625, -0.0003204345703125, -0.0010738372802734375, -0.22214698791503906, -7.2479248046875e-05, -2.2917513847351074, -6.556510470545618e-06, -0.009641647338867188, -0.014410018920898438, -0.00022125244140625, -0.441680908203125, -6.079673767089844e-06, -0.1957693099975586, -3.814697265625e-06], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 119, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -7.560397856785016, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -7.546943664550781, -3.24249267578125e-05, -3.814697265625e-06, -1.8358150555286556e-05, -2.7179667085874826e-05, -4.768370445162873e-07, -3.6597251892089844e-05, -4.57763671875e-05, -0.000713348388671875, -6.4849853515625e-05, -5.340576171875e-05, -0.0001087188720703125, -3.814697265625e-06, -9.655952453613281e-06, -5.006785613659304e-06, -0.00849151611328125, -4.38690185546875e-05, -0.0003032684326171875, -2.288818359375e-05, -1.53779055835912e-05, -6.318072337307967e-06, -9.393283835379407e-05, -6.0796710386057384e-06, -0.00243127322755754, -1.58548318722751e-05, -0.0004291534423828125, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 115, 311, 138, 291, "buffs", "<EOS>", 50, 138, 291, "spell_damage", "<EOS>", 39, 156], "score": -7.811790929352178, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "buffs", "value": {"_type": "Template51"}}, {"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -3.99566650390625, -0.0002384185791015625, -0.0002841949462890625, -0.0007114410400390625, -0.014791488647460938, -4.9591064453125e-05, -0.00174713134765625, -0.0003204345703125, -0.0010738372802734375, -0.22214698791503906, -7.2479248046875e-05, -0.2742072343826294, -1.1920928244535389e-07, -2.0693588256835938, -0.07639312744140625, -0.000209808349609375, -0.829587459564209, -6.210803985595703e-05, -0.32273101806640625, -1.9073486328125e-06], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=False, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "Mage", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.14937596805504, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole1": 4}], "name": "create_minionMage"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -8.117172241210938, -0.0006597610772587359, -0.000186920166015625, -1.1444091796875e-05, -0.028184890747070312, -2.6702880859375e-05, -2.5987601475208066e-05, -4.577531944960356e-05, -4.470312342164107e-05, -3.218649908376392e-06, -0.0011113876244053245, -6.4373016357421875e-06, -0.0003795623779296875, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minionMage(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 115, 311, 138, 291, "buffs", "<EOS>", 23, 189, 303, 79, 171, 62, 302, 93, 213, "Damage", "<EOS>", 110, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "6", "<EOS>", 92, 110, 156], "score": -8.36992108001305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Damage"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 6}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -3.99566650390625, -0.0002384185791015625, -0.0002841949462890625, -0.0007114410400390625, -0.014791488647460938, -4.9591064453125e-05, -0.00174713134765625, -0.0003204345703125, -0.0010738372802734375, -0.22214698791503906, -7.2479248046875e-05, -0.2742072343826294, -1.1920928244535389e-07, -0.24771976470947266, 0.0, -0.00067901611328125, -3.62396240234375e-05, -3.814697265625e-06, -0.024071693420410156, -0.0072803497314453125, -0.0004329681396484375, -0.000202178955078125, -0.8513099551200867, -0.028596704825758934, -0.022634506225585938, -0.014410018920898438, -8.392333984375e-05, -0.24286174774169922, 0.0, -0.005695343017578125, -1.9073486328125e-06, -0.001712799072265625, -3.814697265625e-06, -1.9073486328125e-06, -0.6663732528686523, -1.9073486328125e-05, -0.3463592529296875, -0.0002689361572265625, -0.8293209075927734, -0.004201412200927734, -0.5616569519042969, -0.0004329681396484375, -0.000102996826171875], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=[Buff(Damage())], effects=[Aura(\n            ChangeAttack(6), SelfSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "1", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.60313331555136, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole1": 4}], "name": "create_minion1"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -8.549155235290527, -4.88758041683468e-06, -0.0004062652587890625, -1.33514404296875e-05, -0.050384521484375, -2.288818359375e-05, -2.2411331883631647e-05, -6.210611172718927e-05, -4.553766120807268e-05, -3.4570680327306036e-06, -0.0010944597888737917, -8.344650268554688e-06, -0.000392913818359375, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion1(self, player):\n        return Minion(1, 4, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.78938709044752, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -8.378320693969727, 0.0, -0.3900432586669922, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 115, 311, 138, 291, "buffs", "<EOS>", 23, 189, 303, 79, 171, 62, 302, 93, 213, "Cant", "Attack", "<EOS>", 110, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "6", "<EOS>", 92, 110, 156], "score": -9.114829943691625, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "CantAttack"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 6}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -3.99566650390625, -0.0002384185791015625, -0.0002841949462890625, -0.0007114410400390625, -0.014791488647460938, -4.9591064453125e-05, -0.00174713134765625, -0.0003204345703125, -0.0010738372802734375, -0.22214698791503906, -7.2479248046875e-05, -0.2742072343826294, -1.1920928244535389e-07, -0.24771976470947266, 0.0, -0.00067901611328125, -3.62396240234375e-05, -3.814697265625e-06, -0.024071693420410156, -0.0072803497314453125, -0.0004329681396484375, -0.000202178955078125, -0.6999277472496033, -0.08097237348556519, -0.00036966800689697266, -0.0005950927734375, -0.07256126403808594, -0.0001239776611328125, -0.956122875213623, 0.0, -0.012788772583007812, -1.9073486328125e-06, -0.0018253326416015625, -3.814697265625e-06, -1.9073486328125e-06, -0.7822990417480469, -2.47955322265625e-05, -0.3386392593383789, -0.00018310546875, -0.8266225457191467, -0.003865480422973633, -0.5436334609985352, -0.000308990478515625, -8.58306884765625e-05], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, buffs=[Buff(CantAttack())], effects=[Aura(\n            ChangeAttack(6), SelfSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -9.23674522185621, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -8.632176399230957, -3.814697265625e-06, -0.5835418701171875, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 46, 156], "score": -9.406183941256415, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template46"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -0.0012203451478853822, -4.5299530029296875e-06, -9.383934020996094, -1.9073486328125e-06], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "hero", "<EOS>", 39, 156], "score": -9.4600997998744, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "hero", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -9.34872817993164, -4.0531158447265625e-06, -0.09034442901611328, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, hero=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 39, 156], "score": -9.54736934447584, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole1": 4}], "name": "create_minion"}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -8.632176399230957, -3.814697265625e-06, -0.8941659927368164, 0.0], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 303, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 154, 205, "1", "<EOS>", "4", "<EOS>", 156], "score": -10.403283336308391, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 4}], "name": "DalaranMage"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -10.229425430297852, -0.0031948089599609375, -1.9073486328125e-06, -0.00013922754442319274, -4.2676903831306845e-05, -1.4305104514278355e-06, -4.291534423828125e-06, -0.0002613067626953125, -0.1690216064453125, -1.9073486328125e-06, -3.3378496482328046e-06, -9.608014806872234e-05, -0.00048744678497314453, -0.00012683088425546885, -3.814697265625e-06], "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3)\n\n    def create_minion(self, player):\n        return Minion(1, 4)\n"}, {"choice_history": [139, 193, 314], "score": -25.934988021850586, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, 0.0, -25.93498420715332], "inferred_code": ""}], "index": 23}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -0.22650865432780165, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -0.0189816951751709, -1.9073486328125e-06, -1.9073486328125e-06, -0.0063838958740234375, -3.814697265625e-05, -0.0010509490966796875, -0.03657793998718262, -7.629378160345368e-06, -6.866455078125e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -2.8286055695892287, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -2.6964340209960938, 0.0, 0.0, -0.03880882263183594, -0.013633489608764648, -1.537799835205078e-05, -4.1961669921875e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "taunt", "<EOS>", 156], "score": -4.278120554671489, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -0.0189816951751709, -1.9073486328125e-06, -1.9073486328125e-06, -0.0063838958740234375, -3.814697265625e-05, -0.0010509490966796875, -4.088256359100342, -2.145764938177308e-06, -7.62939453125e-06], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.taunt)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 94, 119, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.516233351389808, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -3.5495500564575195, -0.0001659393310546875, -1.33514404296875e-05, -2.3364789740298875e-05, -4.756447742693126e-05, -0.00018595319124870002, -7.665157318115234e-05, -7.05718994140625e-05, -0.16530609130859375, -0.00637054443359375, -0.5047388076782227, -2.288818359375e-05, -0.00042724609375, -1.33514404296875e-05, -4.1961669921875e-05, -1.1563301086425781e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0007152557373046875, -2.86102294921875e-05, -0.0001468658447265625, 0.0, -3.814697265625e-06, -0.20827960968017578, 0.0, -7.62939453125e-06, -0.0040950775146484375, -0.013053536415100098, -3.933906555175781e-06, -1.9073486328125e-06, -0.009145736694335938, -3.0517578125e-05, -0.0007038116455078125, -0.05031919479370117, -7.033323527139146e-06, -5.53131103515625e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CARD_RARITY.COMMON, False,\n            False, target_func=hearthbreaker.targeting.find_minion_spell_target\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "card", "<EOS>", 156], "score": -4.761228955925901, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -0.0189816951751709, -1.9073486328125e-06, -1.9073486328125e-06, -0.0063838958740234375, -3.814697265625e-05, -0.0010509490966796875, -4.57135534286499, -1.347060333500849e-05, -5.7220458984375e-06], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 103, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.820405639376759, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -4.680971145629883, -9.1552734375e-05, -0.0003185272216796875, -0.0001277923583984375, -1.33514404296875e-05, -3.814697265625e-06, -1.919269561767578e-05, -4.768370445162873e-07, -6.67572021484375e-05, -0.00296783447265625, -7.05718994140625e-05, -0.00865936279296875, -3.814697265625e-06, 0.0, -0.02041339874267578, -1.9073486328125e-06, -1.1444091796875e-05, -0.009857177734375, -0.023579716682434082, -1.9073486328125e-06, -1.9073486328125e-06, -0.006836891174316406, -4.1961669921875e-05, -0.0011167526245117188, -0.031984806060791016, -6.556489552167477e-06, -8.0108642578125e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 106, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.918067969050632, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -4.746801376342773, -0.000431060791015625, -0.0015544891357421875, -0.00022125244140625, -1.1444091796875e-05, -5.7220458984375e-06, -4.38690185546875e-05, -1.1920928244535389e-07, -4.57763671875e-05, -0.00225067138671875, -5.340576171875e-05, -0.006613731384277344, -3.814697265625e-06, 0.0, -0.04340171813964844, -1.9073486328125e-06, -9.5367431640625e-06, -0.017992019653320312, -0.02367854118347168, -1.9073486328125e-06, -1.9073486328125e-06, -0.006472587585449219, -4.76837158203125e-05, -0.0011653900146484375, -0.03401637077331543, -6.556489552167477e-06, -7.82012939453125e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 94, 119, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.92033722655367, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -3.5495500564575195, -0.0001659393310546875, -1.33514404296875e-05, -2.3364789740298875e-05, -4.756447742693126e-05, -0.00018595319124870002, -7.665157318115234e-05, -7.05718994140625e-05, -0.16530609130859375, -0.00637054443359375, -1.032423973083496, -2.288818359375e-05, -0.0004138946533203125, -2.288818359375e-05, -2.86102294921875e-05, -1.33514404296875e-05, 0.0, -5.14984130859375e-05, -0.0005283355712890625, -1.52587890625e-05, -0.000335693359375, 0.0, -3.814697265625e-06, -0.08680248260498047, 0.0, -7.62939453125e-06, -0.0053920745849609375, -0.012863397598266602, -3.933906555175781e-06, -1.9073486328125e-06, -0.009139060974121094, -3.24249267578125e-05, -0.000698089599609375, -0.04714047908782959, -6.437280717364047e-06, -5.7220458984375e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CARD_RARITY.COMMON, False,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 102, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.96833244678723, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -4.801856994628906, -3.0517578125e-05, -0.009091377258300781, -0.0001506805419921875, -1.1444091796875e-05, -5.7220458984375e-06, -5.924701690673828e-05, -2.3841855067985307e-07, -4.1961669921875e-05, -0.00250244140625, -6.4849853515625e-05, -0.0099945068359375, -1.9073486328125e-06, 0.0, -0.03783988952636719, -1.9073486328125e-06, -9.5367431640625e-06, -0.011873245239257812, -0.0231245756149292, -1.9073486328125e-06, -1.9073486328125e-06, -0.007153511047363281, -4.1961669921875e-05, -0.0011501312255859375, -0.030083417892456055, -7.271752110682428e-06, -7.43865966796875e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 101, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -5.400177038877075, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -5.258702278137207, -9.5367431640625e-06, -0.0004730224609375, -0.00012969970703125, -1.52587890625e-05, -5.7220458984375e-06, -3.063678741455078e-05, -3.576278118089249e-07, -4.76837158203125e-05, -0.0017547607421875, -5.91278076171875e-05, -0.011259078979492188, -1.9073486328125e-06, 0.0, -0.019295692443847656, -1.9073486328125e-06, -1.1444091796875e-05, -0.011547088623046875, -0.023083090782165527, -1.9073486328125e-06, -1.9073486328125e-06, -0.006984710693359375, -4.1961669921875e-05, -0.0011577606201171875, -0.032317280769348145, -6.198863957251888e-06, -8.0108642578125e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -5.468256391200441, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -4.5998454093933105, -7.784360786899924e-05, -3.814697265625e-06, -0.6485004425048828, -3.24249267578125e-05, -0.007955551147460938, -0.04833054542541504, -7.629378160345368e-06, -0.0001068115234375], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 111, 156], "score": -5.484955586183162, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -0.0189816951751709, -1.9073486328125e-06, -1.9073486328125e-06, -5.302349090576172, -0.000225067138671875], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -5.887191094130515, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -5.426242351531982, -3.0994415283203125e-05, -1.9073486328125e-06, -0.2272939682006836, -3.814697265625e-05, -0.0005016326904296875, -0.0696249008178711, -5.960446742392378e-06, -5.53131103515625e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 94, 119, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -5.990030672733944, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DivineSpirit"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -3.5495500564575195, -0.0001659393310546875, -1.33514404296875e-05, -2.3364789740298875e-05, -4.756447742693126e-05, -0.00018595319124870002, -7.665157318115234e-05, -7.05718994140625e-05, -0.16530609130859375, -0.00637054443359375, -0.5047388076782227, -2.288818359375e-05, -0.00042724609375, -1.33514404296875e-05, -4.1961669921875e-05, -1.1563301086425781e-05, -1.1920928244535389e-07, -4.76837158203125e-05, -0.0007152557373046875, -2.86102294921875e-05, -0.0001468658447265625, 0.0, -3.814697265625e-06, -1.6990108489990234, 0.0, 0.0, -0.004422187805175781, -0.056021690368652344, -1.1563301086425781e-05, -3.4332275390625e-05], "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CARD_RARITY.COMMON, False,\n            False, target_func=hearthbreaker.targeting.find_minion_spell_target\n            )\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 314], "score": -24.807920455932617, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.00543212890625e-05, -3.814697265625e-06, -24.807876586914062], "inferred_code": ""}], "index": 24}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Dragonling", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -0.1028528439976526, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalDragonling"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -0.025369908660650253, -0.004608530085533857, -0.0010242462158203125, 0.0, -0.011204599402844906, -1.537799835205078e-05, -1.1086463018727954e-05, -4.38690185546875e-05, -9.34600830078125e-05, -0.000171169827808626, -1.4305104514278355e-06, -5.602836608886719e-06, -1.1324817933200393e-05, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Mechanical", "<EOS>", 302, 93, 213, "Mechanical", "Dragonling", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -4.517347711098182, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalDragonling"}], "_type": "Call", "func": {"_type": "Name", "id": "Mechanical"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.18517804145813, -0.6781630516052246, -5.340576171875e-05, -0.5892572402954102, -7.62939453125e-06, -0.004801851697266102, -0.04783966392278671, -0.002019088249653578, -0.0010128021240234375, 0.0, -0.002178907161578536, -9.655952453613281e-06, -1.239776611328125e-05, -3.814697265625e-05, -6.4849853515625e-05, -0.00019751019135583192, -1.0728830375228426e-06, -5.602836608886719e-06, -1.0251946150674485e-05, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Mechanical(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Dragonling", "<EOS>", 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -4.705172575561505, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalDragonling"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -0.025369908660650253, -0.004608530085533857, -0.0010242462158203125, 0.0, -4.61367130279541, -2.956390380859375e-05, -5.841255187988281e-06, -4.1961669921875e-05, -6.103515625e-05, -5.5073167459340766e-05, -1.7881377516459906e-06, -3.6954879760742188e-06, -7.390948667307384e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Mechanical", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -4.782222183574049, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalMechanical"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -3.9708445072174072, -0.7431802153587341, -0.0042743682861328125, -1.9073486328125e-06, -0.0032625177409499884, -1.1563301086425781e-05, -8.70227722771233e-06, -4.57763671875e-05, -8.392333984375e-05, -0.00019822530157398432, -1.5497195136049413e-06, -5.602836608886719e-06, -1.1086402082582936e-05, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanical()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Mechanical", "Dragonling", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -5.245046252402972, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalMechanicalDragonling"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -3.9708445072174072, -1.1959612369537354, -0.0009569263202138245, -0.007877349853515625, 0.0, -0.008667468093335629, -2.110004425048828e-05, -1.1324880688334815e-05, -4.00543212890625e-05, -0.000102996826171875, -0.0002525724412407726, -1.5497195136049413e-06, -5.602836608886719e-06, -1.1324817933200393e-05, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Mechanical", "Mechanical", "<EOS>", 302, 108, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -5.455127952287171, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "MechanicalMechanical"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.18517804145813, -1.1453468799591064, -0.003368379781022668, -8.392333984375e-05, -0.8964347839355469, -0.20219802856445312, -5.91278076171875e-05, -0.015843156725168228, -3.552436828613281e-05, -2.1457672119140625e-06, -3.62396240234375e-05, -7.62939453125e-06, -2.777537883957848e-05, -1.9073468138230965e-06, -5.602836608886719e-06, -2.264974000354414e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MechanicalMechanical(2),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Dragonling", "Dragonling", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -5.57546526834642, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalDragonlingDragonling"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -0.025369908660650253, -5.4669108390808105, -0.0009270462905988097, -0.003269195556640625, 0.0, -0.018235325813293457, -2.110004425048828e-05, -1.01327859738376e-05, -5.340576171875e-05, -0.000118255615234375, -0.000240058550843969, -2.0265558760002023e-06, -3.6954879760742188e-06, -1.2040065485052764e-05, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonlingDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Mechanical", "Mechanical", "<EOS>", 302, 111, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -5.5993357649409745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Name", "id": "MechanicalMechanical"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.18517804145813, -1.1453468799591064, -0.003368379781022668, -8.392333984375e-05, -1.089681625366211, -0.10725975036621094, -1.52587890625e-05, -0.06178949400782585, -2.3126602172851562e-05, -3.933906555175781e-06, -4.00543212890625e-05, -5.7220458984375e-06, -3.385485979379155e-05, -1.1920922133867862e-06, -5.602836608886719e-06, -2.3841830625315197e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(MechanicalMechanical(3),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Mechanical", "Mechanical", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -6.069085135805722, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalMechanicalMechanical"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -3.9708445072174072, -1.7224048376083374, -0.3013198971748352, -0.01303863525390625, -1.9073486328125e-06, -0.0007160869427025318, -1.919269561767578e-05, -8.58306884765625e-06, -4.1961669921875e-05, -0.0001068115234375, -0.0002666354412212968, -2.50339189733495e-06, -7.510185241699219e-06, -1.1920858014491387e-05, -3.814697265625e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanicalMechanical()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -6.205956083024262, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Mechanical"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -6.14277458190918, -0.000400543212890625, -1.9073486328125e-06, -0.0022273026406764984, -1.1563301086425781e-05, -6.675719760096399e-06, -4.9591064453125e-05, -4.57763671875e-05, -0.00013207513256929815, -9.536738616588991e-07, -5.602836608886719e-06, -7.271740287251305e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(Mechanical()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Mechanical", "<EOS>", 302, 111, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -6.256180531566315, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Name", "id": "Mechanical"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.18517804145813, -0.6781630516052246, -5.340576171875e-05, -2.079782485961914, -0.11754608154296875, -7.62939453125e-06, -0.18882550299167633, -2.8967857360839844e-05, -5.841255187988281e-06, -4.57763671875e-05, -5.7220458984375e-06, -3.2543604902457446e-05, -8.344646857949556e-07, -5.7220458984375e-06, -2.3841830625315197e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Mechanical(3),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Mechanic", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -6.3351861360075645, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalMechanic"}], "_type": "Call", "func": {"_type": "Name", "id": "Summon"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -6.22405481338501, -0.008976006880402565, -0.021028518676757812, -1.9073486328125e-06, -0.020575519651174545, -2.8848648071289062e-05, -8.821482879284304e-06, -5.14984130859375e-05, -8.392333984375e-05, -6.901978485984728e-05, -1.1920922133867862e-06, -3.814697265625e-06, -1.0013530300057027e-05, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalMechanic()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Mechanical", "<EOS>", 302, 108, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -6.407633985653092, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "Mechanical"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.18517804145813, -0.6781630516052246, -5.340576171875e-05, -1.9055814743041992, -0.6001663208007812, -6.866455078125e-05, -0.03178713098168373, -5.054473513155244e-05, -2.2649765014648438e-06, -3.814697265625e-05, -7.62939453125e-06, -3.123234637314454e-05, -1.4305104514278355e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Mechanical(2),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "Mechanical", "<EOS>", 302, 93, 213, "Mechanical", "Dragonling", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156], "score": -6.584713814891984, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "MechanicalDragonling"}], "_type": "Call", "func": {"_type": "Name", "id": "SummonMechanical"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "name": "DragonlingMechanic"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -6.372436046600342, -0.00456216000020504, -0.0002307891845703125, -0.09046077728271484, -3.814697265625e-05, -0.004539236426353455, -0.057001225650310516, -0.0010873372666537762, -0.0008945465087890625, 0.0, -0.0029023883398622274, -9.655952453613281e-06, -1.0371208190917969e-05, -3.62396240234375e-05, -8.20159912109375e-05, -0.000206091528525576, -8.344646857949556e-07, -5.602836608886719e-06, -7.986990567587782e-06, -1.9073486328125e-06], "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(SummonMechanical(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n"}, {"choice_history": [139, 193, 314], "score": -24.169326782226562, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, 0.0, -24.1693172454834], "inferred_code": ""}], "index": 25}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -0.20868558191749997, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.10057544708251953, -0.0012510220985859632, -9.417517503607087e-06, -0.03110945224761963, 0.0, -0.0001888275146484375, -0.0038557052612304688, -3.24249267578125e-05, -0.0013294219970703125, -5.7220458984375e-06, -0.0009517669677734375, -0.0031769268680363894, -3.838539123535156e-05, -7.62939453125e-06, -0.0038232803344726562, -0.0007686614990234375, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -3.2510054207136747, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -2.3599138259887695, -0.1840749830007553, -3.755058423848823e-05, -0.6260166168212891, 0.0, -5.14984130859375e-05, -0.009205818176269531, -1.52587890625e-05, -0.0025157928466796875, -5.7220458984375e-06, -0.0007419586181640625, -0.003437160747125745, -3.838539123535156e-05, -7.62939453125e-06, -0.002788543701171875, -0.0005931854248046875, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.3987501894784984, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -2.3599138259887695, -0.1840749830007553, -3.755058423848823e-05, -0.7886962890625, 0.0, -9.5367431640625e-06, -0.00118255615234375, -7.43865966796875e-05, -0.0015300444792956114, -1.0132789611816406e-05, -0.001659393310546875, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.9411866972181926, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.10057544708251953, -0.0012510220985859632, -9.417517503607087e-06, -3.7726588249206543, 0.0, -1.9073486328125e-05, -0.0022430419921875, -8.58306884765625e-05, -0.001616562600247562, -1.0132789611816406e-05, -0.001155853271484375, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -4.553382863328352, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -3.6508865356445312, -1.9073486328125e-06, -0.6536693572998047, -0.013330740854144096, -2.6345238438807428e-05, -0.07375657558441162, 0.0, -5.7220458984375e-06, -0.0015392303466796875, -4.38690185546875e-05, -0.0007282842416316271, -1.0371208190917969e-05, -0.0009708404541015625, -0.001129150390625, -3.814697265625e-06, -7.62939453125e-05, -0.003818511962890625, 0.0, -1.1444091796875e-05, -0.00014495849609375, 0.0, -0.07006263732910156, -0.0012588563840836287, -9.775143553270027e-06, -0.039925575256347656, 0.0, -0.000152587890625, -0.00351715087890625, -3.24249267578125e-05, -0.0013141632080078125, -5.7220458984375e-06, -0.0009403228759765625, -0.003193496959283948, -4.029273986816406e-05, -7.62939453125e-06, -0.003704071044921875, -0.000804901123046875, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "2", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.821193429653697, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "2", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -2.3599138259887695, -1.8065999746322632, 0.0, -0.5882006883621216, 0.0, -9.5367431640625e-06, -0.0011386871337890625, -0.0001087188720703125, -0.0016325187170878053, -6.198883056640625e-06, -0.00202178955078125, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.2.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "2", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -5.1644902479724735, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "2", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -2.3599138259887695, -1.8065999746322632, 0.0, -0.9159203767776489, 0.0, -4.9591064453125e-05, -0.0054950714111328125, -1.71661376953125e-05, -0.010697364807128906, -1.52587890625e-05, -0.0003910064697265625, -0.0017871852032840252, -3.635883331298828e-05, -7.62939453125e-06, -0.0013685226440429688, -0.000629425048828125, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.2.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -5.198486418346413, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -4.525934219360352, -0.3115577697753906, -0.09898948669433594, -2.09808349609375e-05, -3.814697265625e-06, -0.0025342688895761967, -0.0002130270004272461, -4.76837158203125e-05, -3.814697265625e-06, -0.0003795623779296875, -0.0004407167434692383, 0.0, -0.0001964569091796875, -7.2479248046875e-05, -0.00032830238342285156, -6.306171417236328e-05, -0.0003681182861328125, -0.0046520233154296875, -0.00275421142578125, -0.000316619873046875, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -3.814697265625e-06, -0.1060781478881836, -0.003206610679626465, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0003490447998046875, -4.76837158203125e-05, -0.0008122912258841097, -4.0531158447265625e-06, -0.000293731689453125, -0.0006465911865234375, -3.814697265625e-06, -7.62939453125e-05, -0.002307891845703125, 0.0, -1.9073486328125e-05, -0.0001773834228515625, 0.0, -0.08813762664794922, -0.00120765739120543, -8.940683983382769e-06, -0.03059673309326172, 0.0, -0.000194549560546875, -0.0039615631103515625, -3.24249267578125e-05, -0.0013332366943359375, -5.7220458984375e-06, -0.0009613037109375, -0.003173231380060315, -3.838539123535156e-05, -7.62939453125e-06, -0.0038938522338867188, -0.00075531005859375, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -5.512535993304027, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -3.6508865356445312, -1.9073486328125e-06, -1.3462133407592773, -0.009351372718811035, -4.291534423828125e-06, -0.20239901542663574, 0.0, -0.0001201629638671875, -0.05459880828857422, -1.52587890625e-05, -0.003223419189453125, -7.62939453125e-06, -0.0009212493896484375, -0.0023218386340886354, -2.6941299438476562e-05, -5.7220458984375e-06, -0.004779815673828125, -0.0007228851318359375, -0.012004852294921875, -1.9073486328125e-06, -1.52587890625e-05, -0.000865936279296875, -1.9073486328125e-06, -4.76837158203125e-05, -0.00017547607421875, 0.0, -0.13923168182373047, -0.0010316763073205948, -7.987013304955326e-06, -0.0416489839553833, 0.0, -0.0001621246337890625, -0.0028619766235351562, -2.47955322265625e-05, -0.0015583038330078125, -3.814697265625e-06, -0.0008640289306640625, -0.0031725161243230104, -4.410743713378906e-05, -7.62939453125e-06, -0.0040798187255859375, -0.0008640289306640625, 0.0], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.032453660166986, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -5.994214057922363, -6.67572021484375e-05, -0.0017833709716796875, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.012081146240234375, -0.0013390779495239258, -1.1920928244535389e-07, -2.47955322265625e-05, -0.000240325927734375, -8.96453857421875e-05, -0.0006633777520619333, -5.9604644775390625e-06, -0.00043487548828125, -1.9073486328125e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 156], "score": -6.419871395566126, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_temp_attack", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.10057544708251953, -0.0012510220985859632, -9.417517503607087e-06, -6.248684406280518, 0.0, -0.006435394287109375, -0.0013484954833984375, -5.7220458984375e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.change_temp_attack(2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "hero", "<EOS>", 302, 108, 113, 156], "score": -6.425625985600611, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.10057544708251953, -0.0012510220985859632, -9.417517503607087e-06, -0.03110945224761963, 0.0, -0.0001888275146484375, -0.0038557052612304688, -3.24249267578125e-05, -0.0013294219970703125, -5.7220458984375e-06, -0.0009517669677734375, -6.2168378829956055, -7.62939453125e-06, -0.0002536773681640625, -0.00635528564453125, -0.0012989044189453125, -1.9073486328125e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.hero(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 115, 113, 156], "score": -6.807720844979023, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.10057544708251953, -0.0012510220985859632, -9.417517503607087e-06, -0.03110945224761963, 0.0, -0.0001888275146484375, -0.0038557052612304688, -3.24249267578125e-05, -0.0013294219970703125, -5.7220458984375e-06, -0.0009517669677734375, -0.0031769268680363894, -3.838539123535156e-05, -7.62939453125e-06, -6.603213310241699, -0.0004062652587890625, -7.62939453125e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.84563913232477, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "DrainLife"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -6.784682273864746, -3.24249267578125e-05, 0.0, -0.000225067138671875, -0.0016479464247822762, -7.62939453125e-06, -1.9073486328125e-06], "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 314], "score": -25.455278396606445, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.00543212890625e-05, 0.0, -25.455238342285156], "inferred_code": ""}], "index": 26}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -0.08690463187437558, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -0.00441741943359375, -0.0004787445068359375, -1.33514404296875e-05, -0.000637054443359375, 0.0, -0.006163597106933594, -5.7220458984375e-06, -4.00543212890625e-05, -2.47955322265625e-05, -0.0029392242431640625, -9.5367431640625e-06, -0.0004291534423828125, -7.05718994140625e-05, -0.0009969917591661215, -3.7550926208496094e-05, -0.000278472900390625, -0.00048828125, -0.000438690185546875, -0.0022525787353515625, -0.0059070587158203125, -8.96453857421875e-05, -1.71661376953125e-05, 0.0, -5.1856040954589844e-05, -4.172325134277344e-06, -0.0004634857177734375, -9.5367431640625e-06, -0.0002256631851196289, -8.535384404240176e-05, -1.9073486328125e-06, -0.0009174346923828125, -1.71661376953125e-05, -2.0265558760002023e-06, -3.814689989667386e-06, -4.148227162659168e-06, -2.3841855067985307e-07, -3.814697265625e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -4.792694761248157, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -4.735063552856445, -0.012418746948242188, -0.0017442703247070312, 0.0, -2.288818359375e-05, 0.0, -0.004754066467285156, -0.0003299713134765625, -5.7220458984375e-06, -0.0013532638549804688, 0.0, -0.009312629699707031, -7.62939453125e-06, -3.4332275390625e-05, -3.62396240234375e-05, -0.0033550262451171875, -9.5367431640625e-06, -0.0003986358642578125, -8.0108642578125e-05, -0.0010297434637323022, -3.7550926208496094e-05, -0.0002994537353515625, -0.0004558563232421875, -0.0005397796630859375, -0.0019989013671875, -0.0058383941650390625, -8.7738037109375e-05, -1.9073486328125e-05, 0.0, -5.7578086853027344e-05, -6.079673767089844e-06, -0.000476837158203125, -9.5367431640625e-06, -0.0002332925796508789, -8.523463475285098e-05, -1.9073486328125e-06, -0.0009002685546875, -1.71661376953125e-05, -2.0265558760002023e-06, -3.814689989667386e-06, -2.596643753349781e-06, -2.3841855067985307e-07, -3.814697265625e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -5.0414612282765745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -4.761906623840332, -0.001003265380859375, -5.7220458984375e-06, 0.0, -0.11017417907714844, 0.0, -0.000889897346496582, -1.8715853002504446e-05, -0.0931396484375, -0.023412704467773438, 0.0, -7.43865966796875e-05, 0.0, -0.0072803497314453125, -0.000591278076171875, -7.62939453125e-06, -0.005076408386230469, 0.0, -0.0030193328857421875, -1.9073486328125e-06, -5.14984130859375e-05, -2.6702880859375e-05, -0.003635406494140625, -9.5367431640625e-06, -0.0002460479736328125, -6.4849853515625e-05, -0.0009650351712480187, -4.1484832763671875e-05, -0.000362396240234375, -0.0003337860107421875, -0.000446319580078125, -0.0050487518310546875, -0.010189056396484375, -9.72747802734375e-05, -1.52587890625e-05, 0.0, -6.699562072753906e-05, -4.172325134277344e-06, -0.0003814697265625, -7.62939453125e-06, -0.00020647048950195312, -7.975100743351504e-05, -1.9073486328125e-06, -0.000888824462890625, -1.71661376953125e-05, -2.0265558760002023e-06, -3.6954811548639555e-06, -4.168774466961622e-06, -2.3841855067985307e-07, -3.4332275390625e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 36, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 120, 120, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Used", "Damage", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -5.498721796872587, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template52"}, {"_type": "Template52"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "UsedDamage"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -3.705531120300293, -0.0002727508544921875, -1.9073486328125e-06, -0.0011005401611328125, 0.0, -0.017719268798828125, -0.00174713134765625, -8.20159912109375e-05, -0.0011466741561889648, -5.245195097813848e-06, -1.33514404296875e-05, -0.0001201629638671875, -0.0020275115966796875, -7.62939453125e-05, -6.4849853515625e-05, -5.53131103515625e-05, -0.003406524658203125, -0.000164031982421875, -0.031151771545410156, -0.0076923370361328125, -0.09726428985595703, -0.0009307861328125, 0.0, -0.7085045576095581, -2.384185791015625e-06, -0.0005245208740234375, -0.0004291534423828125, -1.1444091796875e-05, -0.04061412811279297, -1.9073486328125e-06, -0.0014743804931640625, -0.0028247833251953125, -3.24249267578125e-05, -0.00014495849609375, -7.62939453125e-06, -0.0049686431884765625, -3.24249267578125e-05, -0.003322601318359375, 0.0, -0.6356449127197266, -0.1584010124206543, -2.4080070943455212e-05, -0.0002155303955078125, -3.814697265625e-06, -0.000553131103515625, -3.0517578125e-05, -1.9073486328125e-06, -3.814697265625e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.01017259806394577, -0.0006688833236694336, -8.7738037109375e-05, -0.0007419586181640625, -0.0014743804931640625, -0.010731697082519531, -0.008943557739257812, -0.0011043548583984375, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -7.987022399902344e-06, -0.00012969970703125, -9.5367431640625e-06, -0.00011479854583740234, -6.580352055607364e-05, -1.9073486328125e-06, -0.002681732177734375, -8.20159912109375e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True, effects=[Effect(UsedDamage(),\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -5.893634158828348, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -5.719125747680664, -0.000148773193359375, -1.33514404296875e-05, 0.0, -0.0067920684814453125, 0.0, -0.08563518524169922, 0.0, -7.82012939453125e-05, -0.0004425048828125, -0.006763458251953125, -4.768370445162873e-07, -0.000225067138671875, -1.9073486328125e-06, -6.866455078125e-05, -2.09808349609375e-05, -0.0024433135986328125, -9.5367431640625e-06, -9.918212890625e-05, -2.6702880859375e-05, -0.0013137829955667257, -3.898143404512666e-05, -0.0002269744873046875, -0.00031280517578125, -0.0003299713134765625, -0.003330230712890625, -0.0048999786376953125, -8.0108642578125e-05, -2.09808349609375e-05, 0.0, -6.699562072753906e-05, -4.172325134277344e-06, -0.00049591064453125, -9.5367431640625e-06, -0.0002447366714477539, -8.70227740961127e-05, -1.9073486328125e-06, -0.0008716583251953125, -1.71661376953125e-05, -2.145764938177308e-06, -3.6954811548639555e-06, -3.5910634323954582e-06, -2.3841855067985307e-07, -3.24249267578125e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -5.930991813614099, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -0.00441741943359375, -0.0004787445068359375, -1.33514404296875e-05, -0.000637054443359375, 0.0, -0.006163597106933594, -5.7220458984375e-06, -4.00543212890625e-05, -2.47955322265625e-05, -0.0029392242431640625, -9.5367431640625e-06, -0.0004291534423828125, -7.05718994140625e-05, -0.0009969917591661215, -3.7550926208496094e-05, -0.000278472900390625, -0.00048828125, -0.000438690185546875, -0.0022525787353515625, -5.84583854675293, -0.003147125244140625, -6.866455078125e-05, 0.0, -0.0008835792541503906, -5.9604644775390625e-06, -0.0006732940673828125, -9.5367431640625e-06, -0.00010502338409423828, -7.677078247070312e-05, -7.62939453125e-06, -0.0010585784912109375, -1.52587890625e-05, -1.1920922133867862e-06, -3.3378546504536644e-06, -2.6563648134469986e-06, -2.3841855067985307e-07, -2.86102294921875e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 36, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 120, 120, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Attack", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.111973001680553, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template52"}, {"_type": "Template52"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Attack"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -3.705531120300293, -0.0002727508544921875, -1.9073486328125e-06, -0.0011005401611328125, 0.0, -0.017719268798828125, -0.00174713134765625, -8.20159912109375e-05, -0.0011466741561889648, -5.245195097813848e-06, -1.33514404296875e-05, -0.0001201629638671875, -0.0020275115966796875, -7.62939453125e-05, -6.4849853515625e-05, -5.53131103515625e-05, -0.003406524658203125, -0.000164031982421875, -0.031151771545410156, -0.0076923370361328125, -0.09726428985595703, -0.0009307861328125, 0.0, -0.7085045576095581, -2.384185791015625e-06, -0.0005245208740234375, -0.0004291534423828125, -1.1444091796875e-05, -0.04061412811279297, -1.9073486328125e-06, -0.0014743804931640625, -0.0028247833251953125, -3.24249267578125e-05, -0.00014495849609375, -7.62939453125e-06, -0.0049686431884765625, -3.24249267578125e-05, -0.003322601318359375, 0.0, -1.3997855186462402, -0.0028716325759887695, -7.43865966796875e-05, -1.9073486328125e-06, -0.0062274932861328125, -8.0108642578125e-05, 0.0, -5.7220458984375e-05, -1.9073486328125e-06, 0.0, -0.009005534462630749, -0.0010554790496826172, -8.96453857421875e-05, -0.00118255615234375, -0.001544952392578125, -0.00951385498046875, -0.009412765502929688, -0.00115203857421875, -2.288818359375e-05, 0.0, -2.491474151611328e-05, -7.987022399902344e-06, -0.0001220703125, -7.62939453125e-06, -0.00010907649993896484, -6.580352055607364e-05, -1.9073486328125e-06, -0.002742767333984375, -8.58306884765625e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, charge=True, effects=[Effect(Attack(),\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 36, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 120, 120, 311, 138, 291, "divine_shield", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Used", "Damage", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.1187706187618005, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template52"}, {"_type": "Template52"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "UsedDamage"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -3.705531120300293, -0.0002727508544921875, -1.9073486328125e-06, -0.0011005401611328125, 0.0, -0.017719268798828125, -0.00174713134765625, -8.20159912109375e-05, -0.0011466741561889648, -5.245195097813848e-06, -1.33514404296875e-05, -0.0001201629638671875, -0.0020275115966796875, -7.62939453125e-05, -6.4849853515625e-05, -5.53131103515625e-05, -0.003406524658203125, -0.000164031982421875, -0.031151771545410156, -0.0076923370361328125, -0.09726428985595703, -0.0009307861328125, 0.0, -1.2548969984054565, -5.841255187988281e-06, -0.005260467529296875, -0.0054931640625, -5.14984130859375e-05, -0.12418842315673828, -1.9073486328125e-06, -0.0015735626220703125, -0.0015277862548828125, -3.24249267578125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0044727325439453125, -3.0517578125e-05, -0.0021038055419921875, 0.0, -0.6097444891929626, -0.1680840253829956, -2.479531212884467e-05, -0.0002231597900390625, -3.814697265625e-06, -0.0005245208740234375, -2.6702880859375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.01000868622213602, -0.0006469488143920898, -8.96453857421875e-05, -0.0007495880126953125, -0.001476287841796875, -0.010611534118652344, -0.008575439453125, -0.0010929107666015625, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -7.987022399902344e-06, -0.00012969970703125, -9.5367431640625e-06, -0.00011479854583740234, -6.580352055607364e-05, -1.9073486328125e-06, -0.002780914306640625, -7.62939453125e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, divine_shield=True, effects=[Effect(UsedDamage(\n            ), ActionTag(Damage(1), CharacterSelector(players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 97, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -6.312593219632134, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -6.267218589782715, -0.004055023193359375, -0.002857208251953125, 0.0, -2.86102294921875e-05, 0.0, -0.003009796142578125, -0.0010128021240234375, -9.5367431640625e-06, -0.0005950927734375, 0.0, -0.005828857421875, -3.814697265625e-06, -4.00543212890625e-05, -2.47955322265625e-05, -0.0031757354736328125, -7.62939453125e-06, -0.000396728515625, -8.58306884765625e-05, -0.0009365623700432479, -3.933906555175781e-05, -0.0002574920654296875, -0.0005245208740234375, -0.0004405975341796875, -0.002262115478515625, -0.0062084197998046875, -8.7738037109375e-05, -1.71661376953125e-05, 0.0, -5.7578086853027344e-05, -4.172325134277344e-06, -0.0004901885986328125, -9.5367431640625e-06, -0.0002275705337524414, -8.714198338566348e-05, -1.9073486328125e-06, -0.0009002685546875, -1.71661376953125e-05, -2.0265558760002023e-06, -3.814689989667386e-06, -2.4806358851492405e-06, -2.3841855067985307e-07, -3.814697265625e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 172, 66, 302, 85, 195, "Null", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -6.66838640845679, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -0.00441741943359375, -0.0004787445068359375, -1.33514404296875e-05, -0.000637054443359375, 0.0, -0.006163597106933594, -5.7220458984375e-06, -4.00543212890625e-05, -2.47955322265625e-05, -0.0029392242431640625, -9.5367431640625e-06, -0.0004291534423828125, -7.05718994140625e-05, -0.0009969917591661215, -3.7550926208496094e-05, -0.000278472900390625, -0.00048828125, -0.000438690185546875, -6.401252746582031, -0.0038423538208007812, -0.0074825286865234375, -0.018546104431152344, -3.0517578125e-05, -0.0022764205932617188, -7.62939453125e-06, -0.00025177001953125, -0.0005550384521484375, -1.9073486328125e-06, -0.12038707733154297, -1.1920928244535389e-07, -0.034501075744628906, -2.47955322265625e-05, -0.0013813972473144531, -0.000663399463519454, -3.933906555175781e-06, -0.00029754638671875, -2.86102294921875e-05, -1.6689286894688848e-06, -4.768360213347478e-06, -2.7993519324809313e-06, -3.576278118089249e-07, -2.86102294921875e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 74, 284, 303, 79, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 79, 171, 25, 194, "Random", "Picker", "<EOS>", 302, 108, 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -6.683482010075409, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Tuple", "elts": [{"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}, {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}]}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -0.00441741943359375, -0.0004787445068359375, -1.33514404296875e-05, -0.000637054443359375, 0.0, -5.519159317016602, -0.06239032745361328, -0.0008335113525390625, -0.0003299713134765625, 0.0, -0.004703521728515625, -1.71661376953125e-05, -0.011812210083007812, -2.09808349609375e-05, -0.0001983642578125, -5.7220458984375e-06, -0.0004343943437561393, -3.3855438232421875e-05, -6.866455078125e-05, -0.00107574462890625, -0.0002574920654296875, -0.0022335052490234375, -0.013545989990234375, -0.000202178955078125, -1.9073486328125e-05, 0.0, -4.208087921142578e-05, -7.987022399902344e-06, -0.0002765655517578125, -1.1444091796875e-05, -0.00020062923431396484, -5.996226900606416e-05, -1.9073486328125e-06, -0.0004978179931640625, -1.9073486328125e-06, -0.28505611419677734, -3.814697265625e-06, -0.21655559539794922, -0.10928535461425781, -4.00543212890625e-05, -0.1828327178955078, -0.2009754180908203, -0.0004940032958984375, -0.00435638427734375, -4.768370445162873e-07, -0.0005204564076848328, -1.796521246433258e-06, -1.3589766240329482e-05, -1.33514404296875e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=(\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())),\n            RandomPicker(2)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 36, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 120, 120, 311, 138, 291, "divine_shield", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Attack", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.800491170085252, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template52"}, {"_type": "Template52"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "divine_shield", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Attack"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -3.705531120300293, -0.0002727508544921875, -1.9073486328125e-06, -0.0011005401611328125, 0.0, -0.017719268798828125, -0.00174713134765625, -8.20159912109375e-05, -0.0011466741561889648, -5.245195097813848e-06, -1.33514404296875e-05, -0.0001201629638671875, -0.0020275115966796875, -7.62939453125e-05, -6.4849853515625e-05, -5.53131103515625e-05, -0.003406524658203125, -0.000164031982421875, -0.031151771545410156, -0.0076923370361328125, -0.09726428985595703, -0.0009307861328125, 0.0, -1.2548969984054565, -5.841255187988281e-06, -0.005260467529296875, -0.0054931640625, -5.14984130859375e-05, -0.12418842315673828, -1.9073486328125e-06, -0.0015735626220703125, -0.0015277862548828125, -3.24249267578125e-05, -0.000110626220703125, -7.62939453125e-06, -0.0044727325439453125, -3.0517578125e-05, -0.0021038055419921875, 0.0, -1.4525833129882812, -0.002919316291809082, -7.62939453125e-05, -1.9073486328125e-06, -0.0057125091552734375, -7.62939453125e-05, 0.0, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -0.00872670579701662, -0.0010401010513305664, -8.96453857421875e-05, -0.0011119842529296875, -0.0015010833740234375, -0.009586334228515625, -0.008962631225585938, -0.0011615753173828125, -2.288818359375e-05, 0.0, -2.491474151611328e-05, -7.987022399902344e-06, -0.0001239776611328125, -7.62939453125e-06, -0.00010907649993896484, -6.580352055607364e-05, -1.9073486328125e-06, -0.002849578857421875, -8.0108642578125e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, divine_shield=True, effects=[Effect(Attack(),\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 36, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 120, 120, 311, 138, 291, "stealth", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Used", "Damage", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.819043833648493, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template52"}, {"_type": "Template52"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "stealth", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "UsedDamage"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -3.705531120300293, -0.0002727508544921875, -1.9073486328125e-06, -0.0011005401611328125, 0.0, -0.017719268798828125, -0.00174713134765625, -8.20159912109375e-05, -0.0011466741561889648, -5.245195097813848e-06, -1.33514404296875e-05, -0.0001201629638671875, -0.0020275115966796875, -7.62939453125e-05, -6.4849853515625e-05, -5.53131103515625e-05, -0.003406524658203125, -0.000164031982421875, -0.031151771545410156, -0.0076923370361328125, -0.09726428985595703, -0.0009307861328125, 0.0, -2.0702311992645264, -4.0531158447265625e-06, -0.000171661376953125, -0.000209808349609375, -1.9073486328125e-06, -0.018344879150390625, -1.9073486328125e-06, -0.0012989044189453125, -0.002918243408203125, -4.57763671875e-05, -0.0001888275146484375, -7.62939453125e-06, -0.003017425537109375, -3.62396240234375e-05, -0.0029010772705078125, 0.0, -0.615312933921814, -0.165199875831604, -2.4318522264366038e-05, -0.0002117156982421875, -3.814697265625e-06, -0.00049591064453125, -4.9591064453125e-05, -1.9073486328125e-06, -3.4332275390625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.00983833521604538, -0.0006470680236816406, -8.58306884765625e-05, -0.000774383544921875, -0.001255035400390625, -0.01004791259765625, -0.007837295532226562, -0.0010585784912109375, -2.288818359375e-05, 0.0, -2.300739288330078e-05, -7.987022399902344e-06, -0.0001277923583984375, -9.5367431640625e-06, -0.00011670589447021484, -6.580352055607364e-05, -1.9073486328125e-06, -0.0024776458740234375, -7.62939453125e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(6, 6, stealth=True, effects=[Effect(UsedDamage(),\n            ActionTag(Damage(1), CharacterSelector(players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 82, 189, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 79, 171, 25, 194, "Random", "Picker", "<EOS>", 302, 108, 154, 205, "6", "<EOS>", "6", "<EOS>", 156], "score": -8.578091179362445, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}]}, {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "name": "DreadInfernal"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -0.00441741943359375, -0.0004787445068359375, -1.33514404296875e-05, -0.000637054443359375, 0.0, -0.006163597106933594, -5.7220458984375e-06, -4.00543212890625e-05, -2.47955322265625e-05, -6.0661821365356445, -0.001056671142578125, -0.0160675048828125, -0.00012969970703125, -0.0001583099365234375, -0.0005855560302734375, -3.814697265625e-06, -0.0009759641252458096, -5.3405718063004315e-05, -0.000179290771484375, -0.0004711151123046875, -0.07825469970703125, -0.19140243530273438, -0.4270448684692383, -0.0005664825439453125, -2.6702880859375e-05, 0.0, -5.352497100830078e-05, -4.0531158447265625e-06, -0.000545501708984375, -1.52587890625e-05, -0.00019669532775878906, -6.520748138427734e-05, -1.9073486328125e-06, -0.026376724243164062, -0.01294708251953125, -0.0063343048095703125, 0.0, -0.5935745239257812, -0.553800106048584, -0.0005578994750976562, -0.023914337158203125, -0.5005645751953125, -0.0003528594970703125, -0.004131317138671875, -1.9073468138230965e-06, -0.0003261058882344514, -2.9825023375451565e-06, -1.6093124941107817e-05, -2.47955322265625e-05], "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry([Damage(1), CharacterSelector(players=BothPlayer())],\n            RandomPicker(2)))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n"}, {"choice_history": [139, 193, 314], "score": -24.160219192504883, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, 0.0, -24.160200119018555], "inferred_code": ""}], "index": 27}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -0.029118127840803254, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -0.0033740997314453125, -2.5391578674316406e-05, -0.00141143798828125, -0.0002899169921875, -0.0003459453582763672, -0.007052063941955566, -3.0517578125e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.320817141793668e-05, -3.576278118089249e-07, -0.0001719883584883064, -2.3841855067985307e-07, -7.62939453125e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "User", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -5.555486112523681, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserUser"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -0.0033740997314453125, -2.5391578674316406e-05, -0.00141143798828125, -0.0002899169921875, -0.0003459453582763672, -5.393062114715576, -0.14023220539093018, -3.4332275390625e-05, -1.1444091796875e-05, -0.00012588026584126055, -5.960462772236497e-07, -0.00026040920056402683, -3.576278118089249e-07, -7.62939453125e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserUser())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.597832506605698, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -5.903569221496582, -3.063678741455078e-05, -0.000484466552734375, -0.0002307891845703125, -0.6603453159332275, -0.016596078872680664, -9.5367431640625e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.186274160631001e-05, -9.536738616588991e-07, -0.0001295688998652622, -5.960462772236497e-07, -7.62939453125e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), players=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 136, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.704580269507119, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "Template32"}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -6.689215660095215, -0.00118255615234375, -2.6702880859375e-05, -2.4199331164709292e-05, -1.4305104514278355e-06, -0.00023733022680971771, -8.344646857949556e-07, 0.0], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), taunt=True)))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.714364867222912, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -5.903569221496582, -3.063678741455078e-05, -0.000484466552734375, -0.0002307891845703125, -0.7929937839508057, -0.0004274844832252711, -7.62939453125e-06, -8.96453857421875e-05, -7.62939453125e-06, -6.15108510828577e-05, -1.6689286894688848e-06, -0.00015139978495426476, -8.344646857949556e-07, -3.814697265625e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 25, 194, "Hero", "Selector", "<EOS>", 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.06147153180018, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Name", "id": "HeroSelector"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -7.043645858764648, 0.0, -0.006396173965185881, -0.00036454200744628906, -4.649158654501662e-06, -0.00133514404296875, -2.6702880859375e-05, -7.2479248046875e-05, -0.000133514404296875, -7.748603820800781e-06, -0.00019073486328125, -3.4332275390625e-05, -0.0007905960083007812, -0.0001306530029978603, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, -2.1458574337884784e-05, -9.536738616588991e-07, -0.00012406903260853142, -4.768370445162873e-07, -1.9073486328125e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1), HeroSelector\n            (players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.19022351991137, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -7.143034934997559, -1.9073486328125e-05, -0.0004940032958984375, -0.0004677772521972656, -1.9073486328125e-06, -0.0024013519287109375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.000431060791015625, 0.0, -0.010196685791015625, -1.9073486328125e-06, -0.00029754638671875, -0.0002536773681640625, -0.0011043548583984375, -2.0265579223632812e-06, -0.0004787445068359375, -1.9073486328125e-06, -7.62939453125e-05, -7.62939453125e-06, -0.000629425048828125, -5.7220458984375e-06, -0.000148773193359375, -1.33514404296875e-05, -0.00038932106690481305, -0.00033986568450927734, -5.53131103515625e-05, -9.918212890625e-05, -0.0027523040771484375, -0.000431060791015625, -0.0010623931884765625, -0.002353668212890625, -1.1444091796875e-05, -1.52587890625e-05, -0.00014603137969970703, -8.940695806813892e-06, -0.0007190704345703125, -0.00025177001953125, -0.0007039308547973633, -0.00012099742161808535, -3.814697265625e-06, -0.0037975311279296875, -7.82012939453125e-05, -0.00390625, -2.5391578674316406e-05, -0.0013561248779296875, -0.000225067138671875, -0.0003381967544555664, -0.00686800479888916, -2.86102294921875e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.451953181065619e-05, -3.576278118089249e-07, -0.0001794981799321249, -2.3841855067985307e-07, -3.814697265625e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.565553567703347, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserUserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -0.0033740997314453125, -2.5391578674316406e-05, -0.00141143798828125, -0.0002899169921875, -0.0003459453582763672, -5.393062114715576, -2.150376319885254, -1.33514404296875e-05, -1.52587890625e-05, -1.1444091796875e-05, -0.00011813465971499681, -3.576278118089249e-07, -0.00019948251429013908, -2.3841855067985307e-07, -5.7220458984375e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserUserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Ended", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.601638694872285, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserEnded"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -0.0033740997314453125, -2.5391578674316406e-05, -0.00141143798828125, -0.0002899169921875, -0.0003459453582763672, -7.579322338104248, -0.0001468658447265625, -3.0517578125e-05, -9.5367431640625e-06, -0.00010215763177257031, -3.576278118089249e-07, -0.00026993657229468226, -1.1920928244535389e-07, -5.7220458984375e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserEnded())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.862441371897226, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -7.838251113891602, -0.0003224611282348633, -3.814697265625e-06, -0.000492095947265625, -0.0001354217529296875, -0.002017974853515625, -1.5616416931152344e-05, -0.0008563995361328125, -0.000141143798828125, -0.00030219554901123047, -0.006561875343322754, -2.6702880859375e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.320851338794455e-05, -2.3841855067985307e-07, -0.00015494486433453858, -1.1920928244535389e-07, -9.5367431640625e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=EnemyPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 49, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.920496411581581, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -7.887106895446777, -0.007991790771484375, -4.9591064453125e-05, -3.814697265625e-06, -0.0028510093688964844, -4.5180320739746094e-05, -0.000347137451171875, -8.96453857421875e-05, -0.0007077455520629883, -7.11679458618164e-05, -3.814697265625e-06, -0.00146484375, -7.05718994140625e-05, -0.0024929046630859375, -2.3484230041503906e-05, -0.0010356903076171875, -0.0001697540283203125, -0.0003211498260498047, -0.007215142250061035, -2.86102294921875e-05, -1.33514404296875e-05, -7.62939453125e-06, -7.784405170241371e-05, -3.576278118089249e-07, -0.00016328602214343846, -2.3841855067985307e-07, -7.62939453125e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 312, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -8.142652343052838, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -6.485169410705566, -0.0005645751953125, -5.340576171875e-05, -0.00033867359161376953, -7.534027099609375e-05, -0.00035858154296875, -9.918212890625e-05, -0.0014919042587280273, -0.00011217594146728516, -1.9073486328125e-06, -0.0009708404541015625, -0.000141143798828125, -0.00406646728515625, -1.5735626220703125e-05, -0.0009021759033203125, -0.000171661376953125, -0.0003516674041748047, -0.006743311882019043, -2.288818359375e-05, -0.0003490447998046875, -0.0023288726806640625, -0.8778209686279297, -1.71661376953125e-05, -0.02662181854248047, -0.000247955322265625, -0.7012529373168945, -0.022627830505371094, -3.933906555175781e-06, -1.71661376953125e-05, -1.33514404296875e-05, -5.5197218898683786e-05, -2.3841855067985307e-07, -0.00014862320676911622, -1.1920928244535389e-07, -9.5367431640625e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker(),\n            players=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 312, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -8.22677715014595, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -6.485169410705566, -0.0005645751953125, -5.340576171875e-05, -0.00033867359161376953, -7.534027099609375e-05, -0.00035858154296875, -9.918212890625e-05, -0.0014919042587280273, -0.00011217594146728516, -1.9073486328125e-06, -0.0009708404541015625, -0.000141143798828125, -0.00406646728515625, -1.5735626220703125e-05, -0.0009021759033203125, -0.000171661376953125, -0.0003516674041748047, -0.006743311882019043, -2.288818359375e-05, -0.0003490447998046875, -0.0023288726806640625, -0.8778209686279297, -1.71661376953125e-05, -0.02662181854248047, -0.000247955322265625, -0.8076410293579102, -0.000306128611555323, -2.288818359375e-05, -0.0001049041748046875, -5.7220458984375e-06, -5.924604192841798e-05, -1.0728830375228426e-06, -0.00010845836368389428, -4.768370445162873e-07, -3.814697265625e-06], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker(),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -8.476032934890299, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "ElvenArcher"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -6.980772972106934, -8.96453857421875e-05, 0.0, -1.8954131519421935e-05, -2.8848617148469202e-05, -2.3841830625315197e-06, -2.121925172104966e-05, -0.000171661376953125, -2.6702880859375e-05, -7.62939453125e-06, -0.000640869140625, -2.09808349609375e-05, -0.0007457733154296875, -3.814697265625e-06, -0.49875593185424805, -3.814697265625e-06, -0.13919353485107422, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0005645751953125, 0.0, -0.008038520812988281, -1.9073486328125e-06, -0.016386032104492188, -0.0003032684326171875, -4.4465065002441406e-05, -4.470248313737102e-05, -0.000240325927734375, -0.001766204833984375, -0.0077362060546875, -0.000213623046875, -5.0069702410837635e-06, -2.7418097943154862e-06, -7.781451131450012e-05, -2.3841855067985307e-07, -0.8183823823928833, -1.1563301086425781e-05, -0.000942230224609375, 0.0], "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"choice_history": [139, 193, 314], "score": -25.14307403564453, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -25.14304542541504], "inferred_code": ""}], "index": 28}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -0.19109656517866824, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -0.09355831146240234, -0.0010814666748046875, -0.0002593994140625, -3.4332275390625e-05, -2.6702880859375e-05, -0.00022399425506591797, -1.5974044799804688e-05, -2.6702880859375e-05, -0.0005092620849609375, -0.000316619873046875, -0.00576019287109375, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006885528564453125, -1.9073486328125e-05, 0.0, -0.0032434463500976562, -0.0007207386079244316, -7.164472481235862e-05, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 95, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -2.920011063952188, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -2.8097496032714844, -0.000164031982421875, -0.0001201629638671875, -1.52587890625e-05, -3.4332275390625e-05, -0.0002557039260864258, -2.5391578674316406e-05, -1.52587890625e-05, -0.000408172607421875, -9.1552734375e-05, -0.019283294677734375, -1.9073486328125e-06, -1.71661376953125e-05, -0.0007991790771484375, -2.09808349609375e-05, 0.0, -0.0032978057861328125, -0.0011006580898538232, -8.189673826564103e-05, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 92, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -4.080434939025508, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template15"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -3.9809341430664062, -0.0010471343994140625, -0.00045013427734375, -7.62939453125e-06, -4.38690185546875e-05, -0.00012028217315673828, -1.7642974853515625e-05, -1.33514404296875e-05, -0.00041961669921875, -0.0002498626708984375, -0.007171630859375, -1.9073486328125e-06, -1.33514404296875e-05, -0.0007762908935546875, -1.9073486328125e-05, 0.0, -0.0037250518798828125, -0.0008155097020789981, -7.975095650181174e-05, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, SelfSelector(), CARD_RARITY.\n            COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -5.494380268626401, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -4.4445905685424805, -0.016930580139160156, -7.62939453125e-06, -0.008629798889160156, -0.0064340559765696526, -0.01973625086247921, -8.20159912109375e-05, -3.0517578125e-05, -0.8630496263504028, -7.152555099310121e-07, -2.47955322265625e-05, -0.030038833618164062, -0.000270843505859375, -0.03198051452636719, -1.52587890625e-05, -5.7220458984375e-06, -0.0048847198486328125, -9.5367431640625e-06, 0.0, -0.010682106018066406, -0.0009175481973215938, -0.00011348720727255568, 0.0], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        player.draw()\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 106, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -5.629091879551197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -5.48304557800293, -0.046230316162109375, -0.0003147125244140625, -1.33514404296875e-05, -2.86102294921875e-05, -0.00021016597747802734, -1.8477439880371094e-05, -1.33514404296875e-05, -0.000396728515625, -0.000400543212890625, -0.008754730224609375, -1.9073486328125e-06, -1.1444091796875e-05, -0.0009326934814453125, -1.33514404296875e-05, 0.0, -0.0033807754516601562, -0.000713585817720741, -8.285040530608967e-05, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 151, 181, 21, 174, 17, 164, 43, "mana", "<EOS>", 299, 14, 302, 86, 198, "10", "<EOS>", 315, 145, 165, 17, 164, 43, "mana", "<EOS>", 140, 39, 156], "score": -5.648590214988872, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "If", "body": [{"_type": "AugAssign", "target": {"_type": "Attribute", "attr": "mana", "value": {"_type": "Template43"}}, "value": {"_type": "Template38"}, "op": {"_type": "Add"}}], "test": {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"_type": "Attribute", "attr": "mana", "value": {"_type": "Template43"}}, "comparators": [{"n": 10, "_type": "Num"}]}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -0.09355831146240234, -0.0010814666748046875, -0.0002593994140625, -3.4332275390625e-05, -2.6702880859375e-05, -0.00022399425506591797, -1.5974044799804688e-05, -2.6702880859375e-05, -0.0005092620849609375, -0.000316619873046875, -5.221615791320801, -0.0054378509521484375, -0.009371757507324219, -0.0002956390380859375, -0.015256881713867188, 0.0, -0.0014123916625976562, -0.12882502377033234, -0.00017905235290527344, -0.0001068115234375, -0.024445533752441406, -2.47955322265625e-05, -0.00220489501953125, -9.5367431640625e-06, -0.002050315495580435, -0.0003261566162109375, -0.004962921142578125, -0.0011997222900390625, -0.0016918182373046875, -0.001308441162109375, -1.52587890625e-05, -0.00044727325439453125, -0.03985988721251488, -0.00013267960457596928, -0.0066375732421875, -0.0001888275146484375, -3.814697265625e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.mana < 10:\n            player.mana += 1\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.005706841651545, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -4.81418514251709, -0.000110626220703125, -5.7220458984375e-05, -0.0001670012716203928, -4.4226646423339844e-05, -0.00027307120035402477, -3.6716461181640625e-05, -0.040142059326171875, -0.008460044860839844, -0.11371994018554688, -0.0013408660888671875, -0.23224163055419922, -3.814697265625e-06, -0.0001010894775390625, -7.2479248046875e-05, -0.23201000690460205, 0.0, -0.0855097770690918, -2.503394853192731e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0002384185791015625, -2.0265579223632812e-06, -9.5367431640625e-06, -0.028102874755859375, -5.340576171875e-05, -0.3539543151855469, -9.5367431640625e-06, -1.71661376953125e-05, -0.004703521728515625, -3.814697265625e-06, 0.0, -0.016203880310058594, -0.0009314993512816727, -0.0001543760154163465, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 127, 318, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.483045188682809, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template65"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "activate"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "activate"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -3.0683345794677734, -0.02553844451904297, -0.0002689361572265625, -0.000179290771484375, -0.0011386871337890625, -2.4318695068359375e-05, -0.0002956390380859375, -0.0260467529296875, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.006999969482421875, -0.0043544769287109375, -0.008314132690429688, -2.09808349609375e-05, -3.814697265625e-06, -0.00017701477918308228, -2.5153160095214844e-05, -0.000500196241773665, -0.00016236305236816406, -0.0001125335693359375, -0.0838022232055664, -0.000591278076171875, -0.000274658203125, -0.006283760070800781, -0.15984630584716797, -1.0975914001464844, -1.9073486328125e-06, -0.0012187957763671875, -0.017040252685546875, -0.03519248962402344, -0.03364372253417969, -3.814697265625e-06, -1.9073486328125e-06, -0.01157379150390625, -3.0517578125e-05, 0.0, -0.00064849853515625, -0.0005267855594865978, -2.9921506211394444e-05, -0.022186279296875, -0.03701210021972656, -0.12619781494140625, -0.0009403228759765625, -8.58306884765625e-05, -0.16686439514160156, -0.0012416839599609375, 0.0, -1.9073486328125e-06, -0.4191446304321289, -0.000293731689453125, 0.0, -0.000148773193359375, -0.0006762742414139211, -3.87430154660251e-05, -0.008283615112304688, -0.07573604583740234, -0.10338497161865234, -0.0012187957763671875, -6.29425048828125e-05, -0.08693885803222656, -0.0007534027099609375, 0.0, 0.0, -0.8386449813842773, -0.00014495849609375, 0.0, -9.918212890625e-05, -0.001602768898010254, -6.091594696044922e-05, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SecretCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n\n    def activate(self, player):\n        player.draw()\n\n    def activate(self, player):\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -6.597309372637028, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -0.09355831146240234, -0.0010814666748046875, -0.0002593994140625, -3.4332275390625e-05, -2.6702880859375e-05, -0.00022399425506591797, -1.5974044799804688e-05, -2.6702880859375e-05, -0.0005092620849609375, -0.000316619873046875, -0.00576019287109375, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006885528564453125, -1.9073486328125e-05, 0.0, -5.824652671813965, -0.5854398012161255, -0.00013136857887730002, -2.6702880859375e-05], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 105, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.627540487753322, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template31"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -6.4827470779418945, -0.0005550384521484375, -3.814697265625e-06, -1.71661376953125e-05, -2.491474151611328e-05, -4.8637382860761136e-05, -1.1444091796875e-05, -0.0003414154052734375, -1.1444091796875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.026311874389648438, -0.005252838134765625, -0.009817123413085938, -3.814697265625e-05, -3.814697265625e-06, -0.00021813431521877646, -2.3365020751953125e-05, -0.00036554806865751743, -0.00017571449279785156, -9.34600830078125e-05, -0.0871438980102539, -0.0009822845458984375, -0.000247955322265625, -5.340576171875e-05, -7.2479248046875e-05, -0.0003324747085571289, -1.0848044439626392e-05, -3.4332275390625e-05, -0.00057220458984375, -0.000457763671875, -0.007476806640625, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006313323974609375, -2.288818359375e-05, 0.0, -0.0022630691528320312, -0.0006593458820134401, -6.508822116302326e-05, -1.9073486328125e-06], "inferred_code": "class ExcessMana(CHARACTER_CLASS.PRIEST):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "bounce", "<EOS>", 156], "score": -7.094771049292831, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "bounce", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -0.09355831146240234, -0.0010814666748046875, -0.0002593994140625, -3.4332275390625e-05, -2.6702880859375e-05, -0.00022399425506591797, -1.5974044799804688e-05, -2.6702880859375e-05, -0.0005092620849609375, -0.000316619873046875, -0.00576019287109375, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006885528564453125, -1.9073486328125e-05, 0.0, -5.824652671813965, -1.0787845849990845, -0.004273056983947754, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 127, 318, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 171, 17, 164, 43, "bind", "<EOS>", 303, 87, 202, "minion_died", "<EOS>", 76, 164, 42, "_reveal", "<EOS>", 156], "score": -8.16665777133494, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template65"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "activate"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "minion_died"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Template42"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "bind", "value": {"_type": "Template43"}}}}], "name": "activate"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -3.0683345794677734, -0.02553844451904297, -0.0002689361572265625, -0.000179290771484375, -0.0011386871337890625, -2.4318695068359375e-05, -0.0002956390380859375, -0.0260467529296875, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.006999969482421875, -0.0043544769287109375, -0.008314132690429688, -2.09808349609375e-05, -3.814697265625e-06, -0.00017701477918308228, -2.5153160095214844e-05, -0.000500196241773665, -0.00016236305236816406, -0.0001125335693359375, -0.0838022232055664, -0.000591278076171875, -0.000274658203125, -0.006283760070800781, -0.15984630584716797, -1.0975914001464844, -1.9073486328125e-06, -0.0012187957763671875, -0.017040252685546875, -0.03519248962402344, -0.03364372253417969, -3.814697265625e-06, -1.9073486328125e-06, -0.01157379150390625, -3.0517578125e-05, 0.0, -0.00064849853515625, -0.0005267855594865978, -2.9921506211394444e-05, -0.022186279296875, -0.03701210021972656, -0.12619781494140625, -0.0009403228759765625, -8.58306884765625e-05, -0.16686439514160156, -0.0012416839599609375, 0.0, -1.9073486328125e-06, -0.4191446304321289, -0.000293731689453125, 0.0, -0.000148773193359375, -0.0006762742414139211, -3.87430154660251e-05, -0.008283615112304688, -0.07573604583740234, -0.10338497161865234, -0.0012187957763671875, -6.29425048828125e-05, -0.08693885803222656, -0.0007534027099609375, 0.0, 0.0, -0.5667219161987305, -0.0001983642578125, -0.0005950927734375, -0.056396484375, -0.2598031759262085, -7.521864608861506e-05, -0.0029239654541015625, -7.62939453125e-05, -1.33514404296875e-05, -1.6097068786621094, -2.47955322265625e-05, -0.0058498382568359375, -1.1444091796875e-05, -0.019809722900390625, -0.001956939697265625, -1.9073486328125e-06, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SecretCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n\n    def activate(self, player):\n        player.draw()\n\n    def activate(self, player):\n        player.bind('minion_died', self._reveal)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 127, 318, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 171, 17, 164, 43, "bind", "<EOS>", 303, 87, 202, "<UNK>", "<EOS>", 76, 164, 42, "_reveal", "<EOS>", 156], "score": -8.167983855471903, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template65"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "activate"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Attribute", "attr": "_reveal", "value": {"_type": "Template42"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "bind", "value": {"_type": "Template43"}}}}], "name": "activate"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -3.0683345794677734, -0.02553844451904297, -0.0002689361572265625, -0.000179290771484375, -0.0011386871337890625, -2.4318695068359375e-05, -0.0002956390380859375, -0.0260467529296875, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.006999969482421875, -0.0043544769287109375, -0.008314132690429688, -2.09808349609375e-05, -3.814697265625e-06, -0.00017701477918308228, -2.5153160095214844e-05, -0.000500196241773665, -0.00016236305236816406, -0.0001125335693359375, -0.0838022232055664, -0.000591278076171875, -0.000274658203125, -0.006283760070800781, -0.15984630584716797, -1.0975914001464844, -1.9073486328125e-06, -0.0012187957763671875, -0.017040252685546875, -0.03519248962402344, -0.03364372253417969, -3.814697265625e-06, -1.9073486328125e-06, -0.01157379150390625, -3.0517578125e-05, 0.0, -0.00064849853515625, -0.0005267855594865978, -2.9921506211394444e-05, -0.022186279296875, -0.03701210021972656, -0.12619781494140625, -0.0009403228759765625, -8.58306884765625e-05, -0.16686439514160156, -0.0012416839599609375, 0.0, -1.9073486328125e-06, -0.4191446304321289, -0.000293731689453125, 0.0, -0.000148773193359375, -0.0006762742414139211, -3.87430154660251e-05, -0.008283615112304688, -0.07573604583740234, -0.10338497161865234, -0.0012187957763671875, -6.29425048828125e-05, -0.08693885803222656, -0.0007534027099609375, 0.0, 0.0, -0.5667219161987305, -0.0001983642578125, -0.0005950927734375, -0.056396484375, -0.2598031759262085, -7.521864608861506e-05, -0.0029239654541015625, -7.62939453125e-05, -1.33514404296875e-05, -0.48194360733032227, -4.9591064453125e-05, -1.1408929824829102, -1.33514404296875e-05, -0.014512062072753906, -0.00127410888671875, -1.9073486328125e-06, -1.9073486328125e-06], "inferred_code": "class ExcessMana(SecretCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n\n    def activate(self, player):\n        player.draw()\n\n    def activate(self, player):\n        player.bind('<UNK>', self._reveal)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 127, 318, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 150, 178, "activate", "<EOS>", 3, 315, 148, 176, 20, 171, 17, 164, 43, "bind", "<EOS>", 303, 87, 202, "<UNK>", "<EOS>", 84, 194, "reduce_cost", "<EOS>", 156], "score": -8.189663852916055, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template65"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "activate"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK>"}, {"_type": "Name", "id": "reduce_cost"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "bind", "value": {"_type": "Template43"}}}}], "name": "activate"}], "name": "ExcessMana"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -3.0683345794677734, -0.02553844451904297, -0.0002689361572265625, -0.000179290771484375, -0.0011386871337890625, -2.4318695068359375e-05, -0.0002956390380859375, -0.0260467529296875, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.006999969482421875, -0.0043544769287109375, -0.008314132690429688, -2.09808349609375e-05, -3.814697265625e-06, -0.00017701477918308228, -2.5153160095214844e-05, -0.000500196241773665, -0.00016236305236816406, -0.0001125335693359375, -0.0838022232055664, -0.000591278076171875, -0.000274658203125, -0.006283760070800781, -0.15984630584716797, -1.0975914001464844, -1.9073486328125e-06, -0.0012187957763671875, -0.017040252685546875, -0.03519248962402344, -0.03364372253417969, -3.814697265625e-06, -1.9073486328125e-06, -0.01157379150390625, -3.0517578125e-05, 0.0, -0.00064849853515625, -0.0005267855594865978, -2.9921506211394444e-05, -0.022186279296875, -0.03701210021972656, -0.12619781494140625, -0.0009403228759765625, -8.58306884765625e-05, -0.16686439514160156, -0.0012416839599609375, 0.0, -1.9073486328125e-06, -0.4191446304321289, -0.000293731689453125, 0.0, -0.000148773193359375, -0.0006762742414139211, -3.87430154660251e-05, -0.008283615112304688, -0.07573604583740234, -0.10338497161865234, -0.0012187957763671875, -6.29425048828125e-05, -0.08693885803222656, -0.0007534027099609375, 0.0, 0.0, -0.5667219161987305, -0.0001983642578125, -0.0005950927734375, -0.056396484375, -0.2598031759262085, -7.521864608861506e-05, -0.0029239654541015625, -7.62939453125e-05, -1.33514404296875e-05, -0.48194360733032227, -4.9591064453125e-05, -0.396728515625, -1.71661376953125e-05, -0.7815276384353638, -3.0517578125e-05, -7.2479248046875e-05], "inferred_code": "class ExcessMana(SecretCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n\n    def activate(self, player):\n        player.draw()\n\n    def activate(self, player):\n        player.bind('<UNK>', reduce_cost)\n"}, {"choice_history": [139, 193, 314], "score": -25.512962341308594, "model_output": {"_type": "Module", "body": []}, "score_history": [-0.00017547607421875, -2.47955322265625e-05, -25.51276206970215], "inferred_code": ""}], "index": 29}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -0.3755680908179073, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -0.01994454860687256, -3.802741048275493e-05, -0.0019550323486328125, -0.0003719329833984375, -0.0003757476806640625, -8.0108642578125e-05, -0.0002040863037109375, -0.000194549560546875, -0.0013103485107421875, -0.00525057315826416, -2.2649765014648438e-06, -0.0030202865600585938, -0.0001049041748046875, -8.0108642578125e-05, -0.000347137451171875, -0.0055599212646484375, -0.0013484954833984375, -0.0017251968383789062, -7.62939453125e-06, -0.0017137527465820312, -0.003593921195715666, -3.576278118089249e-07, -3.814697265625e-05, -0.03662872314453125, -0.0002727508544921875, -0.0001316070556640625, -0.0002460479736328125, -3.24249267578125e-05, 0.0, -0.0049800872802734375, -0.006631374359130859, -5.7220458984375e-06, -0.000240325927734375, -0.00020599365234375, -6.866455078125e-05, -3.814697265625e-06, -0.005253791809082031, -0.015501260757446289, -2.1457672119140625e-06, -0.00048828125, 0.0, -0.0006999969482421875, 0.0, -0.000102996826171875, -0.0003070831298828125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -1.9073486328125e-06, -2.47955322265625e-05, -0.0011692047119140625, -0.02257847599685192, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002899169921875, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -2.2320552461111305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -2.0377092361450195, -0.0001316070556640625, -5.53131103515625e-05, -0.01656472682952881, -2.4318669602507725e-05, -0.004024505615234375, -0.0004138946533203125, -0.0003261566162109375, -3.4332275390625e-05, -0.0001964569091796875, -0.000118255615234375, -0.0010738372802734375, -0.006031394004821777, -2.622604142743512e-06, -0.0018291473388671875, -0.0001468658447265625, -0.00011444091796875, -0.0002155303955078125, -0.005385398864746094, -0.0010709762573242188, -0.0016107559204101562, -7.62939453125e-06, -0.0009326934814453125, -0.0042611355893313885, -4.768370445162873e-07, -3.24249267578125e-05, -0.03586864471435547, -0.0002727508544921875, -0.0001354217529296875, -0.0002651214599609375, -3.0517578125e-05, 0.0, -0.004996299743652344, -0.006437778472900391, -7.62939453125e-06, -0.0001735687255859375, -0.0002040863037109375, -6.67572021484375e-05, -5.7220458984375e-06, -0.0054454803466796875, -0.01303410530090332, -2.1457672119140625e-06, -0.000476837158203125, 0.0, -0.0007495880126953125, 0.0, -9.918212890625e-05, -0.000316619873046875, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-05, -0.0001201629638671875, -1.9073486328125e-06, -2.47955322265625e-05, -0.001132965087890625, -0.022661088034510612, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002880096435546875, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -4.281054793736914, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -0.01994454860687256, -3.802741048275493e-05, -0.0019550323486328125, -0.0003719329833984375, -0.0003757476806640625, -8.0108642578125e-05, -0.0002040863037109375, -0.000194549560546875, -0.0013103485107421875, -0.00525057315826416, -2.2649765014648438e-06, -0.0030202865600585938, -0.0001049041748046875, -8.0108642578125e-05, -0.000347137451171875, -0.0055599212646484375, -0.0013484954833984375, -0.0017251968383789062, -7.62939453125e-06, -0.0017137527465820312, -0.003593921195715666, -3.576278118089249e-07, -3.814697265625e-05, -3.924518585205078, -0.0010700225830078125, -0.00074005126953125, -0.0006198883056640625, -1.1444091796875e-05, -3.814697265625e-06, -0.01596355438232422, -0.020479440689086914, -7.62939453125e-06, -0.0003948211669921875, -0.00018310546875, -5.91278076171875e-05, -3.814697265625e-06, -0.004792213439941406, -0.006143808364868164, -2.0265579223632812e-06, -0.00049591064453125, 0.0, -0.0006905794143676758, 0.0, -0.0001163482666015625, -0.0002841949462890625, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.000213623046875, -1.9073486328125e-06, -2.09808349609375e-05, -0.0011959075927734375, -0.023184893652796745, -2.47955322265625e-05, -4.1961669921875e-05, -0.000270843505859375, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -4.712941825269738, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -0.01994454860687256, -3.802741048275493e-05, -0.0019550323486328125, -0.0003719329833984375, -0.0003757476806640625, -8.0108642578125e-05, -0.0002040863037109375, -0.000194549560546875, -0.0013103485107421875, -0.00525057315826416, -2.2649765014648438e-06, -0.0030202865600585938, -0.0001049041748046875, -8.0108642578125e-05, -0.000347137451171875, -0.0055599212646484375, -0.0013484954833984375, -0.0017251968383789062, -7.62939453125e-06, -0.0017137527465820312, -0.003593921195715666, -3.576278118089249e-07, -3.814697265625e-05, -0.03662872314453125, -0.0002727508544921875, -0.0001316070556640625, -0.0002460479736328125, -3.24249267578125e-05, 0.0, -0.0049800872802734375, -0.006631374359130859, -5.7220458984375e-06, -0.000240325927734375, -0.00020599365234375, -6.866455078125e-05, -3.814697265625e-06, -0.005253791809082031, -4.35939884185791, 0.0, -0.0001354217529296875, 0.0, -0.000629425048828125, 0.0, -2.09808349609375e-05, -0.0023040771484375, -1.33514404296875e-05, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -4.76837158203125e-05, 0.0, -1.1444091796875e-05, -0.0013790130615234375, -0.014395474456250668, -2.09808349609375e-05, -4.00543212890625e-05, -0.0003147125244140625, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            calculate_max_health())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Execute", "<EOS>", 109, 95, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.032431215314766, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -4.399340629577637, -0.0003108978271484375, -0.0003032684326171875, 0.0, -0.0008096417295746505, -0.0003337860107421875, -0.024419784545898438, -0.0006656646728515625, -0.000667572021484375, -0.0001316070556640625, -0.0047969818115234375, -2.09808349609375e-05, -1.71661376953125e-05, -4.88758041683468e-06, -9.775161743164062e-06, -6.4849853515625e-05, -0.00604248046875, -1.33514404296875e-05, -0.000213623046875, -1.9073486328125e-06, -1.33514404296875e-05, -0.5387382507324219, -1.9073486328125e-06, -7.62939453125e-06, -0.003345489501953125, -0.0481642484664917, -2.09808349609375e-05, -3.24249267578125e-05, -0.00058746337890625, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "spell_targetable", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.15177589606985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "spell_targetable", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -4.664184093475342, -5.245195097813848e-06, -0.1290283203125, -0.0024623870849609375, -0.0003604888916015625, -0.0001068115234375, -0.000141143798828125, -0.0002117156982421875, -0.001499176025390625, -0.006356239318847656, -2.2649765014648438e-06, -0.0033054351806640625, -0.00012969970703125, -7.82012939453125e-05, -0.0004138946533203125, -0.008051872253417969, -0.0013895034790039062, -0.002643585205078125, -7.62939453125e-06, -0.0015716552734375, -0.0033383367117494345, -3.576278118089249e-07, -3.62396240234375e-05, -0.0351715087890625, -0.00028228759765625, -0.0001354217529296875, -0.000247955322265625, -3.24249267578125e-05, 0.0, -0.0050640106201171875, -0.006550312042236328, -5.7220458984375e-06, -0.000244140625, -0.0002040863037109375, -6.29425048828125e-05, -3.814697265625e-06, -0.005242347717285156, -0.015190362930297852, -2.1457672119140625e-06, -0.00048065185546875, 0.0, -0.0006923675537109375, 0.0, -0.000102996826171875, -0.000308990478515625, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000118255615234375, -1.9073486328125e-06, -2.288818359375e-05, -0.001155853271484375, -0.022522924467921257, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002899169921875, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, spell_targetable=lambda target:\n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "use", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.254360137912826, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "use", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -3.9925010204315186, 0.0, -0.9038963317871094, -0.0004634857177734375, -0.000339508056640625, -0.0020836591720581055, -2.1576808649115264e-05, -0.0008563995361328125, -0.0003833770751953125, -0.02529287338256836, -4.86366989207454e-05, -0.00179290771484375, -0.000408172607421875, -0.000423431396484375, -5.91278076171875e-05, -0.000156402587890625, -8.392333984375e-05, -0.0011806488037109375, -0.004887223243713379, -3.576278118089249e-07, -0.0031671524047851562, -9.1552734375e-05, -9.5367431640625e-05, -0.0003509521484375, -0.005419731140136719, -0.0013427734375, -0.0013599395751953125, -7.62939453125e-06, -0.0017757415771484375, -0.0036431546323001385, -3.576278118089249e-07, -4.00543212890625e-05, -0.036670684814453125, -0.00025177001953125, -0.0001373291015625, -0.0002422332763671875, -3.4332275390625e-05, 0.0, -0.004937171936035156, -0.006667613983154297, -5.7220458984375e-06, -0.0002307891845703125, -0.0002040863037109375, -7.05718994140625e-05, -3.814697265625e-06, -0.00519561767578125, -0.015888452529907227, -2.1457672119140625e-06, -0.00048828125, 0.0, -0.000690460205078125, 0.0, -0.0001049041748046875, -0.00030517578125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.00011444091796875, -1.9073486328125e-06, -2.47955322265625e-05, -0.001178741455078125, -0.0224758367985487, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002899169921875, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, use=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 111, 156], "score": -5.26721805415211, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -0.01994454860687256, -3.802741048275493e-05, -0.0019550323486328125, -0.0003719329833984375, -0.0003757476806640625, -8.0108642578125e-05, -0.0002040863037109375, -0.000194549560546875, -0.0013103485107421875, -0.00525057315826416, -2.2649765014648438e-06, -0.0030202865600585938, -0.0001049041748046875, -8.0108642578125e-05, -0.000347137451171875, -0.0055599212646484375, -0.0013484954833984375, -0.0017251968383789062, -7.62939453125e-06, -0.0017137527465820312, -0.003593921195715666, -3.576278118089249e-07, -3.814697265625e-05, -0.03662872314453125, -0.0002727508544921875, -0.0001316070556640625, -0.0002460479736328125, -3.24249267578125e-05, 0.0, -0.0049800872802734375, -0.006631374359130859, -5.7220458984375e-06, -0.000240325927734375, -0.00020599365234375, -6.866455078125e-05, -3.814697265625e-06, -0.005253791809082031, -0.015501260757446289, -2.1457672119140625e-06, -0.00048828125, 0.0, -0.0006999969482421875, 0.0, -0.000102996826171875, -0.0003070831298828125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -1.9073486328125e-06, -2.47955322265625e-05, -0.0011692047119140625, -4.081533432006836, -7.62939453125e-06, -0.0001049041748046875, -0.8329353332519531, -1.9073486328125e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Execute", "<EOS>", 109, 95, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -5.415751189259474, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -4.399340629577637, -0.0003108978271484375, -0.0003032684326171875, 0.0, -0.0008096417295746505, -0.0003337860107421875, -0.024419784545898438, -0.0006656646728515625, -0.000667572021484375, -0.0001316070556640625, -0.0047969818115234375, -2.09808349609375e-05, -1.71661376953125e-05, -4.88758041683468e-06, -9.775161743164062e-06, -6.4849853515625e-05, -0.00604248046875, -1.33514404296875e-05, -0.000213623046875, -1.9073486328125e-06, -1.33514404296875e-05, -0.8870363235473633, -5.7220458984375e-06, -1.9073486328125e-06, -0.0024623870849609375, -0.08469152450561523, -1.2874602361989673e-05, -7.62939453125e-06], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 103, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.652170359124156, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -5.051026344299316, -0.0009822845458984375, -0.0032949447631835938, -0.38228893280029297, -0.0019893646240234375, -0.032462358474731445, -1.9073486328125e-05, -0.0001239776611328125, -3.814697265625e-06, -0.0002040863037109375, -0.001853346824645996, -1.3232229321147315e-05, -0.000823974609375, -0.0002918243408203125, -0.014246702194213867, -3.457042475929484e-05, -0.0021514892578125, -0.0003376007080078125, -0.00034332275390625, -6.103515625e-05, -0.0001811981201171875, -0.0001468658447265625, -0.001224517822265625, -0.005073189735412598, -3.576278118089249e-07, -0.002918243408203125, -9.918212890625e-05, -8.58306884765625e-05, -0.0003452301025390625, -0.0055866241455078125, -0.00131988525390625, -0.0016937255859375, -7.62939453125e-06, -0.0016880035400390625, -0.003572582732886076, -3.576278118089249e-07, -3.814697265625e-05, -0.03644084930419922, -0.00026702880859375, -0.0001316070556640625, -0.000244140625, -3.24249267578125e-05, 0.0, -0.00498199462890625, -0.006617069244384766, -5.7220458984375e-06, -0.0002384185791015625, -0.00020599365234375, -6.67572021484375e-05, -3.814697265625e-06, -0.005249977111816406, -0.01578831672668457, -2.1457672119140625e-06, -0.00048828125, 0.0, -0.000701904296875, 0.0, -0.000102996826171875, -0.0003070831298828125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -1.9073486328125e-06, -2.47955322265625e-05, -0.0011730194091796875, -0.022564051672816277, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002918243408203125, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 101, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -5.888974963636244, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -5.392912864685059, -0.0002956390380859375, -0.0016460418701171875, -0.2923297882080078, -0.0007991790771484375, -0.021262407302856445, -1.1444091796875e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001926422119140625, -0.002504706382751465, -1.8596643712953664e-05, -0.000652313232421875, -0.0002689361572265625, -0.014280200004577637, -3.52856659446843e-05, -0.0021657943725585938, -0.0003261566162109375, -0.00035858154296875, -7.2479248046875e-05, -0.00018310546875, -0.0001392364501953125, -0.00115203857421875, -0.005017757415771484, -4.768370445162873e-07, -0.0030879974365234375, -9.72747802734375e-05, -8.20159912109375e-05, -0.0003528594970703125, -0.005251884460449219, -0.001285552978515625, -0.0016155242919921875, -7.62939453125e-06, -0.0016508102416992188, -0.0035461182706058025, -3.576278118089249e-07, -3.814697265625e-05, -0.036052703857421875, -0.0002689361572265625, -0.00012969970703125, -0.000244140625, -3.24249267578125e-05, 0.0, -0.005011558532714844, -0.006641864776611328, -5.7220458984375e-06, -0.00023651123046875, -0.0002040863037109375, -6.866455078125e-05, -3.814697265625e-06, -0.005234718322753906, -0.015774965286254883, -2.1457672119140625e-06, -0.0004940032958984375, 0.0, -0.0006961822509765625, 0.0, -0.0001049041748046875, -0.0003070831298828125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.00011444091796875, -1.9073486328125e-06, -2.47955322265625e-05, -0.0011768341064453125, -0.022563932463526726, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002899169921875, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -6.161950766321397, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "Eq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -2.0377092361450195, -0.0001316070556640625, -5.53131103515625e-05, -0.01656472682952881, -2.4318669602507725e-05, -0.004024505615234375, -0.0004138946533203125, -0.0003261566162109375, -3.4332275390625e-05, -0.0001964569091796875, -0.000118255615234375, -0.0010738372802734375, -0.006031394004821777, -2.622604142743512e-06, -0.0018291473388671875, -0.0001468658447265625, -0.00011444091796875, -0.0002155303955078125, -0.005385398864746094, -0.0010709762573242188, -0.0016107559204101562, -7.62939453125e-06, -0.0009326934814453125, -0.0042611355893313885, -4.768370445162873e-07, -3.24249267578125e-05, -3.9472646713256836, -0.00140380859375, -0.000827789306640625, -0.0006561279296875, -1.1444091796875e-05, -3.814697265625e-06, -0.015383720397949219, -0.01960301399230957, -7.62939453125e-06, -0.000274658203125, -0.0001811981201171875, -5.7220458984375e-05, -3.814697265625e-06, -0.004845619201660156, -0.005663156509399414, -2.0265579223632812e-06, -0.0004749298095703125, 0.0, -0.0007134675979614258, 0.0, -0.00011444091796875, -0.000301361083984375, -1.1444091796875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, -0.0002117156982421875, -1.9073486328125e-06, -2.09808349609375e-05, -0.0011463165283203125, -0.02326321415603161, -2.47955322265625e-05, -4.1961669921875e-05, -0.0002727508544921875, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 307, 87, 202, "Execute", "<EOS>", 109, 102, 99, 119, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -6.453464021954794, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -4.933375358581543, -0.0001678466796875, -4.38690185546875e-05, -4.768370445162873e-07, -0.00017773355648387223, -0.00019073486328125, -0.10121726989746094, -0.02933025360107422, -0.10220718383789062, -0.17517852783203125, -0.00012969970703125, -0.2516965866088867, -2.09808349609375e-05, -0.003943681716918945, -2.1457672119140625e-06, -0.01735079288482666, -2.741813204920618e-06, -0.6468114852905273, -0.01773834228515625, -5.340576171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -2.6702880859375e-05, -0.00666046142578125, -2.47955322265625e-05, -0.0002727508544921875, 0.0, -5.53131103515625e-05, -0.141448974609375, -1.9073486328125e-06, -7.62939453125e-06, -0.002597808837890625, -0.018868684768676758, -1.71661376953125e-05, -4.9591064453125e-05, -0.000431060791015625, 0.0], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, False, CARD_RARITY.EPIC, target_func=hearthbreaker.\n            targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -6.918957889787563, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "filter_func", "value": {"args": {"args": [{"_type": "arg", "arg": "target"}], "_type": "arguments"}, "_type": "Lambda", "body": {"values": [{"_type": "Compare", "ops": [{"_type": "NotEq"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Template64"}}, "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template64"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Template64"}}}], "_type": "BoolOp", "op": {"_type": "And"}}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Execute"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -0.01994454860687256, -3.802741048275493e-05, -0.0019550323486328125, -0.0003719329833984375, -0.0003757476806640625, -8.0108642578125e-05, -0.0002040863037109375, -0.000194549560546875, -0.0013103485107421875, -0.00525057315826416, -2.2649765014648438e-06, -0.0030202865600585938, -0.0001049041748046875, -8.0108642578125e-05, -0.000347137451171875, -0.0055599212646484375, -0.0013484954833984375, -0.0017251968383789062, -7.62939453125e-06, -0.0017137527465820312, -0.003593921195715666, -3.576278118089249e-07, -3.814697265625e-05, -0.03662872314453125, -0.0002727508544921875, -0.0001316070556640625, -0.0002460479736328125, -3.24249267578125e-05, 0.0, -0.0049800872802734375, -0.006631374359130859, -5.7220458984375e-06, -0.000240325927734375, -0.00020599365234375, -6.866455078125e-05, -3.814697265625e-06, -0.005253791809082031, -0.015501260757446289, -2.1457672119140625e-06, -0.00048828125, 0.0, -0.0006999969482421875, 0.0, -0.000102996826171875, -0.0003070831298828125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -1.9073486328125e-06, -2.47955322265625e-05, -0.0011692047119140625, -4.081533432006836, -7.62939453125e-06, -0.0001049041748046875, -0.8921632766723633, 0.0, -0.34064674377441406, -1.251839280128479, -1.4424220353248529e-05, -1.33514404296875e-05], "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 314], "score": -22.429466247558594, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.288818359375e-05, -1.1444091796875e-05, -22.429431915283203], "inferred_code": ""}], "index": 30}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -0.11636138464803025, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -0.008477210998535156, -0.00017547607421875, -0.0019482631469145417, -0.00038552284240722656, -0.0014820098876953125, -0.000110626220703125, 0.0, -3.814697265625e-06, -0.015573501586914062, -7.2479248046875e-05, 0.0, -0.03058910369873047, -0.0006114243296906352, -5.53131103515625e-05, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 37, "draw", "<EOS>", 156], "score": -3.779243040382994, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template30"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -0.008477210998535156, -0.00017547607421875, -0.0019482631469145417, -0.00038552284240722656, -0.0014820098876953125, -0.000110626220703125, 0.0, -3.814697265625e-06, -0.015573501586914062, -7.2479248046875e-05, 0.0, -3.678713798522949, -0.014707488939166069, -0.0007162094116210938, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        game.other_player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -4.380085406437161, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -4.264509201049805, -0.000293731689453125, -0.001445770263671875, -9.5367431640625e-06, -0.06491565704345703, -3.814697265625e-05, -0.020221710205078125, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.814697265625e-06, -0.0003204345703125, -7.62939453125e-06, -0.0020285844802856445, -2.288818359375e-05, -6.103515625e-05, -0.0001068115234375, -2.47955322265625e-05, -5.340576171875e-05, -0.00025591463781893253, -1.3470619705913123e-05, -7.2479248046875e-05, -0.0003299713134765625, 0.0, -5.7220458984375e-06, -0.0001621246337890625, -3.814697265625e-05, -7.2479248046875e-05, -0.0009918212890625, -0.0004535913176368922, -8.344646857949556e-07, -3.4332275390625e-05, -0.009122848510742188, -0.0001659393310546875, -0.002022841712459922, -0.0004131793975830078, -0.0015544891357421875, -3.814697265625e-06], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -4.438475800114816, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -0.008477210998535156, -0.00017547607421875, -0.0019482631469145417, -0.00038552284240722656, -0.0014820098876953125, -0.000110626220703125, 0.0, -3.814697265625e-06, -4.2077226638793945, -3.814697265625e-06, -5.7220458984375e-06, -0.006184577941894531, 0.0, -0.018914222717285156, -0.03687192499637604, -0.0008360369829460979, -0.035592105239629745, 0.0, -9.1552734375e-05, -0.02736186981201172, -0.0001220703125, -0.03182399645447731, -0.00043392181396484375, -0.0030517578125, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 103, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -5.936214701171252, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -5.834383964538574, -0.0012798309326171875, -9.5367431640625e-06, 0.0, -2.2530553906108253e-05, -2.872943878173828e-05, -0.0001392364501953125, -0.02511310577392578, -4.57763671875e-05, -0.001369476318359375, -8.392333984375e-05, -0.000522613525390625, -1.52587890625e-05, -0.0029621124267578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.000514984130859375, -7.748603820800781e-06, -0.0024824142456054688, -1.9073486328125e-05, -5.340576171875e-05, -0.0001239776611328125, -3.814697265625e-05, -6.29425048828125e-05, -0.0001285016187466681, -1.0490406566532329e-05, -8.392333984375e-05, -0.00016021728515625, 0.0, -5.7220458984375e-06, -0.00012969970703125, -3.62396240234375e-05, -0.00011444091796875, -0.0015430450439453125, -0.00039899343391880393, -8.344646857949556e-07, -3.24249267578125e-05, -0.008209228515625, -0.0001773834228515625, -0.0019435043213889003, -0.00038743019104003906, -0.0014629364013671875, -0.00011444091796875, 0.0, -3.814697265625e-06, -0.015598297119140625, -7.43865966796875e-05, 0.0, -0.029590606689453125, -0.0005929468898102641, -5.53131103515625e-05, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.460780480662493, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -0.008477210998535156, -0.00017547607421875, -6.34624719619751, -2.300739288330078e-05, -0.0002498626708984375, -0.000274658203125, 0.0, -3.814697265625e-06, -0.018087387084960938, -8.0108642578125e-05, 0.0, -0.02960491180419922, -0.000622987630777061, -5.7220458984375e-05, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "MAGE", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.628323455636291, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -6.506072044372559, -1.9073486328125e-06, -0.0028629302978515625, -0.0010356903076171875, -9.5367431640625e-06, -0.0001506805419921875, -0.00037937937304377556, -1.8238888515043072e-05, -0.0001010894775390625, -0.0001430511474609375, 0.0, -1.9073486328125e-06, -7.05718994140625e-05, -2.288818359375e-05, -9.72747802734375e-05, -0.006252288818359375, -0.00043070310493931174, -9.536738616588991e-07, -3.24249267578125e-05, -0.010286331176757812, -0.000179290771484375, -0.001974203158169985, -0.0004140138626098633, -0.001430511474609375, -0.0001239776611328125, 0.0, -3.814697265625e-06, -0.014545440673828125, -7.2479248046875e-05, 0.0, -0.02940082550048828, -0.0006456373957917094, -5.14984130859375e-05, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.MAGE(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 52, "<UNK>", "<EOS>", 156], "score": -6.65070450820042, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template54"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -0.008477210998535156, -0.00017547607421875, -0.0019482631469145417, -0.00038552284240722656, -0.0014820098876953125, -0.000110626220703125, 0.0, -3.814697265625e-06, -0.015573501586914062, -7.2479248046875e-05, 0.0, -6.547866344451904, -0.017594337463378906, -0.00013637542724609375, -1.9073486328125e-06], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        minion.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.742337227567191, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOf"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -6.62925910949707, -1.9073486328125e-06, -0.000278472900390625, -0.0005779266357421875, 0.0, -3.814697265625e-06, -4.38690185546875e-05, -2.86102294921875e-05, -5.7220458984375e-06, -3.814697265625e-06, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, -0.001007080078125, -7.62939453125e-06, -0.0021610260009765625, -1.33514404296875e-05, -3.814697265625e-06, -5.483612312673358e-06, -2.1815289073856547e-05, -2.038473030552268e-05, -2.682209014892578e-05, -0.00015568267554044724, -0.00012218952178955078, -0.0012874603271484375, -0.003749847412109375, -6.29425048828125e-05, -1.52587890625e-05, 0.0, -1.7046921129804105e-05, -2.3126602172851562e-05, -0.0001926422119140625, -0.03148841857910156, -2.86102294921875e-05, -0.00144195556640625, -7.82012939453125e-05, -0.0004329681396484375, -1.71661376953125e-05, -0.00411224365234375, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.00250244140625, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001201629638671875, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013827565999235958, -1.1444075425970368e-05, -8.0108642578125e-05, -0.000179290771484375, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001068115234375, -0.0014247894287109375, -0.0004124640836380422, -8.344646857949556e-07, -3.24249267578125e-05, -0.008510589599609375, -0.00017547607421875, -0.0019460030598565936, -0.0003864765167236328, -0.001483917236328125, -0.0001087188720703125, 0.0, -3.814697265625e-06, -0.015474319458007812, -7.2479248046875e-05, 0.0, -0.03049945831298828, -0.0006133316783234477, -5.53131103515625e-05, 0.0], "inferred_code": "class FanOf(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 320, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 149, 177, 52, 72, 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.5845433094513055, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Template78"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -4.431663513183594, -0.0011386871337890625, -0.010280609130859375, -3.62396240234375e-05, -0.03565216064453125, -0.00011444091796875, -0.0061244964599609375, -5.91278076171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.000591278076171875, -1.1563301086425781e-05, -0.0019893646240234375, -2.09808349609375e-05, -5.14984130859375e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.53131103515625e-05, -0.00018487947818357497, -1.5616367818438448e-05, -0.0001678466796875, -0.0003490447998046875, 0.0, -5.7220458984375e-06, -0.00016021728515625, -4.1961669921875e-05, -8.0108642578125e-05, -0.001346588134765625, -0.0004318951687309891, -1.0728830375228426e-06, -3.62396240234375e-05, -0.008623123168945312, -0.00017547607421875, -0.001932439743541181, -0.0003904104232788086, -0.00150299072265625, -0.16367721557617188, -5.7220458984375e-06, -1.52587890625e-05, -0.0024433135986328125, -0.0002155303955078125, 0.0, -0.1229848861694336, -0.0006046293419785798, -2.86102294921875e-05, -1.0325193405151367, -0.0001811981201171875, -0.7220706939697266, -0.07206439971923828, -0.0012798309326171875, -4.76837158203125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.04893779754638672, -2.86102294921875e-05, -1.9073486328125e-06, -0.00017547607421875, -0.0019540786743164062, -2.2649765014648438e-06, -4.1961669921875e-05, -0.006079673767089844, -0.0008392333984375, -0.03960948809981346, -0.0006192922592163086, -0.006011962890625, -0.2709817886352539, -1.9073486328125e-06, -7.62939453125e-06, -0.00113677978515625, -0.0001926422119140625, 0.0, -0.12247276306152344, -0.00046312776976265013, -3.0517578125e-05, -0.2841196060180664, -1.9073486328125e-05, -7.62939453125e-06, -0.0015735626220703125, -8.20159912109375e-05, 0.0, -0.16712474822998047, -0.0002146923216059804, -4.1961669921875e-05, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 79, 171, 35, 302, 79, 171, 17, 164, 25, 194, "game", "<EOS>", "<UNK>", "<EOS>", 303, 108, 111, 113, 149, 177, 52, 20, 172, 25, 194, "<UNK>", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 310, 138, 291, "<UNK>", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "m", "<EOS>", 17, 164, 25, 194, "m", "<EOS>", "<UNK>", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -8.578075290516722, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Template36"}, {"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "game"}}}], "_type": "Call", "func": {"_type": "Template24"}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "<UNK>", "value": {"args": {"args": [{"_type": "arg", "arg": "m"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "m"}}}}], "func": {"_type": "Name", "id": "<UNK>"}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -5.279751777648926, -2.6702880859375e-05, -0.033843040466308594, -7.05718994140625e-05, -0.0642709732055664, -0.2889728546142578, -0.03119373321533203, -0.00058746337890625, -8.392333984375e-05, 0.0, -0.11051368713378906, -0.0001163482666015625, -0.007774821482598782, -5.483625955093885e-06, -0.001499176025390625, -0.17030715942382812, -0.11763191223144531, -0.0001964569091796875, -0.3493690490722656, -2.47955322265625e-05, -8.392333984375e-05, -0.0072650909423828125, -0.22342777252197266, -0.00026702880859375, -1.9073486328125e-06, -0.000408172607421875, -0.002374641364440322, -0.0028820037841796875, -0.11475181579589844, -1.52587890625e-05, -0.04709053039550781, -0.0014957491075620055, -1.919254646054469e-05, -8.7738037109375e-05, -2.6702880859375e-05, -1.52587890625e-05, -0.20538973808288574, -6.198873961693607e-06, -0.0019903182983398438, -0.0004367828369140625, -0.0009441375732421875, -3.0517578125e-05, -0.004841804504394531, -0.000263214111328125, -3.62396240234375e-05, -0.2319331169128418, -4.589557647705078e-05, -0.033069610595703125, -1.9073486328125e-06, -0.0012617111206054688, 0.0, -0.1960306167602539, -2.1457672119140625e-06, -0.0480349063873291, -1.1444091796875e-05, -0.4227018356323242, -0.00081634521484375, -3.814697265625e-06, -1.9073486328125e-06, -0.25029563903808594, -0.000720977783203125, -7.2479248046875e-05, -0.08052349090576172, -0.009563326835632324, -1.5616416931152344e-05, -0.000217437744140625, -0.0978851318359375, -4.9591064453125e-05, -0.0735631063580513, -0.0010514259338378906, -0.002933502197265625, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(game.<UNK>(2, 3)), self\n                )\n        for minion in <UNK>(game.other_player.minions, <UNK>=lambda m: m.<UNK>\n            ):\n            minion.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 320, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 18, 166, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 141, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -10.095841626857087, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"right": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "_type": "BinOp", "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "op": {"_type": "Sub"}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -4.431663513183594, -0.0011386871337890625, -0.010280609130859375, -3.62396240234375e-05, -0.03565216064453125, -0.00011444091796875, -0.0061244964599609375, -5.91278076171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.000591278076171875, -1.1563301086425781e-05, -0.0019893646240234375, -2.09808349609375e-05, -5.14984130859375e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.53131103515625e-05, -0.00018487947818357497, -1.5616367818438448e-05, -0.0001678466796875, -0.0003490447998046875, 0.0, -5.7220458984375e-06, -0.00016021728515625, -4.1961669921875e-05, -8.0108642578125e-05, -0.001346588134765625, -0.0004318951687309891, -1.0728830375228426e-06, -3.62396240234375e-05, -0.008623123168945312, -0.00017547607421875, -0.001932439743541181, -0.0003904104232788086, -0.00150299072265625, -0.16367721557617188, -5.7220458984375e-06, -1.52587890625e-05, -0.0024433135986328125, -0.0002155303955078125, 0.0, -0.1229848861694336, -0.0006046293419785798, -2.86102294921875e-05, -0.5011205673217773, -1.33514404296875e-05, -9.5367431640625e-06, -0.0021915435791015625, -8.7738037109375e-05, 0.0, -0.1893482208251953, -0.00022196602367330343, -2.86102294921875e-05, -0.5538406372070312, -0.0001697540283203125, -0.46803855895996094, -1.9073486328125e-06, -0.06926727294921875, -3.814697265625e-06, -0.0006761550903320312, -0.00025177001953125, -0.0001049041748046875, -3.814697265625e-06, -0.005771636962890625, -2.3841855067985307e-07, -0.0001239776611328125, -0.0002994537353515625, -0.2308635711669922, -0.46194934844970703, -0.0016384124755859375, -2.6702880859375e-05, -3.814697265625e-06, -0.07247543334960938, -7.62939453125e-06, -0.3040872812271118, -0.0005160673754289746, -0.4761466979980469, -0.03426074981689453, -0.0077037811279296875, -0.002132415771484375, -0.0004024505615234375, 0.0, -0.0013322830200195312, -4.2676903831306845e-05, -3.814697265625e-06, -2.288818359375e-05, -3.814697265625e-06, -0.000396728515625, -0.00016879102622624487, -4.1723224057932384e-06, -0.11030292510986328, -0.001430511474609375, -0.000606536865234375, -0.008283615112304688, -1.9073486328125e-06, -0.0013284683227539062, -2.014636993408203e-05, -5.7220458984375e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.3030843734741211, -0.0004005267401225865, -7.987019671418238e-06, -0.01690673828125, -2.47955322265625e-05, -1.9073486328125e-06, -1.0940008163452148, -0.0002899169921875, 0.0, -0.038390159606933594, -0.0007069099228829145, -1.1920928244535389e-07, -0.13638019561767578, -2.09808349609375e-05, 0.0, -0.13945388793945312, -7.05718994140625e-05, 0.0, -0.0540008544921875, -0.000608771457336843, -1.728534698486328e-05, -1.9073486328125e-06], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        player.draw()\n        for i in range(0, 2):\n            <UNK> = len(game.other_player.minions) - len(game.other_player.\n                minions)\n            player.draw()\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 320, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 18, 166, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 141, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 156], "score": -10.500869550783449, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"right": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "_type": "BinOp", "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "op": {"_type": "Sub"}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -4.431663513183594, -0.0011386871337890625, -0.010280609130859375, -3.62396240234375e-05, -0.03565216064453125, -0.00011444091796875, -0.0061244964599609375, -5.91278076171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.000591278076171875, -1.1563301086425781e-05, -0.0019893646240234375, -2.09808349609375e-05, -5.14984130859375e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.53131103515625e-05, -0.00018487947818357497, -1.5616367818438448e-05, -0.0001678466796875, -0.0003490447998046875, 0.0, -5.7220458984375e-06, -0.00016021728515625, -4.1961669921875e-05, -8.0108642578125e-05, -0.001346588134765625, -0.0004318951687309891, -1.0728830375228426e-06, -3.62396240234375e-05, -0.008623123168945312, -0.00017547607421875, -0.001932439743541181, -0.0003904104232788086, -0.00150299072265625, -0.16367721557617188, -5.7220458984375e-06, -1.52587890625e-05, -0.0024433135986328125, -0.0002155303955078125, 0.0, -0.1229848861694336, -0.0006046293419785798, -2.86102294921875e-05, -0.5011205673217773, -1.33514404296875e-05, -9.5367431640625e-06, -0.0021915435791015625, -8.7738037109375e-05, 0.0, -0.1893482208251953, -0.00022196602367330343, -2.86102294921875e-05, -0.5538406372070312, -0.0001697540283203125, -0.46803855895996094, -1.9073486328125e-06, -0.06926727294921875, -3.814697265625e-06, -0.0006761550903320312, -0.00025177001953125, -0.0001049041748046875, -3.814697265625e-06, -0.005771636962890625, -2.3841855067985307e-07, -0.0001239776611328125, -0.0002994537353515625, -0.2308635711669922, -0.46194934844970703, -0.0016384124755859375, -2.6702880859375e-05, -3.814697265625e-06, -0.07247543334960938, -7.62939453125e-06, -0.3040872812271118, -0.0005160673754289746, -0.4761466979980469, -0.03426074981689453, -0.0077037811279296875, -0.002132415771484375, -0.0004024505615234375, 0.0, -0.0013322830200195312, -4.2676903831306845e-05, -3.814697265625e-06, -2.288818359375e-05, -3.814697265625e-06, -0.000396728515625, -0.00016879102622624487, -4.1723224057932384e-06, -0.11030292510986328, -0.001430511474609375, -0.000606536865234375, -0.008283615112304688, -1.9073486328125e-06, -0.0013284683227539062, -2.014636993408203e-05, -5.7220458984375e-06, -0.0001163482666015625, -9.5367431640625e-06, -0.3030843734741211, -0.0004005267401225865, -7.987019671418238e-06, -0.01690673828125, -2.47955322265625e-05, -1.9073486328125e-06, -0.4126157760620117, -5.340576171875e-05, -3.814697265625e-06, -0.37671947479248047, -0.051979489624500275, -0.0002052783966064453, -5.7220458984375e-06, -0.0017538070678710938, 0.0, -0.00334930419921875, -0.039243340492248535, -8.463837730232626e-06, -0.6304826736450195, -1.52587890625e-05, 0.0, -0.19821929931640625, -7.62939453125e-06, -7.62939453125e-06, -0.008016586303710938, -0.03800923004746437, -0.0007976293563842773, -5.7220458984375e-06, -0.001468658447265625, 0.0, -0.007068634033203125, -0.09892059862613678, -1.0967213711410295e-05, -1.9073486328125e-06], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        player.draw()\n        for i in range(0, 2):\n            <UNK> = len(game.other_player.minions) - len(game.other_player.\n                minions)\n            targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 320, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 18, 166, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 141, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 156], "score": -10.881239512908337, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"right": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "_type": "BinOp", "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "op": {"_type": "Sub"}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template78"}}}}], "name": "use"}], "name": "FanOfKnives"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -4.431663513183594, -0.0011386871337890625, -0.010280609130859375, -3.62396240234375e-05, -0.03565216064453125, -0.00011444091796875, -0.0061244964599609375, -5.91278076171875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.000591278076171875, -1.1563301086425781e-05, -0.0019893646240234375, -2.09808349609375e-05, -5.14984130859375e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.53131103515625e-05, -0.00018487947818357497, -1.5616367818438448e-05, -0.0001678466796875, -0.0003490447998046875, 0.0, -5.7220458984375e-06, -0.00016021728515625, -4.1961669921875e-05, -8.0108642578125e-05, -0.001346588134765625, -0.0004318951687309891, -1.0728830375228426e-06, -3.62396240234375e-05, -0.008623123168945312, -0.00017547607421875, -0.001932439743541181, -0.0003904104232788086, -0.00150299072265625, -0.16367721557617188, -5.7220458984375e-06, -1.52587890625e-05, -0.0024433135986328125, -0.0002155303955078125, 0.0, -0.1229848861694336, -0.0006046293419785798, -2.86102294921875e-05, -1.0325193405151367, -0.0001811981201171875, -0.6717929840087891, -1.9073486328125e-06, -0.07813358306884766, -3.814697265625e-06, -0.0004892349243164062, -0.000213623046875, -3.62396240234375e-05, -1.9073486328125e-06, -0.00415802001953125, -3.8146954466355965e-06, -0.0001220703125, -0.0003376007080078125, -0.1616992950439453, -0.28835201263427734, -0.0010700225830078125, -7.05718994140625e-05, -7.62939453125e-06, -0.12938594818115234, -2.09808349609375e-05, -0.4389914274215698, -0.0005531338974833488, -0.5187778472900391, -0.02023792266845703, -0.0038089752197265625, -0.0013027191162109375, -0.0006237030029296875, 0.0, -0.0011882781982421875, -5.197523205424659e-05, -3.814697265625e-06, -0.00011444091796875, -1.33514404296875e-05, -0.0005397796630859375, -0.00018035351240541786, -4.29153169534402e-06, -0.08469104766845703, -0.0015544891357421875, -0.000583648681640625, -0.0062084197998046875, -1.9073486328125e-06, -0.001514434814453125, -1.6450881958007812e-05, -7.62939453125e-06, -0.0004901885986328125, -2.09808349609375e-05, -0.22762680053710938, -0.00044534768676385283, -7.987019671418238e-06, -0.018320083618164062, -2.86102294921875e-05, -1.9073486328125e-06, -0.36028385162353516, -5.53131103515625e-05, -5.7220458984375e-06, -0.3689603805541992, -0.05284840986132622, -0.0001785755157470703, -5.7220458984375e-06, -0.0022916793823242188, 0.0, -0.00331878662109375, -0.035098932683467865, -8.344629350176547e-06, -0.6237430572509766, -5.7220458984375e-06, 0.0, -0.029048919677734375, -5.7220458984375e-06, -9.5367431640625e-06, -0.006358146667480469, -0.04808717593550682, -0.0009225606918334961, -7.62939453125e-06, -0.0014524459838867188, 0.0, -0.006435394287109375, -0.09377483278512955, -1.025196434056852e-05, -0.4271221160888672, -1.1444091796875e-05, -1.9073486328125e-06, -0.236907958984375, -5.7220458984375e-06, -1.1444091796875e-05, -0.007907867431640625, -0.030329329892992973, -0.0004868507385253906, -7.62939453125e-06, -0.0019540786743164062, 0.0, -0.0053310394287109375, -0.03812400996685028, -5.006785613659304e-06, 0.0], "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n        for i in range(0, 2):\n            <UNK> = len(game.other_player.minions) - len(game.other_player.\n                minions)\n            targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n        targets.append(game.other_player.hero)\n"}, {"choice_history": [139, 193, 314], "score": -21.603708267211914, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -21.60370635986328], "inferred_code": ""}], "index": 31}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -0.022011631345208116, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -0.001861572265625, -1.71661376953125e-05, -1.52587890625e-05, -4.38690185546875e-05, -3.0517578125e-05, -3.4332275390625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002269744873046875, -0.0003905296325683594, 0.0, -2.6702880859375e-05, -0.0016021728515625, -0.00023651123046875, -0.004793643951416016, -8.106073073577136e-05, -5.7220458984375e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -5.395212389487256, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -0.001861572265625, -1.71661376953125e-05, -1.52587890625e-05, -4.38690185546875e-05, -3.0517578125e-05, -3.4332275390625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002269744873046875, -0.0003905296325683594, 0.0, -2.6702880859375e-05, -0.0016021728515625, -0.00023651123046875, -5.377817153930664, -0.0002564015449024737, -5.340576171875e-05, -9.5367431640625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -6.250904791452172, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -6.2077178955078125, -1.52587890625e-05, -3.814697265625e-06, -5.352497100830078e-05, -8.225440979003906e-06, -0.0002593994140625, -4.76837158203125e-05, -2.6702880859375e-05, -0.0026035308837890625, -1.33514404296875e-05, -1.9073486328125e-06, -0.01749897003173828, -1.9073486328125e-06, -1.33514404296875e-05, -0.0026340484619140625, -0.0002813338942360133, 0.0, -2.6702880859375e-05, -0.0033473968505859375, -7.43865966796875e-05, -0.007580876350402832, -7.509957504225895e-05, -5.53131103515625e-05, -7.62939453125e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 114, 113, 156], "score": -6.747155542385713, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -0.001861572265625, -1.71661376953125e-05, -1.52587890625e-05, -4.38690185546875e-05, -3.0517578125e-05, -3.4332275390625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002269744873046875, -0.0003905296325683594, 0.0, -2.6702880859375e-05, -6.72884464263916, -0.0030622482299804688, -1.1444091796875e-05], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -6.888801573077558, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -6.8737897872924805, -2.0265579223632812e-06, -0.0005702972412109375, -0.000553131103515625, -0.0003070831298828125, -0.000102996826171875, -5.865096318302676e-05, -4.410743713378906e-06, -0.0001983642578125, 0.0, -0.000244140625, -0.00028586387634277344, -1.4066696166992188e-05, -3.24249267578125e-05, -2.09808349609375e-05, -8.785724639892578e-05, -3.826618194580078e-05, -0.0020198822021484375, -1.33514404296875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -2.6702880859375e-05, -2.47955322265625e-05, -6.29425048828125e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002155303955078125, -0.0003676414489746094, 0.0, -2.47955322265625e-05, -0.0015697479248046875, -0.00023651123046875, -0.004751682281494141, -7.927269325591624e-05, -5.53131103515625e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "copy", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -6.9805721027536265, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -6.9549455642700195, -1.7046912034857087e-05, -0.0007419586181640625, -0.0009918212890625, -0.008717536926269531, -0.0003490447998046875, -5.0663944421103224e-05, -2.384185791015625e-06, -0.000141143798828125, 0.0, -0.0007152557373046875, -0.0002804994583129883, -2.2172927856445312e-05, -3.0517578125e-05, -1.9073486328125e-05, -9.167194366455078e-05, -5.924701690673828e-05, -0.0027942657470703125, -1.52587890625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -2.86102294921875e-05, -3.0517578125e-05, -6.103515625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002307891845703125, -0.0004094839096069336, 0.0, -2.6702880859375e-05, -0.0016002655029296875, -0.0002307891845703125, -0.00477290153503418, -8.034551865421236e-05, -5.7220458984375e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.copy, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 3, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -7.521784179373185, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -7.49953556060791, -0.0001049041748046875, -9.72747802734375e-05, -1.9073486328125e-05, -3.62396240234375e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.000499725341796875, -0.0003731250762939453, 0.0, -2.47955322265625e-05, -0.0025424957275390625, -6.29425048828125e-05, -0.005821347236633301, -9.166970994556323e-05, -5.340576171875e-05, -5.7220458984375e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 4, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -7.538673273850122, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -7.512887954711914, -0.004085540771484375, -0.000232696533203125, -1.33514404296875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.4332275390625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.0003108978271484375, -0.0004614591016434133, 0.0, -4.76837158203125e-05, -0.002162933349609375, -7.62939453125e-05, -0.0056732892990112305, -0.00010227856546407565, -6.866455078125e-05, -5.7220458984375e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -7.549565671252253, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "DREAM", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -7.522546768188477, -4.172325134277344e-06, -0.002613067626953125, -0.0015316009521484375, -0.009511947631835938, -0.0002536773681640625, -8.416174387093633e-05, -4.5299530029296875e-06, -0.000125885009765625, 0.0, -0.00030517578125, -0.0002835988998413086, -1.5974044799804688e-05, -3.24249267578125e-05, -1.9073486328125e-05, -0.00010502338409423828, -7.641315460205078e-05, -0.0014667510986328125, -1.52587890625e-05, -1.1444091796875e-05, -4.1961669921875e-05, -3.4332275390625e-05, -2.09808349609375e-05, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.00023651123046875, -0.0003942251205444336, 0.0, -2.6702880859375e-05, -0.0016326904296875, -0.000232696533203125, -0.004744172096252441, -7.891507993917912e-05, -5.53131103515625e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.DREAM, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -7.836331957342161, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -7.638293266296387, -2.47955322265625e-05, -0.10477733612060547, 0.0, -0.07350647449493408, 0.0, -2.47955322265625e-05, -4.38690185546875e-05, -5.543231964111328e-05, -1.1920928244535389e-07, -0.0001430511474609375, -6.866455078125e-05, -7.62939453125e-06, -0.0004425048828125, -1.9073486328125e-06, -1.52587890625e-05, -6.29425048828125e-05, -5.7220458984375e-06, -5.14984130859375e-05, -0.0001621246337890625, -0.00043976306915283203, 0.0, -3.62396240234375e-05, -0.001445770263671875, -0.0002193450927734375, -0.004956960678100586, -7.855748117435724e-05, -5.53131103515625e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=MINION_TYPE.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -8.121693967111582, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -8.093153953552246, -2.264974000354414e-06, -0.00038909912109375, -0.00049591064453125, -0.0146484375, -0.000118255615234375, -8.249279926531017e-05, -2.622604142743512e-06, -0.0001201629638671875, 0.0, -0.0005397796630859375, -0.0002684593200683594, -1.7881393432617188e-05, -3.0517578125e-05, -1.9073486328125e-05, -9.548664093017578e-05, -8.404254913330078e-05, -0.001068115234375, -1.71661376953125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -3.24249267578125e-05, -3.0517578125e-05, -8.392333984375e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -0.0003752708435058594, 0.0, -2.6702880859375e-05, -0.00157928466796875, -0.0002384185791015625, -0.004774689674377441, -7.93918952695094e-05, -5.53131103515625e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -8.247268908444653, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -8.077141761779785, -7.62939453125e-06, -7.62939453125e-06, -1.1444091796875e-05, -0.0002766847610473633, 0.0, -0.002341508399695158, -9.298322765971534e-06, -0.0005626678466796875, -0.1350851058959961, -7.82012939453125e-05, -0.0032924413681030273, -2.1457672119140625e-06, -0.005877494812011719, 0.0, -0.003437042236328125, -0.00037157535552978516, -1.6808508007670753e-05, -4.1961669921875e-05, -2.6702880859375e-05, -0.00012791156768798828, -1.537799835205078e-05, -0.0043182373046875, -1.1444091796875e-05, -1.52587890625e-05, -2.288818359375e-05, -2.09808349609375e-05, -1.71661376953125e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0002460479736328125, -0.00048351287841796875, 0.0, -2.47955322265625e-05, -0.001499176025390625, -0.0002002716064453125, -0.0047446489334106445, -7.796136196702719e-05, -5.7220458984375e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            EPIC, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -8.696360096905096, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -0.001861572265625, -1.71661376953125e-05, -1.52587890625e-05, -4.38690185546875e-05, -3.0517578125e-05, -3.4332275390625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.673630714416504, -9.942054748535156e-05, -2.0265579223632812e-06, -1.52587890625e-05, -0.0021343231201171875, -0.0002765655517578125, -0.005256413947790861, -0.00015782398986630142, -0.00019073486328125, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156], "score": -8.857867593158176, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Fireball"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -8.785743713378906, -1.9073486328125e-06, -0.006752129644155502, -9.894361937767826e-06, -0.02731037139892578, -0.0003204345703125, -0.02128314971923828, -8.58306884765625e-05, -0.0002346038818359375, -3.099440846199286e-06, -0.000232696533203125, 0.0, -0.0021877288818359375, -0.0003113746643066406, -3.337859743623994e-05, -2.6702880859375e-05, -2.288818359375e-05, -9.739398956298828e-05, -4.780292510986328e-05, -0.0030994415283203125, -1.1444091796875e-05, -1.1444091796875e-05, -4.9591064453125e-05, -2.6702880859375e-05, -1.1444091796875e-05, -5.340576171875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000270843505859375, -0.0003854036331176758, 0.0, -2.86102294921875e-05, -0.001850128173828125, -0.0002269744873046875, -0.00469052791595459, -7.760374865029007e-05, -5.7220458984375e-05, -3.814697265625e-06], "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CARD_RARITY.EPIC, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n"}, {"choice_history": [139, 193, 314], "score": -24.200889587402344, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -24.200885772705078], "inferred_code": ""}], "index": 32}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -0.029895080788719497, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0019664764404296875, -3.814697265625e-06, -0.004432797431945801, -9.655952453613281e-06, -0.0001983642578125, -0.0002498626708984375, -2.6702880859375e-05, -4.38690185546875e-05, -4.0769478800939396e-05, -2.0265579223632812e-05, -6.866455078125e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -8.392333984375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.000141143798828125, -0.0006521900068037212, -4.0531158447265625e-06, -9.5367431640625e-05, -0.001293182373046875, -1.1444091796875e-05, -0.0026487288996577263, -1.3709068298339844e-05, -1.9073486328125e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "MAGE", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -5.674830550281058, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0019664764404296875, -3.814697265625e-06, -5.647792816162109, -7.867813110351562e-06, -0.001598358154296875, -0.00045013427734375, -9.5367431640625e-06, -4.38690185546875e-05, -4.875621380051598e-05, -8.2254373410251e-06, -7.2479248046875e-05, -4.76837158203125e-05, 0.0, -3.814697265625e-06, -4.1961669921875e-05, -6.67572021484375e-05, -5.7220458984375e-06, -0.00025177001953125, -0.0005754200974479318, -4.172325134277344e-06, -0.0001049041748046875, -0.00133514404296875, -1.1444091796875e-05, -0.0026053169276565313, -1.3709068298339844e-05, -1.9073486328125e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.MAGE(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 102, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -6.262323452116561, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -6.205971717834473, -0.0015697479248046875, -9.5367431640625e-06, 0.0, -0.00019609928131103516, -4.0531158447265625e-06, -0.0002040863037109375, -0.019931793212890625, -0.00025177001953125, -0.00244140625, -2.6702880859375e-05, -0.0012845993041992188, -3.4332275390625e-05, -0.01727008819580078, -3.24249267578125e-05, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0023670196533203125, -3.933906555175781e-06, -0.0031654834747314453, -5.7220458984375e-06, -0.0002193450927734375, -0.000286102294921875, -4.1961669921875e-05, -5.340576171875e-05, -4.2676889279391617e-05, -2.562999725341797e-05, -6.4849853515625e-05, -3.62396240234375e-05, 0.0, -3.814697265625e-06, -8.58306884765625e-05, -6.4849853515625e-05, -7.62939453125e-06, -0.0001811981201171875, -0.0005805466789752245, -4.0531158447265625e-06, -8.96453857421875e-05, -0.0011501312255859375, -1.1444091796875e-05, -0.0028899468015879393, -1.3709068298339844e-05, -1.9073486328125e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -6.661654232647834, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": ""}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -6.633669853210449, -0.0040435791015625, -5.543231964111328e-05, -0.0001430511474609375, -0.0001888275146484375, -1.1444091796875e-05, -3.62396240234375e-05, -3.981578993261792e-05, -1.0967253729177173e-05, -6.866455078125e-05, -5.53131103515625e-05, 0.0, -5.7220458984375e-06, -6.67572021484375e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0002155303955078125, -0.0005612364038825035, -3.933906555175781e-06, -6.4849853515625e-05, -0.0009307861328125, -1.33514404296875e-05, -0.003620385890826583, -1.3709068298339844e-05, -1.9073486328125e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in .copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.725126619985986, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0019664764404296875, -3.814697265625e-06, -0.004432797431945801, -9.655952453613281e-06, -0.0001983642578125, -0.0002498626708984375, -2.6702880859375e-05, -4.38690185546875e-05, -4.0769478800939396e-05, -2.0265579223632812e-05, -6.866455078125e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -8.392333984375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.000141143798828125, -0.0006521900068037212, -4.0531158447265625e-06, -9.5367431640625e-05, -0.001293182373046875, -1.1444091796875e-05, -6.697838306427002, -7.987022399902344e-06, -6.866455078125e-05, -1.9073486328125e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "4", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -6.872065906224179, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -5.011174201965332, -6.103515625e-05, -0.0030355453491210938, -2.0265579223632812e-06, -5.53131103515625e-05, -1.71661376953125e-05, -0.00020599365234375, -1.52587890625e-05, -0.0133819580078125, -5.9604644775390625e-06, -0.0009708404541015625, -0.0010862350463867188, -1.0871248245239258, -0.0014934539794921875, -0.0010760605800896883, -2.312659489689395e-05, -0.05488109588623047, -0.08657550811767578, -1.1444091796875e-05, -5.7220458984375e-06, -0.598872184753418, -5.53131103515625e-05, -3.814697265625e-06, -0.0009174346923828125, -0.0008068082970567048, -1.9073486328125e-06, -3.62396240234375e-05, -0.0021820068359375, -1.33514404296875e-05, -0.0012190805282443762, -1.239776611328125e-05, -2.6702880859375e-05, -1.9073486328125e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(4)):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -7.162053338376154, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -5.011174201965332, -6.103515625e-05, -0.0030355453491210938, -2.0265579223632812e-06, -5.53131103515625e-05, -1.71661376953125e-05, -0.00020599365234375, -1.52587890625e-05, -0.0133819580078125, -5.9604644775390625e-06, -0.0009708404541015625, -0.0010862350463867188, -0.6745243072509766, -0.3675508499145508, -0.007708549499511719, -0.0024967193603515625, -5.7220458984375e-05, -0.008240699768066406, -0.00017547607421875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -0.012431144714355469, -5.7220458984375e-06, -0.001546025276184082, -5.924701690673828e-05, -4.57763671875e-05, -7.2479248046875e-05, -1.52587890625e-05, -8.392333984375e-05, -3.8862155633978546e-05, -2.193450927734375e-05, -0.0065555572509765625, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.8422327041625977, -0.0007771243690513074, -4.5299530029296875e-06, -0.0004119873046875, -0.010565757751464844, -1.9073486328125e-05, -0.005256024654954672, -8.106231689453125e-06, -5.53131103515625e-05, -0.03821563720703125, -1.9073486328125e-05, -1.9073486328125e-06, -0.11731338500976562, -3.814697265625e-06, -1.9073486328125e-06, -0.014064788818359375, 0.0, -0.0033054351806640625, -0.003093880135565996, -0.00022385249030776322, -0.0006227493286132812, 0.0, -0.0002918243408203125, -0.0032482147216796875, -2.47955322265625e-05, -0.0038061202503740788, -2.7060508728027344e-05, -2.09808349609375e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            targets = copy.copy(game.other_player.minions)\n            minion.damage(player.effective_spell_damage(4), self)\n            game.other_player.hero.damage(player.effective_spell_damage(4),\n                self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "4", "<EOS>", 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.47964020374684, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 4}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -5.011174201965332, -6.103515625e-05, -0.0030355453491210938, -2.0265579223632812e-06, -5.53131103515625e-05, -1.71661376953125e-05, -0.00020599365234375, -1.52587890625e-05, -0.0133819580078125, -5.9604644775390625e-06, -0.0009708404541015625, -0.0010862350463867188, -1.0871248245239258, -0.0014934539794921875, -0.0010760605800896883, -2.312659489689395e-05, -0.05488109588623047, -0.08657550811767578, -1.1444091796875e-05, -5.7220458984375e-06, -0.8039999008178711, -0.0007266998291015625, 0.0, -0.39902591705322266, -0.007959485054016113, -9.5367431640625e-06, -1.9073486328125e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(4)):\n            player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "7", "<EOS>", 113, 156], "score": -7.5634384114059685, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 7}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0019664764404296875, -3.814697265625e-06, -0.004432797431945801, -9.655952453613281e-06, -0.0001983642578125, -0.0002498626708984375, -2.6702880859375e-05, -4.38690185546875e-05, -4.0769478800939396e-05, -2.0265579223632812e-05, -6.866455078125e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -8.392333984375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.000141143798828125, -0.0006521900068037212, -4.0531158447265625e-06, -9.5367431640625e-05, -0.001293182373046875, -1.1444091796875e-05, -7.535530090332031, -0.0006737709045410156, -2.09808349609375e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(7), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 61, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -7.591680944817654, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template64"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -7.529344081878662, -0.005139350891113281, -0.026700973510742188, -0.000728607177734375, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -0.004672050476074219, -1.9073486328125e-06, -0.012296795845031738, -9.655952453613281e-06, -0.0002651214599609375, -0.0004940032958984375, -2.47955322265625e-05, -5.340576171875e-05, -5.0544607802294195e-05, -2.002716064453125e-05, -9.1552734375e-05, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -7.05718994140625e-05, -3.814697265625e-06, -0.0001430511474609375, -0.0006216727779246867, -4.0531158447265625e-06, -0.0001010894775390625, -0.0013065338134765625, -1.1444091796875e-05, -0.0025711702182888985, -1.3709068298339844e-05, -1.9073486328125e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for target in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.779755111387658, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0019664764404296875, -3.814697265625e-06, -0.004432797431945801, -9.655952453613281e-06, -0.0001983642578125, -0.0002498626708984375, -2.6702880859375e-05, -4.38690185546875e-05, -4.0769478800939396e-05, -2.0265579223632812e-05, -6.866455078125e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -8.392333984375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.000141143798828125, -0.0006521900068037212, -4.0531158447265625e-06, -9.5367431640625e-05, -0.001293182373046875, -1.1444091796875e-05, -7.752491474151611, -2.384185791015625e-06, -4.76837158203125e-05, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 316, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -7.853503435347875, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -5.011174201965332, -6.103515625e-05, -0.0030355453491210938, -2.0265579223632812e-06, -5.53131103515625e-05, -1.71661376953125e-05, -0.00020599365234375, -1.52587890625e-05, -0.0133819580078125, -5.9604644775390625e-06, -0.0009708404541015625, -0.0010862350463867188, -0.6745243072509766, -1.4352502822875977, -0.003871917724609375, -0.002197265625, -1.52587890625e-05, -0.09948539733886719, -0.007512092590332031, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -4.57763671875e-05, 0.0, -0.019965171813964844, -7.62939453125e-06, -0.0007917881011962891, -6.29425048828125e-05, -4.1961669921875e-05, -7.2479248046875e-05, -1.52587890625e-05, -8.392333984375e-05, -3.2663316233083606e-05, -1.811981201171875e-05, -0.000339508056640625, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, 0.0, -0.5447673797607422, -0.002658000448718667, -2.503394853192731e-06, -0.000926971435546875, -0.02005481719970703, -2.6702880859375e-05, -0.003777959616854787, -6.675719760096399e-06, -0.0001373291015625, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            targets = copy.copy(game.other_player.minions)\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "extend", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156], "score": -8.203966265462896, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Template78"}], "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "extend", "value": {"_type": "Template78"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -5.011174201965332, -6.103515625e-05, -0.0030355453491210938, -2.0265579223632812e-06, -5.53131103515625e-05, -1.71661376953125e-05, -0.00020599365234375, -1.52587890625e-05, -0.0133819580078125, -5.9604644775390625e-06, -0.0009708404541015625, -0.0010862350463867188, -0.6745243072509766, -0.3675508499145508, -0.007708549499511719, -0.0024967193603515625, -5.7220458984375e-05, -0.008240699768066406, -0.00017547607421875, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.0517578125e-05, 0.0, -0.012431144714355469, -5.7220458984375e-06, -0.001546025276184082, -5.924701690673828e-05, -4.57763671875e-05, -7.2479248046875e-05, -1.52587890625e-05, -8.392333984375e-05, -3.8862155633978546e-05, -2.193450927734375e-05, -0.0065555572509765625, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.72247314453125, -0.26354461908340454, -3.814697265625e-05, -0.0003108978271484375, -0.09472942352294922, -1.33514404296875e-05, -0.0040149688720703125, -0.02043461799621582, -1.6808508007670753e-05, -0.2430591583251953, -1.9073486328125e-06, -5.7220458984375e-06, -2.47955322265625e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.7176427841186523, -0.0010006418451666832, -7.748603820800781e-06, -0.000301361083984375, -0.011037826538085938, -2.47955322265625e-05, -0.0066475337371230125, -1.3709068298339844e-05, -0.000110626220703125, -3.814697265625e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            targets = copy.copy(game.other_player.minions)\n            targets.extend(game.other_player.minions)\n            minion.damage(player.effective_spell_damage(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 115, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -8.456552386277053, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "Flamestrike"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -5.011174201965332, -6.103515625e-05, -0.0030355453491210938, -2.0265579223632812e-06, -5.53131103515625e-05, -1.71661376953125e-05, -0.00020599365234375, -1.52587890625e-05, -0.0133819580078125, -5.9604644775390625e-06, -0.0009708404541015625, -0.0010862350463867188, -2.6512222290039062, -0.04015541076660156, -0.012699127197265625, 0.0, -1.9073486328125e-06, -0.1919097900390625, -0.0001220703125, 0.0, -0.50518798828125, -0.018513083457946777, -1.33514404296875e-05, -1.9073486328125e-06], "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            player.draw()\n"}, {"choice_history": [139, 193, 314], "score": -23.89983367919922, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -23.899829864501953], "inferred_code": ""}], "index": 33}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -0.16491112265179453, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -0.00469207763671875, -0.0001277923583984375, -0.022570999339222908, -1.9073486328125e-06, -0.031009674072265625, -7.62939453125e-06, -0.0028285980224609375, -0.0005893707275390625, -0.0005588531494140625, -0.00012969970703125, -0.0038994327187538147, -0.005142612848430872, -2.09808349609375e-05, -1.52587890625e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "2", "<EOS>", 93, 213, "Weapon", "Selector", "<EOS>", 110, 156], "score": -3.828137668904212, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"_type": "Template16", "hole0": "WeaponSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -0.00469207763671875, -0.0001277923583984375, -0.022570999339222908, -1.9073486328125e-06, -3.587130546569824, -3.814697265625e-06, -0.11959990113973618, -0.00011467933654785156, -3.6954863844584906e-06, -0.00057220458984375, -3.814697265625e-06], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), WeaponSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "5", "<EOS>", 92, 110, 156], "score": -4.954621949357936, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 5}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -0.00469207763671875, -0.0001277923583984375, -4.234774112701416, -1.1444091796875e-05, -0.46714210510253906, -0.15454483032226562, -1.33514404296875e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(5), SelfSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "Adjacent", "<EOS>", 110, 156], "score": -5.443258332995576, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"args": [{"_type": "Template16", "hole0": "AdjacentAdjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -0.00469207763671875, -0.0001277923583984375, -0.022570999339222908, -1.9073486328125e-06, -0.031009674072265625, -7.62939453125e-06, -0.0028285980224609375, -0.0005893707275390625, -0.0005588531494140625, -0.00012969970703125, -0.0038994327187538147, -5.283447742462158, -2.109989509335719e-05, -4.38690185546875e-05, -1.33514404296875e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            AdjacentAdjacent()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 304, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 79, 171, 25, 194, "Random", "Picker", "<EOS>", 302, 108, 110, 156], "score": -5.71515072708393, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}, {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "RandomPicker"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -3.263162612915039, -0.0097198486328125, -0.0013322830200195312, -0.014905895106494427, 0.0, -0.09324359893798828, -1.71661376953125e-05, -0.013843536376953125, -0.0001239776611328125, -0.00152587890625, -0.000324249267578125, -0.024424448609352112, -0.015956038609147072, -0.22539901733398438, -0.0020351409912109375, -0.18636608123779297, -7.62939453125e-06, -1.5035604238510132, -0.28335511684417725, -0.018871307373046875, -0.00196075439453125, -0.0047168731689453125, -0.0001316070556640625, -9.5367431640625e-06], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()), RandomPicker(2))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 62, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -5.779126967253653, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -5.477870941162109, -0.001300811767578125, -0.2299060821533203, -1.71661376953125e-05, -0.019830016419291496, -0.0007099097711034119, -0.00371551513671875, -1.9073486328125e-06], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Buff(Adjacent())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "5", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -5.788012802725682, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 5}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -0.00469207763671875, -0.0001277923583984375, -4.234774112701416, -1.1444091796875e-05, -1.4411430358886719, -2.09808349609375e-05, -0.0018768310546875, -0.0021839141845703125, -8.7738037109375e-05, -0.0001220703125, -0.0016826093196868896, -0.00794153567403555, -2.09808349609375e-05, -1.1444091796875e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(5), MinionSelector(\n            Adjacent()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Adjacent", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -5.804621637923667, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Adjacent"}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -5.3885087966918945, -3.4332275390625e-05, -0.013072287663817406, -0.023932183161377907, -0.08658218383789062, -0.00014495849609375, -0.1602916717529297, -0.0005931854248046875, -0.0039043426513671875, -3.814697265625e-06, -0.030996404588222504, -0.003119170665740967, -9.72747802734375e-05, -2.47955322265625e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(Adjacent(), MinionSelector(Adjacent\n            ()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 304, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 79, 171, 25, 194, "Heal", "<EOS>", 302, 108, 110, 156], "score": -5.805203450968513, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}, {"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -3.263162612915039, -0.0097198486328125, -0.0013322830200195312, -0.014905895106494427, 0.0, -0.09324359893798828, -1.71661376953125e-05, -0.013843536376953125, -0.0001239776611328125, -0.00152587890625, -0.000324249267578125, -0.024424448609352112, -0.015956038609147072, -0.22539901733398438, -0.0020351409912109375, -0.18636608123779297, -7.62939453125e-06, -1.7597516775131226, -0.13140535354614258, -7.62939453125e-06, -0.011289596557617188, -0.0001850128173828125, -1.9073486328125e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()), Heal(2))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -5.809275977868083, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -5.658116817474365, -4.9591064453125e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.20159912109375e-05, -2.1457672119140625e-06, -2.6702880859375e-05, -5.91278076171875e-05, -0.0136566162109375, -1.71661376953125e-05, -7.271765298355604e-06, -1.835809598560445e-05, -0.00014376459876075387, 0.0, -0.008416175842285156, 0.0, -0.001800537109375, -1.1444091796875e-05, -0.0001049041748046875, 0.0, -1.9073486328125e-06, -0.0045719146728515625, -0.03997230529785156, -0.0045223236083984375, -0.000125885009765625, -0.02155940607190132, -1.9073486328125e-06, -0.031780242919921875, -7.62939453125e-06, -0.0028743743896484375, -0.0005855560302734375, -0.0005931854248046875, -0.00012969970703125, -0.003937557339668274, -0.005114029627293348, -2.09808349609375e-05, -1.52587890625e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 68, 156], "score": -6.087914624376246, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "stealth", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -6.052191734313965, -1.9073486328125e-06, -0.0002536773681640625, -1.9073486328125e-06], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, stealth=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 111, 108, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Adjacent", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 91, 211, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -6.097012821751598, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template40"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Adjacent"}, {"args": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -4.262751579284668, -8.7738037109375e-05, -0.0003681182861328125, -0.0001983642578125, -0.0004940032958984375, -2.288818359375e-05, -0.2006368637084961, -0.017847061157226562, -0.03642559051513672, -0.001613616943359375, -9.5367431640625e-06, -0.04247856140136719, -4.172325134277344e-06, -8.0108642578125e-05, -0.0041656494140625, -2.288818359375e-05, -0.5287163257598877, 0.0, -0.000331878662109375, -1.33514404296875e-05, -0.0001964569091796875, -3.814697265625e-06, -1.1444091796875e-05, -0.011293411254882812, -7.62939453125e-06, -0.0011196136474609375, -5.7220458984375e-06, -0.2434092015028, -0.0028700828552246094, -0.0001068115234375, 0.0, -0.0011501312255859375, -0.000701904296875, -0.0013751983642578125, -7.62939453125e-06, -0.0032329559326171875, -2.09808349609375e-05, -0.4791727066040039, -0.00052642822265625, -0.13797512650489807, -9.191036224365234e-05, -0.0042209625244140625, -8.20159912109375e-05, -0.0063228607177734375, -0.03063488006591797, -0.012294769287109375, -1.33514404296875e-05, -0.029769765213131905, -0.012985548935830593, -7.2479248046875e-05, -2.09808349609375e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(3, 2, charge=True, effects=[Effect(Adjacent(),\n            ActionTag(Give(ChangeHealth(2)), MinionSelector(Adjacent())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 97, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156], "score": -6.300788555335423, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template20"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"args": [{"_type": "Template16", "hole0": "Adjacent"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -6.140118598937988, -0.0001354217529296875, -0.0001506805419921875, 0.0, -0.000985860824584961, -3.814697265625e-06, -0.0001049041748046875, 0.0, -1.52587890625e-05, 0.0, -2.288818359375e-05, 0.0, -0.010066986083984375, -3.814697265625e-06, -5.91278076171875e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.00011444091796875, -0.014787673950195312, -2.288818359375e-05, -1.1324880688334815e-05, -3.409334021853283e-05, -0.00011122079740744084, 0.0, -0.008309364318847656, 0.0, -0.00179290771484375, -1.1444091796875e-05, -0.0001239776611328125, 0.0, -1.9073486328125e-06, -0.004398345947265625, -0.04311180114746094, -0.0046634674072265625, -0.0001277923583984375, -0.022534888237714767, -1.9073486328125e-06, -0.030771255493164062, -7.62939453125e-06, -0.002819061279296875, -0.00058746337890625, -0.0005626678466796875, -0.00012969970703125, -0.003929398953914642, -0.005141071043908596, -2.09808349609375e-05, -1.52587890625e-05], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 304, 90, 209, "2", "<EOS>", 92, 79, 172, 25, 194, "Greater", "Than", "<EOS>", 302, 79, 171, 25, 194, "Count", "<EOS>", 302, 93, 213, "Weapon", "Selector", "<EOS>", 310, 138, 291, "value", "<EOS>", 53, 110, 156], "score": -6.8180908747578925, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 2}, {"_type": "Template15"}, {"args": [{"args": [{"_type": "Template16", "hole0": "WeaponSelector"}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Template55"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 3}], "name": "create_minion"}], "name": "FlametongueTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -3.263162612915039, -0.0097198486328125, -0.0013322830200195312, -0.014905895106494427, 0.0, -2.603239059448242, -0.01599884033203125, -0.022230148315429688, -0.0018672943115234375, -9.5367431640625e-06, -0.006239056587219238, -0.0008635520935058594, -0.0009555816650390625, -9.1552734375e-05, -0.009807586669921875, -3.24249267578125e-05, -0.05587291717529297, -3.814697265625e-06, -0.1130143404006958, -9.655952453613281e-06, -3.814697265625e-06, -0.07091331481933594, -3.814697265625e-06, -0.16368599236011505, -0.00039625162025913596, -4.529942543740617e-06, -0.0001316070556640625, -0.000446319580078125, -1.9073486328125e-06, -0.39367103576660156, -9.5367431640625e-06, -0.014405250549316406, -0.0048961639404296875, -7.62939453125e-06], "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), SelfSelector(),\n            GreaterThan(Count(WeaponSelector()), value=0))])\n"}, {"choice_history": [139, 193, 314], "score": -26.221477508544922, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -26.221473693847656], "inferred_code": ""}], "index": 34}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -0.092386896779999, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -0.007166266441345215, -7.629387255292386e-06, -0.0006504058837890625, -0.016222000122070312, -0.00058746337890625, -0.00010037025640485808, -0.00015913753304630518, -0.0002551075886003673, -1.573553163325414e-05, -0.0028515977319329977, -3.933906555175781e-06, -0.0004367828369140625, -7.62939453125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 158, 283, "0", "<EOS>", "1", "<EOS>", 156], "score": -5.293814690417776, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Template9", "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -0.007166266441345215, -7.629387255292386e-06, -0.0006504058837890625, -4.533792495727539, -0.18606090545654297, -0.0017168344929814339, -0.0011682261247187853, -0.4991004467010498, -2.0742414562846534e-05, -0.0002079010009765625], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 158, 283, "0", "<EOS>", "0", "<EOS>", 156], "score": -5.7294223621572655, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Template9", "hole0": 0, "hole1": 0}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -0.007166266441345215, -7.629387255292386e-06, -0.0006504058837890625, -4.533792495727539, -0.18606090545654297, -0.0017168344929814339, -0.0011682261247187853, -0.9345592260360718, -0.0003203153610229492, -5.7220458984375e-05], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 0)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "minion", "<EOS>", 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -5.770863524099468, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "minion"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -5.685016632080078, -1.9431114196777344e-05, -0.0026111602783203125, -0.0146026611328125, -0.000492095947265625, -0.00012289875303395092, -0.000176539906533435, -0.00023424538085237145, -1.3351374946068972e-05, -0.003203325206413865, -3.933906555175781e-06, -0.0004367828369140625, -7.62939453125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, minion):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 307, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.14697775524786, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -4.098139762878418, -2.09808349609375e-05, -3.814697265625e-06, -0.0006630618590861559, -3.576278118089249e-07, -0.0022487640380859375, -0.008691787719726562, 0.0, -0.000759124755859375, -1.981553077697754, -1.9073486328125e-06, -0.0008392333984375, -0.0023403167724609375, -0.005064129829406738, -1.9073486328125e-06, -0.006852149963378906, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00030517578125, -1.537799835205078e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.0001983642578125, -6.198883056640625e-06, -0.0022869110107421875, -7.05718994140625e-05, -0.0026607513427734375, -0.0001087188720703125, -0.0001621246337890625, -9.5367431640625e-06, -0.007168412208557129, -7.867804924899247e-06, -0.0006847381591796875, -0.01801300048828125, -0.00060272216796875, -0.00010227743769064546, -0.00015484649338759482, -0.0002498623507563025, -1.573553163325414e-05, -0.0029003452509641647, -3.933906555175781e-06, -0.0004253387451171875, -5.7220458984375e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.228270228451038, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -6.163821220397949, -0.0011348724365234375, -0.00026702880859375, -0.0002689361572265625, -9.798595419852063e-05, -0.00020442530512809753, -2.145765392924659e-05, -2.264974000354414e-06, -0.003543619532138109, -1.9073486328125e-06, -0.000324249267578125, -9.5367431640625e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 307, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "value", "<EOS>", 41, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.482880469770805, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Template40"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -4.098139762878418, -2.09808349609375e-05, -3.814697265625e-06, -0.0006630618590861559, -3.576278118089249e-07, -0.0022487640380859375, -0.008691787719726562, 0.0, -0.000759124755859375, -0.19025135040283203, -3.814697265625e-06, -0.00016021728515625, -0.0004253387451171875, -0.001071929931640625, 0.0, -0.0553126335144043, -4.410743713378906e-05, -0.003192901611328125, -0.0017795562744140625, -0.0002040863037109375, -0.6405706405639648, -1.9073486328125e-06, -1.0322284698486328, -0.00018310546875, -1.9073486328125e-06, -4.00543212890625e-05, -2.2649765014648438e-06, -0.43461132049560547, -0.0036449432373046875, -0.0003604888916015625, -0.0003910064697265625, -5.1855062338290736e-05, -0.0003622148360591382, -2.1815278159920126e-05, -1.6689286894688848e-06, -0.0035158987157046795, -1.9073486328125e-06, -0.0002918243408203125, -1.33514404296875e-05], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST, value=3)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 307, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "value", "<EOS>", 53, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.796522150433191, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Template55"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -4.098139762878418, -2.09808349609375e-05, -3.814697265625e-06, -0.0006630618590861559, -3.576278118089249e-07, -0.0022487640380859375, -0.008691787719726562, 0.0, -0.000759124755859375, -0.19025135040283203, -3.814697265625e-06, -0.00016021728515625, -0.0004253387451171875, -0.001071929931640625, 0.0, -0.0553126335144043, -4.410743713378906e-05, -0.003192901611328125, -0.0017795562744140625, -0.0002040863037109375, -0.6405706405639648, -1.9073486328125e-06, -1.0882978439331055, -0.1291790008544922, -9.5367431640625e-06, -4.57763671875e-05, -7.987022399902344e-06, -0.5466270446777344, -6.103515625e-05, -0.0032596588134765625, -0.000141143798828125, -0.000148773193359375, -5.7220458984375e-06, -0.009238958358764648, -8.821482879284304e-06, -0.0007648468017578125, -0.0077991485595703125, -0.00055694580078125, -9.48871165746823e-05, -0.00019000974134542048, -0.00025105432723648846, -9.179088920063805e-06, -0.0023060075473040342, -5.7220458984375e-06, -0.0003490447998046875, -7.62939453125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST, value=0)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frog", "<EOS>", 122, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.8455722516371225, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -6.684398174285889, -1.9073486328125e-06, -3.814697265625e-06, -8.666139910928905e-05, -1.1920922133867862e-06, -0.09197139739990234, -0.0001049041748046875, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008068084716796875, -5.7220458984375e-06, -1.442432312614983e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0003147125244140625, -9.5367431640625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, -2.384185791015625e-06, -0.0336761474609375, -3.814697265625e-05, -0.0017986297607421875, -5.91278076171875e-05, -0.00019073486328125, -5.7220458984375e-06, -0.005983233451843262, -9.059892363438848e-06, -0.00098419189453125, -0.017002105712890625, -0.0004558563232421875, -9.846307511907071e-05, -0.00014960144471842796, -0.0002870556781999767, -1.4543453289661556e-05, -0.00289445323869586, -3.933906555175781e-06, -0.0004367828369140625, -7.62939453125e-06], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 36, 154, 205, "0", "<EOS>", "1", "<EOS>", 156], "score": -6.973285150779475, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 0, "hole1": 1}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -6.858110427856445, -0.05744647979736328, -1.1444091796875e-05, -0.0006911815144121647, -0.00012564618373289704, -0.00015293773321900517, -2.1457672119140625e-06, -1.1444091796875e-05], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 307, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "value", "<EOS>", 53, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.112927202447679, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Template55"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole1": 1}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -4.098139762878418, -2.09808349609375e-05, -3.814697265625e-06, -0.0006630618590861559, -3.576278118089249e-07, -0.0022487640380859375, -0.008691787719726562, 0.0, -0.000759124755859375, -0.19025135040283203, -3.814697265625e-06, -0.00016021728515625, -0.0004253387451171875, -0.001071929931640625, 0.0, -0.0553126335144043, -4.410743713378906e-05, -0.003192901611328125, -0.0017795562744140625, -0.0002040863037109375, -0.6405706405639648, -1.9073486328125e-06, -1.0882978439331055, -0.1291790008544922, -9.5367431640625e-06, -4.57763671875e-05, -7.987022399902344e-06, -0.8763065338134766, -0.0067596435546875, -0.0003261566162109375, -0.0003604888916015625, -5.2689490985358134e-05, -0.0003706749703269452, -2.145763937733136e-05, -1.311301275563892e-06, -0.003739904146641493, -1.9073486328125e-06, -0.0002765655517578125, -1.33514404296875e-05], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, MINION_TYPE.BEAST, value=0)\n\n    def create_minion(self, player):\n        return Minion(0, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -7.5374101897321, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -0.007166266441345215, -7.629387255292386e-06, -0.0006504058837890625, -6.289590835571289, -0.0027904510498046875, -0.5633955001831055, -0.018772125244140625, -0.0010776519775390625, -0.000213623046875, -5.7220458984375e-06, -0.0004215240478515625, -0.15418148040771484, -3.24249267578125e-05, -6.29425048828125e-05, -1.9073486328125e-05, -0.007706021890044212, -1.9073486328125e-05, -0.24174165725708008, -9.5367431640625e-06, -0.015756607055664062, -0.0002231597900390625, -0.0001068115234375, -5.7220458984375e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0028667449951171875, -0.0001163482666015625, -0.0012292861938476562, -5.7220458984375e-06, -0.05161857604980469, 0.0, -0.001073002815246582, -2.384185791015625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.07098007202148438, -0.0011467933654785156, -3.933906555175781e-06, -5.7220458984375e-06, -0.0014438629150390625, -2.288818359375e-05, -0.038680076599121094, -0.000171661376953125], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return super().can_use(player, game) and len(player.minions) < 7\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 14, 302, 118, 156], "score": -10.230663252863224, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"values": [{"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "can_use", "value": {"_type": "Template16", "hole0": "super"}}}, {"_type": "Compare", "ops": [{"_type": "Lt"}], "left": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}, "comparators": [{"_type": "Template48"}]}], "_type": "BoolOp", "op": {"_type": "And"}}}], "name": "create_minion"}], "name": "Frog"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -0.007166266441345215, -7.629387255292386e-06, -0.0006504058837890625, -6.289590835571289, -0.0027904510498046875, -0.5633955001831055, -0.018772125244140625, -0.0010776519775390625, -0.000213623046875, -5.7220458984375e-06, -0.0004215240478515625, -0.15418148040771484, -3.24249267578125e-05, -6.29425048828125e-05, -1.9073486328125e-05, -0.007706021890044212, -1.9073486328125e-05, -0.24174165725708008, -9.5367431640625e-06, -0.015756607055664062, -0.0002231597900390625, -0.0001068115234375, -5.7220458984375e-06, -0.0001163482666015625, -3.814697265625e-06, -0.0028667449951171875, -0.0001163482666015625, -0.0012292861938476562, -5.7220458984375e-06, -0.05161857604980469, 0.0, -0.001073002815246582, -2.384185791015625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -2.750844955444336, -0.003159665036946535, -3.814697265625e-06, -7.62939453125e-06, -0.011686325073242188, -1.9073486328125e-05, -0.03972339630126953, -0.000263214111328125], "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) < 7\n"}, {"choice_history": [139, 193, 316, 155, 156], "score": -19.179582118988037, "model_output": {"_type": "Module", "body": [{"_type": "Template2"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -15.370291709899902, -3.8092617988586426], "inferred_code": "super().use(player, game)\n"}, {"choice_history": [139, 193, 314], "score": -23.08974266052246, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.52587890625e-05, -23.089725494384766], "inferred_code": ""}], "index": 35}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -0.2871968913833598, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -0.24584197998046875, 0.0, -0.00035858154296875, -0.00031828717328608036, 0.0, -3.814697265625e-05, -0.0076313018798828125, 0.0, -1.9073486328125e-06, -0.0003910064697265625, -1.9073486328125e-06, -3.24249267578125e-05, -0.0008525848388671875, -0.007191658020019531, -1.9073486328125e-06, -0.0001430511474609375, -4.76837158203125e-05, -0.0001201629638671875, -0.0001220703125, -0.000118255615234375, -0.0057506561279296875, -1.9073486328125e-06, -0.0015132647240534425, -1.9073468138230965e-06, -2.09808349609375e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -2.0443045055664015, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -1.5396766662597656, -0.01598834991455078, -1.1444091796875e-05, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -0.0030031204223632812, 0.0, -0.010628819465637207, -1.1444091796875e-05, -4.00543212890625e-05, -6.103515625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -0.00011324555816827342, -1.1324880688334815e-05, -0.0001430511474609375, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.0036029815673828125, -0.42523980140686035, 0.0, -4.00543212890625e-05, -0.0031642913818359375, -0.0001506805419921875, -0.02503814548254013, -5.7220458984375e-06, -0.000110626220703125, -5.7220458984375e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -2.681798101035497, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -1.5396766662597656, -0.01598834991455078, -1.1444091796875e-05, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -0.0030031204223632812, 0.0, -0.010628819465637207, -1.1444091796875e-05, -4.00543212890625e-05, -6.103515625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -0.00011324555816827342, -1.1324880688334815e-05, -0.0001430511474609375, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.0036029815673828125, -1.077636957168579, -1.9073486328125e-06, -5.91278076171875e-05, -2.288818359375e-05, -0.0003204345703125, -0.000141143798828125, -0.0001392364501953125, -0.008174896240234375, -1.9073486328125e-06, -0.00472617894411087, -4.887569048150908e-06, -1.9073486328125e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -5.581106083819691, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -0.24584197998046875, 0.0, -0.00035858154296875, -0.00031828717328608036, 0.0, -3.814697265625e-05, -0.0076313018798828125, 0.0, -1.9073486328125e-06, -0.0003910064697265625, -1.9073486328125e-06, -3.24249267578125e-05, -0.0008525848388671875, -5.272466659545898, 0.0, -4.00543212890625e-05, -0.0012912750244140625, -0.0003490447998046875, -0.034381769597530365, -5.7220458984375e-06, -0.0004062652587890625, -1.9073486328125e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 102, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -5.936246842030755, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -5.775965690612793, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -0.0002117156982421875, -0.010062217712402344, -6.4849853515625e-05, -0.0031890869140625, -2.47955322265625e-05, -0.0022182464599609375, -0.11064434051513672, -1.9073486328125e-06, -0.00038909912109375, -0.00043153390288352966, 0.0, -5.340576171875e-05, -0.0085601806640625, 0.0, 0.0, -0.000980377197265625, 0.0, -4.1961669921875e-05, -0.0024127960205078125, -0.00803375244140625, -1.9073486328125e-06, -0.000156402587890625, -2.288818359375e-05, -0.0001373291015625, -8.96453857421875e-05, -0.0001125335693359375, -0.007640838623046875, -1.9073486328125e-06, -0.0014469397719949484, -1.7881377516459906e-06, -2.09808349609375e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 79, 171, 25, 194, "Mana", "Change", "<EOS>", 302, 108, 156], "score": -6.428854932312902, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -0.24584197998046875, 0.0, -0.00035858154296875, -0.00031828717328608036, 0.0, -3.814697265625e-05, -0.0076313018798828125, 0.0, -1.9073486328125e-06, -0.0003910064697265625, -1.9073486328125e-06, -3.24249267578125e-05, -0.0008525848388671875, -0.007191658020019531, -1.9073486328125e-06, -0.0001430511474609375, -4.76837158203125e-05, -0.0001201629638671875, -0.0001220703125, -0.000118255615234375, -5.464901924133301, -2.86102294921875e-05, -0.0064182281494140625, 0.0, -0.01569223403930664, -0.00026356696616858244, -4.017353057861328e-05, -0.012889862060546875, -0.6485671997070312, -0.00014495849609375], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(ManaChange(2)))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "all", "<EOS>", 113, 156], "score": -6.60026561503139, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 0}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -1.5396766662597656, -0.01598834991455078, -1.1444091796875e-05, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -0.0030031204223632812, 0.0, -0.010628819465637207, -1.1444091796875e-05, -4.00543212890625e-05, -6.103515625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -0.00011324555816827342, -1.1324880688334815e-05, -0.0001430511474609375, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.0036029815673828125, -0.42523980140686035, 0.0, -4.00543212890625e-05, -0.0031642913818359375, -0.0001506805419921875, -4.580610275268555, -0.00034320331178605556, -0.0001659393310546875, -1.9073486328125e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(0), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 72, 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.645568681989175, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Template78"}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -5.958377838134766, -0.006961822509765625, -0.0006198883056640625, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.036712646484375, -0.6140996217727661, -5.7220458984375e-06, -0.00016021728515625, -3.0517578125e-05, -3.24249267578125e-05, -0.0001811981201171875, -6.866455078125e-05, -0.0083465576171875, -1.9073486328125e-06, -0.003222065046429634, -4.6491513785440475e-06, -2.288818359375e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in targets:\n            minion.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "MAGE", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.673643466391354, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -1.5396766662597656, -0.01598834991455078, -1.1444091796875e-05, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -0.0030031204223632812, 0.0, -4.729940414428711, 0.0, -0.0012264251708984375, -0.0005130767822265625, -9.5367431640625e-06, -9.72747802734375e-05, -0.0001510309084551409, -5.960462203802308e-06, -0.0001811981201171875, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.007323265075683594, -0.3286135196685791, 0.0, -4.38690185546875e-05, -0.003437042236328125, -0.0001926422119140625, -0.0258791521191597, -7.62939453125e-06, -0.000179290771484375, -3.814697265625e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.MAGE(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 72, 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.872921656936455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Template78"}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -5.958377838134766, -0.006961822509765625, -0.0006198883056640625, -1.9073486328125e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -0.036712646484375, -0.8064690828323364, 0.0, -2.288818359375e-05, -0.0019626617431640625, -0.0003719329833984375, -0.04409630596637726, -5.7220458984375e-06, -0.000598907470703125, -1.9073486328125e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.9888194119936315, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -6.2100629806518555, -1.9073486328125e-06, -0.010718464851379395, -2.0265579223632812e-06, -7.43865966796875e-05, -5.7220458984375e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.02136242389678955, -3.4570680327306036e-06, -0.0006771087646484375, -5.53131103515625e-05, -0.17791175842285156, -0.07183074951171875, -0.006320953369140625, 0.0, -1.9073486328125e-06, -0.31525611877441406, -1.9073486328125e-06, -3.24249267578125e-05, -0.037285804748535156, -0.11282813549041748, -1.71661376953125e-05, -1.52587890625e-05, -0.0001392364501953125, -0.000152587890625, -0.000240325927734375, -3.4332275390625e-05, -0.0027904510498046875, 0.0, -0.006321842782199383, -1.4543453289661556e-05, -1.52587890625e-05], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "Freeze", "<EOS>", 113, 156], "score": -6.9896556067916435, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 0}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -1.5396766662597656, -0.01598834991455078, -1.1444091796875e-05, 0.0, -0.0004024505615234375, -1.9073486328125e-06, -0.0030031204223632812, 0.0, -0.010628819465637207, -1.1444091796875e-05, -4.00543212890625e-05, -6.103515625e-05, -2.6702880859375e-05, -5.14984130859375e-05, -0.00011324555816827342, -1.1324880688334815e-05, -0.0001430511474609375, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.47955322265625e-05, -0.0036029815673828125, -0.42523980140686035, 0.0, -4.00543212890625e-05, -0.0031642913818359375, -0.0001506805419921875, -4.970000267028809, -0.00034320331178605556, -0.0001659393310546875, -1.9073486328125e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(0), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 79, 171, 25, 194, "Mana", "Change", "<EOS>", 302, 134, 286, 160, 39, 156], "score": -6.989857663636144, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "UnaryOp", "operand": {"_type": "Template38"}, "op": {"_type": "USub"}}], "_type": "Call", "func": {"_type": "Name", "id": "ManaChange"}}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -0.24584197998046875, 0.0, -0.00035858154296875, -0.00031828717328608036, 0.0, -3.814697265625e-05, -0.0076313018798828125, 0.0, -1.9073486328125e-06, -0.0003910064697265625, -1.9073486328125e-06, -3.24249267578125e-05, -0.0008525848388671875, -0.007191658020019531, -1.9073486328125e-06, -0.0001430511474609375, -4.76837158203125e-05, -0.0001201629638671875, -0.0001220703125, -0.000118255615234375, -5.464901924133301, -2.86102294921875e-05, -0.0064182281494140625, 0.0, -0.01569223403930664, -0.00026356696616858244, -4.017353057861328e-05, -0.012889862060546875, -0.7977237701416016, -0.0001087188720703125, -0.0001201629638671875, -0.4112434387207031, -0.000518798828125], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(ManaChange(-1)))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 151, 181, 21, 174, 17, 164, 37, "minions", "<EOS>", 299, 9, 302, 122, 315, 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -7.092716853466868, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Name", "id": "card"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Gt"}], "left": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}, "comparators": [{"_type": "Template55"}]}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}], "name": "use"}], "name": "FrostNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -0.24584197998046875, 0.0, -0.00035858154296875, -0.00031828717328608036, 0.0, -3.814697265625e-05, -5.057826042175293, -0.0001125335693359375, -0.000759124755859375, -0.000244140625, -0.10529327392578125, 0.0, -0.4425840377807617, -0.00950071681290865, -1.6689286894688848e-06, -2.47955322265625e-05, -0.03305816650390625, -1.71661376953125e-05, -0.0008831024169921875, -0.0012969970703125, -0.0002231597900390625, 0.0, 0.0, -0.014011383056640625, -3.814697265625e-06, -0.000720977783203125, -0.24712181091308594, -1.9073486328125e-06, -0.09120798110961914, -3.254413604736328e-05, -0.7648793458938599, 0.0, -5.340576171875e-05, -0.000194549560546875, -0.000392913818359375, -0.000152587890625, -1.9073486328125e-05, -0.0426483154296875, -1.33514404296875e-05, -0.01616818830370903, -7.987004210008308e-06, -9.5367431640625e-06], "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            if game.other_player.minions > 0:\n                card.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 314], "score": -25.509300231933594, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, 0.0, -25.50929832458496], "inferred_code": ""}], "index": 36}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -0.10881324137528026, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -0.024900436401367188, -0.016916990280151367, -0.0006450414657592773, -4.00543212890625e-05, -0.0002498626708984375, -9.918212890625e-05, -0.004436492919921875, -4.1961669921875e-05, -0.0011425018310546875, -3.814697265625e-06, -0.0037704617716372013, -5.245203283266164e-06, -1.52587890625e-05], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -4.971386889441526, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -3.820570945739746, 0.0, -0.4037647247314453, -0.026257051154971123, -5.483506538439542e-05, -0.6383886337280273, 0.0, -7.43865966796875e-05, -0.02431201934814453, -0.0002346038818359375, -0.0009243525564670563, -5.53131103515625e-05, -0.0001964569091796875, -7.62939453125e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -5.183317131153785, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -5.137782096862793, -0.0001983642578125, -5.14984130859375e-05, -3.814697265625e-06, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -4.76837158203125e-05, -0.0003528594970703125, -0.0011501312255859375, 0.0, -1.1444091796875e-05, -0.0015201568603515625, -0.000812530517578125, -0.0014982905704528093, -0.00036716461181640625, -0.0004177093505859375, -5.7220458984375e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -5.209297382995025, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -0.024900436401367188, -5.082980632781982, -0.0002727508544921875, -5.7220458984375e-06, -0.0445709228515625, -2.09808349609375e-05], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -5.248735622870406, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -5.116479396820068, -0.007179379463195801, -1.1444091796875e-05, -3.814697265625e-06, -6.949901580810547e-05, -1.3947486877441406e-05, -0.0001010894775390625, -0.03562450408935547, -0.0015544891357421875, -1.71661376953125e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -3.814697265625e-06, -6.866455078125e-05, -0.000499725341796875, -0.0012964009074494243, -1.1920928244535389e-07, -7.62939453125e-06, -0.00267791748046875, -0.000591278076171875, -0.0018890602514147758, -0.0001926422119140625, -0.0001468658447265625, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.000255584716796875, 0.0, -0.000232696533203125, -0.021636962890625, -0.017486214637756348, -0.0006202459335327148, -4.00543212890625e-05, -0.0002460479736328125, -9.5367431640625e-05, -0.0045757293701171875, -4.38690185546875e-05, -0.00115203857421875, -3.814697265625e-06, -0.003687032498419285, -5.125993993715383e-06, -1.52587890625e-05], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -5.595634542380246, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -3.820570945739746, 0.0, -0.4037647247314453, -0.026257051154971123, -5.483506538439542e-05, -1.279923439025879, -5.841255187988281e-06, -0.0010967254638671875, -4.9591064453125e-05, -6.103515625e-05, -0.0004634857177734375, -0.000339508056640625, -0.0006351470947265625, -3.814697265625e-06, -0.005849705543369055, -5.125993993715383e-06, -7.62939453125e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -5.630308857909874, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -0.024900436401367188, -5.545164108276367, -7.748603820800781e-06, -5.53131103515625e-05, -0.000545501708984375, -5.53131103515625e-05, -0.0028094323351979256, -8.0108642578125e-05, -0.0001392364501953125, -5.7220458984375e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "overload", "<EOS>", 38, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.098742611468083, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template36"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -5.314350605010986, -7.867782187531702e-06, -0.03049468994140625, -7.62939453125e-06, -4.1961669921875e-05, -5.9604644775390625e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -0.6178693771362305, -1.71661376953125e-05, -0.000301361083984375, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.000270843505859375, -0.00084686279296875, -0.0026475191116333008, 0.0, -9.5367431640625e-06, -0.001495361328125, -0.0002384185791015625, -0.001336459070444107, -7.05718994140625e-05, -0.0001888275146484375, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -0.0002498626708984375, 0.0, -0.0001430511474609375, -0.07873916625976562, -0.017443299293518066, -0.0005897283554077148, -3.814697265625e-05, -0.0002613067626953125, -0.000110626220703125, -0.0037822723388671875, -3.62396240234375e-05, -0.0011920928955078125, -3.814697265625e-06, -0.0035890399012714624, -5.125993993715383e-06, -1.52587890625e-05], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 61, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.116477785649856, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -5.981081962585449, -0.07028734683990479, -0.0002695322036743164, -2.6702880859375e-05, -0.000164031982421875, -9.72747802734375e-05, -0.002971649169921875, -3.4332275390625e-05, -0.0016345977783203125, -3.814697265625e-06, -0.0033399800304323435, -5.364412118069595e-06, -1.52587890625e-05], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "overload", "<EOS>", 38, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.212204638053777, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "overload", "value": {"_type": "Template36"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -5.314350605010986, -7.867782187531702e-06, -0.03049468994140625, -7.62939453125e-06, -4.1961669921875e-05, -5.9604644775390625e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -0.7909269332885742, -0.0002956390380859375, -0.0463409423828125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006961822509765625, -0.0006504058837890625, -0.0025702714920043945, 0.0, -2.09808349609375e-05, -0.0012760162353515625, -0.00048065185546875, -0.0012337617808952928, -9.1552734375e-05, -0.0003948211669921875, -5.7220458984375e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.318898625806575, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -6.156444549560547, -0.000133514404296875, -0.0058689117431640625, -9.5367431640625e-06, -4.1961669921875e-05, -0.00010585784184513614, -2.014636993408203e-05, -5.91278076171875e-05, -3.814697265625e-06, -0.0001049041748046875, -0.07740771770477295, -0.00010204315185546875, -2.6702880859375e-05, -3.814697265625e-06, -5.233287811279297e-05, -8.225440979003906e-06, -3.24249267578125e-05, -0.013671875, -9.72747802734375e-05, -3.24249267578125e-05, 0.0, -0.00011444091796875, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -0.000339508056640625, -0.0009949207305908203, -1.1920928244535389e-07, -7.62939453125e-06, -0.00275421142578125, -0.0004730224609375, -0.0017542463028803468, -0.000186920166015625, -0.000164031982421875, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.000274658203125, 0.0, -0.00023651123046875, -0.027135848999023438, -0.016802549362182617, -0.0006545782089233398, -4.00543212890625e-05, -0.00025177001953125, -9.918212890625e-05, -0.0043964385986328125, -4.1961669921875e-05, -0.0011463165283203125, -3.814697265625e-06, -0.003786790184676647, -5.245203283266164e-06, -1.52587890625e-05], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "overload", "<EOS>", 39, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.684948017618922, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template38"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -4.376171112060547, -2.288818359375e-05, -0.0005092620849609375, -0.004057407379150391, -1.9073486328125e-06, -9.918212890625e-05, -7.62939453125e-06, -9.918212890625e-05, -0.6819347143173218, -0.00026702880859375, -0.0005645751953125, -9.34600830078125e-05, -0.802341103553772, 0.0, -0.23208141326904297, -0.006542205810546875, -3.814697265625e-06, -3.254413604736328e-05, -7.987022399902344e-06, -0.000133514404296875, -0.563542366027832, -0.000232696533203125, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -7.82012939453125e-05, -0.00049591064453125, -0.001605391502380371, 0.0, -1.52587890625e-05, -0.001209259033203125, -0.00087738037109375, -0.0014581012073904276, -0.00027942657470703125, -0.000720977783203125, -5.7220458984375e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "append", "<EOS>", 302, 113, 156], "score": -6.8216683508600156, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "append", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -0.024900436401367188, -6.218097686767578, -0.00679779052734375, -5.7220458984375e-06, -0.5153169631958008, -3.814697265625e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.append(self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 58, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 156], "score": -7.597482851350939, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template60"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "FrostShock"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -0.024900436401367188, -0.016916990280151367, -0.0006450414657592773, -4.00543212890625e-05, -0.0002498626708984375, -9.918212890625e-05, -6.302182197570801, -2.288818359375e-05, -0.3771200180053711, -1.1444091796875e-05, -0.00011444091796875, 0.0, -0.17795133590698242, -0.000311222713207826, -0.0002269744873046875, -0.22922611236572266, -0.0775766372680664, -0.0068035125732421875, -0.23448944091796875, -0.032988548278808594, -0.0002193450927734375, -7.62939453125e-06, -0.0007725954055786133, -1.311301275563892e-06, -0.0003604888916015625, -0.000202178955078125, -0.03907883167266846, -3.063678741455078e-05, -1.9073486328125e-06, -0.0008602142333984375, -9.5367431640625e-06, -0.012981414794921875, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0043506622314453125, -0.0001647472381591797, -1.9073486328125e-06, -3.814697265625e-06], "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Aura(Damage(1), CharacterSelector(players=\n            BothPlayer(), picker=UserPicker())))\n"}, {"choice_history": [139, 193, 314], "score": -24.047855377197266, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -24.04781723022461], "inferred_code": ""}], "index": 37}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -0.11639593531307924, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -0.042992591857910156, -0.02915024757385254, -0.0003185272216796875, -0.0001773834228515625, -0.001190185546875, -0.0002193450927734375, -0.000339508056640625, -1.52587890625e-05, -0.0005092620849609375, -0.0002040863037109375, -0.0012278343783691525, -9.894339200400282e-06, -5.91278076171875e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -3.9908333241924936, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -0.042992591857910156, -3.900183916091919, -3.814697265625e-06, -1.9073486328125e-05, -0.000354766845703125, -3.0517578125e-05, -0.006808912381529808, -0.0002720355987548828, -6.103515625e-05, -0.0001239776611328125], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -4.029990595483099, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -3.180853843688965, 0.0, -0.19417381286621094, -0.0011582961305975914, -2.336492616450414e-05, -0.6066915988922119, 0.0, -1.71661376953125e-05, -0.00032806396484375, -7.43865966796875e-05, -0.006481624208390713, -6.079673767089844e-05, -6.103515625e-05, -8.392333984375e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -4.142847271765817, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -3.8229360580444336, 0.0, -0.0008831024169921875, 0.0, -0.22342395782470703, -0.0010738372802734375, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -0.006016731262207031, -0.0004558563232421875, -0.0001201629638671875, 0.0, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -0.0001163482666015625, -0.0004812479019165039, 0.0, -3.814697265625e-06, -0.000820159912109375, -0.0001583099365234375, -0.0022212204057723284, -5.924701690673828e-05, -2.6702880859375e-05, -0.000148773193359375, 0.0, -0.000274658203125, -0.0009937286376953125, -1.9073486328125e-06, -3.814697265625e-06, -0.043792724609375, -0.03154110908508301, -0.000331878662109375, -0.000171661376953125, -0.0011806488037109375, -0.0002040863037109375, -0.000335693359375, -1.71661376953125e-05, -0.000499725341796875, -0.000202178955078125, -0.0012273580068722367, -9.894339200400282e-06, -5.91278076171875e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, minion_type=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -4.310853761176617, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -3.180853843688965, 0.0, -0.19417381286621094, -0.0011582961305975914, -2.336492616450414e-05, -0.8868820667266846, -9.5367431640625e-06, -0.0042514801025390625, -0.000720977783203125, -0.000743865966796875, -9.72747802734375e-05, -0.0002536773681640625, -0.0002880096435546875, -0.0001621246337890625, -0.0011783604277297854, -1.1444046322139911e-05, -6.29425048828125e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "<EOS>", 302, 115, 156], "score": -5.668440229071706, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -0.042992591857910156, -5.42999792098999, -0.0002498626708984375, -0.1548471450805664, -0.000370025634765625], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.0587597642011985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -3.8229360580444336, 0.0, -0.0008831024169921875, 0.0, -1.614034652709961, 0.0, -0.000232696533203125, 0.0, -0.48697376251220703, 0.0, -3.24249267578125e-05, -3.814697265625e-06, -0.0004596710205078125, 0.0, -1.9073486328125e-05, -0.013967514038085938, -7.62939453125e-06, -0.014326095581054688, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.000125885009765625, -0.0005545616149902344, 0.0, -5.7220458984375e-06, -0.0009899139404296875, -0.0002288818359375, -0.001928663463331759, -6.783008575439453e-05, -2.86102294921875e-05, -0.0001316070556640625, 0.0, -0.00022125244140625, -0.0005817413330078125, -1.9073486328125e-06, -1.9073486328125e-06, -0.04156780242919922, -0.05128014087677002, -0.0004177093505859375, -0.00016021728515625, -0.0012454986572265625, -0.0001659393310546875, -0.0003509521484375, -2.09808349609375e-05, -0.0004749298095703125, -0.0002002716064453125, -0.0012360610999166965, -9.655922440288123e-06, -6.103515625e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.245287874728632, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -6.153376579284668, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003490447998046875, -1.9073486328125e-06, -0.000453948974609375, -0.0026416778564453125, -1.9073486328125e-06, -3.814697265625e-06, -0.018459320068359375, -0.02961277961730957, -0.000286102294921875, -0.000194549560546875, -0.0013599395751953125, -0.0002193450927734375, -0.0003414154052734375, -1.71661376953125e-05, -0.0005283355712890625, -0.0002155303955078125, -0.0012259285431355238, -9.655922440288123e-06, -5.53131103515625e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.630025535168528, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -6.497086048126221, -2.288818359375e-05, -0.10036754608154297, 0.0, -9.5367431640625e-06, -2.288818359375e-05, -1.71661376953125e-05, -7.62939453125e-06, -0.00014495849609375, -0.00046765804290771484, 0.0, -1.1444091796875e-05, -0.00084686279296875, -0.0001926422119140625, -0.002006441354751587, -0.00012314319610595703, -4.1961669921875e-05, -0.0002269744873046875], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156], "score": -6.750166303290456, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -0.042992591857910156, -6.561764240264893, -0.000118255615234375, -1.71661376953125e-05, -0.10486793518066406, -0.000423431396484375], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.increase_health(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.776466655356529, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -3.180853843688965, 0.0, -2.430903434753418, -0.0018422603607177734, -1.1920922133867862e-06, -1.114208459854126, 0.0, -2.6702880859375e-05, -0.00112152099609375, -9.5367431640625e-05, -0.007117670029401779, -8.273124694824219e-05, -0.000171661376953125, -5.91278076171875e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.hero.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -6.84228178615794, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -3.8229360580444336, 0.0, -0.0008831024169921875, 0.0, -1.614034652709961, 0.0, -0.000232696533203125, 0.0, -1.278390884399414, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000141143798828125, 0.0, -9.5367431640625e-06, -0.014986038208007812, -3.814697265625e-06, -0.006023406982421875, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0001201629638671875, -0.0005458593368530273, 0.0, -5.7220458984375e-06, -0.0010280609130859375, -0.0002307891845703125, -0.0019492990104481578, -6.783008575439453e-05, -3.0517578125e-05, -0.00012969970703125, 0.0, -0.0001926422119140625, -0.0007190704345703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.044676780700683594, -0.04771065711975098, -0.0004024505615234375, -0.0001678466796875, -0.0012836456298828125, -0.0001678466796875, -0.0003528594970703125, -2.09808349609375e-05, -0.00046539306640625, -0.000209808349609375, -0.0012415444944053888, -9.655922440288123e-06, -6.103515625e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.8455338541403705, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -6.629083633422852, -7.43865966796875e-05, 0.0, -0.01755809783935547, -0.16019117832183838, -5.7220458984375e-06, -1.9073486328125e-06], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 321, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156], "score": -8.009796958710098, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "Frozen"}], "_type": "Call", "func": {"_type": "Template66"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "add_buff", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Frostbolt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -6.847192287445068, -0.011478424072265625, -0.0005321502685546875, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.000213623046875, -0.00037670135498046875, 0.0, -3.814697265625e-06, -0.000881195068359375, -0.0002002716064453125, -0.0024476207327097654, -6.031990051269531e-05, -3.4332275390625e-05, -0.10698223114013672, 0.0, -0.0003757476806640625, -0.0008945465087890625, -1.9073486328125e-06, -1.9073486328125e-06, -0.021240234375, -0.04049229621887207, -0.0002040863037109375, -0.000186920166015625, -0.0027217864990234375, -0.0002307891845703125, -0.0002880096435546875, -1.71661376953125e-05, -0.00052642822265625, -0.000194549560546875, -0.00124643265735358, -9.775130820344202e-06, -0.00080108642578125, 0.0, -1.71661376953125e-05, -0.006229400634765625, 0.0, -1.33514404296875e-05, -0.007358551025390625, -0.11519408226013184, 0.0, -1.33514404296875e-05, -0.000457763671875, -7.82012939453125e-05, -0.004149687010794878, -0.0002281665802001953, -4.1961669921875e-05, -0.26201534271240234, -1.9073486328125e-06, -0.0004177093505859375, -0.0067996978759765625, -1.9073486328125e-06, -3.814697265625e-06, -0.02875804901123047, -0.020070314407348633, -0.0002155303955078125, -0.0002307891845703125, -0.0023956298828125, -0.0006504058837890625, -0.000392913818359375, -1.1444091796875e-05, -0.0006351470947265625, -0.0001850128173828125, -0.0012489345390349627, -1.03711727206246e-05, -0.0007381439208984375, 0.0, -2.09808349609375e-05, -0.012920379638671875, 0.0, -1.52587890625e-05, -0.008184432983398438, -0.13818061351776123, 0.0, -1.33514404296875e-05, -0.0004596710205078125, -8.0108642578125e-05, -0.004062550142407417, -0.0002491474151611328, -4.1961669921875e-05, -0.2556018829345703, -1.9073486328125e-06, -0.0004119873046875, -0.0070285797119140625, -1.9073486328125e-06, -3.814697265625e-06, -0.029510498046875, -0.01993405818939209, -0.000213623046875, -0.000225067138671875, -0.002506256103515625, -0.0006542205810546875, -0.0003757476806640625, -1.1444091796875e-05, -0.000698089599609375, -0.0001773834228515625, -0.0012409479822963476, -1.025196434056852e-05, -5.7220458984375e-05], "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n"}, {"choice_history": [139, 193, 314], "score": -22.08915138244629, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -22.08914566040039], "inferred_code": ""}], "index": 38}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -0.011139963633013394, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -0.00479296687990427, -1.33514404296875e-05, -0.0002307891845703125, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "2", "<EOS>", 68, 156], "score": -5.772086437671078, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "2", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -5.761659622192383, 0.0, -0.0043239593505859375, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, 2=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "Grunt", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.556284472957941, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minionGrunt"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -6.532027721405029, -0.0034979749470949173, -0.012762069702148438, -1.71661376953125e-05, -0.000667572021484375, -2.09808349609375e-05, -9.417489309271332e-06, -9.298297300119884e-06, -2.6227535272482783e-05, -2.2649765014648438e-06, -0.004897464998066425, -1.52587890625e-05, -0.000232696533203125, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minionGrunt(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 68, 156], "score": -7.475583489863766, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "divine_shield", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -7.469362258911133, -1.919269561767578e-05, -9.918212890625e-05, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.574880873298298, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -7.5118913650512695, -0.0002918243408203125, -0.024343490600585938, -0.0001678466796875, -0.000431060791015625, -9.5367431640625e-06, -0.011489604599773884, -6.854532693978399e-05, -0.000522613525390625, -0.014959335327148438, -0.0007228851318359375, -3.993508289568126e-05, -5.483506538439542e-05, -3.0637431336799636e-05, -9.536741345073096e-06, -0.005380160175263882, -0.000110626220703125, -0.0002899169921875, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "2", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.592826222427448, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "2"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -7.574591636657715, -2.300717096659355e-05, -0.0042591094970703125, -3.0517578125e-05, -0.007862091064453125, -2.09808349609375e-05, -8.583032467868179e-06, -8.821463779895566e-06, -3.433872916502878e-05, -2.1457672119140625e-06, -0.004250054247677326, -1.33514404296875e-05, -0.0002117156982421875, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def 2(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 68, 156], "score": -7.819309290377305, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_targetable", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -7.693612575531006, -1.1920922133867862e-06, -0.11959266662597656, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_targetable=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "2", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.938946362482511, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion2"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -7.929762363433838, -8.821474693831988e-06, -0.0007076263427734375, -2.288818359375e-05, -0.001468658447265625, -1.71661376953125e-05, -8.583047019783407e-06, -1.0609588571242057e-05, -2.7301568479742855e-05, -2.2649765014648438e-06, -0.0045713940635323524, -1.33514404296875e-05, -0.0002269744873046875, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion2(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 108, 311, 138, 291, "charge", "<EOS>", 68, 136, 156], "score": -8.00163644005761, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "Template32"}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -6.667468070983887, -0.0003261566162109375, -0.0004215240478515625, -0.000278472900390625, -0.02335357666015625, -0.000118255615234375, -0.0001430511474609375, -0.007511138916015625, -0.008596420288085938, -1.1152048110961914, -2.288818359375e-05, -0.13885796070098877, -9.655952453613281e-06, -0.000125885009765625, -0.03446006774902344, -1.9073486328125e-05], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, charge=True, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 108, 311, 136, 138, 291, "charge", "<EOS>", 68, 156], "score": -8.267374212045524, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "Template32"}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -6.667468070983887, -0.0003261566162109375, -0.0004215240478515625, -0.000278472900390625, -0.02335357666015625, -0.000118255615234375, -0.0001430511474609375, -0.007511138916015625, -0.008596420288085938, -0.39880847930908203, -0.00023651123046875, -0.0001277923583984375, -1.1547729969024658, -4.029273986816406e-05, -0.0004482269287109375, -3.814697265625e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.375190817151179, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGruntGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -8.364270210266113, -8.189598156604916e-05, -1.33514404296875e-05, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.5616367818438448e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -9.5367431640625e-06, -0.0003795623779296875, -3.814697265625e-06, -1.9073486328125e-06, -1.2278481335670222e-05, -2.6822071959031746e-05, -2.0503786799963564e-05, -4.0650367736816406e-05, -0.000186920166015625, -0.0001163482666015625, -6.103515625e-05, -7.62939453125e-06, -1.52587890625e-05, -0.0005273689748719335, -0.002009566640481353, -0.000640869140625, -1.9073486328125e-05, -0.0013179779052734375, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.7300629881210625e-05, -2.1457672119140625e-06, -0.0047872536815702915, -1.33514404296875e-05, -0.0002288818359375, -1.9073486328125e-06], "inferred_code": "class FrostwolfGruntGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -8.568012531726254, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -8.561820030212402, -1.1444091796875e-05, -7.82012939453125e-05, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, windfury=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 39, 156], "score": -8.678514574533892, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -0.00479296687990427, -1.33514404296875e-05, -8.667607307434082, 0.0], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.92260134167418, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "FrostwolfGrunt"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -8.911952018737793, -0.0001087188720703125, -4.57763671875e-05, -7.62939453125e-06, -3.24249267578125e-05, -0.0004506338736973703, -0.0012572557898238301, -0.000396728515625, -1.71661376953125e-05, -0.002773284912109375, -2.6702880859375e-05, -8.4638240878121e-06, -9.059880540007725e-06, -2.730188862187788e-05, -2.1457672119140625e-06, -0.0041211191564798355, -1.33514404296875e-05, -0.00023651123046875, -1.9073486328125e-06], "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n"}, {"choice_history": [139, 193, 314], "score": -25.635818481445312, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -25.635814666748047], "inferred_code": ""}], "index": 39}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -0.011412391299359115, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -0.005092746112495661, -7.62939453125e-06, -0.0002422332763671875, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "2", "<EOS>", 68, 156], "score": -5.726026180526219, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "2", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -5.716948509216309, 0.0, -0.0030078887939453125, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, 2=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "Footman", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.327656872768159, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minionFootman"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -6.293137073516846, -0.005295300390571356, -0.019643783569335938, -4.1961669921875e-05, -0.000431060791015625, -2.09808349609375e-05, -9.298279110225849e-06, -2.9086835638736375e-05, -0.00020837756164837629, -5.960462772236497e-07, -0.006651510018855333, -9.5367431640625e-06, -0.0002613067626953125, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minionFootman(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "spell_targetable", "<EOS>", 68, 156], "score": -7.5567601950371, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_targetable", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -7.507413864135742, -7.152555099310121e-07, -0.04327583312988281, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, spell_targetable=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 119, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.668045616969607, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -7.38585090637207, -7.62939453125e-06, 0.0, -4.768266808241606e-05, -2.5510766135994345e-05, -1.4305104514278355e-06, -8.70227722771233e-06, -7.62939453125e-05, -1.33514404296875e-05, -1.9073486328125e-06, -9.1552734375e-05, -0.0026950836181640625, -1.9073486328125e-05, -5.888938903808594e-05, -7.045127131277695e-05, -0.21226119995117188, -6.67572021484375e-05, -0.0055789947509765625, -0.0001621246337890625, -7.62939453125e-05, -9.5367431640625e-06, -0.006907342933118343, -8.940695988712832e-05, -0.0005970001220703125, -0.012170791625976562, -0.000583648681640625, -1.752371281327214e-05, -8.523304131813347e-05, -0.035552237182855606, -1.0371208190917969e-05, -0.004237186163663864, -7.343292236328125e-05, -0.0002841949462890625, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "1", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.715696001688457, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion1"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -7.703385829925537, -2.574919562903233e-05, -0.0005035400390625, -4.57763671875e-05, -0.0033473968505859375, -1.33514404296875e-05, -8.344613888766617e-06, -4.184187491773628e-05, -0.0002638098376337439, -2.503394853192731e-06, -0.005887181032449007, -7.62939453125e-06, -0.0002460479736328125, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion1(self, player):\n        return Minion(1, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 68, 156], "score": -7.7276251347269636, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "divine_shield", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -7.721442699432373, -1.537799835205078e-05, -9.72747802734375e-05, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.299455484118425, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -8.13227367401123, -1.52587890625e-05, -0.028812408447265625, -0.0001850128173828125, -5.91278076171875e-05, -9.5367431640625e-06, -0.007148255594074726, -5.745887028751895e-05, -0.0005702972412109375, -0.015106201171875, -0.0007171630859375, -2.2768952476326376e-05, -0.00019167429127264768, -0.10452795028686523, -8.34464663057588e-06, -0.004979711025953293, -8.869171142578125e-05, -0.0003147125244140625, -3.814697265625e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 2, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -8.514322880050145, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -8.50816535949707, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, windfury=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.606706708311776, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -8.578645706176758, -2.2649765014648438e-06, -0.02199634537100792, -3.814697265625e-06, -0.0002002716064453125, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "1", "<EOS>", 68, 156], "score": -8.784977558394871, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "1", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 2}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -8.415975570678711, 0.0, -0.3629283905029297, -5.7220458984375e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, 1=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 108, 311, 136, 138, 291, "spell_targetable", "<EOS>", 50, 156], "score": -9.3819353618087, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "Template32"}, {"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "Template51"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -6.925930976867676, -0.00061798095703125, -0.000171661376953125, -0.0009765625, -0.01690673828125, -0.0007381439208984375, -0.00452423095703125, -1.0189800262451172, -0.0046138763427734375, -0.14211654663085938, -0.0008716583251953125, -0.000133514404296875, -0.5830868482589722, -1.1444075425970368e-05, -0.6774835586547852, -3.814697265625e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True, spell_targetable=False)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 303, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 154, 205, "1", "<EOS>", "2", "<EOS>", 156], "score": -10.155619393482489, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 2}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -10.022909164428711, -0.00136566162109375, 0.0, -0.0010879142209887505, -4.434585207491182e-05, -4.529942543740617e-06, -5.602834789897315e-06, -0.00072479248046875, -0.12275218963623047, -9.5367431640625e-06, 4.973799150320701e-14, -0.003744064597412944, -0.0023202896118164062, -0.0003374264924786985, -1.9073486328125e-06], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1)\n\n    def create_minion(self, player):\n        return Minion(1, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 111, 311, 136, 138, 291, "enrage", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Taunt", "<EOS>", 79, 170, 49, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 110, 156], "score": -10.946973357387378, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template40"}], "_type": "Call", "keywords": [{"_type": "Template32"}, {"_type": "keyword", "arg": "enrage", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Taunt"}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "GoldshireFootman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -6.925930976867676, -0.00061798095703125, -0.000171661376953125, -0.0009765625, -0.01690673828125, -0.0007381439208984375, -0.00452423095703125, -0.74176025390625, -0.0040035247802734375, -0.002300262451171875, -0.004543304443359375, -0.00018310546875, -0.6784781217575073, -9.655952453613281e-06, -0.036461830139160156, -1.9073486328125e-06, -0.0056209564208984375, -2.47955322265625e-05, -2.288818359375e-05, -0.00201416015625, -0.0002155303955078125, -0.19322872161865234, -5.7220458984375e-06, -0.35663917660713196, -0.3347893953323364, -0.21938705444335938, -0.6397981643676758, -0.03752708435058594, -0.05741596221923828, -0.0001926422119140625, 0.0, -0.0011692047119140625, -2.09808349609375e-05, -0.0030431747436523438, -3.62396240234375e-05, -0.001300811767578125, -0.00013244152069091797, -9.5367431640625e-06, -0.003570556640625, -1.33514404296875e-05, -0.0015506744384765625, -0.00017225740884896368, -0.000499725341796875, -7.2479248046875e-05, -0.6648770570755005, -0.001164555549621582, -1.9073486328125e-06, -6.67572021484375e-05, -1.33514404296875e-05], "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, taunt=True, enrage=[Aura(Taunt(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker()))])\n"}, {"choice_history": [139, 193, 314], "score": -26.181779861450195, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -26.18177604675293], "inferred_code": ""}], "index": 40}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -0.08418875773486434, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -0.0008068084716796875, -7.05718994140625e-05, -0.00128936767578125, -1.9073486328125e-06, -8.392333984375e-05, -0.0024051666259765625, -0.000385284423828125, -0.0007495880126953125, -7.62939453125e-06, -0.00020015245536342263, -7.62939453125e-06, -0.0010509490966796875, -0.000133514404296875, -0.0030231475830078125, -6.866455078125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -0.0011272430419921875, -3.62396240234375e-05, -0.0005054473876953125, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.005111813545227051, -3.814697265625e-06, -0.016981124877929688, 0.0, -0.002664923667907715, -0.0009980201721191406, -2.09808349609375e-05, -0.002513885498046875, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -4.690384367906972, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -3.862842559814453, -0.000331878662109375, -0.0001506805419921875, -0.00868988037109375, -0.007526397705078125, -0.0016117095947265625, -0.004608154296875, -0.014079093933105469, -5.91278076171875e-05, -0.000125885009765625, -1.1444091796875e-05, -0.29531121253967285, 0.0, -0.0034847259521484375, -0.0022792816162109375, -1.71661376953125e-05, -0.42145729064941406, -3.24249267578125e-05, -0.00998687744140625, -7.62939453125e-06, -0.0001697540283203125, -9.918212890625e-05, -7.62939453125e-06, -0.00138092041015625, -0.00032806396484375, -0.0015468597412109375, -3.814697265625e-06, -0.010484750382602215, -3.814697265625e-06, -0.005619049072265625, -9.5367431640625e-06, -0.00572967529296875, -0.000213623046875, -0.000560760498046875, -2.09808349609375e-05, -0.001220703125, -0.00011444091796875, -0.0006618499755859375, 0.0, -0.0003490447998046875, 0.0, -6.29425048828125e-05, -1.9073486328125e-06, -0.005396008491516113, -1.9073486328125e-06, -0.00146484375, 0.0, -0.0011639595031738281, -0.0006251335144042969, -1.1444091796875e-05, -0.0007343292236328125, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True, auras=[Aura(ChangeAttack(1),\n            MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -4.770605502920716, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -0.0008068084716796875, -7.05718994140625e-05, -0.00128936767578125, -1.9073486328125e-06, -8.392333984375e-05, -0.0024051666259765625, -0.000385284423828125, -0.0007495880126953125, -7.62939453125e-06, -0.00020015245536342263, -7.62939453125e-06, -0.0010509490966796875, -0.000133514404296875, -0.0030231475830078125, -6.866455078125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -0.0011272430419921875, -3.62396240234375e-05, -0.0005054473876953125, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.005111813545227051, -3.814697265625e-06, -4.09445858001709, -1.1444091796875e-05, -0.46617889404296875, -0.006023406982421875, -0.11470508575439453, -7.05718994140625e-05, -0.013814926147460938, -1.71661376953125e-05, -0.0013599395751953125, 0.0, -0.000164031982421875, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -0.006015896797180176, -1.9073486328125e-06, -0.0012874603271484375, 0.0, -0.0027083158493041992, -0.00016498565673828125, -9.5367431640625e-06, -0.00255584716796875, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), MinionSelector(IsType(MINION_TYPE.\n            MURLOC), BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 91, 211, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -5.860245881872743, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"args": [{"args": [{"_type": "Template14", "hole0": 1}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -0.0008068084716796875, -7.05718994140625e-05, -0.00128936767578125, -1.9073486328125e-06, -8.392333984375e-05, -0.0024051666259765625, -0.000385284423828125, -0.0007495880126953125, -7.62939453125e-06, -0.00020015245536342263, -7.62939453125e-06, -0.0010509490966796875, -0.000133514404296875, -0.0030231475830078125, -6.866455078125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -0.0011272430419921875, -3.62396240234375e-05, -0.0005054473876953125, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.005111813545227051, -3.814697265625e-06, -4.09445858001709, -1.1444091796875e-05, -1.1292285919189453, -1.71661376953125e-05, -8.0108642578125e-05, -6.29425048828125e-05, -0.0030517578125, -0.0005702972412109375, -0.0014705657958984375, -0.00028228759765625, -0.051273465156555176, -0.001232147216796875, -0.4291419982910156, -0.00084686279296875, -0.025440216064453125, -0.0002994537353515625, -0.04439353942871094, -0.0003185272216796875, -0.000736236572265625, -0.0003871917724609375, -0.00609588623046875, -3.814697265625e-06, -0.0001354217529296875, 0.0, -7.2479248046875e-05, -1.9073486328125e-06, -0.004118084907531738, -1.9073486328125e-06, -0.0018978118896484375, 0.0, -0.0008772611618041992, -0.0005670785903930664, -7.62939453125e-06, -0.0021533966064453125, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), ActionTag(Give(ChangeHealth(1)),\n            MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -5.92124420175378, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -0.0008068084716796875, -7.05718994140625e-05, -0.00128936767578125, -1.9073486328125e-06, -8.392333984375e-05, -0.0024051666259765625, -0.000385284423828125, -0.0007495880126953125, -7.62939453125e-06, -0.00020015245536342263, -7.62939453125e-06, -0.0010509490966796875, -0.000133514404296875, -0.0030231475830078125, -6.866455078125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -0.0011272430419921875, -3.62396240234375e-05, -0.0005054473876953125, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -5.843796730041504, -1.728534698486328e-05, -0.014617919921875, 0.0, -0.003859400050714612, -0.0012295246124267578, -2.09808349609375e-05, -0.00180816650390625, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.11385792604915, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -6.052157402038574, -0.00015652179718017578, -0.000560760498046875, -1.1444091796875e-05, -0.0024077892303466797, -3.3378546504536644e-06, -0.0001125335693359375, -0.0020389556884765625, -0.0114898681640625, -0.0001316070556640625, -4.6491513785440475e-06, -7.867794920457527e-06, -5.8429010096006095e-05, 0.0, -0.0024361610412597656, -9.5367431640625e-06, -0.0008144378662109375, -7.2479248046875e-05, -0.00131988525390625, -1.9073486328125e-06, -7.43865966796875e-05, -0.00212860107421875, -0.0004119873046875, -0.0006580352783203125, -7.62939453125e-06, -0.0002020598331000656, -7.62939453125e-06, -0.0011272430419921875, -0.0001125335693359375, -0.0028781890869140625, -6.866455078125e-05, -5.14984130859375e-05, -9.5367431640625e-06, -0.0010776519775390625, -3.814697265625e-05, -0.0005340576171875, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.0050803422927856445, -3.814697265625e-06, -0.01642608642578125, 0.0, -0.0026170015335083008, -0.0009865760803222656, -2.09808349609375e-05, -0.0025177001953125, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 79, 171, 58, 303, 91, 211, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 156], "score": -6.237877426939576, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"args": [{"_type": "Template14", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}]}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -0.0008068084716796875, -7.05718994140625e-05, -0.00128936767578125, -1.9073486328125e-06, -8.392333984375e-05, -0.0024051666259765625, -0.000385284423828125, -0.0007495880126953125, -7.62939453125e-06, -0.00020015245536342263, -7.62939453125e-06, -0.0010509490966796875, -0.000133514404296875, -0.0030231475830078125, -6.866455078125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -0.0011272430419921875, -3.62396240234375e-05, -0.0005054473876953125, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.005111813545227051, -3.814697265625e-06, -0.016981124877929688, 0.0, -0.002664923667907715, -0.0009980201721191406, -2.09808349609375e-05, -5.999595642089844, -1.9073486328125e-05, -0.09253215789794922, -0.0006084442138671875, -0.009676933288574219, -0.00173187255859375, -0.0034068822860717773, -0.000171661376953125, -0.0128631591796875, -0.00130462646484375, -0.0053958892822265625, -0.0001773834228515625, -0.013338088989257812, -7.2479248046875e-05, -0.0013523101806640625, -0.000766754150390625, -0.00528717041015625, -5.7220458984375e-06, -4.00543212890625e-05, 0.0, -6.4849853515625e-05, -1.9073486328125e-06, -0.003983616828918457, -1.9073486328125e-06, -0.0021076202392578125, 0.0, -0.0010024309158325195, -0.0005966424942016602, -9.5367431640625e-06, -8.96453857421875e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer())), Aura(ChangeHealth(1\n            ), MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.247862166176219, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": ""}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -6.06807279586792, -0.05045127868652344, -0.013608932495117188, -0.0696563720703125, -0.000156402587890625, -5.006777428206988e-06, -5.9604562920867465e-06, -9.765379945747554e-05, 0.0, -0.0018886327743530273, -9.5367431640625e-06, -0.000774383544921875, -6.4849853515625e-05, -0.0010662078857421875, -3.814697265625e-06, -5.91278076171875e-05, -0.0020694732666015625, -0.0004177093505859375, -0.0005931854248046875, -7.62939453125e-06, -0.000202178955078125, -7.62939453125e-06, -0.0014286041259765625, -8.96453857421875e-05, -0.001842498779296875, -8.58306884765625e-05, -6.866455078125e-05, -7.62939453125e-06, -0.0009326934814453125, -4.00543212890625e-05, -0.000598907470703125, 0.0, -5.7220458984375e-06, 0.0, -0.0001125335693359375, -1.9073486328125e-06, -0.0048590898513793945, -3.814697265625e-06, -0.009510040283203125, 0.0, -0.0025140047073364258, -0.0009417533874511719, -1.9073486328125e-05, -0.00241851806640625, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def (self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "MINION_TYPE", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.294680534711915, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole1": 1}], "name": "MINION_TYPE"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -6.22186803817749, 0.0, -0.00029754638671875, -0.00386810302734375, -0.0197296142578125, -0.00014495849609375, -4.529942543740617e-06, -8.106212590064388e-06, -6.402967846952379e-05, 0.0, -0.0024666786193847656, -9.5367431640625e-06, -0.0007572174072265625, -7.82012939453125e-05, -0.0013065338134765625, -3.814697265625e-06, -4.57763671875e-05, -0.00157928466796875, -0.00041961669921875, -0.0005168914794921875, -7.62939453125e-06, -0.00021159654716029763, -7.62939453125e-06, -0.0013904571533203125, -5.91278076171875e-05, -0.0028858184814453125, -6.4849853515625e-05, -8.20159912109375e-05, -7.62939453125e-06, -0.00080108642578125, -6.4849853515625e-05, -0.00075531005859375, 0.0, -7.62939453125e-06, 0.0, -0.0001087188720703125, -1.9073486328125e-06, -0.004792332649230957, -3.814697265625e-06, -0.011379241943359375, 0.0, -0.002431154251098633, -0.0009102821350097656, -1.9073486328125e-05, -0.00235748291015625, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def MINION_TYPE(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -6.305069861907498, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -6.294076919555664, -0.00028228759765625, -4.649038601201028e-06, -5.960462772236497e-07, -5.4969117627479136e-05, 0.0, -4.1961669921875e-05], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 109, 109, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.354819917080476, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template38"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -3.862842559814453, -0.000331878662109375, -0.0001506805419921875, -0.00868988037109375, -0.007526397705078125, -0.0016117095947265625, -0.004608154296875, -0.014079093933105469, -5.91278076171875e-05, -0.000125885009765625, -1.1444091796875e-05, -0.29531121253967285, 0.0, -0.0034847259521484375, -0.0022792816162109375, -1.71661376953125e-05, -1.8777923583984375, 0.0, -0.011477470397949219, -0.0001068115234375, -6.4849853515625e-05, -0.0002593994140625, -2.86102294921875e-05, -0.20671939849853516, -1.9073486328125e-05, -0.00093841552734375, -2.6702880859375e-05, -0.0060733347199857235, -3.814697265625e-06, -0.0013713836669921875, -9.5367431640625e-06, -0.0161590576171875, -0.00018310546875, -0.000659942626953125, -1.52587890625e-05, -0.0013675689697265625, -7.2479248046875e-05, -0.00063323974609375, 0.0, -0.000301361083984375, 0.0, -5.53131103515625e-05, 0.0, -0.005261540412902832, -1.9073486328125e-06, -0.0017375946044921875, 0.0, -0.0011771917343139648, -0.0006308555603027344, -1.33514404296875e-05, -0.0007457733154296875, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True, effects=[Aura(ChangeAttack(1),\n            MinionSelector(IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.043674050111349, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -6.998305320739746, -1.33514404296875e-05, -0.003753662109375, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "User", "<EOS>", 68, 156], "score": -7.585389672059591, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "User", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -7.402623176574707, -6.29425048828125e-05, -0.14110183715820312, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, User=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 68, 156], "score": -8.032306133050497, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole1": 1}], "name": "create_minion"}], "name": "GrimscaleOracle"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -7.988557815551758, -1.9073486328125e-06], "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=True)\n"}, {"choice_history": [139, 193, 314], "score": -25.938539505004883, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -25.93852424621582], "inferred_code": ""}], "index": 41}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -0.08061534766982703, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.011888434179127216, -7.343290781136602e-05, -0.000278472900390625, -0.022882461547851562, -0.0001983642578125, -3.814697265625e-06, -0.0008260011672973633, -1.1563301086425781e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.1444091796875e-05, -2.8848335205111653e-05, -1.5497195136049413e-06, -9.250640869140625e-05, -5.960462772236497e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 115, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -3.9081282079517834, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.011888434179127216, -7.343290781136602e-05, -0.000278472900390625, -3.8509645462036133, -0.0001277923583984375, -3.814697265625e-06, -0.0002968311309814453, -3.254413604736328e-05, -4.0531158447265625e-06, -4.00543212890625e-05, -9.5367431640625e-06, -2.9325159630388953e-05, -3.099436753473128e-06, -8.475780487060547e-05, -4.768370445162873e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(4), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "6", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -5.044585125138944, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "6"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.750204086303711, -0.00018131732940673828, -0.006320953369140625, -0.23468971252441406, -0.0002384185791015625, -3.814697265625e-06, -0.0084686279296875, -2.6941299438476562e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.3603242880199105e-05, -1.5497195136049413e-06, -9.226799011230469e-05, -7.152555099310121e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(6(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Kill", "<EOS>", 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -6.167660461491543, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Kill"}, {"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -5.177213668823242, -0.0002002716064453125, -0.361373633146286, -9.536738616588991e-07, -1.9073486328125e-05, -0.0048007965087890625, -0.017602920532226562, 0.0, -0.3702350854873657, -0.0004426240921020508, -4.9591064453125e-05, -0.14897918701171875, -0.04790973663330078, -0.000274658203125, -1.1920928955078125e-05, -1.0967194612021558e-05, -2.5033950805664062e-05, -2.3841830625315197e-06, -3.814697265625e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), Heal(6)))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -6.5116937751483235, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -6.459651947021484, -9.5367431640625e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.0002079010009765625, 0.0, -0.001087188720703125, -1.9073486328125e-06, -0.0010128021240234375, -0.000301361083984375, -0.006542205810546875, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.008094115182757378, -7.61747287469916e-05, -0.000270843505859375, -0.022859573364257812, -0.00020599365234375, -3.814697265625e-06, -0.0008281469345092773, -1.1563301086425781e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.1444091796875e-05, -2.8848335205111653e-05, -1.5497195136049413e-06, -9.250640869140625e-05, -5.960462772236497e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -6.776478818798118, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianofKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -6.426601886749268, -0.27184855937957764, -3.933906555175781e-06, -1.71661376953125e-05, -1.33514404296875e-05, -7.62939453125e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0728796951298136e-05, -2.861018856492592e-06, 0.0, -0.0001430511474609375, -1.33514404296875e-05, -0.0001506805419921875, -7.62939453125e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0018672943115234375, -3.814697265625e-06, -1.9073486328125e-06, -2.276871418871451e-05, -2.5629986339481547e-05, -9.286159183830023e-05, -4.208087921142578e-05, -3.862357698380947e-05, -1.1920928244535389e-07, -0.0018367767333984375, -0.0007228851318359375, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.414817810058594e-05, -0.0019060352351516485, -4.303455352783203e-05, -0.02613067626953125, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.000263214111328125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006237030029296875, -0.0001735687255859375, -0.0057582855224609375, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.011885699816048145, -7.343290781136602e-05, -0.000278472900390625, -0.022922515869140625, -0.0001983642578125, -3.814697265625e-06, -0.0008221864700317383, -1.1563301086425781e-05, -2.0265579223632812e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.8133095838711597e-05, -1.6689286894688848e-06, -9.250640869140625e-05, -5.960462772236497e-07, -1.9073486328125e-06], "inferred_code": "class GuardianofKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 116, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -7.064335529150284, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template46"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.011888434179127216, -7.343290781136602e-05, -0.000278472900390625, -6.995328903198242, -0.009069442749023438, -5.340576171875e-05, -0.003131507197394967, -1.7404556274414062e-05, -1.1920928244535389e-07, -4.00543212890625e-05, -7.62939453125e-06, -3.7669560697395355e-05, -1.7881377516459906e-06, -0.0001157522201538086, -4.768370445162873e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(5), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 120, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -7.264741684723212, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template52"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -7.213768005371094, -0.0001964569091796875, -9.5367431640625e-06, -5.7220458984375e-06, -0.00029754638671875, 0.0, -0.000949859619140625, -1.9073486328125e-06, -0.0007457733154296875, -0.0003223419189453125, -0.00716400146484375, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.0082631204277277, -6.699561345158145e-05, -0.00025177001953125, -0.020978927612304688, -0.0001773834228515625, -3.814697265625e-06, -0.0011065006256103516, -1.3470649719238281e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -9.5367431640625e-06, -2.9325159630388953e-05, -1.5497195136049413e-06, -9.250640869140625e-05, -5.960462772236497e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN, 6,\n            battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 119, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -7.38866541402183, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -7.116901397705078, -0.0016231536865234375, -1.9073486328125e-06, -4.172245826339349e-05, -2.4795524950604886e-05, -0.00010406908404547721, -3.826618194580078e-05, -7.152537000365555e-05, -1.1444091796875e-05, -0.059543609619140625, -0.15931320190429688, -2.6702880859375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00023555755615234375, -1.4781950994802173e-05, -0.0020035426132380962, -6.318092346191406e-06, -0.0042591094970703125, -0.0002956390380859375, -1.1444091796875e-05, -2.47955322265625e-05, 0.0, -0.004769325256347656, 0.0, -0.0003414154052734375, -3.814697265625e-06, -0.000217437744140625, -0.0003681182861328125, -0.00457000732421875, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.011363709345459938, -0.00010538100468693301, -0.0002117156982421875, -0.0178375244140625, -0.0001277923583984375, -1.9073486328125e-06, -0.0006505250930786133, -1.3470649719238281e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.075563290622085e-05, -1.311301275563892e-06, -0.0001176595687866211, -8.344646857949556e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, False, battlecry=Battlecry(Heal(6),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -7.887265667970659, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -7.768179893493652, -0.03721809387207031, 0.0, 0.0, -5.7220458984375e-06, -0.00035381317138671875, -6.592273712158203e-05, -0.004159566015005112, -3.3855438232421875e-05, -0.029829025268554688, -2.288818359375e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0001888275146484375, 0.0, -0.0006771087646484375, -1.9073486328125e-06, -0.001476287841796875, -0.00046539306640625, -0.00445556640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, -0.013005227781832218, -6.461142038460821e-05, -0.0002346038818359375, -0.0200958251953125, -0.0001544952392578125, -3.814697265625e-06, -0.0009179115295410156, -1.3470649719238281e-05, -2.0265579223632812e-06, -2.6702880859375e-05, -9.5367431640625e-06, -2.8848335205111653e-05, -1.5497195136049413e-06, -9.059906005859375e-05, -5.960462772236497e-07, -1.9073486328125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Heal", "<EOS>", 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -8.002054588173898, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Heal"}, {"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -5.177213668823242, -0.0002002716064453125, -1.9835278987884521, -0.004654168616980314, -4.38690185546875e-05, -0.14223861694335938, -0.000255584716796875, 0.0, -0.5374494791030884, -0.0013785362243652344, -0.00011444091796875, -0.07435798645019531, -0.041701316833496094, -0.000362396240234375, -1.0132789611816406e-05, -9.298280929215252e-06, -2.6941299438476562e-05, -2.0265558760002023e-06, -3.814697265625e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(), Heal(6)))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Player", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -8.213160341838254, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "PlayerSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.011888434179127216, -7.343290781136602e-05, -0.000278472900390625, -0.022882461547851562, -0.0001983642578125, -3.814697265625e-06, -8.133328437805176, -4.57763671875e-05, -2.2649765014648438e-06, -2.86102294921875e-05, -5.7220458984375e-06, -3.528545130393468e-05, -1.7881377516459906e-06, -9.40561294555664e-05, -4.768370445162873e-07, -3.814697265625e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "6", "<EOS>", 302, 93, 213, "Cobra", "Form", "<EOS>", 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -8.802594319696446, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template16", "hole0": "CobraForm"}], "_type": "Call", "func": {"_type": "Name", "id": "6"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.750204086303711, -0.00018131732940673828, -0.006320953369140625, -1.8587589263916016, -1.9073486328125e-06, -1.0185223817825317, -0.4611506462097168, -4.0531158447265625e-06, -0.5173568725585938, 0.0, -0.144889235496521, -1.9550323486328125e-05, -4.172325134277344e-06, -0.000621795654296875, -1.52587890625e-05, -4.7682748117949814e-05, -9.536738616588991e-07, -0.00019752979278564453, -2.3841855067985307e-07, -7.62939453125e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(6(CobraForm()),\n            HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Kill", "<EOS>", 79, 171, 25, 194, "Transform", "<EOS>", 302, 93, 213, "Cobra", "Form", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156], "score": -8.815435306873482, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"_type": "Template16", "hole0": "Kill"}, {"args": [{"_type": "Template16", "hole0": "CobraForm"}], "_type": "Call", "func": {"_type": "Name", "id": "Transform"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "name": "GuardianOfKings"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -5.177213668823242, -0.0002002716064453125, -0.361373633146286, -9.536738616588991e-07, -1.9073486328125e-05, -0.0048007965087890625, -0.017602920532226562, 0.0, -1.7146698236465454, -7.832050323486328e-05, -0.000133514404296875, -0.000186920166015625, 0.0, -1.4735616445541382, -0.02697649598121643, -2.384185791015625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -1.0967213711410295e-05, -1.7881377516459906e-06, -6.92605972290039e-05, -1.1920928244535389e-07, -5.7220458984375e-06], "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Kill(), Transform(\n            CobraForm())))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n"}, {"choice_history": [139, 193, 314], "score": -21.203535079956055, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.57763671875e-05, -7.62939453125e-06, -21.203481674194336], "inferred_code": ""}], "index": 42}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156], "score": -0.34058850067492585, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -0.03373146057128906, -3.0517578125e-05, -0.0008792877197265625, -6.103515625e-05, -0.032752037048339844, -0.0003204345703125, -0.08573351800441742, -3.24249267578125e-05, -0.0002918243408203125, -0.0003185272216796875, -0.0003490447998046875], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "1", "<EOS>", 92, 110, 156], "score": -3.336030786808692, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 1}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -0.03373146057128906, -3.0517578125e-05, -0.0008792877197265625, -6.103515625e-05, -0.032752037048339844, -0.0003204345703125, -3.079983711242676, -3.24249267578125e-05, -0.0001468658447265625, -0.000919342041015625, -0.0010852813720703125], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Minion", "Died", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156], "score": -3.429536423364766, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "MinionDied"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -3.2106571197509766, -0.01390993595123291, -1.728534698486328e-05, -0.0002422332763671875, -0.001056671142578125, -0.0009632110595703125, -0.001102447509765625, -0.0001049041748046875, -0.005951881408691406, -0.0002079010009765625, -0.00914144515991211, -0.006958484649658203, -0.004155031871050596, -3.933906555175781e-06, -5.91278076171875e-05, -8.96453857421875e-05, -0.0004482269287109375, -5.91278076171875e-05, -0.03082275390625, -2.6702880859375e-05, -0.0007171630859375, -5.7220458984375e-05, -0.029600143432617188, -0.000324249267578125, -0.08732675015926361, -2.86102294921875e-05, -0.000247955322265625, -0.0003261566162109375, -0.0003414154052734375], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(MinionDied(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156], "score": -3.6378069621958957, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -3.243882179260254, -0.1980881690979004, -1.6450881958007812e-05, -5.340576171875e-05, -0.000339508056640625, -0.0014324188232421875, -0.0012359619140625, -0.00040352344512939453, -0.00211334228515625, -9.72747802734375e-05, -0.0035420653875917196, -0.0053032636642456055, -0.004873853176832199, -4.172325134277344e-06, -4.57763671875e-05, -8.20159912109375e-05, -0.000522613525390625, -7.05718994140625e-05, -0.030061721801757812, -2.86102294921875e-05, -0.0008678436279296875, -6.103515625e-05, -0.030675888061523438, -0.000308990478515625, -0.0882340520620346, -3.0517578125e-05, -0.0002460479736328125, -0.0003204345703125, -0.0002765655517578125], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(TurnStarted(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156], "score": -4.112449600545801, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -3.659451484680176, -0.016096115112304688, -0.00012791156768798828, -5.53131103515625e-05, -0.004669189453125, -3.814697265625e-05, -0.0004425048828125, -3.24249267578125e-05, -0.09130477905273438, -1.9073486328125e-05, -0.0002002716064453125, -6.4849853515625e-05, -0.12331199645996094, -0.000316619873046875, -0.0750565230846405, -3.62396240234375e-05, -0.000583648681640625, -0.0005340576171875, -0.000537872314453125], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=Null\n            ), ActionTag(Give(ChangeAttack(3)), SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Damaged", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156], "score": -4.286470087356861, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Damaged"}, {"args": [{"args": [{"_type": "Template12", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -4.082623481750488, -0.0015506744384765625, -0.010789337567985058, -0.0002222060429630801, -0.0002899169921875, -4.00543212890625e-05, -0.0001659393310546875, -3.24249267578125e-05, -0.003528594970703125, -1.33514404296875e-05, -0.001071929931640625, -4.38690185546875e-05, -0.026851654052734375, -0.0001735687255859375, -0.14939986169338226, -5.91278076171875e-05, -0.0001735687255859375, -0.0030689239501953125, -0.000179290771484375], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeAttack(3)), SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 110, 156], "score": -4.4654524741152954, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -3.408548355102539, -0.000213623046875, -0.5452169179916382, -0.00022134798928163946, -0.32118701934814453, -0.0039730072021484375, -3.814697265625e-06], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Kill(), SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156], "score": -4.522198972476758, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "Damaged"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -4.28416633605957, -0.017920970916748047, -0.003780364990234375, -0.0004558563232421875, -0.000865936279296875, -0.000232696533203125, -0.0003083944320678711, -0.023265838623046875, -0.0001239776611328125, -0.004038331564515829, -0.0052869319915771484, -0.0061340038664639, -7.748603820800781e-06, -7.05718994140625e-05, -8.58306884765625e-05, -0.0002765655517578125, -6.67572021484375e-05, -0.032012939453125, -2.86102294921875e-05, -0.0009059906005859375, -5.7220458984375e-05, -0.03145790100097656, -0.000308990478515625, -0.08483026921749115, -3.24249267578125e-05, -0.000274658203125, -0.000331878662109375, -0.00028228759765625], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 91, 211, "2", "<EOS>", 92, 110, 156], "score": -4.586953705128394, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -0.03373146057128906, -3.0517578125e-05, -0.0008792877197265625, -6.103515625e-05, -3.690873146057129, -8.96453857421875e-05, -0.5022857189178467, 0.0, -0.17229270935058594, -0.0006103515625, -1.1444091796875e-05], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeHealth(2)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "2", "<EOS>", 92, 110, 156], "score": -4.697190588291846, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -0.03373146057128906, -3.0517578125e-05, -0.0008792877197265625, -6.103515625e-05, -0.032752037048339844, -0.0003204345703125, -4.437384128570557, -8.58306884765625e-05, -0.0012378692626953125, -0.0043582916259765625, -0.0002613067626953125], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(2)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 91, 211, "3", "<EOS>", 92, 110, 156], "score": -5.36795539217826, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}}], "_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"args": [{"args": [{"_type": "Template14", "hole0": 3}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -0.03373146057128906, -3.0517578125e-05, -0.0008792877197265625, -6.103515625e-05, -3.690873146057129, -8.96453857421875e-05, -1.303820013999939, -1.9073486328125e-06, -0.1520709991455078, -0.0002918243408203125, -1.71661376953125e-05], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeHealth(3)),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Damaged", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "1", "<EOS>", 92, 110, 156], "score": -6.259705113358791, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Damaged"}, {"args": [{"args": [{"_type": "Template12", "hole0": 1}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -4.082623481750488, -0.0015506744384765625, -0.010789337567985058, -0.0002222060429630801, -0.0002899169921875, -4.00543212890625e-05, -0.0001659393310546875, -3.24249267578125e-05, -0.003528594970703125, -1.33514404296875e-05, -0.001071929931640625, -4.38690185546875e-05, -0.026851654052734375, -0.0001735687255859375, -2.1170578002929688, -3.814697265625e-05, -0.000148773193359375, -0.008047103881835938, -0.000823974609375], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.612943395456682, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -8.574420928955078, -3.6954863844584906e-06, -0.03678417205810547, -3.814697265625e-06], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -9.817016466938071, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 7}], "name": "create_minion"}], "name": "GurubashiBerserker"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -9.812678337097168, 0.0, -0.002605438232421875, -1.9073486328125e-06], "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, windfury=True)\n"}, {"choice_history": [139, 193, 314], "score": -25.775957107543945, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, 0.0, -25.775951385498047], "inferred_code": ""}], "index": 43}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -0.06378311697107364, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -0.028961181640625, -0.0006847381591796875, -0.0011054158676415682, -1.3589859008789062e-05, -0.0064296722412109375, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -0.000621795654296875, -8.0108642578125e-05, 0.0, -0.00022125244140625, -0.0014991703210398555, -3.445148468017578e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 114, 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -4.757271492604097, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -4.112168312072754, -0.5746984481811523, -0.04313945770263672, 0.0, -3.814697265625e-06, -0.001850128173828125, -6.103515625e-05, 0.0, -0.0002574920654296875, -0.000968454871326685, -2.5033950805664062e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player, self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -4.997448648192851, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -4.112168312072754, -0.8410806655883789, -1.9073486328125e-06, -0.0006564855575561523, -5.7220458984375e-06, -0.001964569091796875, 0.0, -5.7220458984375e-06, -0.016902923583984375, -6.29425048828125e-05, 0.0, -0.000156402587890625, -0.0003396269166842103, -5.9604644775390625e-06, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player, game)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 111, 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -5.28848882925876, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -5.103232383728027, -0.00102996826171875, -0.15720653533935547, -1.9073486328125e-06, -3.814697265625e-06, -0.0012187957763671875, -4.38690185546875e-05, 0.0, -0.000270843505859375, -0.0013622031547129154, -1.919269561767578e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(3, self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -5.809765818977667, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -5.254908561706543, -8.0108642578125e-05, 0.0, -0.09569931030273438, -0.1232459545135498, -4.0531158447265625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.04892921447753906, -1.9073486328125e-06, -9.5367431640625e-06, -0.08191585540771484, -0.12202048301696777, -8.344650268554688e-06, -3.62396240234375e-05, -0.05603790283203125, -0.000415802001953125, -0.002558745676651597, -6.306171417236328e-05, -0.006793975830078125, -3.814697265625e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 108, 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -5.989624343795633, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template36"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -5.941677093505859, -0.0020923614501953125, -0.01634979248046875, 0.0, -9.5367431640625e-06, -0.003032684326171875, -4.57763671875e-05, 0.0, -0.0002155303955078125, -0.0020753114949911833, -2.6941299438476562e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.357021161443747, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -6.290261268615723, -0.0009849058697000146, -0.0002803802490234375, -0.0010814666748046875, -3.4332275390625e-05, -0.00016021728515625, -0.00010180472600040957, -2.2530550268129446e-05, -2.288818359375e-05, -3.814697265625e-06, -0.0002231597900390625, -0.0005614757537841797, -9.894371032714844e-06, -7.62939453125e-06, -1.33514404296875e-05, -3.0875205993652344e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.008568763732910156, -5.7220458984375e-06, -0.0001888275146484375, 0.0, -3.814697265625e-06, -0.004856109619140625, -9.5367431640625e-06, -8.392333984375e-05, -0.0001087188720703125, -0.0016398429870605469, -1.1920928244535389e-07, -1.33514404296875e-05, -0.031325340270996094, -0.00067901611328125, -0.00109087023884058, -1.3589859008789062e-05, -0.00603485107421875, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -0.0006313323974609375, -8.20159912109375e-05, 0.0, -0.000225067138671875, -0.001527542481198907, -3.445148468017578e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 84, 194, "wrath", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.409850789566455, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Name", "id": "wrath"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -0.028961181640625, -0.0006847381591796875, -0.0011054158676415682, -1.3589859008789062e-05, -5.064901351928711, -1.33514404296875e-05, -1.2888957262039185, -7.62939453125e-06, -0.0002727508544921875, 0.0, -3.814697265625e-06, -0.0003757476806640625, -3.62396240234375e-05, 0.0, -7.82012939453125e-05, -0.0003957747248932719, -7.867813110351562e-06, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), wrath)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -6.704284814868053, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -6.191093444824219, -3.24249267578125e-05, -0.0031986236572265625, -1.9073486328125e-06, -3.814697265625e-06, -0.4652881622314453, -1.9073486328125e-06, -8.7738037109375e-05, -0.0001468658447265625, -0.0014067888259887695, -1.1920928244535389e-07, -1.52587890625e-05, -0.023039817810058594, -0.00037384033203125, -0.0013898038305342197, -2.1219253540039062e-05, -0.0062580108642578125, -3.814697265625e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "<UNK>", "<EOS>", 156], "score": -7.052768780360104, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -0.028961181640625, -0.0006847381591796875, -0.0011054158676415682, -1.3589859008789062e-05, -0.0064296722412109375, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -0.000621795654296875, -8.0108642578125e-05, 0.0, -0.00022125244140625, -6.990475177764893, -4.220008122501895e-05, -3.814697265625e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "The", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.124537923025848, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfTheWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -7.035794258117676, -0.026377081871032715, -8.273123967228457e-05, -9.5367431640625e-06, -7.82012939453125e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00012493133544921875, -4.8995018005371094e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.000217437744140625, 0.0, -0.001636505126953125, -1.9073486328125e-06, -1.9073486328125e-06, -5.364403477869928e-06, -2.121924626408145e-05, -5.829224392073229e-05, -2.7179718017578125e-05, -0.000704765145201236, -5.9604644775390625e-05, -0.0007991790771484375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00025773048400878906, -7.212162017822266e-05, -0.003012176603078842, -0.0006458759307861328, -0.000335693359375, -0.0003376007080078125, -9.34600830078125e-05, -0.00020599365234375, -9.131431579589844e-05, -2.2888181774760596e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000152587890625, -0.0007997751235961914, -7.748603820800781e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.254413604736328e-05, -5.7220458984375e-06, -1.33514404296875e-05, -0.004901885986328125, -7.62939453125e-06, -0.0001811981201171875, 0.0, -3.814697265625e-06, -0.00536346435546875, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.33514404296875e-05, -0.02896595001220703, -0.0006847381591796875, -0.0011025592684745789, -1.3589859008789062e-05, -0.0064697265625, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -0.0006198883056640625, -8.0108642578125e-05, 0.0, -0.00022125244140625, -0.001502746599726379, -3.445148468017578e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfTheWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 84, 194, "demon_card", "<EOS>", 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.175806952971236, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Name", "id": "demon_card"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -0.028961181640625, -0.0006847381591796875, -0.0011054158676415682, -1.3589859008789062e-05, -5.064901351928711, -1.33514404296875e-05, -2.054678440093994, -3.6954863844584906e-06, -0.0002880096435546875, -1.9073486328125e-06, -5.7220458984375e-06, -0.000507354736328125, -4.00543212890625e-05, 0.0, -0.0001125335693359375, -0.0003843306330963969, -7.867813110351562e-06, 0.0], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), demon_card)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 122, 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.279054008058203, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template55"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -7.148932456970215, -0.05940532684326172, -0.04426002502441406, 0.0, -9.5367431640625e-06, -0.0009403228759765625, -6.29425048828125e-05, 0.0, -0.0002498626708984375, -0.0010652508353814483, -2.8967857360839844e-05, -1.9073486328125e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(0, self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -7.611523117154775, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HammerOfWrath"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -6.191093444824219, -3.24249267578125e-05, -0.0031986236572265625, -1.9073486328125e-06, -3.814697265625e-06, -0.9918746948242188, -1.9073486328125e-05, 0.0, -0.24713420867919922, -0.16623413562774658, -3.814697265625e-06, -5.7220458984375e-06], "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 314], "score": -21.859027862548828, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -21.859024047851562], "inferred_code": ""}], "index": 44}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "divine_shield", "<EOS>", 68, 156], "score": -0.07395042967232257, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -0.02764725498855114, -2.503394853192731e-06, -0.0049896240234375, -0.0001201629638671875], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -5.025972626397561, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -4.711615562438965, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-05, -0.00043487548828125, -1.9073486328125e-06, -0.03001880645751953, -0.03113532066345215, -5.412101745605469e-05, -7.62939453125e-06, -0.23706817626953125, -0.000247955322265625], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "change_attack", "<EOS>", 68, 156], "score": -5.420867464730463, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -4.953915596008301, -2.622604142743512e-06, -0.4256458282470703, -0.0001125335693359375], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "immune", "<EOS>", 68, 156], "score": -5.868751785943459, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "immune", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -5.730261325836182, -7.62939453125e-06, -0.09709739685058594, -0.000194549560546875], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "divine_shield", "<EOS>", 43, 156], "score": -5.944050451034627, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Template19"}}], "value": {"_type": "Template43"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -0.02764725498855114, -2.503394853192731e-06, -5.875146865844727, -6.29425048828125e-05], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = player\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "change_attack", "<EOS>", 43, 156], "score": -6.20055534620019, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}], "value": {"_type": "Template43"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -4.953915596008301, -2.622604142743512e-06, -1.2053794860839844, -6.67572021484375e-05], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack = player\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "divine_shield", "<EOS>", 68, 156], "score": -6.2370471355025074, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -6.105588912963867, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.000578761100769043, -3.933906555175781e-06, -0.00990587193518877, -0.0002034710778389126, -0.024478912353515625, -0.011630058288574219, -1.52587890625e-05, -3.814697265625e-06, -1.5497207641601562e-05, -1.9073486328125e-06, -4.1961669921875e-05, -0.0003948211669921875, -5.53131103515625e-05, -0.016553878784179688, -5.53131103515625e-05, -9.5367431640625e-06, -0.014036178588867188, -0.0014324188232421875, -0.004693031311035156, -0.031669020652770996, -2.2649765014648438e-06, -0.0036191940307617188, -8.7738037109375e-05], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "health", "<EOS>", 68, 156], "score": -6.33367659826024, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -6.154656410217285, -4.768370445162873e-07, -0.1376953125, -0.000133514404296875], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.health = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 156], "score": -6.356173775384377, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -4.711615562438965, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-05, -0.00043487548828125, -1.9073486328125e-06, -0.03001880645751953, -0.03113532066345215, -5.412101745605469e-05, -7.62939453125e-06, -1.5669565200805664, -0.000560760498046875], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "Cat", "<EOS>", 68, 156], "score": -6.750439069397544, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "Cat", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -6.329705238342285, -1.2993750715395436e-05, -0.37937164306640625, -0.0001583099365234375], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Cat = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "amount", "<EOS>", 68, 156], "score": -6.897046349236803, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "amount", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -6.848268508911133, -4.768370445162873e-07, -0.007325172424316406, -0.0002613067626953125], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.amount = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "Recruit", "<EOS>", 68, 156], "score": -6.9546650864576804, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "Recruit", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -6.820107460021973, -2.0265579223632812e-06, -0.09310531616210938, -0.0002593994140625], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Recruit = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 95, 94, 119, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "divine_shield", "<EOS>", 68, 156], "score": -7.138478197802186, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Template19"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -5.589760780334473, -0.0003814697265625, -0.000148773193359375, -4.8875517677515745e-05, -0.00011312835704302415, -0.0002317424223292619, -0.0002626180648803711, -0.0007241963176056743, -0.0032808780670166016, -0.001827239990234375, -1.0427637100219727, -0.020864486694335938, -0.000102996826171875, -7.62939453125e-06, -0.000400543212890625, -4.76837158203125e-05, -3.814697265625e-06, -1.072883515007561e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -0.000484466552734375, -0.0042819976806640625, -0.42074012756347656, -6.29425048828125e-05, -3.814697265625e-06, -0.009106636047363281, -0.000186920166015625, -0.0009403228759765625, -0.03623223304748535, -1.3709068298339844e-05, -0.0011320114135742188, -3.0517578125e-05], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 155, 156], "score": -8.40085866231675, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Template2"}], "name": "use"}], "name": "HandOfProtection"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -7.861907958984375, -0.5236730575561523], "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        super().use(player, game)\n"}, {"choice_history": [139, 193, 314], "score": -22.287593841552734, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -22.28759002685547], "inferred_code": ""}], "index": 45}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156], "score": -0.09494886083771803, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008207321166992188, -0.0012359619140625, -0.000209808349609375, -0.0011806488037109375, -2.09808349609375e-05, -1.1444091796875e-05, -0.01523590087890625, -2.09808349609375e-05, -0.0011262893676757812, -0.0001735687255859375, -1.71661376953125e-05, -1.9073486328125e-06, -0.002719879150390625, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Started", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156], "score": -3.3934633463133252, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnStarted"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -3.32943058013916, -1.71661376953125e-05, -0.0002269744873046875, -1.71661376953125e-05, -0.0002536773681640625, -6.67572021484375e-05, -0.016550064086914062, -1.33514404296875e-05, -1.33514404296875e-05, 0.0, -0.004037617705762386, -1.1682510375976562e-05, -5.7220458984375e-06, -0.0002651214599609375, -0.0059108734130859375, -0.000827789306640625, -0.0001983642578125, -0.0018444061279296875, -2.47955322265625e-05, -1.1444091796875e-05, -0.007907867431640625, -2.47955322265625e-05, -0.0012273788452148438, -0.0001850128173828125, -1.71661376953125e-05, -1.9073486328125e-06, -0.0028095245361328125, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnStarted(), ActionTag(Heal(1\n            ), MinionSelector(condition=Null)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -4.475566956235667, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008207321166992188, -0.0012359619140625, -0.000209808349609375, -0.0011806488037109375, -2.09808349609375e-05, -1.1444091796875e-05, -4.3971099853515625, -8.0108642578125e-05, -0.0003662109375, -9.5367431640625e-06, -0.000457763671875, -2.6702880859375e-05, -1.9073486328125e-06, -0.001861572265625, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "DREAM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156], "score": -5.954026910002675, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "DREAM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -5.866257667541504, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0014495849609375, -1.1920928244535389e-07, -0.000148773193359375, -0.000423431396484375, -0.0003376007080078125, -1.52587890625e-05, -3.0159948437358253e-05, -1.6689286894688848e-06, -9.214816964231431e-05, 0.0, -0.00043570995330810547, 0.0, -0.000186920166015625, -9.5367431640625e-06, -0.0003032684326171875, -3.814697265625e-06, -1.52587890625e-05, -3.0517578125e-05, -2.47955322265625e-05, -0.0008754730224609375, 0.0, -0.000301122636301443, -0.03807353973388672, -1.9073486328125e-06, -0.001323699951171875, -4.57763671875e-05, -0.0004367828369140625, -3.0517578125e-05, -0.0003223419189453125, -1.9073486328125e-05, -9.34600830078125e-05, 0.0, -0.0017178048146888614, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008136749267578125, -0.0012340545654296875, -0.0002079010009765625, -0.0011806488037109375, -2.09808349609375e-05, -1.1444091796875e-05, -0.014943122863769531, -2.09808349609375e-05, -0.0011262893676757812, -0.0001773834228515625, -1.71661376953125e-05, -1.9073486328125e-06, -0.002803802490234375, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.DREAM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 93, 213, "Hero", "Selector", "<EOS>", 110, 156], "score": -6.057584497167369, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -5.921390533447266, 0.0, -0.07117795944213867, -5.7220458984375e-06, -1.3470649719238281e-05, -0.000202178955078125, -1.1444091796875e-05], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            HeroSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 156], "score": -6.081023546888133, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template16", "hole0": "BothPlayer"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008207321166992188, -0.0012359619140625, -0.000209808349609375, -0.0011806488037109375, -2.09808349609375e-05, -1.1444091796875e-05, -0.01523590087890625, -2.09808349609375e-05, -0.0011262893676757812, -0.0001735687255859375, -1.71661376953125e-05, -1.9073486328125e-06, -5.9338531494140625, -2.288818359375e-05, -0.054305315017700195, -0.00043392181396484375, -0.0001659393310546875, -1.71661376953125e-05], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null))), BothPlayer()])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156], "score": -6.2751855575506, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -5.262140274047852, 0.0, -0.07548713684082031, -0.0001316070556640625, -1.9073486328125e-06, -4.6491513785440475e-06, -3.1709631002740934e-05, -7.986990567587782e-06, -2.0265579223632812e-06, -0.0007991790771484375, -0.06452178955078125, -0.0795297622680664, -1.9073486328125e-05, -1.9073486328125e-06, -0.4011344909667969, -3.0517578125e-05, -0.05558061599731445, 0.0, -0.09424304962158203, 0.0, -0.000339508056640625, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.08710575103759766, 0.0, -0.0008182525634765625, -1.33514404296875e-05, -0.0001621246337890625, 0.0, -0.000606536865234375, -0.00072479248046875, -0.0001392364501953125, -5.14984130859375e-05, -2.610677620396018e-05, -2.0265473722247407e-05, -0.00022566270490642637, 0.0, -0.07162010669708252, 0.0, -0.0006580352783203125, -1.71661376953125e-05, -0.0003662109375, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -2.86102294921875e-05, -0.00067901611328125, 0.0, -0.0003768205060623586, -0.03276717662811279, -1.9073486328125e-06, -0.001094818115234375, -3.62396240234375e-05, -0.000331878662109375, -3.62396240234375e-05, -0.0005741119384765625, -2.47955322265625e-05, -0.0001068115234375, 0.0, -0.0019624223932623863, -1.1563301086425781e-05, -5.7220458984375e-06, -0.00035858154296875, -0.0073032379150390625, -0.0013103485107421875, -0.0002689361572265625, -0.001087188720703125, -2.288818359375e-05, -1.1444091796875e-05, -0.02431201934814453, -2.09808349609375e-05, -0.0014476776123046875, -0.0001201629638671875, -1.9073486328125e-05, -1.9073486328125e-06, -0.00368499755859375, -1.9073486328125e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 92, 110, 156], "score": -6.426661583616038, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -6.360640525817871, -0.00122833251953125, -9.5367431640625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            SelfSelector()))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "WARLOCK", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156], "score": -6.526524516411115, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -6.436758041381836, 0.0, -0.000400543212890625, 0.0, -0.0013523101806640625, 0.0, -0.000102996826171875, -0.0008525848388671875, -0.0002841949462890625, -2.288818359375e-05, -3.3974647521972656e-05, -4.41074053014745e-06, -8.046579023357481e-05, 0.0, -0.0005913972854614258, 0.0, -0.0001697540283203125, -5.7220458984375e-06, -0.000286102294921875, -3.814697265625e-06, -1.52587890625e-05, -2.86102294921875e-05, -2.47955322265625e-05, -0.00084686279296875, 0.0, -0.0003072023100685328, -0.03865242004394531, -1.9073486328125e-06, -0.0013446807861328125, -4.76837158203125e-05, -0.0004596710205078125, -3.24249267578125e-05, -0.00035858154296875, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -0.0017341364873573184, -1.1563301086425781e-05, -7.62939453125e-06, -0.000339508056640625, -0.0081329345703125, -0.001247406005859375, -0.0002079010009765625, -0.0011577606201171875, -2.09808349609375e-05, -9.5367431640625e-06, -0.015475273132324219, -2.09808349609375e-05, -0.0011110305786132812, -0.0001735687255859375, -1.71661376953125e-05, -1.9073486328125e-06, -0.0029239654541015625, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.WARLOCK)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "picker", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.621902558042308, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008207321166992188, -0.0012359619140625, -0.000209808349609375, -0.0011806488037109375, -2.09808349609375e-05, -1.1444091796875e-05, -6.447091102600098, -9.5367431640625e-06, -0.0008144378662109375, -7.62939453125e-06, -0.09777545928955078, -1.71661376953125e-05, -1.9073486328125e-06, -0.000530242919921875, -5.7220458984375e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(picker=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156], "score": -6.922408315394385, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -6.822299003601074, -0.00093841552734375, -0.0046062469482421875, 0.0, -3.4332275390625e-05, -2.47955322265625e-05, -0.0001239776611328125, 0.0, -0.008140802383422852, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.000186920166015625, -1.1920928244535389e-07, -0.0003662109375, -0.0007648468017578125, -0.0002841949462890625, -9.5367431640625e-06, -3.361701965332031e-05, -3.099436753473128e-06, -7.688989717280492e-05, 0.0, -0.0004763603210449219, 0.0, -0.00019073486328125, -9.5367431640625e-06, -0.000339508056640625, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.6702880859375e-05, -0.000885009765625, 0.0, -0.0003068446821998805, -0.039732933044433594, -1.9073486328125e-06, -0.0014019012451171875, -4.57763671875e-05, -0.0004482269287109375, -3.24249267578125e-05, -0.00032806396484375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017325867665931582, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.0081634521484375, -0.0012302398681640625, -0.000209808349609375, -0.0011882781982421875, -2.09808349609375e-05, -1.1444091796875e-05, -0.015158653259277344, -2.09808349609375e-05, -0.0011243820190429688, -0.0001735687255859375, -1.71661376953125e-05, -1.9073486328125e-06, -0.002796173095703125, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 311, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 110, 156], "score": -7.161850067807933, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "effects", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008207321166992188, -0.0012359619140625, -0.000209808349609375, -7.0649614334106445, -0.000102996826171875, -5.7220458984375e-06, -0.00768280029296875, -2.09808349609375e-05, -0.0010137557983398438, -3.0517578125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0001316070556640625, -9.5367431640625e-06, -0.008739471435546875, -5.7220458984375e-06, -0.0004787445068359375, -4.00543212890625e-05, -0.0025653839111328125, -1.9073486328125e-05, -3.814697265625e-06, -0.0015735626220703125, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null, players=BothPlayer())))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 94, 119, 154, 205, "0", "<EOS>", "2", "<EOS>", 156], "score": -7.264643046862744, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 0, "hole1": 2}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -7.056929588317871, -6.29425048828125e-05, -3.814697265625e-06, -7.390948667307384e-06, -3.2544117857469246e-05, -3.2186455882765586e-06, 0.0, -0.000637054443359375, -0.01303863525390625, -0.039755821228027344, -1.33514404296875e-05, -0.14813613891601562, -7.62939453125e-06, -3.7788944609928876e-05, -7.033334895822918e-06, -0.00013017654418945312, 0.0, 0.0], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(0, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 94, 119, 310, 135, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 158, 283, "0", "<EOS>", "2", "<EOS>", 156], "score": -7.47097532261148, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Template9", "hole0": 0, "hole1": 2}], "name": "create_minion"}], "name": "HealingTotem"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -5.262140274047852, 0.0, -0.07548713684082031, -0.0001316070556640625, -1.9073486328125e-06, -4.6491513785440475e-06, -3.1709631002740934e-05, -7.986990567587782e-06, -2.0265579223632812e-06, -0.0007991790771484375, -0.06452178955078125, -0.0795297622680664, -1.9073486328125e-05, -1.9073486328125e-06, -1.1158113479614258, -0.007694244384765625, -0.00031280517578125, -4.0650367736816406e-05, -2.3841855067985307e-07, -0.014223098754882812, -1.33514404296875e-05, -0.020521163940429688, -0.000461578369140625, -8.96453857421875e-05, -1.9073486328125e-06, -0.003803253173828125, 0.0, -0.0017719268798828125, -0.7816505432128906, -0.0008087158203125, -0.00010978597856592387, -5.519381375052035e-05, -0.04038365185260773, -1.9073486328125e-06, -3.814697265625e-06], "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(0, 2)\n"}, {"choice_history": [139, 193, 314], "score": -25.485153198242188, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, 0.0, -25.485153198242188], "inferred_code": ""}], "index": 46}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -0.058108555080650603, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -0.02368450164794922, -3.62396240234375e-05, -1.9073486328125e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -4.533723102810143, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -4.498713493347168, -0.00061798095703125, -5.7220458984375e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "<UNK>", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -5.944904443269877, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Healing<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -5.890353202819824, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -0.02368450164794922, -3.62396240234375e-05, -1.9073486328125e-06], "inferred_code": "class Healing<UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 86, 198, "8", "<EOS>", 113, 156], "score": -6.040542112483706, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"n": 8, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -5.704195499420166, -0.009942054748535156, -0.2905162572860718, -1.4662635294371285e-05, -0.001468658447265625, -1.9073486328125e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 3, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -6.220896111818945, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -5.9457244873046875, -0.03352546691894531, -0.1604595184326172, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-06, -0.030478477478027344, -0.004212975036352873, -1.0371154530730564e-05, -0.0001430511474609375, -0.0037441253662109375, -9.5367431640625e-06, -0.0015783309936523438, -1.1444091796875e-05, -0.0017156600952148438, -0.0008949036709964275, -6.96163042448461e-05, -1.52587890625e-05, -0.025112152099609375, -3.24249267578125e-05, -1.9073486328125e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -6.273143635166377, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -6.197942733764648, -0.02370762825012207, -1.7523612768854946e-05, -0.0001773834228515625, -0.0019969940185546875, -1.71661376953125e-05, -0.002117156982421875, -1.1444091796875e-05, -0.0009593963623046875, -0.0009297127835452557, -8.952297503128648e-05, -1.33514404296875e-05, -0.026269912719726562, -4.00543212890625e-05, -1.9073486328125e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -6.590373862700744, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -6.2938947677612305, -5.14984130859375e-05, -3.814697265625e-06, -2.6464455004315823e-05, -4.887576324108522e-06, -2.09808349609375e-05, -0.1434173583984375, -6.103515625e-05, -0.0043430328369140625, -3.814697265625e-06, 0.0, -0.05120372772216797, -1.9073486328125e-06, -5.7220458984375e-06, -0.045426368713378906, -0.006777286529541016, -9.417489309271332e-06, -0.0001201629638671875, -0.004184722900390625, -9.5367431640625e-06, -0.0010499954223632812, -1.33514404296875e-05, -0.0005893707275390625, -0.0009473560494370759, -4.231862840242684e-05, -1.9073486328125e-05, -0.030249595642089844, -3.24249267578125e-05, -1.9073486328125e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 94, 119, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -6.849498855942784, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -6.659542083740234, -0.0050830841064453125, -1.1444091796875e-05, -2.622600959512056e-06, -2.0503983250819147e-05, -1.81197356141638e-05, -3.2782554626464844e-05, -0.0001068115234375, -0.0059967041015625, -0.011661529541015625, -0.0002651214599609375, -3.814697265625e-06, -0.08031940460205078, -1.33514404296875e-05, -0.031187057495117188, -2.0265558760002023e-06, -9.5367431640625e-06, 0.0, -0.0006771087646484375, -0.004857420921325684, -1.3589859008789062e-05, -3.0517578125e-05, -1.71661376953125e-05, -0.000102996826171875, 0.0, -0.0038213729858398438, -0.0002880096435546875, -0.000118255615234375, -3.814697265625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -0.0004596710205078125, -1.9073486328125e-06, -7.62939453125e-06, -0.0035266876220703125, -0.004583120346069336, -7.867782187531702e-06, -0.0001277923583984375, -0.0012054443359375, -1.52587890625e-05, -0.001621246337890625, -1.1444091796875e-05, -0.0013895034790039062, -0.0009104009950533509, -6.234495958779007e-05, -1.52587890625e-05, -0.027167320251464844, -3.62396240234375e-05, -1.9073486328125e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "heal", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -6.916036402288626, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -5.970691680908203, -1.9073486328125e-05, -0.01786041259765625, -0.568653404712677, -0.0007863528444431722, -0.26899057626724243, -1.7046782886609435e-05, -0.0001392364501953125, -0.04274559020996094, -5.7220458984375e-06, -0.000576019287109375, -4.00543212890625e-05, -0.006824493408203125, -0.0009839527774602175, -7.700666174059734e-05, -1.52587890625e-05, -0.018688201904296875, -6.866455078125e-05, -1.9073486328125e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -7.082070847170428, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -6.704408168792725, -1.4305104514278355e-06, -2.47955322265625e-05, -0.07081794738769531, -4.38690185546875e-05, -0.27784207463264465, -4.291534423828125e-06, -0.0052890777587890625, -4.38690185546875e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 100, 113, 156], "score": -7.106535183193444, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template25"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -7.071693420410156, -0.00045013427734375, -5.7220458984375e-06], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(CARD_RARITY.LEGENDARY),\n            self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 113, 156], "score": -7.204077368144169, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -6.886772155761719, -9.34600830078125e-05, -3.24249267578125e-05, -0.01629285328090191, -0.0014554505469277501, -0.24350294470787048, -0.00019667598826345056, -0.0025177001953125, -0.0045108795166015625, -6.29425048828125e-05, -0.001617431640625, -7.62939453125e-06, -0.0006685256958007812, -0.0008962143328972161, -6.294086779234931e-05, -1.33514404296875e-05, -0.012909889221191406, -3.24249267578125e-05, -0.000225067138671875, -1.1444091796875e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.hero.heal(player.effective_heal_power(8),\n            self), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 86, 198, "Health", "<EOS>", 113, 156], "score": -7.250404225364434, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"n": 0, "_type": "Num"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -5.704195499420166, -0.009942054748535156, -1.5006617307662964, -2.1219027985353023e-05, -0.00115966796875, -3.814697265625e-05], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(0), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156], "score": -7.254891385452936, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "die", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HealingTouch"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -7.185390472412109, -7.152556463552173e-06, -7.82012939453125e-05, -0.04582023620605469, 0.0], "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n"}, {"choice_history": [139, 193, 314], "score": -25.648740768432617, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, -3.814697265625e-06, -25.648717880249023], "inferred_code": ""}], "index": 47}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -2.2864592663654193, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -1.0213212966918945, -1.9073486328125e-06, -0.0065631866455078125, -3.814697265625e-06, -0.004039406776428223, -6.4373016357421875e-06, -0.007442800793796778, -0.00024423000286333263, -0.027598392218351364, -8.022463589441031e-05, -0.11013664305210114, -0.00018499775615055114, -0.0013034750008955598, -0.0003818800614681095, -6.103515625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.037795066833496094, -0.005728721618652344, -3.814697265625e-05, -0.0011110305786132812, -0.0002231597900390625, -0.009937286376953125, -0.0071697235107421875, -0.22288179397583008, -1.1920928244535389e-07, -0.003290532622486353, -2.0265579223632812e-06, -0.0013065338134765625, -0.007632255554199219, -2.288818359375e-05, -0.00026297560543753207, -7.748603820800781e-06, -0.00029754638671875, -2.288818359375e-05, -1.9073486328125e-06, -0.060278892517089844, -3.814697265625e-06, -0.0084686279296875, -0.01373136043548584, -1.1801670552813448e-05, -0.0017175674438476562, -5.7220458984375e-06, -0.2329961061477661, -1.9073486328125e-06, -0.0036163330078125, -4.00543212890625e-05, -1.9073486328125e-06, -0.000522613525390625, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011272430419921875, -0.11248624324798584, -3.3378591979271732e-06, -0.001499176025390625, -0.01758861541748047, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -2.533846167265395, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -0.1414283812046051, -0.0002076410164590925, -0.7359669208526611, -0.0003855713293887675, -5.91278076171875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -0.044898033142089844, -0.004509925842285156, -3.814697265625e-05, -0.0014715194702148438, -0.0002651214599609375, -0.008268356323242188, -0.004807472229003906, -0.24707365036010742, -1.1920928244535389e-07, -0.002400993602350354, -1.1920928244535389e-07, -0.0012531280517578125, -0.0096893310546875, -2.288818359375e-05, -0.00023210039944387972, -7.748603820800781e-06, -0.000324249267578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.05038738250732422, -3.814697265625e-06, -0.008993148803710938, -0.011686444282531738, -9.894339200400282e-06, -0.0016727447509765625, -3.814697265625e-06, -0.22619545459747314, -1.9073486328125e-06, -0.0032520294189453125, -4.38690185546875e-05, -1.9073486328125e-06, -0.000545501708984375, -1.52587890625e-05, -1.9073486328125e-06, -0.0011272430419921875, -0.11869347095489502, -3.3378591979271732e-06, -0.001453399658203125, -0.017678260803222656, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -2.677909280951056, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -0.1414283812046051, -0.0002076410164590925, -0.6615964770317078, -0.0001883382210507989, -0.008459091186523438, -1.9073486328125e-06, -6.866455078125e-05, -0.2099475860595703, -0.022930145263671875, -4.9591064453125e-05, -0.0009222030639648438, -0.000518798828125, -0.02155017852783203, -0.0051250457763671875, -0.2665961980819702, -1.1920928244535389e-07, -0.0035691254306584597, -1.1920928244535389e-07, -0.000713348388671875, -0.009806632995605469, -2.6702880859375e-05, -0.00025176984490826726, -9.655952453613281e-06, -0.00034332275390625, -1.71661376953125e-05, -1.9073486328125e-06, -0.045668601989746094, -3.814697265625e-06, -0.008563041687011719, -0.012675642967224121, -1.0848005331354216e-05, -0.001605987548828125, -5.7220458984375e-06, -0.22518563270568848, -1.9073486328125e-06, -0.0034637451171875, -4.1961669921875e-05, -1.9073486328125e-06, -0.0005550384521484375, -1.52587890625e-05, -1.9073486328125e-06, -0.001071929931640625, -0.11678922176361084, -3.3378591979271732e-06, -0.0014781951904296875, -0.01774311065673828, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -4.550477194480173, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -1.0213212966918945, -1.9073486328125e-06, -0.0065631866455078125, -3.814697265625e-06, -0.004039406776428223, -6.4373016357421875e-06, -0.007442800793796778, -0.00024423000286333263, -0.027598392218351364, -8.022463589441031e-05, -2.3173394203186035, -0.017125766724348068, -0.004853161983191967, -0.0006938062142580748, -6.866455078125e-05, -2.86102294921875e-05, -3.24249267578125e-05, -0.03327369689941406, -0.005519866943359375, -3.814697265625e-05, -0.001033782958984375, -0.0001697540283203125, -0.009160041809082031, -0.009572029113769531, -0.25033092498779297, -1.1920928244535389e-07, -0.003531335387378931, -2.0265579223632812e-06, -0.0014057159423828125, -0.008362770080566406, -2.47955322265625e-05, -0.00027012816281057894, -7.867813110351562e-06, -0.000270843505859375, -2.47955322265625e-05, -1.9073486328125e-06, -0.06724739074707031, -3.814697265625e-06, -0.008924484252929688, -0.014075636863708496, -1.1801670552813448e-05, -0.00179290771484375, -3.814697265625e-06, -0.2351069450378418, -1.9073486328125e-06, -0.0034313201904296875, -4.1961669921875e-05, -1.9073486328125e-06, -0.0005168914794921875, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011720657348632812, -0.1135486364364624, -3.4570680327306036e-06, -0.001483917236328125, -0.017452239990234375, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -4.708619376358882, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -4.607240676879883, -6.67572021484375e-05, -0.049193382263183594, 0.0, -2.288818359375e-05, -0.002044677734375, -7.62939453125e-06, 0.0, -0.0034351348876953125, -0.009995698928833008, -1.847738167271018e-05, -0.000362396240234375], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "justice", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.029339960823073, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "justice"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -1.0213212966918945, -1.9073486328125e-06, -0.0065631866455078125, -3.814697265625e-06, -0.004039406776428223, -6.4373016357421875e-06, -0.007442800793796778, -0.00024423000286333263, -0.027598392218351364, -8.022463589441031e-05, -0.11013664305210114, -0.00018499775615055114, -0.0013034750008955598, -0.0003818800614681095, -6.103515625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.037795066833496094, -0.005728721618652344, -3.814697265625e-05, -0.0011110305786132812, -0.0002231597900390625, -0.009937286376953125, -0.0071697235107421875, -0.22288179397583008, -1.1920928244535389e-07, -0.003290532622486353, -2.0265579223632812e-06, -0.0013065338134765625, -0.007632255554199219, -2.288818359375e-05, -0.00026297560543753207, -7.748603820800781e-06, -0.00029754638671875, -2.288818359375e-05, -1.9073486328125e-06, -0.060278892517089844, -3.814697265625e-06, -0.0084686279296875, -0.01373136043548584, -1.1801670552813448e-05, -0.0017175674438476562, -5.7220458984375e-06, -2.978830337524414, -1.490105023549404e-05, -0.0041408538818359375, -2.288818359375e-05, -1.9073486328125e-06, -0.0002727508544921875, -1.1444091796875e-05, 0.0, -0.0056552886962890625, -0.09504329413175583, -2.9802317840221804e-06, -0.001857757568359375, -0.02692699432373047, -3.814697265625e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "Frog", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.150756587602636, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -2.151203155517578, -0.0016853936249390244, -0.03301132842898369, -0.00010811796528287232, -0.000152587890625, -2.86102294921875e-05, -5.91278076171875e-05, -1.2518377304077148, -0.010128021240234375, -3.814697265625e-05, -0.0009765625, -0.0001373291015625, -0.005679130554199219, -0.000713348388671875, -0.36636459827423096, -2.3841855067985307e-07, -0.0026348826941102743, -1.1920928244535389e-07, -0.0024318695068359375, -0.01042938232421875, -2.86102294921875e-05, -0.00019431104010436684, -7.748603820800781e-06, -0.0003757476806640625, -2.09808349609375e-05, -1.9073486328125e-06, -0.03590202331542969, -3.814697265625e-06, -0.008975028991699219, -0.013046622276306152, -1.0609588571242057e-05, -0.0015544891357421875, -5.7220458984375e-06, -0.22475850582122803, -1.9073486328125e-06, -0.003597259521484375, -4.38690185546875e-05, -1.9073486328125e-06, -0.0005645751953125, -1.52587890625e-05, -1.9073486328125e-06, -0.0010480880737304688, -0.1152116060256958, -3.3378591979271732e-06, -0.0014896392822265625, -0.017579078674316406, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.Frog.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "justice", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.234294831147018, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "justice"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -1.0213212966918945, -1.9073486328125e-06, -0.0065631866455078125, -3.814697265625e-06, -0.004039406776428223, -6.4373016357421875e-06, -0.007442800793796778, -0.00024423000286333263, -0.027598392218351364, -8.022463589441031e-05, -0.11013664305210114, -0.00018499775615055114, -0.0013034750008955598, -0.0003818800614681095, -6.103515625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.037795066833496094, -0.005728721618652344, -3.814697265625e-05, -0.0011110305786132812, -0.0002231597900390625, -0.009937286376953125, -0.0071697235107421875, -3.115530014038086, -5.1020273531321436e-05, -0.09192359447479248, -1.1920928244535389e-07, -0.0014019012451171875, -0.02438068389892578, -5.340576171875e-05, -0.00022089479898568243, -1.1682510375976562e-05, -0.0002994537353515625, -3.4332275390625e-05, -1.9073486328125e-06, -0.02678394317626953, -1.9073486328125e-06, -0.007767677307128906, -0.015382528305053711, -1.1682462172757369e-05, -0.0012674331665039062, -5.7220458984375e-06, -0.2209336757659912, -2.0265579223632812e-06, -0.003963470458984375, -4.00543212890625e-05, -1.9073486328125e-06, -0.0005035400390625, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010862350463867188, -0.10694563388824463, -3.3378591979271732e-06, -0.001544952392578125, -0.017511367797851562, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = justice.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "justice", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.301457305699344, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "justice"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -0.1414283812046051, -0.0002076410164590925, -0.7359669208526611, -0.0003855713293887675, -5.91278076171875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -0.044898033142089844, -0.004509925842285156, -3.814697265625e-05, -0.0014715194702148438, -0.0002651214599609375, -0.008268356323242188, -0.004807472229003906, -0.24707365036010742, -1.1920928244535389e-07, -0.002400993602350354, -1.1920928244535389e-07, -0.0012531280517578125, -0.0096893310546875, -2.288818359375e-05, -0.00023210039944387972, -7.748603820800781e-06, -0.000324249267578125, -1.9073486328125e-05, -1.9073486328125e-06, -0.05038738250732422, -3.814697265625e-06, -0.008993148803710938, -0.011686444282531738, -9.894339200400282e-06, -0.0016727447509765625, -3.814697265625e-06, -2.999976873397827, -1.3351351299206726e-05, -0.0035724639892578125, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -0.005722999572753906, -0.09813260287046432, -2.9802317840221804e-06, -0.001850128173828125, -0.027029037475585938, -3.814697265625e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "justice", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.473292495806575, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "justice"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -0.1414283812046051, -0.0002076410164590925, -0.6615964770317078, -0.0001883382210507989, -0.008459091186523438, -1.9073486328125e-06, -6.866455078125e-05, -0.2099475860595703, -0.022930145263671875, -4.9591064453125e-05, -0.0009222030639648438, -0.000518798828125, -0.02155017852783203, -0.0051250457763671875, -0.2665961980819702, -1.1920928244535389e-07, -0.0035691254306584597, -1.1920928244535389e-07, -0.000713348388671875, -0.009806632995605469, -2.6702880859375e-05, -0.00025176984490826726, -9.655952453613281e-06, -0.00034332275390625, -1.71661376953125e-05, -1.9073486328125e-06, -0.045668601989746094, -3.814697265625e-06, -0.008563041687011719, -0.012675642967224121, -1.0848005331354216e-05, -0.001605987548828125, -5.7220458984375e-06, -3.0249879360198975, -1.3828182090946939e-05, -0.0039310455322265625, -2.47955322265625e-05, -1.9073486328125e-06, -0.0002880096435546875, -1.1444091796875e-05, 0.0, -0.005496978759765625, -0.09795999526977539, -2.9802317840221804e-06, -0.0018405914306640625, -0.02717876434326172, -3.814697265625e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = justice\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "justice", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.500793839761592, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "justice"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -0.1414283812046051, -0.0002076410164590925, -0.7359669208526611, -0.0003855713293887675, -5.91278076171875e-05, -1.71661376953125e-05, -3.4332275390625e-05, -0.044898033142089844, -0.004509925842285156, -3.814697265625e-05, -0.0014715194702148438, -0.0002651214599609375, -0.008268356323242188, -0.004807472229003906, -3.156454086303711, -7.772143726469949e-05, -0.08186173439025879, -1.1920928244535389e-07, -0.0012454986572265625, -0.02966594696044922, -5.340576171875e-05, -0.00021505352924577892, -1.1563301086425781e-05, -0.0003261566162109375, -2.86102294921875e-05, -1.9073486328125e-06, -0.02369403839111328, -1.9073486328125e-06, -0.008392333984375, -0.012836933135986328, -8.702254490344785e-06, -0.0012874603271484375, -5.7220458984375e-06, -0.2161400318145752, -2.0265579223632812e-06, -0.0036449432373046875, -4.38690185546875e-05, -1.9073486328125e-06, -0.0005092620849609375, -1.52587890625e-05, -1.9073486328125e-06, -0.0010900497436523438, -0.1130601167678833, -3.4570680327306036e-06, -0.0015106201171875, -0.017551422119140625, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.Frog()\n        minion = justice.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "temp_attack", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156], "score": -5.628728249750978, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "temp_attack"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -3.917832851409912, -0.008631337434053421, -0.0056972503662109375, -0.0023660659790039062, -0.000156402587890625, 0.0, -0.0032415390014648438, -1.9073486328125e-06, -0.0017385482788085938, 0.0, -0.6543903350830078, -1.9073486328125e-06, -0.010372161865234375, -3.814697265625e-06, -0.0031266212463378906, -6.4373016357421875e-06, -0.006450148299336433, -0.0001746263587847352, -0.02226104401051998, -8.987976616481319e-05, -0.11367462575435638, -0.0002082392602460459, -0.0012468058848753572, -0.0004194150387775153, -5.14984130859375e-05, -1.52587890625e-05, -2.6702880859375e-05, -0.04317188262939453, -0.00531768798828125, -4.00543212890625e-05, -0.00109100341796875, -0.000293731689453125, -0.010260581970214844, -0.006766319274902344, -0.22734487056732178, -1.1920928244535389e-07, -0.0032203183509409428, -1.1920928244535389e-07, -0.001224517822265625, -0.007855415344238281, -2.288818359375e-05, -0.0002530812344048172, -7.748603820800781e-06, -0.000301361083984375, -2.288818359375e-05, -1.9073486328125e-06, -0.05662345886230469, -3.814697265625e-06, -0.008449554443359375, -0.014467597007751465, -1.2397711543599144e-05, -0.001682281494140625, -5.7220458984375e-06, -0.23836946487426758, -2.0265579223632812e-06, -0.004253387451171875, -4.00543212890625e-05, -1.9073486328125e-06, -0.000518798828125, -1.33514404296875e-05, -1.9073486328125e-06, -0.0010766983032226562, -0.10864698886871338, -3.4570680327306036e-06, -0.0015506744384765625, -0.017548561096191406, -5.7220458984375e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        temp_attack = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 121, 156], "score": -5.990769564332332, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template54"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -1.0213212966918945, -1.9073486328125e-06, -0.0065631866455078125, -3.814697265625e-06, -0.004039406776428223, -6.4373016357421875e-06, -0.007442800793796778, -0.00024423000286333263, -0.027598392218351364, -8.022463589441031e-05, -0.11013664305210114, -0.00018499775615055114, -0.0013034750008955598, -0.0003818800614681095, -6.103515625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.037795066833496094, -0.005728721618652344, -3.814697265625e-05, -0.0011110305786132812, -0.0002231597900390625, -0.009937286376953125, -0.0071697235107421875, -0.22288179397583008, -1.1920928244535389e-07, -0.003290532622486353, -2.0265579223632812e-06, -0.0013065338134765625, -0.007632255554199219, -2.288818359375e-05, -0.00026297560543753207, -7.748603820800781e-06, -0.00029754638671875, -2.288818359375e-05, -1.9073486328125e-06, -0.060278892517089844, -3.814697265625e-06, -0.0084686279296875, -0.01373136043548584, -1.1801670552813448e-05, -0.0017175674438476562, -5.7220458984375e-06, -0.2329961061477661, -1.9073486328125e-06, -0.0036163330078125, -4.00543212890625e-05, -1.9073486328125e-06, -0.000522613525390625, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011272430419921875, -2.6790740489959717, -5.7220458984375e-06, -1.9073486328125e-06, -1.1567983627319336, -1.33514404296875e-05], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.increase_health(minion)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 84, 194, "frog", "<EOS>", 156], "score": -7.3139641873258014, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Template54"}], "value": {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template54"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Expr", "value": {"args": [{"_type": "Name", "id": "frog"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Hex"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -1.0213212966918945, -1.9073486328125e-06, -0.0065631866455078125, -3.814697265625e-06, -0.004039406776428223, -6.4373016357421875e-06, -0.007442800793796778, -0.00024423000286333263, -0.027598392218351364, -8.022463589441031e-05, -0.11013664305210114, -0.00018499775615055114, -0.0013034750008955598, -0.0003818800614681095, -6.103515625e-05, -1.52587890625e-05, -2.86102294921875e-05, -0.037795066833496094, -0.005728721618652344, -3.814697265625e-05, -0.0011110305786132812, -0.0002231597900390625, -0.009937286376953125, -0.0071697235107421875, -0.22288179397583008, -1.1920928244535389e-07, -0.003290532622486353, -2.0265579223632812e-06, -0.0013065338134765625, -0.007632255554199219, -2.288818359375e-05, -0.00026297560543753207, -7.748603820800781e-06, -0.00029754638671875, -2.288818359375e-05, -1.9073486328125e-06, -0.060278892517089844, -3.814697265625e-06, -0.0084686279296875, -0.01373136043548584, -1.1801670552813448e-05, -0.0017175674438476562, -5.7220458984375e-06, -0.2329961061477661, -1.9073486328125e-06, -0.0036163330078125, -4.00543212890625e-05, -1.9073486328125e-06, -0.000522613525390625, -1.33514404296875e-05, -1.9073486328125e-06, -0.0011272430419921875, -2.6790740489959717, -5.7220458984375e-06, -1.9073486328125e-06, -1.6151061058044434, 0.0, -0.8648848533630371, -7.748603820800781e-06, -7.62939453125e-06], "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.increase_health(frog)\n"}, {"choice_history": [139, 193, 314], "score": -22.952329635620117, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -22.952316284179688], "inferred_code": ""}], "index": 48}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -0.10472875013738303, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -0.000988006591796875, -3.24249267578125e-05, -7.82012939453125e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.004337310791015625, -0.00556218484416604, -6.460934673668817e-05, -9.72747802734375e-05, -0.0018329620361328125, -5.340576171875e-05, -0.0017709732055664062, -1.1444091796875e-05, -0.00035858154296875, -0.001851223991252482, -0.00020502442202996463, -5.340576171875e-05, -0.0048313140869140625, -0.0002193450927734375, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -3.534567820727716, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -3.3427395820617676, -2.384185791015625e-06, -0.0022621857933700085, -0.00010943402594421059, -0.007975578308105469, -0.0001888275146484375, -0.1495685577392578, -0.0002269744873046875, -0.0009248256683349609, -7.629378160345368e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0015773773193359375, -0.0005177258863113821, -1.2874589629063848e-05, -7.43865966796875e-05, -2.288818359375e-05, -8.213520050048828e-05, -1.537799835205078e-05, -0.0002231597900390625, -0.00102996826171875, -2.47955322265625e-05, -0.0001087188720703125, -2.09808349609375e-05, -3.24249267578125e-05, -4.9591064453125e-05, -3.814697265625e-06, -3.24249267578125e-05, -0.00447845458984375, -0.005349396727979183, -6.758938252460212e-05, -9.918212890625e-05, -0.001888275146484375, -5.14984130859375e-05, -0.0016641616821289062, -1.1444091796875e-05, -0.00034999847412109375, -0.0019512127619236708, -0.00020383253286127, -5.340576171875e-05, -0.005687713623046875, -0.000232696533203125, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CARD_RARITY.EPIC, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -4.181173928956923, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -3.498579978942871, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001329183578491211, -6.198883056640625e-06, -0.00019073486328125, -0.0667572021484375, -5.14984130859375e-05, -0.000522613525390625, -2.288818359375e-05, -3.814697265625e-06, -0.03455352783203125, -1.9073486328125e-06, -2.09808349609375e-05, -0.5105199813842773, -0.011894104070961475, -0.00016008525562938303, -8.7738037109375e-05, -0.002048492431640625, -3.62396240234375e-05, -0.0012302398681640625, -2.288818359375e-05, -0.0005083084106445312, -0.002072557806968689, -0.00017057971854228526, -7.2479248046875e-05, -0.0024166107177734375, -0.0002422332763671875, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -4.8615705314314255, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -3.498579978942871, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001329183578491211, -6.198883056640625e-06, -0.00019073486328125, -0.0667572021484375, -5.14984130859375e-05, -0.000522613525390625, -2.288818359375e-05, -3.814697265625e-06, -0.03455352783203125, -1.9073486328125e-06, -2.09808349609375e-05, -1.1176080703735352, -0.0822911262512207, -0.0010577804641798139, -9.72747802734375e-05, -0.0026397705078125, -0.000118255615234375, -0.0017309188842773438, -4.1961669921875e-05, -0.0007228851318359375, -0.002179242204874754, -0.0001760648301569745, -0.0001468658447265625, -0.0025272369384765625, -0.00054168701171875, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -5.691855515909992, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -3.3427395820617676, -2.384185791015625e-06, -0.0022621857933700085, -0.00010943402594421059, -0.007975578308105469, -0.0001888275146484375, -2.0117063522338867, -2.09808349609375e-05, -1.9073486328125e-06, -1.668929871811997e-05, -8.106231689453125e-06, -4.9591064453125e-05, -0.0270233154296875, -7.62939453125e-05, -0.00054168701171875, -9.5367431640625e-06, -3.814697265625e-06, -0.022147178649902344, -3.814697265625e-06, -2.6702880859375e-05, -0.25189971923828125, -0.01091205794364214, -0.00016878610767889768, -9.1552734375e-05, -0.0023670196533203125, -3.814697265625e-05, -0.0009260177612304688, -1.71661376953125e-05, -0.000553131103515625, -0.0022818874567747116, -0.00018738557992037386, -7.43865966796875e-05, -0.0025529861450195312, -0.000270843505859375, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CARD_RARITY.EPIC, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -5.861712608765174, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -0.000988006591796875, -3.24249267578125e-05, -7.82012939453125e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -5.740076065063477, -0.02689182758331299, -0.00026639728457666934, -0.0001163482666015625, -0.0010623931884765625, -0.000141143798828125, -0.0036516189575195312, -2.288818359375e-05, -0.0005168914794921875, -0.0017571797361597419, -0.00019584782421588898, -8.58306884765625e-05, -0.0031566619873046875, -0.0002918243408203125, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156], "score": -6.3234158076325, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template58"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -0.000988006591796875, -3.24249267578125e-05, -7.82012939453125e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.004337310791015625, -0.00556218484416604, -6.460934673668817e-05, -9.72747802734375e-05, -0.0018329620361328125, -5.340576171875e-05, -0.0017709732055664062, -1.1444091796875e-05, -0.00035858154296875, -0.001851223991252482, -0.00020502442202996463, -5.340576171875e-05, -6.223690032958984, -4.76837158203125e-05, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -6.474679547352935, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "EPIC", "value": {"_type": "Name", "id": "CARD_RARITY"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -6.278606414794922, -4.00543212890625e-05, -6.4849853515625e-05, -3.814697265625e-06, -0.0004801750183105469, 0.0, -0.00158321566414088, -2.8610213121282868e-05, -0.0019683837890625, -0.12002372741699219, -1.52587890625e-05, -0.0006340742111206055, -1.2040118235745467e-05, -0.0003871917724609375, -3.814697265625e-06, -0.0003414154052734375, -0.0005396527703851461, -5.424017217592336e-05, -6.67572021484375e-05, -2.09808349609375e-05, -7.069110870361328e-05, -7.748603820800781e-06, -0.0002880096435546875, -0.0009899139404296875, -2.86102294921875e-05, -8.0108642578125e-05, -2.86102294921875e-05, -8.96453857421875e-05, -6.866455078125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.0039730072021484375, -0.005825875326991081, -7.080780778778717e-05, -9.72747802734375e-05, -0.00182342529296875, -5.53131103515625e-05, -0.0020456314086914062, -1.33514404296875e-05, -0.0003299713134765625, -0.0018910805229097605, -0.00022266412270255387, -5.53131103515625e-05, -0.004662513732910156, -0.00020599365234375, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.EPIC, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -6.788955954432822, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -3.498579978942871, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001329183578491211, -6.198883056640625e-06, -0.00019073486328125, -0.0667572021484375, -5.14984130859375e-05, -0.000522613525390625, -2.288818359375e-05, -3.814697265625e-06, -0.03455352783203125, -1.9073486328125e-06, -2.09808349609375e-05, -2.7762298583984375, -4.1961669921875e-05, -0.2361774444580078, -0.021723661571741104, -0.00021789166203234345, -0.07174202054738998, -3.290122185717337e-05, -0.00035858154296875, -0.02051830291748047, -0.000118255615234375, -0.00037384033203125, -9.5367431640625e-06, -0.0024785995483398438, -0.0015382864512503147, -9.59608078119345e-05, -9.918212890625e-05, -0.007224082946777344, -0.0002841949462890625, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -6.8640534172272964, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -3.498579978942871, -1.9073486328125e-05, -5.7220458984375e-06, -0.0001329183578491211, -6.198883056640625e-06, -0.00019073486328125, -2.757723808288574, -3.814697265625e-06, -0.004314422607421875, -5.53131103515625e-05, -5.7220458984375e-06, -0.000720977783203125, -3.814697265625e-06, -6.29425048828125e-05, -0.14857006072998047, -0.013998745009303093, -3.1709168979432434e-05, -9.5367431640625e-05, -0.004544258117675781, -1.33514404296875e-05, -0.0010814666748046875, -2.09808349609375e-05, -0.0005168914794921875, -0.0010828676167875528, -0.00010382702021161094, -4.38690185546875e-05, -0.00347137451171875, -0.0001354217529296875, -0.04271888732910156, -4.00543212890625e-05, -2.47955322265625e-05, -0.32049560546875, -5.7220458984375e-06, 0.0, -0.008305549621582031, -0.008092202246189117, -6.914134246471804e-06, -5.7220458984375e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156], "score": -7.144370770206024, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -7.069417476654053, -2.861022494471399e-06, -0.006763458251953125, -0.000152587890625, -0.00281524658203125, -0.0002498626708984375, -0.0004419088363647461, -6.556507287314162e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.000102996826171875, -0.0004380940808914602, -1.2636180144909304e-05, -0.0001010894775390625, -2.288818359375e-05, -7.641315460205078e-05, -1.1563301086425781e-05, -0.0002803802490234375, -0.0008087158203125, -2.47955322265625e-05, -6.67572021484375e-05, -3.4332275390625e-05, -3.0517578125e-05, -4.38690185546875e-05, -3.814697265625e-06, -4.1961669921875e-05, -0.003631591796875, -0.0054190149530768394, -6.12716976320371e-05, -9.72747802734375e-05, -0.0017242431640625, -5.14984130859375e-05, -0.0016841888427734375, -1.1444091796875e-05, -0.00035190582275390625, -0.0018321806564927101, -0.00020419010252226144, -5.340576171875e-05, -0.0055866241455078125, -0.0002346038818359375, 0.0], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 120, 156], "score": -7.221490311453181, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -0.000988006591796875, -3.24249267578125e-05, -7.82012939453125e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.004337310791015625, -6.602488040924072, -2.491474151611328e-05, -0.0001621246337890625, -0.5309906005859375, -7.62939453125e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156], "score": -7.343852979624899, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "draw", "value": {"_type": "Template43"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -7.061968803405762, -0.0001068115234375, -2.288818359375e-05, -9.5367431640625e-06, -4.1961669921875e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.00018310546875, -0.00174713134765625, -0.0058063240721821785, -2.8013790142722428e-05, -0.000110626220703125, -0.0024929046630859375, -2.09808349609375e-05, -0.000896453857421875, -1.1444091796875e-05, -0.0006875991821289062, -0.0013794078258797526, -0.00013088533887639642, -3.4332275390625e-05, -0.0072879791259765625, -0.000148773193359375, -0.014101028442382812, -3.0517578125e-05, -2.09808349609375e-05, -0.13319969177246094, -5.7220458984375e-06, 0.0, -0.022977828979492188, -0.008101609535515308, -6.31808916295995e-06, -7.62939453125e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n        player.draw()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 82, 189, 304, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 79, 171, 25, 194, "Choice", "<EOS>", 304, 93, 213, "Holy", "<UNK>", "<EOS>", 79, 171, 25, 194, "Heal", "<EOS>", 302, 116, 119, 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 113, 156], "score": -18.03574846217316, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template52"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"args": [{"_type": "Template16", "hole0": "Holy<UNK>"}, {"args": [{"_type": "Template46"}], "_type": "Call", "func": {"_type": "Name", "id": "Heal"}}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Name", "id": "Choice"}}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}]}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolyLight"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -0.000988006591796875, -3.24249267578125e-05, -7.82012939453125e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.004337310791015625, -0.00556218484416604, -6.460934673668817e-05, -9.72747802734375e-05, -6.464667320251465, -0.0007476806640625, -0.12926197052001953, -0.2613353729248047, -0.010783195495605469, -0.050472259521484375, -0.00040435791015625, -0.009846687316894531, -0.01224117074161768, -0.0009004288585856557, -0.0001697540283203125, -0.02433300018310547, -0.5584249496459961, -0.1498241424560547, -0.0027360916137695312, 0.0, -0.6127893924713135, -0.0011255734134465456, -0.4225339889526367, -0.2001934051513672, -1.9073486328125e-06, -0.38883334398269653, -0.90625, -0.0006765424041077495, -1.9037237167358398, -0.13663864135742188, -0.22939586639404297, -6.67572021484375e-05, -0.09570503234863281, -7.82008864916861e-05, -0.0001678466796875, -1.5949630737304688, -1.1374459266662598, -0.8535518646240234, -0.3347959518432617, -0.00030040740966796875, -7.62939453125e-06, -0.4317241907119751, -0.0002084969455609098, -4.38690185546875e-05, -0.06274700164794922, -1.9073486328125e-06, -0.000732421875, -0.12025058269500732, -2.1457672119140625e-06, -0.8311014175415039, -1.9073486328125e-06], "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal([player.effective_heal_power(6), Choice(Holy<UNK>(\n            ), Heal(5), False), len(player.minions)], self)\n"}, {"choice_history": [139, 193, 314], "score": -25.76595687866211, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -7.62939453125e-06, -25.76593780517578], "inferred_code": ""}], "index": 49}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -1.2627436285799263, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.6463260650634766, -3.814697265625e-06, -1.52587890625e-05, -0.016483306884765625, -1.9073486328125e-06, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.02137470245361328, -0.03455786779522896, -7.2834751335904e-05, -0.037901878356933594, 0.0, -1.1444091796875e-05, -0.000873565673828125, -1.9073486328125e-05, -0.0006501558236777782, -6.79492904964718e-06, -8.7738037109375e-05, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -1.4687103035650466, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.7559642791748047, -0.0002231597900390625, -0.00124359130859375, -0.009298324584960938, -1.9073486328125e-06, -0.0023412704467773438, -0.00440251687541604, -3.814697265625e-06, -5.340576171875e-05, -8.392333984375e-05, 0.0, -1.52587890625e-05, -0.0050678253173828125, -1.71661376953125e-05, -1.1444091796875e-05, -0.006762504577636719, -0.1190258264541626, -2.384185791015625e-06, -0.0067596435546875, -0.000164031982421875, -7.62939453125e-06, -0.002864837646484375, -5.7220458984375e-06, -0.008341789245605469, -0.0019434690475463867, -2.682209014892578e-05, -2.09808349609375e-05, -0.0395965576171875, -0.0002231597900390625, -3.814697265625e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 103, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -2.835675544454432, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -1.8777589797973633, -0.0001773834228515625, -1.33514404296875e-05, -9.5367431640625e-06, -0.00015926361083984375, -1.1682510375976562e-05, -3.24249267578125e-05, -0.012543678283691406, -0.0007114410400390625, -0.00513458251953125, -6.67572021484375e-05, -0.0008182525634765625, -0.0001010894775390625, -0.001102447509765625, -0.000339508056640625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0032644271850585938, -9.655952453613281e-06, -0.0055266618728637695, -7.62939453125e-06, -0.000946044921875, -0.000370025634765625, -2.86102294921875e-05, -8.20159912109375e-05, -7.569725858047605e-05, -5.829333167639561e-05, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.1444091796875e-05, -6.866455078125e-05, -1.1444091796875e-05, -0.0027923583984375, -0.2263098955154419, -3.576278118089249e-07, -9.72747802734375e-05, -0.004322052001953125, -1.33514404296875e-05, -0.0010227705352008343, -4.5299530029296875e-06, -5.340576171875e-05, -0.5729284286499023, -3.814697265625e-06, -1.52587890625e-05, -0.015748977661132812, -1.9073486328125e-06, -5.14984130859375e-05, -7.43865966796875e-05, 0.0, -0.021592140197753906, -0.035636864602565765, -7.259634730871767e-05, -0.03769028186798096, 0.0, -1.1444091796875e-05, -0.000885009765625, -1.9073486328125e-05, -0.000650988076813519, -6.79492904964718e-06, -8.58306884765625e-05, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -2.8471521399001176, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -1.6545038223266602, -1.1920922133867862e-06, -0.0010776519775390625, -0.000194549560546875, -3.814697265625e-06, -0.0026912689208984375, -3.814697265625e-06, -0.007905960083007812, -0.001210927963256836, -3.445148468017578e-05, -1.9073486328125e-05, -0.020400047302246094, -0.0003204345703125, -0.07850170135498047, -0.000118255615234375, -0.0007152557373046875, -0.616999626159668, -1.9073486328125e-06, -0.0039052963256835938, -0.007373075000941753, -4.0531158447265625e-06, -3.814697265625e-05, -5.340576171875e-05, 0.0, -2.47955322265625e-05, -0.0001811981201171875, -3.0517578125e-05, -1.33514404296875e-05, -0.011340141296386719, -0.10339987277984619, -4.5299530029296875e-06, -0.0061893463134765625, -0.00018310546875, -7.62939453125e-06, -0.0041065216064453125, -5.7220458984375e-06, -0.008722305297851562, -0.0015720129013061523, -3.063678741455078e-05, -1.9073486328125e-05, -0.04084014892578125, -0.00020599365234375, -3.814697265625e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 103, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -3.2037575235737563, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -1.8777589797973633, -0.0001773834228515625, -1.33514404296875e-05, -9.5367431640625e-06, -0.00015926361083984375, -1.1682510375976562e-05, -3.24249267578125e-05, -0.012543678283691406, -0.0007114410400390625, -0.00513458251953125, -6.67572021484375e-05, -0.0008182525634765625, -0.0001010894775390625, -0.001102447509765625, -0.000339508056640625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0032644271850585938, -9.655952453613281e-06, -0.0055266618728637695, -7.62939453125e-06, -0.000946044921875, -0.000370025634765625, -2.86102294921875e-05, -8.20159912109375e-05, -7.569725858047605e-05, -5.829333167639561e-05, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.1444091796875e-05, -6.866455078125e-05, -1.1444091796875e-05, -0.0027923583984375, -0.2263098955154419, -3.576278118089249e-07, -9.72747802734375e-05, -0.004322052001953125, -1.33514404296875e-05, -0.0010227705352008343, -4.5299530029296875e-06, -5.340576171875e-05, -0.8441257476806641, -0.0002117156982421875, -0.001224517822265625, -0.009967803955078125, -1.9073486328125e-06, -0.0023441314697265625, -0.00428652623668313, -3.814697265625e-06, -5.14984130859375e-05, -8.7738037109375e-05, 0.0, -1.33514404296875e-05, -0.0048046112060546875, -1.9073486328125e-05, -1.1444091796875e-05, -0.0065631866455078125, -0.12001574039459229, -2.384185791015625e-06, -0.00675201416015625, -0.0001621246337890625, -7.62939453125e-06, -0.0028514862060546875, -5.7220458984375e-06, -0.008337974548339844, -0.0019434690475463867, -2.682209014892578e-05, -2.09808349609375e-05, -0.03948688507080078, -0.0002231597900390625, -3.814697265625e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -3.777377988935932, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.7559642791748047, -0.0002231597900390625, -0.00124359130859375, -0.009298324584960938, -1.9073486328125e-06, -0.0023412704467773438, -0.00440251687541604, -3.814697265625e-06, -5.340576171875e-05, -8.392333984375e-05, 0.0, -1.52587890625e-05, -0.0050678253173828125, -1.71661376953125e-05, -1.1444091796875e-05, -0.006762504577636719, -2.479194164276123, -1.1920928244535389e-07, -0.0001010894775390625, -0.0060405731201171875, -9.5367431640625e-06, -0.0021903770975768566, -4.0531158447265625e-06, -0.00011444091796875, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 103, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -4.4791102670274086, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -1.8777589797973633, -0.0001773834228515625, -1.33514404296875e-05, -9.5367431640625e-06, -0.00015926361083984375, -1.1682510375976562e-05, -3.24249267578125e-05, -0.012543678283691406, -0.0007114410400390625, -0.00513458251953125, -6.67572021484375e-05, -0.0008182525634765625, -0.0001010894775390625, -0.001102447509765625, -0.000339508056640625, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -0.0032644271850585938, -9.655952453613281e-06, -0.0055266618728637695, -7.62939453125e-06, -0.000946044921875, -0.000370025634765625, -2.86102294921875e-05, -8.20159912109375e-05, -7.569725858047605e-05, -5.829333167639561e-05, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.1444091796875e-05, -6.866455078125e-05, -1.1444091796875e-05, -0.0027923583984375, -1.6471806764602661, -1.1920922133867862e-06, -0.0010623931884765625, -0.00019073486328125, -3.814697265625e-06, -0.0027008056640625, -3.814697265625e-06, -0.007890701293945312, -0.0012128353118896484, -3.445148468017578e-05, -1.9073486328125e-05, -0.02046680450439453, -0.000316619873046875, -0.0820302963256836, -0.000110626220703125, -0.000698089599609375, -0.6094064712524414, -1.9073486328125e-06, -0.0038824081420898438, -0.00726268719881773, -4.0531158447265625e-06, -3.814697265625e-05, -5.340576171875e-05, 0.0, -2.6702880859375e-05, -0.0001964569091796875, -2.86102294921875e-05, -1.33514404296875e-05, -0.011156082153320312, -0.1028362512588501, -4.5299530029296875e-06, -0.0062274932861328125, -0.00018310546875, -7.62939453125e-06, -0.004070281982421875, -5.7220458984375e-06, -0.008731842041015625, -0.0015777349472045898, -3.063678741455078e-05, -1.9073486328125e-05, -0.040836334228515625, -0.00020599365234375, -3.814697265625e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.DRUID, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "Health", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.66015334802313, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "Health", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.6463260650634766, -3.814697265625e-06, -1.52587890625e-05, -0.016483306884765625, -1.9073486328125e-06, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.02137470245361328, -3.4109299182891846, -2.110004425048828e-05, -0.058580752462148666, 0.0, -1.71661376953125e-05, -0.0012722015380859375, -1.9073486328125e-05, -0.0006558506283909082, -7.271765298355604e-06, -8.7738037109375e-05, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.Health.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -4.688669014136558, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.6463260650634766, -3.814697265625e-06, -1.52587890625e-05, -0.016483306884765625, -1.9073486328125e-06, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.02137470245361328, -0.03455786779522896, -7.2834751335904e-05, -3.377394676208496, -1.1920928244535389e-07, -0.000461578369140625, -0.0008068084716796875, -8.96453857421875e-05, -0.003658294677734375, -5.7220458984375e-06, -0.0048732757568359375, -0.0018022059230133891, -3.445148468017578e-05, -2.288818359375e-05, -0.07611465454101562, -0.000209808349609375, -1.9073486328125e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.690553660213197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -3.404623031616211, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0006122589111328125, -5.53131103515625e-05, -0.13060212135314941, -7.62939453125e-06, -0.0959615707397461, -5.7220458984375e-06, 0.0, -2.491474151611328e-05, -3.814697265625e-06, -3.0517578125e-05, -0.031617164611816406, -0.0006847381591796875, -0.00098419189453125, -8.7738037109375e-05, -0.000423431396484375, -8.392333984375e-05, -0.0052738189697265625, -0.00046539306640625, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.0025110244750976562, -5.7220458984375e-06, -0.006078839302062988, -7.62939453125e-06, -0.0010814666748046875, -0.0003147125244140625, -2.288818359375e-05, -8.96453857421875e-05, -7.569719309685752e-05, -4.2557705455692485e-05, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -6.866455078125e-05, -1.1444091796875e-05, -0.00249481201171875, -0.230521559715271, -3.576278118089249e-07, -0.0001010894775390625, -0.0046100616455078125, -1.33514404296875e-05, -0.0010221704142168164, -4.5299530029296875e-06, -5.340576171875e-05, -0.6451711654663086, -3.814697265625e-06, -1.71661376953125e-05, -0.014390945434570312, 0.0, -5.91278076171875e-05, -7.43865966796875e-05, 0.0, -0.027092933654785156, -0.03140344098210335, -7.24771452951245e-05, -0.04366326332092285, 0.0, -1.1444091796875e-05, -0.0009288787841796875, -1.9073486328125e-05, -0.000656348536722362, -6.79492904964718e-06, -8.96453857421875e-05, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 115, 113, 156], "score": -4.719574332495711, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template44"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.7559642791748047, -0.0002231597900390625, -0.00124359130859375, -0.009298324584960938, -1.9073486328125e-06, -0.0023412704467773438, -0.00440251687541604, -3.814697265625e-06, -5.340576171875e-05, -8.392333984375e-05, 0.0, -1.52587890625e-05, -0.0050678253173828125, -1.71661376953125e-05, -1.1444091796875e-05, -0.006762504577636719, -0.1190258264541626, -2.384185791015625e-06, -0.0067596435546875, -0.000164031982421875, -7.62939453125e-06, -0.002864837646484375, -5.7220458984375e-06, -0.008341789245605469, -0.0019434690475463867, -2.682209014892578e-05, -2.09808349609375e-05, -3.2906436920166016, -4.1961669921875e-05, -1.9073486328125e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(4), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 149, 177, 52, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.76921969735281, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -1.6545038223266602, -1.1920922133867862e-06, -0.0010776519775390625, -0.000194549560546875, -3.814697265625e-06, -0.0026912689208984375, -3.814697265625e-06, -0.007905960083007812, -0.001210927963256836, -3.445148468017578e-05, -1.9073486328125e-05, -0.020400047302246094, -0.0003204345703125, -0.07850170135498047, -0.000118255615234375, -0.0007152557373046875, -0.8183383941650391, -0.0005645751953125, -8.392333984375e-05, 0.0, -0.009661674499511719, -1.9073486328125e-06, -0.3506050109863281, -1.9073486328125e-06, -0.731063723564148, -1.9073486328125e-06, -0.000469207763671875, -0.5706205368041992, 0.0, -0.0588226318359375, -0.010875715874135494, -0.00013720488641411066, -2.47955322265625e-05, -0.000209808349609375, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.042458534240722656, -0.12368190288543701, -1.1920922133867862e-06, -0.0001506805419921875, -0.008428573608398438, -1.52587890625e-05, -0.000980502343736589, -7.867804924899247e-06, -4.57763671875e-05, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in game.random_choice(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.775729445986428, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -1.6545038223266602, -1.1920922133867862e-06, -0.0010776519775390625, -0.000194549560546875, -3.814697265625e-06, -0.0026912689208984375, -3.814697265625e-06, -0.007905960083007812, -0.001210927963256836, -3.445148468017578e-05, -1.9073486328125e-05, -0.020400047302246094, -0.0003204345703125, -0.07850170135498047, -0.000118255615234375, -0.0007152557373046875, -0.8183383941650391, -0.0005645751953125, -8.392333984375e-05, 0.0, -0.009661674499511719, -1.9073486328125e-06, -1.7629828453063965, -3.814697265625e-06, -0.04192626476287842, -5.7220458984375e-06, -9.34600830078125e-05, -0.0001373291015625, -3.814697265625e-06, -0.000606536865234375, -0.000499721965752542, -4.208051905152388e-05, -3.4332275390625e-05, -7.82012939453125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -7.05718994140625e-05, -3.814697265625e-06, -0.021190643310546875, -0.06810712814331055, -5.960462772236497e-07, -0.000118255615234375, -0.00809478759765625, -1.52587890625e-05, -0.0010977847268804908, -5.245207830739673e-06, -4.57763671875e-05, 0.0], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.heal(player.effective_heal_power(2), self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156], "score": -4.889534825990438, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"args": [{"_type": "Template36"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}}], "name": "use"}], "name": "HolyNova"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -3.404623031616211, -1.9073486328125e-06, -5.14984130859375e-05, -3.814697265625e-06, -0.0006122589111328125, -5.53131103515625e-05, -0.13060212135314941, -7.62939453125e-06, -0.0959615707397461, -5.7220458984375e-06, 0.0, -2.491474151611328e-05, -3.814697265625e-06, -3.0517578125e-05, -0.031617164611816406, -0.0006847381591796875, -0.00098419189453125, -8.7738037109375e-05, -0.000423431396484375, -8.392333984375e-05, -0.0052738189697265625, -0.00046539306640625, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -0.0025110244750976562, -5.7220458984375e-06, -0.006078839302062988, -7.62939453125e-06, -0.0010814666748046875, -0.0003147125244140625, -2.288818359375e-05, -8.96453857421875e-05, -7.569719309685752e-05, -4.2557705455692485e-05, -1.52587890625e-05, -1.33514404296875e-05, 0.0, -4.57763671875e-05, -9.5367431640625e-06, -6.866455078125e-05, -1.1444091796875e-05, -0.00249481201171875, -0.230521559715271, -3.576278118089249e-07, -0.0001010894775390625, -0.0046100616455078125, -1.33514404296875e-05, -0.0010221704142168164, -4.5299530029296875e-06, -5.340576171875e-05, -0.7560062408447266, -0.00028228759765625, -0.0009708404541015625, -0.008966445922851562, -1.9073486328125e-06, -0.0022745132446289062, -0.004245995078235865, -3.814697265625e-06, -5.14984130859375e-05, -8.58306884765625e-05, 0.0, -1.52587890625e-05, -0.0032939910888671875, -1.9073486328125e-05, -1.1444091796875e-05, -0.0067272186279296875, -0.1193920373916626, -2.384185791015625e-06, -0.0070171356201171875, -0.0001621246337890625, -7.62939453125e-06, -0.00286102294921875, -5.7220458984375e-06, -0.008127212524414062, -0.0019434690475463867, -2.682209014892578e-05, -2.09808349609375e-05, -0.039890289306640625, -0.000225067138671875, -3.814697265625e-06], "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n"}, {"choice_history": [139, 193, 314], "score": -24.984973907470703, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.09808349609375e-05, 0.0, -24.984952926635742], "inferred_code": ""}], "index": 50}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -0.037726299964077725, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0022258758544921875, -0.00038552284240722656, 0.0, -1.52587890625e-05, -0.0009918212890625, -4.9591064453125e-05, -0.0015345867723226547, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -4.115972172857681, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -4.102928161621094, -0.000396728515625, -0.0003643035888671875, -0.0003414154052734375, -2.47955322265625e-05, -0.0003222227096557617, -4.291534423828125e-06, -4.38690185546875e-05, -1.1444091796875e-05, -9.1552734375e-05, -0.00026345252990722656, -9.5367431640625e-06, -0.000202178955078125, -1.52587890625e-05, -0.0001659393310546875, -3.266334533691406e-05, -0.000522613525390625, -0.0004749298095703125, -7.62939453125e-06, -0.000431060791015625, -0.00061798095703125, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.002288818359375, -0.00039124488830566406, 0.0, -1.52587890625e-05, -0.0009822845458984375, -4.9591064453125e-05, -0.0015330316964536905, -3.814697265625e-06, -8.58306884765625e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -5.984001653774129, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -5.96994686126709, -0.0008392333984375, -0.00064849853515625, -0.0001964569091796875, -1.9073486328125e-05, -0.0008302927017211914, -2.2649765014648438e-06, -7.2479248046875e-05, -2.288818359375e-05, -8.20159912109375e-05, -0.0002537965774536133, -7.62939453125e-06, -0.000213623046875, -1.33514404296875e-05, -0.00017750263214111328, -3.266334533691406e-05, -0.00055694580078125, -0.0004558563232421875, -7.62939453125e-06, -0.0004253387451171875, -0.0005664825439453125, 0.0, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0022220611572265625, -0.00039315223693847656, 0.0, -1.52587890625e-05, -0.0009765625, -4.9591064453125e-05, -0.0015323221450671554, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -6.047717708784575, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -6.003870964050293, -5.7220458984375e-06, -1.71661376953125e-05, -3.0517578125e-05, -0.00010311603546142578, -1.5854835510253906e-05, -0.029157400131225586, -5.841255187988281e-06, -3.62396240234375e-05, -0.0011310577392578125, -0.0007534027099609375, -7.2479248046875e-05, -0.001000046730041504, -7.748603820800781e-06, -2.86102294921875e-05, -1.9073486328125e-06, -6.103515625e-05, -0.00028228759765625, -7.62939453125e-06, -0.0002498626708984375, -1.33514404296875e-05, -0.0001583099365234375, -3.4332275390625e-05, -0.0007076263427734375, -0.0001506805419921875, -1.9073486328125e-06, -0.0003604888916015625, -0.0012607574462890625, -3.814697265625e-06, -1.33514404296875e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0017910003662109375, -0.00032830238342285156, 0.0, -1.52587890625e-05, -0.00091552734375, -8.58306884765625e-05, -0.0016193459741771221, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156], "score": -6.754171621181257, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0022258758544921875, -0.00038552284240722656, 0.0, -1.52587890625e-05, -0.0009918212890625, -4.9591064453125e-05, -6.7179036140441895, -1.9073486328125e-05, -0.0001468658447265625, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "<UNK>", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.0515269009151496, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Holy<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -7.014763832092285, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0022258758544921875, -0.00038552284240722656, 0.0, -1.52587890625e-05, -0.0009918212890625, -4.9591064453125e-05, -0.0015345867723226547, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06], "inferred_code": "class Holy<UNK>(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.1718931060854345, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template64"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -7.136319160461426, -0.0002460479736328125, 0.0, -1.1444091796875e-05, -0.0010318756103515625, -9.1552734375e-05, -0.0016865479992702603, -3.814697265625e-06, -6.67572021484375e-05, -5.7220458984375e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 114, 113, 156], "score": -7.335801851131208, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0022258758544921875, -0.00038552284240722656, 0.0, -1.52587890625e-05, -7.296451568603516, -0.0042877197265625, -5.7220458984375e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player, self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 138, 291, "overload", "<EOS>", 38, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.365715352506832, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}, {"_type": "keyword", "arg": "overload", "value": {"_type": "Template36"}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -6.632199287414551, -0.09090137481689453, -7.62939453125e-05, -0.0001747608184814453, -1.1563301086425781e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.0001239776611328125, -0.0002881288528442383, -7.62939453125e-06, -0.027063369750976562, -1.33514404296875e-05, -0.5262659788131714, -2.0265579223632812e-06, -0.046718597412109375, -0.0002841949462890625, -6.103515625e-05, -1.740455445542466e-05, -2.0265579223632812e-06, -0.0003414154052734375, -0.001056671142578125, -1.9073486328125e-05, -0.004543304443359375, -4.9591064453125e-05, -1.9073486328125e-06, -3.0517578125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.005573272705078125, -0.00028443336486816406, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0010128021240234375, -5.14984130859375e-05, -0.0016251369379460812, -3.814697265625e-06, -0.0001049041748046875, -5.7220458984375e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.5625802359240595, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -7.541684150695801, -0.0004329681396484375, -0.008106231689453125, -0.000377655029296875, -1.71661376953125e-05, -0.0003534555435180664, -2.2649765014648438e-06, -6.4849853515625e-05, -1.52587890625e-05, -8.58306884765625e-05, -0.00026535987854003906, -9.5367431640625e-06, -0.0002231597900390625, -1.33514404296875e-05, -0.0001735687255859375, -3.457069396972656e-05, -0.000579833984375, -0.000415802001953125, -7.62939453125e-06, -0.0004119873046875, -0.0006427764892578125, -1.9073486328125e-06, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0022449493408203125, -0.00038933753967285156, 0.0, -1.52587890625e-05, -0.0009860992431640625, -4.9591064453125e-05, -0.0015338626690208912, -3.814697265625e-06, -8.7738037109375e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 33, "damage", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.574222118487739, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.617932319641113, 0.0, -0.07583427429199219, -0.7241460084915161, -2.3841855067985307e-07, -0.11729395389556885, 0.0, -1.52587890625e-05, -0.0047588348388671875, -0.0001049041748046875, -0.0015917017590254545, -3.814697265625e-06, -0.0001049041748046875, -5.7220458984375e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 101, 94, 119, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -7.883076187062635, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template26"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -6.783809661865234, -0.000926971435546875, -1.33514404296875e-05, -0.00010585224663373083, -3.838539123535156e-05, -0.00010132715397048742, -0.0003873109817504883, -0.0003452301025390625, -1.0332870483398438, -0.007595062255859375, -0.0057735443115234375, 0.0, -0.0385894775390625, -3.24249267578125e-05, -0.0009216070175170898, -7.748603820800781e-06, -2.6702880859375e-05, -5.7220458984375e-06, -0.0001068115234375, -0.0021611452102661133, -7.62939453125e-06, -0.000110626220703125, -3.814697265625e-06, -5.340576171875e-05, -7.62939453125e-06, -0.0002155303955078125, -0.000423431396484375, -3.814697265625e-06, -0.0002613067626953125, -0.000232696533203125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.0029392242431640625, -0.00033032894134521484, -1.1920928244535389e-07, -1.52587890625e-05, -0.000843048095703125, -3.62396240234375e-05, -0.00159154599532485, -3.814697265625e-06, -8.0108642578125e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 102, 94, 119, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -8.18516434491854, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -6.783809661865234, -0.000926971435546875, -1.33514404296875e-05, -0.00010585224663373083, -3.838539123535156e-05, -0.00010132715397048742, -0.0003873109817504883, -0.0003452301025390625, -1.3514938354492188, -0.00452423095703125, -0.008083343505859375, -1.9073486328125e-06, -0.020687103271484375, -2.86102294921875e-05, -0.0033524036407470703, -7.748603820800781e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0001430511474609375, -0.0020581483840942383, -7.62939453125e-06, -0.0001163482666015625, -3.814697265625e-06, -5.91278076171875e-05, -7.62939453125e-06, -0.0002384185791015625, -0.00040435791015625, -1.9073486328125e-06, -0.000274658203125, -0.0002155303955078125, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.00312042236328125, -0.00033605098724365234, -1.1920928244535389e-07, -1.52587890625e-05, -0.000827789306640625, -3.62396240234375e-05, -0.001585363526828587, -3.814697265625e-06, -8.0108642578125e-05, -3.814697265625e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156], "score": -8.62745320460268, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "HolySmite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -7.749642372131348, -0.0005435943603515625, -5.53131103515625e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000759124755859375, -0.00030791759490966797, -1.1920928244535389e-07, -1.1444091796875e-05, -0.00140380859375, -3.4332275390625e-05, -0.0015416177920997143, -1.9073486328125e-06, -0.0001049041748046875, -0.00118255615234375, 0.0, -4.38690185546875e-05, -0.001033782958984375, 0.0, -1.9073486328125e-06, -0.5683097839355469, 0.0, -0.2285451889038086, -0.003299485659226775, -5.364416665543104e-06, -0.031388163566589355, 0.0, -3.0517578125e-05, -0.006145477294921875, -3.24249267578125e-05, -0.0019942233338952065, -5.7220458984375e-06, -0.00017547607421875, -7.62939453125e-06], "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n"}, {"choice_history": [139, 193, 314], "score": -25.17951202392578, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -25.17951011657715], "inferred_code": ""}], "index": 51}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -0.5533990909906876, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -0.020215988159179688, -7.62939453125e-06, -0.0047622486017644405, -7.593357440782711e-05, -0.0035343170166015625, -0.00058746337890625, -0.002346038818359375, -0.011371612548828125, -1.71661376953125e-05, -0.0268096923828125, -3.814697265625e-06, -0.0008449554443359375, -1.71661376953125e-05, -0.0025043487548828125, -2.09808349609375e-05, -0.00079345703125, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -0.12959682941436768, -1.1563301086425781e-05, -0.0020542144775390625, -6.866455078125e-05, -1.9073486328125e-06, -0.0075626373291015625, -2.0265579223632812e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.0004678964614868164, -0.00030541419982910156, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -7.748594725853764e-06, -3.576278118089249e-07, -6.914138793945312e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -2.678223614918231, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -0.020215988159179688, -7.62939453125e-06, -0.0047622486017644405, -7.593357440782711e-05, -0.0035343170166015625, -0.00058746337890625, -0.002346038818359375, -0.011371612548828125, -1.71661376953125e-05, -0.0268096923828125, -3.814697265625e-06, -0.0008449554443359375, -1.71661376953125e-05, -0.0025043487548828125, -2.09808349609375e-05, -0.00079345703125, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -2.242361068725586, 0.0, -0.0025997161865234375, -0.000270843505859375, -1.9073486328125e-06, -0.018772125244140625, 0.0, -0.0004863739013671875, -3.814697265625e-06, -0.0005257129669189453, -0.00025212764739990234, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-05, -7.390968676190823e-06, -4.768370445162873e-07, -8.046627044677734e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.MURLOC),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -2.852244005974107, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -1.9464082717895508, -2.09808349609375e-05, -0.004860217217355967, -5.5788495956221595e-05, -0.015043258666992188, -0.6002798080444336, -0.000247955322265625, -0.010456085205078125, -0.0024566650390625, -2.09808349609375e-05, -0.01706218719482422, -3.814697265625e-06, -0.0012798309326171875, -1.1444091796875e-05, -0.002025604248046875, -1.71661376953125e-05, -0.0006084442138671875, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -0.10736000537872314, -9.655952453613281e-06, -0.0038013458251953125, -6.103515625e-05, -1.9073486328125e-06, -0.012804985046386719, -2.0265579223632812e-06, -0.000293731689453125, -1.9073486328125e-06, -0.0004811286926269531, -0.00032639503479003906, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -7.390968676190823e-06, -3.576278118089249e-07, -6.723403930664062e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -3.9061802681925997, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -2.9368953704833984, -4.1961669921875e-05, -3.814697265625e-06, -0.004070639610290527, 0.0, -5.340576171875e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0005626678466796875, -0.0005283355712890625, -3.814697265625e-06, -0.000751495361328125, -0.0001430511474609375, -0.121795654296875, -3.814697265625e-05, -0.19196701049804688, -0.0131072998046875, -4.9591064453125e-05, -8.96453857421875e-05, -0.0004138946533203125, -0.23273468017578125, -9.918212890625e-05, -0.0017669200897216797, -1.9073486328125e-05, -0.00029754638671875, -1.52587890625e-05, -4.00543212890625e-05, -0.000392913818359375, -0.18306922912597656, -0.0010776519775390625, -0.0005151017685420811, -1.71661376953125e-05, -0.0059528350830078125, -4.9591064453125e-05, -0.0002994537353515625, -3.4332275390625e-05, -0.011444091796875, -5.7220458984375e-06, -0.0022789996583014727, -6.556308653671294e-05, -0.003353118896484375, -0.0004367828369140625, -0.002986907958984375, -0.010268211364746094, -1.1444091796875e-05, -0.025490760803222656, -3.814697265625e-06, -0.0008678436279296875, -1.33514404296875e-05, -0.0020313262939453125, -1.52587890625e-05, -0.00067901611328125, -1.9073486328125e-06, -3.0517578125e-05, -2.288818359375e-05, -0.12255203723907471, -1.1563301086425781e-05, -0.001674652099609375, -5.53131103515625e-05, -1.9073486328125e-06, -0.007152557373046875, -2.0265579223632812e-06, -0.0003871917724609375, -1.9073486328125e-06, -0.0004680156707763672, -0.00030159950256347656, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -7.5101779657416046e-06, -3.576278118089249e-07, -6.914138793945312e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(ChangeHealth(2\n            )), Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(\n            IsType(MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -4.568526193604093, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -3.1319074630737305, -0.0011081695556640625, -0.0009220836800523102, -1.71661376953125e-05, -0.001117706298828125, -2.09808349609375e-05, -3.62396240234375e-05, -0.0002193450927734375, -0.27447032928466797, -0.0010509490966796875, -0.00043046296923421323, -1.33514404296875e-05, -0.007427215576171875, -5.7220458984375e-05, -0.0001811981201171875, -3.62396240234375e-05, -0.012983322143554688, -5.7220458984375e-06, -0.005256888456642628, -8.05823874543421e-05, -0.12497138977050781, -0.1526947021484375, -0.032464027404785156, -1.33514404296875e-05, -0.5391950607299805, -3.814697265625e-06, -0.000152587890625, -2.47955322265625e-05, -0.007049560546875, -1.71661376953125e-05, -0.0007610321044921875, 0.0, -2.47955322265625e-05, -1.1444091796875e-05, -0.13313782215118408, -1.1563301086425781e-05, -0.0014095306396484375, -5.14984130859375e-05, -1.9073486328125e-06, -0.011911392211914062, -2.0265579223632812e-06, -0.000354766845703125, -1.9073486328125e-06, -0.0004373788833618164, -0.00028634071350097656, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.390968676190823e-06, -3.576278118089249e-07, -6.914138793945312e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(IsType(\n            MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 85, 195, "Null", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -4.602207427216676, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -0.020215988159179688, -7.62939453125e-06, -0.0047622486017644405, -7.593357440782711e-05, -0.0035343170166015625, -0.00058746337890625, -0.002346038818359375, -0.011371612548828125, -1.71661376953125e-05, -4.208907127380371, -6.866455078125e-05, -0.0024796724319458008, 0.0, -2.86102294921875e-05, -0.00054168701171875, -1.9073486328125e-06, -0.00055694580078125, -5.7220458984375e-06, -0.0053195953369140625, -3.814697265625e-06, -0.0022263526916503906, -9.930133819580078e-05, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-05, -1.1920888027816545e-05, -5.960462772236497e-07, -0.0001302957534790039, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 79, 172, 49, 302, 85, 195, "Null", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -4.791759297328831, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -3.1319074630737305, -0.0011081695556640625, -0.0009220836800523102, -1.71661376953125e-05, -0.001117706298828125, -2.09808349609375e-05, -3.62396240234375e-05, -0.0002193450927734375, -0.27447032928466797, -0.0010509490966796875, -0.00043046296923421323, -1.33514404296875e-05, -0.007427215576171875, -5.7220458984375e-05, -0.0001811981201171875, -3.62396240234375e-05, -0.012983322143554688, -5.7220458984375e-06, -0.005256888456642628, -8.05823874543421e-05, -0.12497138977050781, -0.1526947021484375, -0.032464027404785156, -1.33514404296875e-05, -0.905461311340332, -0.0003490447998046875, -0.005176663398742676, 0.0, -1.9073486328125e-05, -0.00012969970703125, -1.9073486328125e-06, -0.001781463623046875, -3.814697265625e-06, -0.004428863525390625, -1.9073486328125e-06, -0.0005630254745483398, -9.167194366455078e-05, -1.1444091796875e-05, -1.71661376953125e-05, -1.71661376953125e-05, -1.1324847946525551e-05, -5.960462772236497e-07, -0.0001283884048461914, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(ChangeAttack(2)), Buff(Taunt())]), MinionSelector(Null,\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.0504672082856175, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -3.1319074630737305, -0.0011081695556640625, -0.0009220836800523102, -1.71661376953125e-05, -0.001117706298828125, -2.09808349609375e-05, -3.62396240234375e-05, -0.0002193450927734375, -1.6238679885864258, -2.47955322265625e-05, -0.004427934065461159, -6.38942583464086e-05, -0.01847076416015625, -0.0005474090576171875, -0.0028400421142578125, -0.008014678955078125, -1.9073486328125e-05, -0.0072174072265625, -3.814697265625e-06, -0.0015125274658203125, -9.5367431640625e-06, -0.00128936767578125, -1.71661376953125e-05, -0.00069427490234375, 0.0, -3.24249267578125e-05, -1.52587890625e-05, -0.10495483875274658, -1.1563301086425781e-05, -0.0026721954345703125, -7.82012939453125e-05, -1.9073486328125e-06, -0.010957717895507812, -2.0265579223632812e-06, -0.000362396240234375, -1.9073486328125e-06, -0.0004659891128540039, -0.00034737586975097656, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -7.271759841387393e-06, -3.576278118089249e-07, -6.914138793945312e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeHealth(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 79, 172, 49, 302, 85, 195, "Null", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.09988678289556, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"_type": "NameConstant", "value": "Null"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -1.9464082717895508, -2.09808349609375e-05, -0.004860217217355967, -5.5788495956221595e-05, -0.015043258666992188, -2.0007266998291016, -0.0019092559814453125, -8.20159912109375e-05, -4.00543212890625e-05, -0.032451629638671875, -6.67572021484375e-05, -0.002576515544205904, -0.00021955982083454728, -0.03636932373046875, -0.16929054260253906, -0.017286300659179688, -7.62939453125e-06, -0.7337522506713867, -0.0005550384521484375, -0.0016041994094848633, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, -0.0020160675048828125, -3.814697265625e-06, -0.0056705474853515625, -3.814697265625e-06, -0.0024149417877197266, -9.5367431640625e-05, -5.7220458984375e-06, -1.71661376953125e-05, -2.288818359375e-05, -1.6808437067084014e-05, -5.960462772236497e-07, -0.00013971328735351562, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt()), Buff(\n            Taunt())]), MinionSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.170988806085852, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -1.9464082717895508, -2.09808349609375e-05, -0.004860217217355967, -5.5788495956221595e-05, -0.015043258666992188, -2.0007266998291016, -0.0019092559814453125, -8.20159912109375e-05, -4.00543212890625e-05, -0.032451629638671875, -6.67572021484375e-05, -0.002576515544205904, -0.00021955982083454728, -0.03636932373046875, -0.16929054260253906, -0.017286300659179688, -7.62939453125e-06, -0.6797828674316406, -1.9073486328125e-06, -0.0002899169921875, -2.47955322265625e-05, -0.00634002685546875, -2.288818359375e-05, -0.0012693405151367188, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -0.11707985401153564, -1.1563301086425781e-05, -0.0011081695556640625, -4.00543212890625e-05, -1.9073486328125e-06, -0.010309219360351562, -2.0265579223632812e-06, -0.000339508056640625, -1.9073486328125e-06, -0.0004469156265258789, -0.00026917457580566406, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -7.5101779657416046e-06, -3.576278118089249e-07, -6.723403930664062e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt()), Buff(\n            Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.176258431252215, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -1.9464082717895508, -2.09808349609375e-05, -0.004860217217355967, -5.5788495956221595e-05, -0.015043258666992188, -0.6002798080444336, -0.000247955322265625, -0.010456085205078125, -0.0024566650390625, -2.09808349609375e-05, -0.01706218719482422, -3.814697265625e-06, -0.0012798309326171875, -1.1444091796875e-05, -0.002025604248046875, -1.71661376953125e-05, -0.0006084442138671875, 0.0, -3.0517578125e-05, -1.9073486328125e-05, -2.416293144226074, 0.0, -0.0046405792236328125, -0.0002384185791015625, -1.9073486328125e-06, -0.026801109313964844, 0.0, -0.00038909912109375, -3.814697265625e-06, -0.0005158185958862305, -0.00025963783264160156, -1.9073486328125e-06, -2.09808349609375e-05, -1.9073486328125e-05, -7.152550551836612e-06, -4.768370445162873e-07, -7.855892181396484e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(Taunt())]),\n            MinionSelector(IsType(MINION_TYPE.MURLOC), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.361792660154542, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -4.02828311920166, -0.003490447998046875, -0.00033152103424072266, -7.62939453125e-06, -0.05458641052246094, -1.33514404296875e-05, -9.1552734375e-05, -0.0007305145263671875, -0.0699911117553711, -1.33514404296875e-05, -0.002283977810293436, -6.997353921178728e-05, -0.029417037963867188, -0.32039451599121094, -0.013167381286621094, -1.52587890625e-05, -0.34616947174072266, -1.9073486328125e-06, -0.0001392364501953125, -2.6702880859375e-05, -0.00572967529296875, -1.71661376953125e-05, -0.0008306503295898438, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.12998688220977783, -1.1563301086425781e-05, -0.0012493133544921875, -4.57763671875e-05, -1.9073486328125e-06, -0.0146026611328125, -2.0265579223632812e-06, -0.0003376007080078125, -1.9073486328125e-06, -0.0004545450210571289, -0.00028634071350097656, -1.9073486328125e-06, -1.9073486328125e-05, -1.71661376953125e-05, -7.152551006583963e-06, -3.576278118089249e-07, -6.723403930664062e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(ChangeHealth(2)), Buff(Taunt())]), MinionSelector(IsType(\n            MINION_TYPE.BEAST), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.487834458574916, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -0.020215988159179688, -7.62939453125e-06, -0.0047622486017644405, -7.593357440782711e-05, -0.0035343170166015625, -0.00058746337890625, -0.002346038818359375, -0.011371612548828125, -1.71661376953125e-05, -5.014378547668457, -0.000213623046875, -0.016770362854003906, 0.0, -0.0018301010131835938, -3.814697265625e-06, -0.060515403747558594, -9.775161743164062e-06, -0.002521514892578125, -6.4849853515625e-05, 0.0, -0.008465766906738281, -2.0265579223632812e-06, -0.0003204345703125, -1.9073486328125e-06, -0.0004544258117675781, -0.0003796815872192383, -1.9073486328125e-06, -1.9073486328125e-05, -1.52587890625e-05, -9.536734069115482e-06, -3.576278118089249e-07, -7.665157318115234e-05, 0.0, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(MINION_TYPE.BEAST, picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156], "score": -5.782047872585267, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "List", "elts": [{"args": [{"_type": "Template14", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template12", "hole0": 2}], "_type": "Call", "func": {"_type": "Template66"}}, {"args": [{"_type": "Template16", "hole0": "Taunt"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}], "_type": "Call", "func": {"_type": "Template49"}}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "name": "Houndmaster"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -0.020215988159179688, -7.62939453125e-06, -0.0047622486017644405, -7.593357440782711e-05, -0.0035343170166015625, -0.00058746337890625, -0.002346038818359375, -0.011371612548828125, -1.71661376953125e-05, -0.0268096923828125, -3.814697265625e-06, -0.0008449554443359375, -1.71661376953125e-05, -0.0025043487548828125, -2.09808349609375e-05, -0.00079345703125, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -0.12959682941436768, -1.1563301086425781e-05, -0.0020542144775390625, -6.866455078125e-05, -1.9073486328125e-06, -5.203688621520996, 0.0, -0.00011444091796875, -1.9073486328125e-06, -0.03172290325164795, -0.00032448768615722656, -1.9073486328125e-06, -0.001262664794921875, -4.9591064453125e-05, -3.30209186358843e-05, -1.6569954823353328e-05, -0.00027883052825927734, -1.1920928244535389e-07, -1.9073486328125e-06], "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n"}, {"choice_history": [139, 193, 314], "score": -25.11498260498047, "model_output": {"_type": "Module", "body": []}, "score_history": [0.0, -1.9073486328125e-06, -25.114980697631836], "inferred_code": ""}], "index": 52}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -0.029776486089950538, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00389862060546875, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.38690185546875e-05, -0.006221771240234375, -0.0001087188720703125, -2.7656553356791846e-05, -2.3841830625315197e-06, -3.3855187211884186e-05, -1.1920928244535389e-07, -0.0021393296774476767, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -5.522528680729458, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -5.502707481384277, -0.001110076904296875, -0.000537872314453125, -7.62939453125e-06, -0.0029125213623046875, 0.0, -0.00012028217315673828, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.0010547637939453125, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -7.05718994140625e-05, -8.0108642578125e-05, -0.0013523101806640625, -6.67572021484375e-05, -3.135204315185547e-05, -2.264974000354414e-06, -3.397439286345616e-05, -1.1920928244535389e-07, -0.0022002458572387695, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.0831219272641235, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -5.982754707336426, 0.0, -7.62939453125e-06, -2.4914430468925275e-05, -4.410743713378906e-06, -0.0008296966552734375, -0.00829315185546875, 0.0, -1.9073486328125e-06, 0.0, -0.00040709972381591797, -2.3126602172851562e-05, -0.000957489013671875, -0.00011277197336312383, -0.000400543212890625, -6.103515625e-05, -8.0108642578125e-05, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.0619049072265625, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.960462772236497e-07, -9.5367431640625e-06, -2.6702880859375e-05, -0.009897232055664062, -4.57763671875e-05, -2.3841845177230425e-05, -1.311301275563892e-06, -3.898094655596651e-05, -1.1920928244535389e-07, -0.014933585189282894, -1.9073486328125e-06, -7.43865966796875e-05, -3.814697265625e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 307, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.210016754365107, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -6.078739166259766, -0.000392913818359375, -7.62939453125e-06, -0.00011002412065863609, -1.9073486328125e-06, -0.0031280517578125, -0.00231170654296875, 0.0, -3.814697265625e-06, 0.0, -0.002728700637817383, -1.1801719665527344e-05, -0.00036013126373291016, -2.503394352970645e-05, -4.57763671875e-05, -0.0009822845458984375, -0.08077526092529297, 0.0, 0.0, 0.0, -0.0013468265533447266, 0.0, -0.0037795305252075195, -1.9073486328125e-06, -0.000148773193359375, -0.0006275177001953125, 0.0, -0.013413429260253906, -1.9073486328125e-06, -0.008434295654296875, 0.0, 0.0, 0.0, -3.814697265625e-06, 0.0, -0.001312255859375, -9.655952453613281e-06, -6.67572021484375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -5.7220458984375e-05, -0.0067157745361328125, -0.0001316070556640625, -2.944469451904297e-05, -2.3841830625315197e-06, -3.397439286345616e-05, -1.1920928244535389e-07, -0.002194643020629883, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, MINION_TYPE.BEAST, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.348435791694094, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -6.32108736038208, 0.0, -0.0015430450439453125, -1.71661376953125e-05, -5.14984130859375e-05, -2.2649765014648438e-06, -1.1444091796875e-05, -4.38690185546875e-05, -0.0060291290283203125, -0.0001659393310546875, -2.5749204723979346e-05, -2.7418097943154862e-06, -3.0398150556720793e-05, -1.1920928244535389e-07, -0.002233862644061446, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 108, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "charge", "<EOS>", 68, 156], "score": -6.386014374899531, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template44"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00389862060546875, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.38690185546875e-05, -5.092397689819336, -0.0001049041748046875, -3.4332275390625e-05, -0.0006771087646484375, -0.0002193450927734375, -0.0008563995361328125, -0.014598846435546875, -4.00543212890625e-05, -0.0020694732666015625, -4.57763671875e-05, -1.9073486328125e-06, -0.00561070442199707, -7.390960945485858e-06, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -1.247627854347229, -2.0265579223632812e-05, -9.34600830078125e-05, -5.7220458984375e-05], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.936117681425678, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -6.9123992919921875, 0.0, -0.0003414154052734375, -7.62939453125e-06, -3.814697265625e-05, -2.0265579223632812e-06, -9.5367431640625e-06, -4.9591064453125e-05, -0.003662109375, -0.000118255615234375, -2.9563901989604346e-05, -2.3841830625315197e-06, -3.397439286345616e-05, -1.1920928244535389e-07, -0.0022324323654174805, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "divine_shield", "<EOS>", 68, 156], "score": -6.978798540995022, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "divine_shield", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00389862060546875, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.38690185546875e-05, -0.006221771240234375, -0.0001087188720703125, -2.7656553356791846e-05, -2.3841830625315197e-06, -3.3855187211884186e-05, -1.1920928244535389e-07, -6.951155662536621, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "HUNTER", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.1885625442266345, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "HUNTER"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -7.1602373123168945, -0.00043022603495046496, -0.0006047487258911133, -1.2993807104066946e-05, -6.866455078125e-05, -0.00012969970703125, -3.814697265625e-06, -0.0004596710205078125, 0.0, -9.34600830078125e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0034999847412109375, -3.814697265625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.1961669921875e-05, -0.006114959716796875, -0.000110626220703125, -2.7656553356791846e-05, -2.3841830625315197e-06, -3.373598156031221e-05, -1.1920928244535389e-07, -0.0021393296774476767, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, HUNTER.HUNTER, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.71739831799092, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "MINION_TYPE"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -7.335078239440918, -3.814697265625e-06, -0.3549565076828003, -2.503394853192731e-06, -0.0003223419189453125, -6.4849853515625e-05, -9.5367431640625e-06, -0.0007839202880859375, 0.0, -8.58306884765625e-05, -3.814697265625e-06, -3.4332275390625e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0033283233642578125, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.24249267578125e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.1961669921875e-05, -0.0058574676513671875, -0.0001087188720703125, -2.7656553356791846e-05, -2.3841830625315197e-06, -3.373598156031221e-05, -1.1920928244535389e-07, -0.002139210468158126, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, MINION_TYPE.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.845442175028403, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -7.366311073303223, -0.0002887248992919922, -1.9073486328125e-06, -3.814697265625e-05, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, -3.3378591979271732e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001049041748046875, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001220703125, -5.7220458984375e-06, -0.4532756805419922, -0.000102996826171875, -1.9073486328125e-06, -2.634490556374658e-05, -2.0265579223632812e-06, -0.0001392364501953125, -0.008466720581054688, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0023947954177856445, -2.1457672119140625e-05, -0.0002753734588623047, -3.850459688692354e-05, -0.000156402587890625, -9.72747802734375e-05, -3.814697265625e-06, -0.0002002716064453125, 0.0, -7.82012939453125e-05, -3.814697265625e-06, -3.24249267578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0039081573486328125, -3.814697265625e-06, -5.53131103515625e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.1961669921875e-05, -0.00601959228515625, -0.0001049041748046875, -2.7656553356791846e-05, -2.3841830625315197e-06, -3.373598156031221e-05, -1.1920928244535389e-07, -0.002133607631549239, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 108, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "Charge", "<EOS>", 79, 171, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 110, 156], "score": -8.002146276640559, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template44"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Charge"}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00389862060546875, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.38690185546875e-05, -5.092397689819336, -0.0001049041748046875, -3.4332275390625e-05, -0.0006771087646484375, -0.0002193450927734375, -0.0008563995361328125, -0.014598846435546875, -4.00543212890625e-05, -0.0020694732666015625, -4.57763671875e-05, -1.9073486328125e-06, -0.00561070442199707, -7.390960945485858e-06, -2.6702880859375e-05, -0.0003070831298828125, 0.0, -0.39039480686187744, -1.9073486328125e-05, -0.006580352783203125, -0.00049591064453125, -0.41855812072753906, -7.62939453125e-06, -3.814697265625e-06, -0.0010852813720703125, -0.09894561767578125, -0.1630706787109375, 0.0, -0.9584625959396362, -1.33514404296875e-05, -0.10419273376464844, -7.62939453125e-06, -0.0034656524658203125, -0.47212982177734375, -0.11636161804199219, -1.9073486328125e-06, -0.0006732940673828125, -4.9591064453125e-05, -0.09860038757324219, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.03064274787902832, -4.0531158447265625e-06, -0.0001163482666015625, -9.5367431640625e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, auras=[Aura(Charge(),\n            MinionSelector(IsType(MINION_TYPE.BEAST)))])\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -8.499220846338908, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -7.366311073303223, -0.0002887248992919922, -1.9073486328125e-06, -3.814697265625e-05, -9.5367431640625e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, -3.3378591979271732e-06, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001049041748046875, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001220703125, -5.7220458984375e-06, -1.0367317199707031, -1.9073486328125e-06, -7.62939453125e-06, -2.4199192921514623e-05, -4.410743713378906e-06, -0.00075531005859375, -0.005191802978515625, 0.0, -1.9073486328125e-06, 0.0, -0.0004298686981201172, -2.1219253540039062e-05, -0.0010584592819213867, -9.95397349470295e-05, -0.0005779266357421875, -6.866455078125e-05, -7.43865966796875e-05, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, 0.0, -3.0517578125e-05, 0.0, -0.0611724853515625, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -3.814697265625e-06, -5.960462772236497e-07, -9.5367431640625e-06, -2.47955322265625e-05, -0.009378433227539062, -4.38690185546875e-05, -2.3961054466781206e-05, -1.311301275563892e-06, -3.874253525282256e-05, -1.1920928244535389e-07, -0.015549181960523129, -1.9073486328125e-06, -7.62939453125e-05, -3.814697265625e-06], "inferred_code": "class <UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156], "score": -8.631839784318991, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 2}], "name": "create_minion"}], "name": "Huffer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -7.335078239440918, -3.814697265625e-06, -1.26732337474823, -1.9073486328125e-06, -0.0034160614013671875, -4.76837158203125e-05, -7.62939453125e-06, -0.00171661376953125, 0.0, -7.62939453125e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.0018978118896484375, -1.9073486328125e-06, -5.14984130859375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.1961669921875e-05, -0.0053958892822265625, -0.00011444091796875, -2.9563901989604346e-05, -2.3841830625315197e-06, -3.3855187211884186e-05, -1.1920928244535389e-07, -0.002116203075274825, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, MINION_TYPE.BEAST, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n"}, {"choice_history": [139, 193, 314], "score": -22.518157958984375, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.9591064453125e-05, -0.0005130767822265625, -22.517595291137695], "inferred_code": ""}], "index": 53}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -0.5791570662468075, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -0.28710246086120605, -4.172325134277344e-06, -9.5367431640625e-06, -0.0790243148803711, -0.001171112060546875, -0.00455474853515625, -0.096832275390625, -0.010545730590820312, -7.43865966796875e-05, -9.918212890625e-05, 0.0, -0.006117820739746094, -0.002415776252746582, -6.079673767089844e-06, -5.7220458984375e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -3.0341718910931377, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -2.0066888332366943, -1.0251977982989047e-05, -3.0517578125e-05, -0.8146848678588867, -0.0020465850830078125, -0.004124641418457031, -0.08528804779052734, -0.018945693969726562, -0.000118255615234375, -0.000171661376953125, 0.0, -0.008145332336425781, -0.0027115345001220703, -6.198883056640625e-06, -5.7220458984375e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 109, 156], "score": -3.2240305660961894, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -2.0066888332366943, -1.0251977982989047e-05, -3.0517578125e-05, -1.126084327697754, -2.288818359375e-05], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 140, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -3.3819206475227475, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Add"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -0.28710246086120605, -4.172325134277344e-06, -9.5367431640625e-06, -0.0790243148803711, -0.001171112060546875, -0.00455474853515625, -2.8945436477661133, -0.016679763793945312, -7.43865966796875e-05, -8.58306884765625e-05, 0.0, -0.0049724578857421875, -0.00248873233795166, -8.106231689453125e-06, -7.62939453125e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.037127089400428, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -2.945996046066284, -2.0265579223632812e-06, -5.7220458984375e-06, -0.9762735366821289, -6.29425048828125e-05, -0.013445854187011719, -0.010017633438110352, -1.7881377516459906e-06, -0.0001277923583984375], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -4.04031426896745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -2.945996046066284, -2.0265579223632812e-06, -5.7220458984375e-06, -0.9064493179321289, -0.005063056945800781, -0.0026702880859375, -0.07494354248046875, -0.008913040161132812, -8.7738037109375e-05, -4.00543212890625e-05, 0.0, -0.0023488998413085938, -0.0025888681411743164, -6.198883056640625e-06, -5.7220458984375e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 102, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -4.174789662181865, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -3.1848363876342773, -0.0001544952392578125, -0.007433891296386719, -0.00075531005859375, -2.6702880859375e-05, -3.62396240234375e-05, -3.3497806725790724e-05, -1.0490406566532329e-05, -5.91278076171875e-05, -0.008739471435546875, -9.1552734375e-05, -0.0065937042236328125, -3.24249267578125e-05, -1.1444091796875e-05, -0.1634359359741211, -5.7220458984375e-06, -5.14984130859375e-05, -0.002094268798828125, -0.5711181163787842, -2.1457672119140625e-06, -3.814697265625e-06, -0.12288761138916016, -0.000579833984375, -0.0064868927001953125, -0.07190895080566406, -0.013136863708496094, -9.918212890625e-05, -0.00011444091796875, 0.0, -0.009307861328125, -0.0020513534545898438, -6.079673767089844e-06, -7.62939453125e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -4.7771198271721005, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -0.28710246086120605, -4.172325134277344e-06, -9.5367431640625e-06, -4.398705005645752, -0.0001049041748046875], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 102, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.956637615973477, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -3.1848363876342773, -0.0001544952392578125, -0.007433891296386719, -0.00075531005859375, -2.6702880859375e-05, -3.62396240234375e-05, -3.3497806725790724e-05, -1.0490406566532329e-05, -5.91278076171875e-05, -0.008739471435546875, -9.1552734375e-05, -0.0065937042236328125, -3.24249267578125e-05, -1.1444091796875e-05, -0.1634359359741211, -5.7220458984375e-06, -5.14984130859375e-05, -0.002094268798828125, -1.2830636501312256, -1.9073486328125e-06, -3.814697265625e-06, -0.27106475830078125, -6.67572021484375e-05, -0.0013208389282226562, -0.023900389671325684, -3.099436753473128e-06, -0.000133514404296875], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 141, 39, 156], "score": -5.2335125922172665, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Template38"}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -0.28710246086120605, -4.172325134277344e-06, -9.5367431640625e-06, -0.0790243148803711, -0.001171112060546875, -0.00455474853515625, -0.096832275390625, -4.673553466796875, -6.67572021484375e-05], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 156], "score": -5.30604250210672, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Name", "id": "<UNK>"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -3.8474724292755127, -6.0796710386057384e-06, -0.013582229614257812, -0.6740589141845703, -3.814697265625e-06, -0.6763454675674438, -6.48477507638745e-05, -0.003314971923828125], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(<UNK>)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 102, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "<UNK>", "<EOS>", 156], "score": -5.919855947315227, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -3.1848363876342773, -0.0001544952392578125, -0.007433891296386719, -0.00075531005859375, -2.6702880859375e-05, -3.62396240234375e-05, -3.3497806725790724e-05, -1.0490406566532329e-05, -5.91278076171875e-05, -0.008739471435546875, -9.1552734375e-05, -0.0065937042236328125, -3.24249267578125e-05, -1.1444091796875e-05, -2.3156824111938477, -1.1444091796875e-05, 0.0, -0.008886337280273438, -0.3837437629699707, -4.291534423828125e-06, -3.62396240234375e-05], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -6.196095344238529, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -4.521280288696289, -0.00010787879000417888, -0.00241851806640625, -0.0024042129516601562, -0.002483367919921875, -0.10088729858398438, -8.58306884765625e-05, -0.057473182678222656, -0.026858976110816002, -0.000126480998005718, -2.47955322265625e-05, -0.2911396026611328, -0.00020599365234375, -0.0047130584716796875, -3.814697265625e-06, -0.00069427490234375, -0.22672641277313232, -4.9591064453125e-05, -0.8671226501464844, -9.5367431640625e-05], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 102, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -6.9727492282945605, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "Humility"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -3.1848363876342773, -0.0001544952392578125, -0.007433891296386719, -0.00075531005859375, -2.6702880859375e-05, -3.62396240234375e-05, -3.3497806725790724e-05, -1.0490406566532329e-05, -5.91278076171875e-05, -0.008739471435546875, -9.1552734375e-05, -0.0065937042236328125, -3.24249267578125e-05, -1.1444091796875e-05, -2.3156824111938477, -1.1444091796875e-05, 0.0, -0.008886337280273438, -1.4366164207458496, -5.7339664635946974e-05, -3.814697265625e-06], "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.calculate_attack()\n"}, {"choice_history": [139, 193, 314], "score": -23.28632354736328, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -23.28626251220703], "inferred_code": ""}], "index": 54}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 109, 156], "score": -0.9502530815516366, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -0.6849149465560913, -1.0609603123157285e-05, -7.62939453125e-06, -0.20217609405517578, -4.00543212890625e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -1.6444136622103542, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -1.2745250463485718, -2.1457672119140625e-06, -5.7220458984375e-06, -0.15389251708984375, -0.0022535324096679688, -0.0057048797607421875, -0.12555694580078125, -0.0017499923706054688, -8.58306884765625e-05, -3.24249267578125e-05, 0.0, -0.011295318603515625, -0.006155490875244141, -4.291534423828125e-06, -4.57763671875e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -2.9331070902258034, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -0.6849149465560913, -1.0609603123157285e-05, -7.62939453125e-06, -1.9243659973144531, -0.005610466003417969, -0.0030307769775390625, -0.21918201446533203, -0.003958702087402344, -0.0001125335693359375, -3.4332275390625e-05, 0.0, -0.0201263427734375, -0.008607983589172363, -2.861022494471399e-06, -3.814697265625e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 116, 156], "score": -3.0134413960131496, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template46"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -2.473358392715454, 0.0, -3.814697265625e-06, -0.4724760055541992, -0.0044994354248046875], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 140, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -3.9385175230654568, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Add"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -1.2745250463485718, -2.1457672119140625e-06, -5.7220458984375e-06, -0.15389251708984375, -0.0022535324096679688, -0.0057048797607421875, -2.4118242263793945, -0.013913154602050781, -0.000255584716796875, -4.00543212890625e-05, 0.0, -0.008467674255371094, -0.004404664039611816, -6.318092346191406e-06, -0.000118255615234375], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 + self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 109, 156], "score": -4.178131771812332, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -3.2702722549438477, -6.198883056640625e-06, -0.010365486145019531, -0.001552581787109375, -0.0002422332763671875, -6.103515625e-05, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.000293731689453125, -0.0004596710205078125, -4.00543212890625e-05, -7.2479248046875e-05, 0.0, -1.1444091796875e-05, -0.0007076263427734375, -1.9073486328125e-06, -2.288818359375e-05, -0.0012035369873046875, -0.6921539306640625, -1.0728812412708066e-05, -9.5367431640625e-06, -0.19165611267089844, -4.76837158203125e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -4.292502594247253, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -3.2168548107147217, -2.741813204920618e-06, -0.0014896392822265625, -0.5786771774291992, -0.008145332336425781, -0.0037603378295898438, -0.3967323303222656, -0.0011758804321289062, -0.0003528594970703125, -5.53131103515625e-05, 0.0, -0.011869430541992188, -0.010242342948913574, -4.410743713378906e-06, -3.62396240234375e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156], "score": -4.375961017850841, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Template19"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "increase_health", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -2.473358392715454, 0.0, -3.814697265625e-06, -1.6929445266723633, -8.7738037109375e-05, -0.10153961181640625, -0.044588446617126465, -4.768360213347478e-06, -0.0003299713134765625], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 77, 166, 39, 140, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -4.5223559858714, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Add"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -0.6849149465560913, -1.0609603123157285e-05, -7.62939453125e-06, -1.9243659973144531, -0.005610466003417969, -0.0030307769775390625, -1.7882509231567383, -0.0313262939453125, -0.00043487548828125, -4.57763671875e-05, 0.0, -0.016371726989746094, -0.004774689674377441, -6.4373016357421875e-06, -0.0001010894775390625], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1 + self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156], "score": -4.566696357980618, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template40"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -1.2745250463485718, -2.1457672119140625e-06, -5.7220458984375e-06, -3.2290139198303223, -4.57763671875e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156], "score": -4.84692545011967, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Template19"}}}, "_type": "BinOp", "left": {"_type": "Template38"}, "op": {"_type": "Sub"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -3.2702722549438477, -6.198883056640625e-06, -0.010365486145019531, -0.001552581787109375, -0.0002422332763671875, -6.103515625e-05, -7.62939453125e-06, -6.103515625e-05, 0.0, -0.000293731689453125, -0.0004596710205078125, -4.00543212890625e-05, -7.2479248046875e-05, 0.0, -1.1444091796875e-05, -0.0007076263427734375, -1.9073486328125e-06, -2.288818359375e-05, -0.0012035369873046875, -1.251439094543457, -2.1457672119140625e-06, -5.7220458984375e-06, -0.14904022216796875, -0.0022325515747070312, -0.005806922912597656, -0.12584686279296875, -0.0017032623291015625, -8.7738037109375e-05, -3.0517578125e-05, 0.0, -0.010741233825683594, -0.005681514739990234, -4.291534423828125e-06, -4.9591064453125e-05], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 116, 156], "score": -4.972896290079007, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template46"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "change_attack", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -1.2745250463485718, -2.1457672119140625e-06, -5.7220458984375e-06, -3.6247806549072266, -0.010478973388671875], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 156], "score": -5.8111457072245685, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Template19"}}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template43"}}}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "heal", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -3.6575911045074463, -0.00013529339048545808, -0.00301361083984375, -0.010964393615722656, -0.000232696533203125, -0.028662681579589844, -9.34600830078125e-05, -0.021974563598632812, -0.024022679775953293, -8.070465264609084e-05, -7.05718994140625e-05, -0.5364856719970703, -0.000286102294921875, -0.0011072158813476562, -3.814697265625e-06, -0.0010509490966796875, -0.34186601638793945, -3.24249267578125e-05, -1.1202402114868164, -0.0001277923583984375], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 102, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 109, 156], "score": -9.024972987902856, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template7"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "set_health_to", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "<UNK>Mark"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -7.2710771560668945, -0.0003223419189453125, -0.00046539306640625, -0.000171661376953125, -4.1961669921875e-05, -3.814697265625e-06, -8.428096771240234e-05, -2.741813204920618e-06, -7.82012939453125e-05, -0.03938007354736328, -0.0003528594970703125, -0.00042724609375, -3.814697265625e-06, -3.814697265625e-06, -0.07722091674804688, -1.9073486328125e-06, -6.29425048828125e-05, -0.0034942626953125, -1.114696741104126, -8.225420970120467e-06, -1.52587890625e-05, -0.5123414993286133, -0.0002384185791015625], "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n"}, {"choice_history": [139, 193, 314], "score": -24.720508575439453, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.1444091796875e-05, -7.82012939453125e-05, -24.72041893005371], "inferred_code": ""}], "index": 55}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -0.22726388614316306, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -0.002620697021484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067901611328125, -0.0002231597900390625, -0.0007306337356567383, -0.00011515617370605469, -3.814697265625e-06, -0.004009246826171875, -6.4849853515625e-05, -0.0042476654052734375, -2.3484230041503906e-05, -0.001392364501953125, -0.00022125244140625, -0.0003210306167602539, -0.006893515586853027, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002627318608574569, -2.3841855067985307e-07, -4.518609057413414e-05, 0.0, -4.38690185546875e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -1.8325677170405186, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -1.8038110733032227, -9.5367431640625e-06, -7.62939453125e-06, -0.0002974271774291992, -5.6028297876764555e-06, -1.33514404296875e-05, 0.0, -8.7738037109375e-05, -0.00012969970703125, -0.0010395050048828125, -1.9073486328125e-06, -0.0003814697265625, -2.6702880859375e-05, -0.0004913355223834515, -0.00016260147094726562, -3.62396240234375e-05, -7.2479248046875e-05, -0.0006313323974609375, -0.00112152099609375, -0.0010890960693359375, -0.0028228759765625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001323223114013672, -1.072883515007561e-05, -0.000659942626953125, -0.0002460479736328125, -0.0007269382476806641, -0.00012087821960449219, -3.814697265625e-06, -0.002658843994140625, -5.340576171875e-05, -0.00374603271484375, -2.5391578674316406e-05, -0.001499176025390625, -0.00028228759765625, -0.0003287792205810547, -0.007131099700927734, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.00026046691345982254, -2.3841855067985307e-07, -4.506708501139656e-05, 0.0, -5.14984130859375e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -5.124938870915173, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -4.906877517700195, 0.0, -0.0002384185791015625, -9.72747802734375e-05, -0.0029306411743164062, -2.3841855067985307e-07, -0.0001087188720703125, -1.9073486328125e-06, -9.1552734375e-05, -1.1444091796875e-05, -0.0004673004150390625, -5.7220458984375e-06, -0.00034332275390625, -9.5367431640625e-06, -0.000845625763759017, -0.0005962848663330078, -4.1961669921875e-05, -7.43865966796875e-05, -0.001598358154296875, -0.000995635986328125, -0.0008392333984375, -0.0023345947265625, -9.5367431640625e-06, -1.33514404296875e-05, -0.00014960765838623047, -1.1086463018727954e-05, -0.000667572021484375, -0.0002231597900390625, -0.0007231235504150391, -0.00011515617370605469, -3.814697265625e-06, -0.003803253173828125, -6.4849853515625e-05, -0.0042705535888671875, -2.3484230041503906e-05, -0.00139617919921875, -0.0002231597900390625, -0.0003210306167602539, -0.006901144981384277, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002628510701470077, -2.3841855067985307e-07, -4.506691766437143e-05, 0.0, -4.38690185546875e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "User", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -5.758733108017559, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserUser"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -0.002620697021484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067901611328125, -0.0002231597900390625, -0.0007306337356567383, -0.00011515617370605469, -3.814697265625e-06, -0.004009246826171875, -6.4849853515625e-05, -0.0042476654052734375, -2.3484230041503906e-05, -0.001392364501953125, -0.00022125244140625, -0.0003210306167602539, -5.394627094268799, -0.14365482330322266, -2.47955322265625e-05, -9.5367431640625e-06, -0.00034497518208809197, -3.576278118089249e-07, -5.8783029089681804e-05, -1.1920928244535389e-07, -3.814697265625e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserUser())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 136, 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -6.204652272345463, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "Template32"}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -0.002620697021484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067901611328125, -0.0002231597900390625, -0.0007306337356567383, -0.00011515617370605469, -3.814697265625e-06, -5.993364334106445, -0.001430511474609375, -2.288818359375e-05, -5.7100729463854805e-05, -1.5497195136049413e-06, -7.546460255980492e-05, -1.1920928244535389e-07, -5.7220458984375e-06], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            taunt=True)))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -6.580991109690551, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -0.002620697021484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067901611328125, -0.0002231597900390625, -0.0007306337356567383, -0.00011515617370605469, -3.814697265625e-06, -0.004009246826171875, -6.4849853515625e-05, -5.666313171386719, -3.254413604736328e-05, -0.0003833770751953125, -0.000179290771484375, -0.6995909214019775, -0.0003589391417335719, -7.62939453125e-06, -8.96453857421875e-05, -5.7220458984375e-06, -0.0001604522840352729, -1.1920922133867862e-06, -6.89088337821886e-05, -1.1920928244535389e-07, -3.0517578125e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -6.6419292476820075, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -0.002620697021484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067901611328125, -0.0002231597900390625, -0.0007306337356567383, -0.00011515617370605469, -3.814697265625e-06, -0.004009246826171875, -6.4849853515625e-05, -5.666313171386719, -3.254413604736328e-05, -0.0003833770751953125, -0.000179290771484375, -0.7432596683502197, -0.016587495803833008, -7.62939453125e-06, -3.4332275390625e-05, -1.9073486328125e-05, -0.001204843632876873, -4.768370445162873e-07, -6.797446985729039e-05, -1.1920928244535389e-07, -7.05718994140625e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            players=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 92, 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -6.744723165135724, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template15"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -6.385764122009277, -0.15777587890625, -0.0004119873046875, -0.0002579689025878906, -3.0278701160568744e-05, -5.4900956456549466e-06, -4.768370445162873e-07, -3.814697265625e-06], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "combo", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -7.248203027535482, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "combo", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -7.017918586730957, -3.087520235567354e-05, -0.004136085510253906, -1.9073486328125e-06, -9.1552734375e-05, -7.62939453125e-06, -0.0008754730224609375, -3.814697265625e-06, -0.0001888275146484375, -1.52587890625e-05, -0.0006372110219672322, -0.0003764629364013672, -6.29425048828125e-05, -9.34600830078125e-05, -0.003391265869140625, -0.001049041748046875, -0.0007839202880859375, -0.002628326416015625, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067138671875, -0.000225067138671875, -0.0007517337799072266, -0.00011706352233886719, -3.814697265625e-06, -0.0039348602294921875, -6.4849853515625e-05, -0.004428863525390625, -2.3484230041503906e-05, -0.0014095306396484375, -0.0002193450927734375, -0.0003210306167602539, -0.006928801536560059, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002624934713821858, -2.3841855067985307e-07, -4.518609057413414e-05, 0.0, -4.38690185546875e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, combo=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "User", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -7.349573276410354, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserUser"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -1.8038110733032227, -9.5367431640625e-06, -7.62939453125e-06, -0.0002974271774291992, -5.6028297876764555e-06, -1.33514404296875e-05, 0.0, -8.7738037109375e-05, -0.00012969970703125, -0.0010395050048828125, -1.9073486328125e-06, -0.0003814697265625, -2.6702880859375e-05, -0.0004913355223834515, -0.00016260147094726562, -3.62396240234375e-05, -7.2479248046875e-05, -0.0006313323974609375, -0.00112152099609375, -0.0010890960693359375, -0.0028228759765625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0001323223114013672, -1.072883515007561e-05, -0.000659942626953125, -0.0002460479736328125, -0.0007269382476806641, -0.00012087821960449219, -3.814697265625e-06, -0.002658843994140625, -5.340576171875e-05, -0.00374603271484375, -2.5391578674316406e-05, -0.001499176025390625, -0.00028228759765625, -0.0003287792205810547, -5.359836101531982, -0.16422462463378906, -2.47955322265625e-05, -9.5367431640625e-06, -0.0003397302352823317, -3.576278118089249e-07, -5.878359661437571e-05, 0.0, -4.38690185546875e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserUser())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -7.409045829660016, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Template29"}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -7.19762659072876, -0.0001506805419921875, -0.0001354217529296875, -0.0005227327346801758, -3.933906555175781e-06, -0.000530242919921875, -1.9073486328125e-06, -4.1961669921875e-05, -1.52587890625e-05, -0.0004177093505859375, -3.814697265625e-06, -0.000446319580078125, -1.71661376953125e-05, -0.001603428041562438, -0.00010550019942456856, -4.57763671875e-05, -0.0001392364501953125, -0.0006160736083984375, -0.000774383544921875, -0.0009822845458984375, -0.002658843994140625, -1.1444091796875e-05, -1.33514404296875e-05, -0.00014972686767578125, -1.1086463018727954e-05, -0.0006866455078125, -0.000225067138671875, -0.0007231235504150391, -0.0001227855682373047, -3.814697265625e-06, -0.0031604766845703125, -5.7220458984375e-05, -0.0040073394775390625, -2.5391578674316406e-05, -0.00139617919921875, -0.000278472900390625, -0.0003229379653930664, -0.006843090057373047, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002633278490975499, -2.3841855067985307e-07, -4.554392216959968e-05, 0.0, -4.9591064453125e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -7.47606809178648, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -7.269079208374023, 0.0, -0.00617906404659152, -3.802776336669922e-05, -5.483612312673358e-06, -4.1961669921875e-05, -1.52587890625e-05, -0.00022041777265258133, -4.768370445162873e-07, -1.1111333151347935e-05, -1.1920928244535389e-07, -3.814697265625e-06], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 312, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -8.396518797894679, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "UserPicker"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -6.497248649597168, -0.0008258819580078125, -5.91278076171875e-05, -0.000859379768371582, -9.453296661376953e-05, -0.000293731689453125, -7.05718994140625e-05, -0.0015701055526733398, -9.262561798095703e-05, -1.9073486328125e-06, -0.002376556396484375, -0.0001468658447265625, -0.0047664642333984375, -1.5854835510253906e-05, -0.000946044921875, -0.0001583099365234375, -0.0003248453140258789, -0.006544828414916992, -2.09808349609375e-05, -0.0004405975341796875, -0.0020904541015625, -0.9932022094726562, -1.537799835205078e-05, -0.01729106903076172, -0.0001850128173828125, -0.6414297819137573, -0.019951820373535156, -2.0265579223632812e-06, -1.71661376953125e-05, -1.1444091796875e-05, -0.00023078714730218053, -2.3841855067985307e-07, -5.103669536765665e-05, -1.1920928244535389e-07, -4.9591064453125e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker(), players=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 312, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156], "score": -8.602322299743541, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Name", "id": "MINION_TYPE"}}}, {"_type": "keyword", "arg": "battlecry", "value": {"args": [{"args": [{"_type": "Template38"}], "_type": "Call", "func": {"_type": "Name", "id": "Damage"}}, {"keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template16", "hole0": "UserPicker"}}, {"_type": "keyword", "arg": "players", "value": {"_type": "Template16", "hole0": "BothPlayer"}}], "_type": "Call", "func": {"_type": "Template70"}}], "_type": "Call", "func": {"_type": "Template45"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "name": "IronforgeRifleman"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -6.497248649597168, -0.0008258819580078125, -5.91278076171875e-05, -0.000859379768371582, -9.453296661376953e-05, -0.000293731689453125, -7.05718994140625e-05, -0.0015701055526733398, -9.262561798095703e-05, -1.9073486328125e-06, -0.002376556396484375, -0.0001468658447265625, -0.0047664642333984375, -1.5854835510253906e-05, -0.000946044921875, -0.0001583099365234375, -0.0003248453140258789, -0.006544828414916992, -2.09808349609375e-05, -0.0004405975341796875, -0.0020904541015625, -0.9932022094726562, -1.537799835205078e-05, -0.01729106903076172, -0.0001850128173828125, -0.8668841123580933, -0.0002793066669255495, -1.52587890625e-05, -0.0001087188720703125, -5.7220458984375e-06, -0.0001562798279337585, -5.960462772236497e-07, -5.7345321692992e-05, -1.1920928244535389e-07, -4.00543212890625e-05], "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker(), players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 314], "score": -25.21432876586914, "model_output": {"_type": "Module", "body": []}, "score_history": [-2.6702880859375e-05, 0.0, -25.21430206298828], "inferred_code": ""}], "index": 56}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -0.020459249016539616, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -0.0009784698486328125, -4.76837158203125e-05, -3.039742477994878e-05, -3.576227754820138e-05, -0.00020109242177568376, -7.152555099310121e-07, -0.0019708755426108837, -1.9073486328125e-06, -0.0007686614990234375, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 135, 154, 205, "3", "<EOS>", "3", "<EOS>", 156], "score": -5.06271623187763, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 3}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.046346664428711, -0.011160850524902344, -3.0517578125e-05, -7.152511898311786e-07, -1.5139515198825393e-05, -1.3161482002033154e-06, -4.768371127283899e-06, -7.62939453125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.639535366757855, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "PIRATE", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -6.623384952545166, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -9.655952453613281e-06, -4.41074053014745e-06, -0.000125885009765625, -6.29425048828125e-05, -0.000659942626953125, -5.14984130859375e-05, -3.409273995202966e-05, -3.159007610520348e-05, -0.0002799900248646736, -7.152555099310121e-07, -0.0020924729760736227, -1.9073486328125e-06, -0.0007381439208984375, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.766560737264285, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -6.750278949737549, -1.9073486328125e-06, -5.7220458984375e-05, -9.72747802734375e-05, -1.9431114196777344e-05, -5.9604562920867465e-06, -0.000141143798828125, -0.0001201629638671875, -0.0006809234619140625, -5.14984130859375e-05, -3.182789805578068e-05, -3.5285454941913486e-05, -0.00025067199021577835, -8.344646857949556e-07, -0.0019847049843519926, -1.9073486328125e-06, -0.000759124755859375, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 303, 107, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.562674356091293, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}, {"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -7.362373352050781, -0.01680755615234375, -0.1647939682006836, -4.00543212890625e-05, -8.0108642578125e-05, -3.814697265625e-06, -3.4212920581921935e-05, -1.0847986231965479e-05, -3.0517578125e-05, -1.33514404296875e-05, -0.0003795623779296875, -2.288818359375e-05, -3.814697265625e-06, -0.0002803802490234375, -9.5367431640625e-06, -0.0006618499755859375, -1.1444091796875e-05, -6.67572021484375e-05, -1.1444046322139911e-05, -4.1127124859485775e-05, -0.0002277830062666908, -2.3126602172851562e-05, -0.0005970001220703125, -8.20159912109375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0066280364990234375, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.003997802734375, -2.288818359375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5974044799804688e-05, -5.9604562920867465e-06, -0.0001239776611328125, -9.918212890625e-05, -0.0011310577392578125, -5.340576171875e-05, -3.0397439331864007e-05, -3.695433042594232e-05, -0.00020812483853660524, -7.152555099310121e-07, -0.00200830795802176, -1.9073486328125e-06, -0.0007610321044921875, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard, MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 39, 156], "score": -7.570546224114196, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -0.0009784698486328125, -4.76837158203125e-05, -3.039742477994878e-05, -3.576227754820138e-05, -0.00020109242177568376, -7.152555099310121e-07, -0.0019708755426108837, -1.9073486328125e-06, -7.55085563659668, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.602191037574471, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -7.586050033569336, -7.62939453125e-06, -2.47955322265625e-05, -3.814697265625e-06, -1.2159347534179688e-05, -9.536714060232043e-06, -0.0001373291015625, -7.43865966796875e-05, -0.0006389617919921875, -5.91278076171875e-05, -3.290075983386487e-05, -3.623910015448928e-05, -0.00024161503824871033, -8.344646857949556e-07, -0.002112139482051134, -1.9073486328125e-06, -0.0007038116455078125, -5.7220458984375e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.605075075641025, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -7.579067230224609, -0.0006809234619140625, -5.7220458984375e-06, -3.814697265625e-06, -0.011669158935546875, -0.0001087188720703125, -2.300739288330078e-05, -2.86102294921875e-05, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -7.62939453125e-06, 0.0, -0.004581451416015625, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -1.5735626220703125e-05, -5.9604562920867465e-06, -0.0001697540283203125, -8.58306884765625e-05, -0.00091552734375, -4.57763671875e-05, -3.0039836929063313e-05, -3.504704363876954e-05, -0.0002000197273446247, -7.152555099310121e-07, -0.0020130753982812166, -1.9073486328125e-06, -0.000820159912109375, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 68, 156], "score": -7.776337351516531, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "divine_shield", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -0.0009784698486328125, -4.76837158203125e-05, -3.039742477994878e-05, -3.576227754820138e-05, -0.00020109242177568376, -7.152555099310121e-07, -7.758541107177734, -2.1457672119140625e-06, -7.62939453125e-05, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 50, 156], "score": -7.841063227370995, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_targetable", "_type": "Template6", "hole3": {"_type": "Template51"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -0.0009784698486328125, -4.76837158203125e-05, -3.039742477994878e-05, -3.576227754820138e-05, -0.00020109242177568376, -7.152555099310121e-07, -7.652156829833984, -2.3841855067985307e-07, -0.17118453979492188, -7.62939453125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, spell_targetable=False)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -8.135291661933707, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole1": 3}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -0.0009784698486328125, -4.76837158203125e-05, -3.039742477994878e-05, -3.576227754820138e-05, -0.00020109242177568376, -7.152555099310121e-07, -8.117104530334473, -2.0265579223632812e-06, -0.0004634857177734375, -7.62939453125e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, windfury=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 111, 111, 311, 136, 138, 291, "spell_targetable", "<EOS>", 50, 156], "score": -8.218715172318753, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template40"}, {"_type": "Template40"}], "_type": "Call", "keywords": [{"_type": "Template32"}, {"_type": "keyword", "arg": "spell_targetable", "value": {"_type": "Template51"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -6.976593017578125, -0.0002307891845703125, -0.00016021728515625, -0.0004730224609375, -0.00079345703125, -0.0006580352783203125, -0.0052814483642578125, -0.019649505615234375, -0.03864479064941406, -0.0070343017578125, -0.004810333251953125, -0.0009098052978515625, -1.0654830932617188, -2.002714973059483e-05, -0.08150196075439453, -5.14984130859375e-05], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True, spell_targetable=False)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 119, 310, 135, 154, 205, "3", "<EOS>", "3", "<EOS>", 156], "score": -9.93893523460929, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 3}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -8.98469352722168, -0.0032796859741210938, -1.9073486328125e-05, -4.506026016315445e-05, -3.9577273128088564e-05, -0.00031931069679558277, -6.687641143798828e-05, -1.71661376953125e-05, -0.014923095703125, -0.0004215240478515625, -9.72747802734375e-05, -5.7220458984375e-06, -0.8328790664672852, -0.0981903076171875, -0.000408172607421875, -1.1920419638045132e-06, -3.3497679396532476e-05, -4.173142315266887e-06, -1.4662741705251392e-05, -3.814697265625e-06], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 135, 156, 156], "score": -10.82084725432287, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template37_stmt_seq"}], "name": "IronfurGrizzly"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -5.046346664428711, -5.743459701538086, -0.025892257690429688], "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n"}, {"choice_history": [139, 193, 314], "score": -25.599382400512695, "model_output": {"_type": "Module", "body": []}, "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -25.59937286376953], "inferred_code": ""}], "index": 57}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -1.6021613416713194, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -0.1933116912841797, -0.004434581845998764, -7.62939453125e-06, -0.00237274169921875, -0.0003719329833984375, -0.0024929046630859375, -0.0005588531494140625, -0.0003490447998046875, -0.0017795562744140625, -2.09808349609375e-05, -0.004516720771789551, -2.3841830625315197e-06, -0.0029354095458984375, -0.009792327880859375, -0.000598907470703125, -1.9073486328125e-06, -0.00818634033203125, -1.9073486328125e-06, -0.000400543212890625, -3.814697265625e-06, -0.0073729753494262695, -1.740455445542466e-05, -0.01907360553741455, -3.814697265625e-06, -0.0022498369216918945, 0.0, -1.9073486328125e-06, -0.006683349609375, -2.47955322265625e-05, -0.00966644287109375, 0.0, -0.00012969970703125, 0.0, -0.000133514404296875, 0.0, -0.0036687850952148438, -1.9073486328125e-06, -0.003452301025390625, -0.0017490386962890625, -0.0026578903198242188, -0.0004253387451171875, -0.0001392364501953125, -3.814697265625e-06, -0.0008054971694946289, -0.00040721893310546875, -3.62396240234375e-05, -0.005055427551269531, -3.814697265625e-06, -0.0023260116577148438, -0.0001583099365234375, -0.0006184577941894531, 0.0, -0.009382247924804688, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0002307891845703125, -0.0001697540283203125, -5.7220458984375e-06, -0.005390167236328125, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.5250587463378906, -1.9073486328125e-06, -4.00543212890625e-05, -4.76837158203125e-05, -0.000152587890625, 0.0, -5.7220458984375e-05, -4.9591064453125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001958608627319336, 0.0, -1.52587890625e-05, -0.0014972686767578125, -1.33514404296875e-05, -0.5675886273384094, -7.62939453125e-06, -6.866455078125e-05, -9.5367431640625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -1.8880075154345946, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -0.1933116912841797, -0.004434581845998764, -7.62939453125e-06, -0.00237274169921875, -0.0003719329833984375, -0.0024929046630859375, -0.0005588531494140625, -0.0003490447998046875, -0.0017795562744140625, -2.09808349609375e-05, -0.004516720771789551, -2.3841830625315197e-06, -0.0029354095458984375, -0.009792327880859375, -0.000598907470703125, -1.9073486328125e-06, -0.00818634033203125, -1.9073486328125e-06, -0.000400543212890625, -3.814697265625e-06, -0.0073729753494262695, -1.740455445542466e-05, -0.01907360553741455, -3.814697265625e-06, -0.0022498369216918945, 0.0, -1.9073486328125e-06, -0.006683349609375, -2.47955322265625e-05, -0.00966644287109375, 0.0, -0.00012969970703125, 0.0, -0.000133514404296875, 0.0, -0.0036687850952148438, -1.9073486328125e-06, -0.003452301025390625, -0.0017490386962890625, -0.0026578903198242188, -0.0004253387451171875, -0.0001392364501953125, -3.814697265625e-06, -0.0008054971694946289, -0.00040721893310546875, -3.62396240234375e-05, -0.005055427551269531, -3.814697265625e-06, -0.0023260116577148438, -0.0001583099365234375, -0.0006184577941894531, 0.0, -0.009382247924804688, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0002307891845703125, -0.0001697540283203125, -5.7220458984375e-06, -0.005390167236328125, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.5250587463378906, -1.9073486328125e-06, -4.00543212890625e-05, -4.76837158203125e-05, -0.000152587890625, 0.0, -5.7220458984375e-05, -4.9591064453125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001958608627319336, 0.0, -1.52587890625e-05, -0.0014972686767578125, -1.33514404296875e-05, -0.8534765243530273, -2.1457672119140625e-06, -3.814697265625e-05, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -1.992851966385217, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -0.1933116912841797, -0.004434581845998764, -7.62939453125e-06, -0.00237274169921875, -0.0003719329833984375, -0.0024929046630859375, -0.0005588531494140625, -0.0003490447998046875, -0.0017795562744140625, -2.09808349609375e-05, -0.004516720771789551, -2.3841830625315197e-06, -0.0029354095458984375, -0.009792327880859375, -0.000598907470703125, -1.9073486328125e-06, -0.00818634033203125, -1.9073486328125e-06, -0.000400543212890625, -3.814697265625e-06, -0.0073729753494262695, -1.740455445542466e-05, -0.01907360553741455, -3.814697265625e-06, -0.0022498369216918945, 0.0, -1.9073486328125e-06, -0.006683349609375, -2.47955322265625e-05, -0.00966644287109375, 0.0, -0.00012969970703125, 0.0, -0.000133514404296875, 0.0, -0.0036687850952148438, -1.9073486328125e-06, -0.003452301025390625, -0.0017490386962890625, -0.0026578903198242188, -0.0004253387451171875, -0.0001392364501953125, -3.814697265625e-06, -0.0008054971694946289, -0.00040721893310546875, -3.62396240234375e-05, -0.005055427551269531, -3.814697265625e-06, -0.0023260116577148438, -0.0001583099365234375, -0.0006184577941894531, 0.0, -0.009382247924804688, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0002307891845703125, -0.0001697540283203125, -5.7220458984375e-06, -0.005390167236328125, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.9151085019111633, -2.1457672119140625e-06, -2.86102294921875e-05, -4.76837158203125e-05, -0.0001010894775390625, 0.0, -9.918212890625e-05, -4.57763671875e-05, -9.72747802734375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00022685527801513672, 0.0, -1.71661376953125e-05, -0.00188446044921875, -1.52587890625e-05, -0.5677843689918518, -5.7220458984375e-06, -7.62939453125e-05, -1.1444091796875e-05], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -2.2782631454509215, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -0.1933116912841797, -0.004434581845998764, -7.62939453125e-06, -0.00237274169921875, -0.0003719329833984375, -0.0024929046630859375, -0.0005588531494140625, -0.0003490447998046875, -0.0017795562744140625, -2.09808349609375e-05, -0.004516720771789551, -2.3841830625315197e-06, -0.0029354095458984375, -0.009792327880859375, -0.000598907470703125, -1.9073486328125e-06, -0.00818634033203125, -1.9073486328125e-06, -0.000400543212890625, -3.814697265625e-06, -0.0073729753494262695, -1.740455445542466e-05, -0.01907360553741455, -3.814697265625e-06, -0.0022498369216918945, 0.0, -1.9073486328125e-06, -0.006683349609375, -2.47955322265625e-05, -0.00966644287109375, 0.0, -0.00012969970703125, 0.0, -0.000133514404296875, 0.0, -0.0036687850952148438, -1.9073486328125e-06, -0.003452301025390625, -0.0017490386962890625, -0.0026578903198242188, -0.0004253387451171875, -0.0001392364501953125, -3.814697265625e-06, -0.0008054971694946289, -0.00040721893310546875, -3.62396240234375e-05, -0.005055427551269531, -3.814697265625e-06, -0.0023260116577148438, -0.0001583099365234375, -0.0006184577941894531, 0.0, -0.009382247924804688, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0002307891845703125, -0.0001697540283203125, -5.7220458984375e-06, -0.005390167236328125, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.9151085019111633, -2.1457672119140625e-06, -2.86102294921875e-05, -4.76837158203125e-05, -0.0001010894775390625, 0.0, -9.918212890625e-05, -4.57763671875e-05, -9.72747802734375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00022685527801513672, 0.0, -1.71661376953125e-05, -0.00188446044921875, -1.52587890625e-05, -0.8532372713088989, -2.1457672119140625e-06, -4.57763671875e-05, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(5), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -3.9884459946913964, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -1.8581104278564453, -5.7220458984375e-06, -0.0027551651000976562, -1.9073486328125e-06, -0.6329280138015747, -1.1920928244535389e-07, -0.045322418212890625, -0.0016012191772460938, -0.02496814727783203, -0.00113677978515625, -0.0003509521484375, -0.0035839080810546875, -1.1444091796875e-05, -0.014772653579711914, -1.2636104656849056e-05, -0.002986907958984375, -0.012217521667480469, -0.0018215179443359375, -3.814697265625e-06, -0.011304855346679688, -1.9073486328125e-06, -0.0005245208740234375, -5.7220458984375e-06, -0.008436322212219238, -1.931190308823716e-05, -0.021247506141662598, -1.9073486328125e-06, -0.0021518468856811523, 0.0, -1.9073486328125e-06, -0.0062999725341796875, -2.47955322265625e-05, -0.010957717895507812, 0.0, -0.000125885009765625, 0.0, -0.0001354217529296875, 0.0, -0.0036973953247070312, -1.9073486328125e-06, -0.0034580230712890625, -0.0017833709716796875, -0.00269317626953125, -0.0004100799560546875, -0.000141143798828125, -3.814697265625e-06, -0.0007911920547485352, -0.000408172607421875, -3.62396240234375e-05, -0.0050945281982421875, -3.814697265625e-06, -0.0023279190063476562, -0.00016021728515625, -0.0006184577941894531, 0.0, -0.009334564208984375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.000232696533203125, -0.000171661376953125, -5.7220458984375e-06, -0.00537109375, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009441375732421875, -9.5367431640625e-06, -0.5249601006507874, -1.9073486328125e-06, -4.00543212890625e-05, -4.76837158203125e-05, -0.000152587890625, 0.0, -5.7220458984375e-05, -4.9591064453125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001958608627319336, 0.0, -1.52587890625e-05, -0.0014972686767578125, -1.33514404296875e-05, -0.5675775408744812, -7.62939453125e-06, -6.866455078125e-05, -9.5367431640625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(game.current_player, lambda x:\n            x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 25, 194, "game", "<EOS>", "current_player", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -4.2743203018470055, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Name", "id": "<UNK>"}, "comparators": [{"_type": "NameConstant", "value": "Null"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -1.8581104278564453, -5.7220458984375e-06, -0.0027551651000976562, -1.9073486328125e-06, -0.6329280138015747, -1.1920928244535389e-07, -0.045322418212890625, -0.0016012191772460938, -0.02496814727783203, -0.00113677978515625, -0.0003509521484375, -0.0035839080810546875, -1.1444091796875e-05, -0.014772653579711914, -1.2636104656849056e-05, -0.002986907958984375, -0.012217521667480469, -0.0018215179443359375, -3.814697265625e-06, -0.011304855346679688, -1.9073486328125e-06, -0.0005245208740234375, -5.7220458984375e-06, -0.008436322212219238, -1.931190308823716e-05, -0.021247506141662598, -1.9073486328125e-06, -0.0021518468856811523, 0.0, -1.9073486328125e-06, -0.0062999725341796875, -2.47955322265625e-05, -0.010957717895507812, 0.0, -0.000125885009765625, 0.0, -0.0001354217529296875, 0.0, -0.0036973953247070312, -1.9073486328125e-06, -0.0034580230712890625, -0.0017833709716796875, -0.00269317626953125, -0.0004100799560546875, -0.000141143798828125, -3.814697265625e-06, -0.0007911920547485352, -0.000408172607421875, -3.62396240234375e-05, -0.0050945281982421875, -3.814697265625e-06, -0.0023279190063476562, -0.00016021728515625, -0.0006184577941894531, 0.0, -0.009334564208984375, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.000232696533203125, -0.000171661376953125, -5.7220458984375e-06, -0.00537109375, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009441375732421875, -9.5367431640625e-06, -0.5249601006507874, -1.9073486328125e-06, -4.00543212890625e-05, -4.76837158203125e-05, -0.000152587890625, 0.0, -5.7220458984375e-05, -4.9591064453125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001958608627319336, 0.0, -1.52587890625e-05, -0.0014972686767578125, -1.33514404296875e-05, -0.8534935712814331, -2.1457672119140625e-06, -3.814697265625e-05, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(game.current_player, lambda x:\n            x.card.minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -5.134349522542664, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -3.8248424530029297, 0.0, -0.0001201629638671875, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00021314620971679688, 0.0, -5.7220458984375e-06, -0.0042362213134765625, -1.1444091796875e-05, -0.5808865427970886, -1.9073486328125e-06, -5.91278076171875e-05, -0.0037555694580078125, 0.0, -4.1961669921875e-05, -0.027828216552734375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076198577880859375, -0.023609042167663574, 0.0, -1.52587890625e-05, -0.0007266998291015625, -7.62939453125e-06, -0.5850491523742676, -3.814697265625e-06, -0.0001010894775390625, -9.5367431640625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 76, 164, 33, "card", "<EOS>", 25, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -5.264193353604412, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template19"}}], "value": {"_type": "Name", "id": "<UNK>"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -3.056802749633789, 0.0, -0.033179283142089844, -1.3303718566894531, 0.0, -0.036185264587402344, -2.09808349609375e-05, -0.052349090576171875, -1.0728830375228426e-06, -0.055352210998535156, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.001117706298828125, -0.0016454458236694336, 0.0, -2.47955322265625e-05, -0.005725860595703125, -3.62396240234375e-05, -0.5793001055717468, -1.9073486328125e-06, -0.0001506805419921875, -1.1444091796875e-05], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card = <UNK>\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.377999005269714, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -3.8248424530029297, 0.0, -0.0001201629638671875, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00021314620971679688, 0.0, -5.7220458984375e-06, -0.0042362213134765625, -1.1444091796875e-05, -0.5808865427970886, -1.9073486328125e-06, -5.91278076171875e-05, -0.0037555694580078125, 0.0, -4.1961669921875e-05, -0.027828216552734375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076198577880859375, -0.023609042167663574, 0.0, -1.52587890625e-05, -0.0007266998291015625, -7.62939453125e-06, -0.8287783861160278, -2.2649765014648438e-06, -2.86102294921875e-05, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -5.446280655812927, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -3.8248424530029297, 0.0, -0.0001201629638671875, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00021314620971679688, 0.0, -5.7220458984375e-06, -0.0042362213134765625, -1.1444091796875e-05, -0.8342321515083313, -2.1457672119140625e-06, -6.29425048828125e-05, -0.022478103637695312, 0.0, -2.288818359375e-05, -0.02020263671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.0053386688232421875, -0.07052767276763916, 0.0, -1.52587890625e-05, -0.00078582763671875, -7.62939453125e-06, -0.5878638029098511, -3.814697265625e-06, -9.1552734375e-05, -1.1444091796875e-05], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 76, 164, 33, "card", "<EOS>", 25, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.522640702675915, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Template19"}}], "value": {"_type": "Name", "id": "<UNK>"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -3.056802749633789, 0.0, -0.033179283142089844, -1.3303718566894531, 0.0, -0.036185264587402344, -2.09808349609375e-05, -0.052349090576171875, -1.0728830375228426e-06, -0.055352210998535156, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.001117706298828125, -0.0016454458236694336, 0.0, -2.47955322265625e-05, -0.005725860595703125, -3.62396240234375e-05, -0.8377645015716553, -2.0265579223632812e-06, -0.000141143798828125, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card = <UNK>\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.683655497979828, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -3.8248424530029297, 0.0, -0.0001201629638671875, -3.814697265625e-06, -2.288818359375e-05, -1.9073486328125e-06, -5.53131103515625e-05, -0.00021314620971679688, 0.0, -5.7220458984375e-06, -0.0042362213134765625, -1.1444091796875e-05, -0.8342321515083313, -2.1457672119140625e-06, -6.29425048828125e-05, -0.022478103637695312, 0.0, -2.288818359375e-05, -0.02020263671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.0053386688232421875, -0.07052767276763916, 0.0, -1.52587890625e-05, -0.00078582763671875, -7.62939453125e-06, -0.8253145813941956, -2.2649765014648438e-06, -2.47955322265625e-05, -3.814697265625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(5), self)\n        self.target.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 151, 182, 21, 174, 17, 164, 17, 164, 43, "hero", "<EOS>", "health", "<EOS>", 299, 15, 302, 86, 198, "5", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156], "score": -5.687163603853662, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "If", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "orelse": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template19"}}}}], "test": {"_type": "Compare", "ops": [{"_type": "LtE"}], "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template43"}}}, "comparators": [{"n": 5, "_type": "Num"}]}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -2.872255325317383, -2.288818359375e-05, -0.0042209625244140625, -0.00852203369140625, -0.045859336853027344, -0.000392913818359375, -0.03093719482421875, 0.0, -0.9514255523681641, -1.9073486328125e-06, -0.03876686096191406, -0.13619065284729004, -6.079673767089844e-06, -0.008530020713806152, 0.0, -5.340576171875e-05, -0.20668411254882812, -0.000293731689453125, -0.05795097351074219, -7.05718994140625e-05, -0.1567116528749466, -7.152555099310121e-07, -0.0005359649658203125, -0.0036649703979492188, 0.0, -2.6702880859375e-05, -0.000247955322265625, -0.0049114227294921875, -3.814697265625e-06, -6.103515625e-05, -0.00018405914306640625, 0.0, -1.1444091796875e-05, -0.002044677734375, -1.71661376953125e-05, -0.5688795447349548, -5.7220458984375e-06, -6.866455078125e-05, -4.1961669921875e-05, -0.0002231597900390625, 0.0, -5.91278076171875e-05, -5.7220458984375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -0.00018107891082763672, 0.0, -1.52587890625e-05, -0.00176239013671875, -1.52587890625e-05, -0.570286750793457, -7.62939453125e-06, -7.82012939453125e-05, -9.5367431640625e-06], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if player.hero.health <= 5:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 104, 144, 163, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 68, 156], "score": -7.146640175346704, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Template22"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template43"}}, {"args": {"args": [{"_type": "arg", "arg": "x"}], "_type": "arguments"}, "_type": "Lambda", "body": {"_type": "Compare", "ops": [{"_type": "Is"}], "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "comparators": [{"_type": "Template29"}]}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Template22"}}}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "value": {"_type": "Template72"}}], "name": "use"}], "name": "KillCommand"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -0.1933116912841797, -0.004434581845998764, -7.62939453125e-06, -0.00237274169921875, -0.0003719329833984375, -0.0024929046630859375, -0.0005588531494140625, -0.0003490447998046875, -0.0017795562744140625, -2.09808349609375e-05, -0.004516720771789551, -2.3841830625315197e-06, -0.0029354095458984375, -0.009792327880859375, -0.000598907470703125, -1.9073486328125e-06, -0.00818634033203125, -1.9073486328125e-06, -0.000400543212890625, -3.814697265625e-06, -0.0073729753494262695, -1.740455445542466e-05, -0.01907360553741455, -3.814697265625e-06, -0.0022498369216918945, 0.0, -1.9073486328125e-06, -0.006683349609375, -2.47955322265625e-05, -4.709586143493652, -0.5600595474243164, -0.0018024444580078125, -5.7220458984375e-06, -0.0001010894775390625, 0.0, -0.0408782958984375, 0.0, -0.48012399673461914, 0.0, -0.022966384887695312, -1.9073486328125e-06, -0.8717756271362305, -6.866455078125e-05], "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.DEMON)\n        MINION_TYPE.BEAST = True\n"}, {"choice_history": [139, 193, 314], "score": -24.83268165588379, "model_output": {"_type": "Module", "body": []}, "score_history": [-9.5367431640625e-06, 0.0, -24.832672119140625], "inferred_code": ""}], "index": 58}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -0.008768754276381685, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -0.004108428955078125, -1.9073486328125e-05, -7.951256702654064e-05, -9.095255518332124e-05, -1.4784724044147879e-05, -1.1920928244535389e-07, -0.0008397102355957031, -6.079673767089844e-06, -0.000453948974609375, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 108, 311, 136, 138, 291, "spell_damage", "<EOS>", 39, 156], "score": -6.519328076079546, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "Template32"}, {"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -5.519474983215332, -0.0002155303955078125, -0.000301361083984375, -0.000244140625, -0.014399528503417969, -7.62939453125e-05, -0.0001087188720703125, -0.004787445068359375, -0.029756546020507812, -0.6353034973144531, -0.000392913818359375, -0.0004291534423828125, -0.30364465713500977, -0.00010967251000693068, -0.0069255828857421875, -1.9073486328125e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 108, 311, 138, 291, "spell_damage", "<EOS>", 39, 138, 291, "spell_damage", "<EOS>", 39, 156], "score": -6.880736667382735, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}, {"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -5.519474983215332, -0.0002155303955078125, -0.000301361083984375, -0.000244140625, -0.014399528503417969, -7.62939453125e-05, -0.0001087188720703125, -0.004787445068359375, -0.029756546020507812, -0.7587594985961914, -0.0004901885986328125, -0.15335094928741455, -1.2397762475302443e-05, -0.0033941268920898438, -0.0024509429931640625, -0.000152587890625, -0.3772592544555664, -1.0251998901367188e-05, -0.012330055236816406, -5.7220458984375e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "Geomancer", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -7.2921489716827566, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minionGeomancer"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -7.275008678436279, -0.0015618844190612435, -0.009105682373046875, -1.52587890625e-05, -0.003078460693359375, -2.288818359375e-05, -6.556507287314162e-05, -0.00010144196130568162, -1.1924043064936996e-05, -1.1920928244535389e-07, -0.0006989240646362305, -6.079673767089844e-06, -0.0005168914794921875, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minionGeomancer(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.05814715971973, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "KoboldGeomancerGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -8.050088882446289, -8.61870648805052e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -2.2649765014648438e-06, -4.327203714638017e-05, 0.0, -9.5367431640625e-06, -0.0001239776611328125, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.53131103515625e-05, -0.0003681182861328125, -1.33514404296875e-05, -3.814697265625e-06, -1.4305012882687151e-05, -2.3603428417118266e-05, -1.9907753085135482e-05, -2.8967857360839844e-05, -0.0001220703125, -0.0002117156982421875, -6.866455078125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00025960797211155295, -0.0010898236650973558, -0.0001373291015625, -1.52587890625e-05, -0.0035400390625, -1.9073486328125e-05, -7.748601638013497e-05, -9.226373367710039e-05, -1.4665492926724255e-05, -1.1920928244535389e-07, -0.0008463859558105469, -6.079673767089844e-06, -0.0004520416259765625, 0.0], "inferred_code": "class KoboldGeomancerGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "2", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.300418875332745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minion2"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -8.268403053283691, -7.152555099310121e-07, -0.0006732940673828125, -1.33514404296875e-05, -0.027769088745117188, -1.9073486328125e-05, -9.94205183815211e-05, -9.63164638960734e-05, -1.6813028196338564e-05, -1.1920928244535389e-07, -0.0006988048553466797, -7.987022399902344e-06, -0.0006656646728515625, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion2(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 119, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.654479441155672, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -8.622896194458008, -4.57763671875e-05, -1.9073486328125e-06, -3.5285454941913486e-05, -2.2411331883631647e-05, -5.8412379075889476e-06, -6.520748138427734e-05, -0.0003528594970703125, -0.000125885009765625, -0.000110626220703125, -0.000274658203125, -3.814697265625e-05, -7.62939453125e-06, -4.756450653076172e-05, -2.5748922780621797e-05, -0.027307510375976562, -4.57763671875e-05, -0.000514984130859375, -4.1961669921875e-05, -3.480907980701886e-05, -2.372236667724792e-05, -5.7699311582837254e-05, 0.0, -0.0010358095169067383, -1.0013580322265625e-05, -0.000530242919921875, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "Damage", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.68401386936602, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "Damage"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -8.548295021057129, -0.0637800395488739, -0.0016269683837890625, -1.71661376953125e-05, -0.06630706787109375, -3.814697265625e-05, -0.00011062619159929454, -0.0001382732152706012, -1.6341349692083895e-05, -1.1920928244535389e-07, -0.0014278888702392578, -4.172325134277344e-06, -0.0005702972412109375, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def Damage(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "<UNK>", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156], "score": -8.886931386521603, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "Kobold<UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -8.878302574157715, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -0.004108428955078125, -1.9073486328125e-05, -7.951256702654064e-05, -9.095255518332124e-05, -1.4784724044147879e-05, -1.1920928244535389e-07, -0.0008397102355957031, -6.079673767089844e-06, -0.000453948974609375, 0.0], "inferred_code": "class Kobold<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -9.060506658825027, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -0.004108428955078125, -1.9073486328125e-05, -7.951256702654064e-05, -9.095255518332124e-05, -1.4784724044147879e-05, -1.1920928244535389e-07, -8.872225761413574, -3.814697265625e-06, -0.18080806732177734, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, windfury=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 46, 156], "score": -9.130103783878432, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template46"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -0.004108428955078125, -1.9073486328125e-05, -7.951256702654064e-05, -9.095255518332124e-05, -1.4784724044147879e-05, -1.1920928244535389e-07, -0.0008397102355957031, -6.079673767089844e-06, -9.121787071228027, -1.9073486328125e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=5)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 68, 156], "score": -9.141409592899429, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_damage", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -0.004108428955078125, -1.9073486328125e-05, -7.951256702654064e-05, -9.095255518332124e-05, -1.4784724044147879e-05, -1.1920928244535389e-07, -0.0008397102355957031, -6.079673767089844e-06, -9.133094787597656, 0.0], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 108, 311, 136, 138, 291, "buffs", "<EOS>", 23, 189, 303, 79, 171, 62, 302, 93, 213, "Damage", "<EOS>", 110, 156], "score": -9.655565377048333, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "Template32"}, {"_type": "keyword", "arg": "buffs", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Damage"}], "_type": "Call", "func": {"_type": "Template66"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -5.519474983215332, -0.0002155303955078125, -0.000301361083984375, -0.000244140625, -0.014399528503417969, -7.62939453125e-05, -0.0001087188720703125, -0.004787445068359375, -0.029756546020507812, -0.6353034973144531, -0.000392913818359375, -0.0004291534423828125, -2.7667412757873535, -2.1338462829589844e-05, -0.0548248291015625, -1.9073486328125e-06, -0.0001888275146484375, -3.814697265625e-06, -1.9073486328125e-06, -0.13575077056884766, -0.017047882080078125, -0.000408172607421875, -0.0001392364501953125, -0.4335218369960785, -0.030344195663928986, -0.007921218872070312, -1.9073486328125e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True, buffs=[Buff(Damage())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 108, 311, 138, 291, "spell_damage", "<EOS>", 39, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Used", "Power", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 93, 213, "Damage", "Geomancer", "<EOS>", 93, 213, "Target", "Selector", "<EOS>", 110, 156], "score": -11.993546059009532, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "spell_damage", "value": {"_type": "Template38"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "UsedPower"}, {"args": [{"args": [{"_type": "Template16", "hole0": "DamageGeomancer"}], "_type": "Call", "func": {"_type": "Template49"}}, {"_type": "Template16", "hole0": "TargetSelector"}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "KoboldGeomancer"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -5.519474983215332, -0.0002155303955078125, -0.000301361083984375, -0.000244140625, -0.014399528503417969, -7.62939453125e-05, -0.0001087188720703125, -0.004787445068359375, -0.029756546020507812, -0.7587594985961914, -0.0004901885986328125, -0.15335094928741455, -1.2397762475302443e-05, -0.0033941268920898438, -0.0024509429931640625, -0.000152587890625, -2.3341259956359863, 0.0, -0.010404586791992188, -1.9073486328125e-06, -0.0002040863037109375, -3.814697265625e-06, -3.814697265625e-06, -0.14318370819091797, -5.7220458984375e-06, -0.0006561279296875, -9.5367431640625e-06, -0.9581069350242615, -0.539780855178833, -0.00011837475904030725, -0.0042972564697265625, -7.82012939453125e-05, -0.000946044921875, -0.0001201629638671875, -0.01076507568359375, -2.6702880859375e-05, -0.004390716552734375, -3.814697265625e-05, -0.3119373321533203, -3.814697265625e-06, -0.03554054722189903, -0.8607978224754333, -0.005490189418196678, -0.002197265625, -7.62939453125e-06, -0.27898478507995605, -4.6133995056152344e-05, -4.0531158447265625e-06, -0.0001354217529296875, -1.9073486328125e-06], "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1, effects=[Effect(UsedPower(),\n            ActionTag(Give(DamageGeomancer()), TargetSelector()))])\n"}, {"choice_history": [139, 193, 314], "score": -24.566516876220703, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, 0.0, -24.566513061523438], "inferred_code": ""}], "index": 59}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -0.19174087834426246, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -0.003261566162109375, -7.82012939453125e-05, -1.8239019482280128e-05, -1.8000440832111053e-05, -2.8491003831732087e-05, -8.106198947643861e-06, -0.003922321368008852, -3.933906555175781e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -2.5464955652519166, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -2.4639368057250977, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.00023686885833740234, -2.3126602172851562e-05, -0.015826821327209473, -0.00010919563646893948, -9.34600830078125e-05, -0.0001678466796875, 0.0, -3.62396240234375e-05, -3.921923052985221e-05, -3.0517578125e-05, -5.340576171875e-05, -0.04427337646484375, -6.103515625e-05, -2.0861623852397315e-05, -1.9192511899746023e-05, -3.1352021323982626e-05, -6.437280717364047e-06, -0.0038264780305325985, -3.814697265625e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 101, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -3.3299344775700774, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template26"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -3.305281639099121, -0.000164031982421875, -3.814697265625e-06, 0.0, -1.7404556274414062e-05, -3.182837463100441e-05, -7.2479248046875e-05, -9.5367431640625e-05, -0.002674102783203125, -7.43865966796875e-05, -1.8239019482280128e-05, -1.847726889536716e-05, -2.5987612389144488e-05, -9.417489309271332e-06, -0.0037610232830047607, -3.933906555175781e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 106, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -3.850730783072777, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template33"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -3.8251752853393555, -0.0001621246337890625, -1.1444091796875e-05, 0.0, -1.1682510375976562e-05, -3.194758028257638e-05, -5.53131103515625e-05, -9.918212890625e-05, -0.0034961700439453125, -8.20159912109375e-05, -1.835822877183091e-05, -1.8715683836489916e-05, -2.6345238438807428e-05, -8.106198947643861e-06, -0.0038497215136885643, -3.933906555175781e-06, -3.24249267578125e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kor'kron", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -4.550859725520695, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "Kor'kronElite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -4.372597694396973, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -0.003261566162109375, -7.82012939453125e-05, -1.8239019482280128e-05, -1.8000440832111053e-05, -2.8491003831732087e-05, -8.106198947643861e-06, -0.003922321368008852, -3.933906555175781e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 105, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -5.273519039754774, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template31"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -5.248563766479492, -0.0007171630859375, -3.814697265625e-06, 0.0, -9.655952453613281e-06, -2.0265410057618283e-05, -5.14984130859375e-05, -7.43865966796875e-05, -0.002475738525390625, -7.2479248046875e-05, -1.8119810192729346e-05, -1.7165990357170813e-05, -2.586840491858311e-05, -8.4638240878121e-06, -0.0037743751890957355, -3.933906555175781e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "<UNK>", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -5.971751995569775, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK><UNK>"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -5.783116817474365, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -0.003261566162109375, -7.82012939453125e-05, -1.8239019482280128e-05, -1.8000440832111053e-05, -2.8491003831732087e-05, -8.106198947643861e-06, -0.003922321368008852, -3.933906555175781e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 111, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "charge", "<EOS>", 68, 156], "score": -6.356861501707044, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template44"}, {"_type": "Template40"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -2.4639368057250977, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.00023686885833740234, -2.3126602172851562e-05, -0.015826821327209473, -0.00010919563646893948, -9.34600830078125e-05, -0.0001678466796875, 0.0, -3.62396240234375e-05, -3.921923052985221e-05, -3.0517578125e-05, -5.340576171875e-05, -3.1430130004882812, -4.57763671875e-05, -0.0001201629638671875, -0.0009365081787109375, -0.000934600830078125, -6.4849853515625e-05, -0.00014495849609375, -0.4699869155883789, -0.019449234008789062, -0.0003681182861328125, -1.9073486328125e-06, -0.009297728538513184, -5.245207830739673e-06, -9.5367431640625e-06, -0.0027141571044921875, -5.7220458984375e-06, -0.21139442920684814, -4.887578324996866e-05, -2.288818359375e-05, -7.82012939453125e-05], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "divine_shield", "<EOS>", 68, 156], "score": -6.42954269046777, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "divine_shield", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -0.003261566162109375, -7.82012939453125e-05, -1.8239019482280128e-05, -1.8000440832111053e-05, -2.8491003831732087e-05, -8.106198947643861e-06, -6.24169921875, -2.1219253540039062e-05, -4.1961669921875e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, divine_shield=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 111, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "charge", "<EOS>", 68, 156], "score": -6.812530666731391, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template44"}, {"_type": "Template40"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -5.746102333068848, -8.58306884765625e-05, -0.0001354217529296875, -0.0010528564453125, -0.001186370849609375, -8.0108642578125e-05, -0.000186920166015625, -0.6403493881225586, -0.012243270874023438, -0.00045013427734375, -3.814697265625e-06, -0.010182976722717285, -3.6954863844584906e-06, -9.5367431640625e-06, -0.0020732879638671875, -3.814697265625e-06, -0.21386539936065674, -4.673001967603341e-05, -2.288818359375e-05, -7.82012939453125e-05], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Kor'kron", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -6.905614412428349, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "Kor'kronElite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -4.372597694396973, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -2.4639368057250977, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.00023686885833740234, -2.3126602172851562e-05, -0.015826821327209473, -0.00010919563646893948, -9.34600830078125e-05, -0.0001678466796875, 0.0, -3.62396240234375e-05, -3.921923052985221e-05, -3.0517578125e-05, -5.340576171875e-05, -0.04427337646484375, -6.103515625e-05, -2.0861623852397315e-05, -1.9192511899746023e-05, -3.1352021323982626e-05, -6.437280717364047e-06, -0.0038264780305325985, -3.814697265625e-06, -3.4332275390625e-05, 0.0], "inferred_code": "class Kor'kronElite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 108, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "charge", "<EOS>", 68, 156], "score": -6.9634423550737665, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template44"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -2.4639368057250977, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.00023686885833740234, -2.3126602172851562e-05, -0.015826821327209473, -0.00010919563646893948, -9.34600830078125e-05, -0.0001678466796875, 0.0, -3.62396240234375e-05, -3.921923052985221e-05, -3.0517578125e-05, -5.340576171875e-05, -3.1430130004882812, -4.57763671875e-05, -0.0001201629638671875, -0.0009365081787109375, -0.000934600830078125, -6.4849853515625e-05, -0.00014495849609375, -1.0662097930908203, -0.006930351257324219, -0.000396728515625, -1.9073486328125e-06, -0.013595342636108398, -2.503385803720448e-05, -2.288818359375e-05, -0.000255584716796875, 0.0, -0.23237383365631104, -3.790852497331798e-05, -2.6702880859375e-05, -8.7738037109375e-05], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 115, 108, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "charge", "<EOS>", 68, 156], "score": -7.032393008459167, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template44"}, {"_type": "Template36"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -5.746102333068848, -8.58306884765625e-05, -0.0001354217529296875, -0.0010528564453125, -0.001186370849609375, -8.0108642578125e-05, -0.000186920166015625, -0.8598051071166992, -0.004845619201660156, -0.0003662109375, -1.9073486328125e-06, -0.014577269554138184, -2.6941148462356068e-05, -2.09808349609375e-05, -0.000213623046875, 0.0, -0.21919333934783936, -3.3855412766570225e-05, -2.47955322265625e-05, -8.58306884765625e-05], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 103, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.178685666436195, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template28"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole1": 3}], "name": "create_minion"}], "name": "<UNK>Elite"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -7.148463726043701, -0.0054473876953125, -5.7220458984375e-06, 0.0, -1.1801719665527344e-05, -4.0649541915627196e-05, -7.43865966796875e-05, -9.72747802734375e-05, -0.002712249755859375, -7.62939453125e-05, -1.8239019482280128e-05, -1.8596476365928538e-05, -2.5987612389144488e-05, -9.298280929215252e-06, -0.003999682143330574, -3.933906555175781e-06, -3.24249267578125e-05, 0.0], "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n"}, {"choice_history": [139, 193, 314], "score": -24.43041229248047, "model_output": {"_type": "Module", "body": []}, "score_history": [-4.1961669921875e-05, -0.000102996826171875, -24.430267333984375], "inferred_code": ""}], "index": 60}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -0.047614128977784276, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -0.0033111572265625, -0.0002117156982421875, -0.0003032684326171875, -0.00043522584019228816, -2.09808349609375e-05, -0.0004825592041015625, 0.0, -0.0044097900390625, -0.000133514404296875, -0.00010693073272705078, -0.001178741455078125, -1.33514404296875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 115, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -4.55459580576462, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template44"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -3.962970733642578, -0.00028228759765625, -0.0002307891845703125, -0.0001068115234375, -0.00274658203125, -0.00079345703125, -5.53131103515625e-05, -0.013568878173828125, -0.013591766357421875, -0.0002613067626953125, -5.7220458984375e-06, -0.10790669918060303, -6.198883056640625e-06, -0.007814407348632812, -0.0059719085693359375, -9.5367431640625e-06, -0.021816253662109375, -3.814697265625e-06, -0.008687973022460938, -1.33514404296875e-05, -0.00128173828125, -1.52587890625e-05, 0.0, -0.0004749298095703125, -0.00128936767578125, -0.38168907165527344, -1.1444091796875e-05, -0.005918437149375677, -3.814697265625e-06, -0.0007801055908203125, 0.0, -0.0019552703015506268, -0.0001697540283203125, -1.919269561767578e-05, -6.866455078125e-05, -1.9073486328125e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True, auras=[Aura(ChangeAttack(1),\n            MinionSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -6.256011077396977, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -5.473832130432129, -0.000644683837890625, -0.07544898986816406, -5.7220458984375e-06, -4.57763671875e-05, -0.0019022035412490368, -1.9073486328125e-06, -0.000141143798828125, -0.00115966796875, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0012170076370239258, -2.682209014892578e-05, -0.0004546642303466797, -5.817396959173493e-05, -7.62939453125e-06, -0.00217437744140625, -0.4707021713256836, -0.007678985595703125, -9.5367431640625e-06, -6.687641143798828e-05, -4.768367489305092e-06, -0.2063426971435547, -0.0003108978271484375, -0.0002613067626953125, -8.96453857421875e-05, -3.0517108825733885e-05, -3.576278118089249e-07, -0.00029573551728390157, 0.0, -0.002295374870300293, 0.0, -0.00031280517578125, -2.288818359375e-05, -0.000263214111328125, -1.9073486328125e-06, -9.5367431640625e-06, -0.0002002716064453125, -0.0025691986083984375, -0.000232696533203125, -0.000244140625, -0.000423422985477373, -2.47955322265625e-05, -0.0005664825439453125, 0.0, -0.003707289695739746, -0.0001468658447265625, -8.785724639892578e-05, -0.000885009765625, -1.33514404296875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -6.511934386634607, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -6.433600425720215, -1.9073486328125e-06, -5.7220458984375e-06, -1.6450801922474056e-05, -4.291534423828125e-06, -0.0019073486328125, -0.013568878173828125, 0.0, -3.814697265625e-06, 0.0, -0.00013375282287597656, -2.872943878173828e-05, -0.0009063482284545898, -6.985651270952076e-05, -0.0007495880126953125, -1.52587890625e-05, -8.0108642578125e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0003204345703125, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -9.34600830078125e-05, 0.0, -0.010969161987304688, -1.71661376953125e-05, -2.47955322265625e-05, -1.52587890625e-05, -9.548664093017578e-05, -4.649161837733118e-06, -7.62939453125e-06, -9.1552734375e-05, -0.030000686645507812, -0.000308990478515625, -1.9311717551317997e-05, -8.344646857949556e-07, -0.00015711218293290585, -2.0265579223632812e-06, -0.001853346824645996, -1.9073486328125e-06, -0.000301361083984375, -3.814697265625e-05, -0.000354766845703125, -1.9073486328125e-06, -1.1444091796875e-05, -0.00026702880859375, -0.0032501220703125, -0.00020599365234375, -0.0002994537353515625, -0.00043486873619258404, -2.09808349609375e-05, -0.0004901885986328125, 0.0, -0.004305243492126465, -0.0001354217529296875, -0.00010883808135986328, -0.001140594482421875, -1.33514404296875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -6.639298170179984, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -5.473832130432129, -0.000644683837890625, -0.07544898986816406, -5.7220458984375e-06, -4.57763671875e-05, -0.0019022035412490368, -1.9073486328125e-06, -0.000141143798828125, -0.00115966796875, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0012170076370239258, -2.682209014892578e-05, -0.0004546642303466797, -5.817396959173493e-05, -7.62939453125e-06, -0.00217437744140625, -1.0451469421386719, 0.0, 0.0, 0.0, -0.0003719329833984375, 0.0, -0.01262664794921875, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-05, -5.125998541188892e-06, -3.0517578125e-05, -4.38690185546875e-05, -0.00943756103515625, -0.0002498626708984375, -1.990775126614608e-05, -5.960462772236497e-07, -0.00015055872790981084, -2.0265579223632812e-06, -0.002107858657836914, -1.9073486328125e-06, -0.00026702880859375, -3.62396240234375e-05, -0.0002841949462890625, -1.9073486328125e-06, -1.1444091796875e-05, -0.000270843505859375, -0.0030956268310546875, -0.0002155303955078125, -0.000263214111328125, -0.00044082774547860026, -2.09808349609375e-05, -0.0005168914794921875, 0.0, -0.004010319709777832, -0.000141143798828125, -0.00010120868682861328, -0.0011501312255859375, -1.33514404296875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156], "score": -6.919303806216249, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "BothPlayer"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -0.0033111572265625, -0.0002117156982421875, -0.0003032684326171875, -0.00043522584019228816, -2.09808349609375e-05, -0.0004825592041015625, 0.0, -6.874530792236328, -0.00012683868408203125, -0.000232696533203125, -0.0026416778564453125, 0.0], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), BothPlayer())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 304, 90, 209, "1", "<EOS>", 79, 171, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -6.919565560242972, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "func": {"_type": "Template50"}}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -5.763978004455566, -0.005299568176269531, -0.000934600830078125, -0.003785573411732912, -1.9073486328125e-05, -0.23846054077148438, -0.04498863220214844, -0.0039119720458984375, -0.00054168701171875, -0.06359100341796875, -1.33514404296875e-05, -0.0005321502685546875, -3.814697265625e-06, -0.0005893707275390625, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.04871392250061035, -4.0531158447265625e-06, -0.0057048797607421875, 0.0, -0.701148509979248, -0.0001437664031982422, -1.4901099348207936e-05, -0.000110626220703125, -2.288818359375e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)), MinionSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Weapon", "Selector", "<EOS>", 110, 156], "score": -7.138251216799745, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "WeaponSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -0.0033111572265625, -0.0002117156982421875, -0.0003032684326171875, -0.00043522584019228816, -2.09808349609375e-05, -0.0004825592041015625, 0.0, -7.095916748046875, -0.00017547607421875, -7.62939453125e-06, -0.0003681182861328125, -1.1444091796875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), WeaponSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 68, 156], "score": -7.170076885734943, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "charge", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -7.135511875152588, -4.57763671875e-05, -0.00034332275390625, -1.9073486328125e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Hero", "Selector", "<EOS>", 110, 156], "score": -7.176587016970643, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "HeroSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -0.0033111572265625, -0.0002117156982421875, -0.0003032684326171875, -0.00043522584019228816, -2.09808349609375e-05, -0.0004825592041015625, 0.0, -7.133406639099121, -0.0008268356323242188, -1.9073486328125e-06, -0.00057220458984375, -7.62939453125e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), HeroSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 108, 115, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 93, 213, "have", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156], "score": -7.429397835456257, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template36"}, {"_type": "Template44"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "auras", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "have"}, {"_type": "Template16", "hole0": "MinionSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -3.962970733642578, -0.00028228759765625, -0.0002307891845703125, -0.0001068115234375, -0.00274658203125, -0.00079345703125, -5.53131103515625e-05, -0.013568878173828125, -0.013591766357421875, -0.0002613067626953125, -5.7220458984375e-06, -0.10790669918060303, -6.198883056640625e-06, -0.007814407348632812, -0.0059719085693359375, -9.5367431640625e-06, -0.021816253662109375, -3.814697265625e-06, -0.008687973022460938, -1.33514404296875e-05, -0.00128173828125, -1.52587890625e-05, 0.0, -0.0004749298095703125, -0.00128936767578125, -1.154252052307129, -3.814697265625e-06, -1.486121654510498, -0.12893053889274597, -0.3133411407470703, 0.0, -0.17443978786468506, -0.007001280784606934, 0.0, -0.00133514404296875, -1.1444091796875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, charge=True, auras=[Aura(have(), MinionSelector())]\n            )\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 304, 90, 209, "1", "<EOS>", 79, 171, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 93, 213, "Weapon", "Selector", "<EOS>", 110, 156], "score": -7.79765927978724, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "auras", "_type": "Template6", "hole3": {"_type": "List", "elts": [{"args": [{"_type": "Template12", "hole0": 1}, {"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "func": {"_type": "Template50"}}, {"_type": "Template16", "hole0": "WeaponSelector"}], "_type": "Call", "func": {"_type": "Template60"}}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -5.763978004455566, -0.005299568176269531, -0.000934600830078125, -0.003785573411732912, -1.9073486328125e-05, -0.23846054077148438, -0.04498863220214844, -0.0039119720458984375, -0.00054168701171875, -0.06359100341796875, -1.33514404296875e-05, -0.0005321502685546875, -3.814697265625e-06, -0.0005893707275390625, 0.0, -1.9073486328125e-06, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.04871392250061035, -4.0531158447265625e-06, -0.0057048797607421875, 0.0, -1.5769047737121582, -0.0025644302368164062, -1.1801719665527344e-05, -3.62396240234375e-05, -1.71661376953125e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.BEAST)), WeaponSelector())])\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 94, 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "_", "<EOS>", 315, 158, 283, "2", "<EOS>", "2", "<EOS>", 156], "score": -7.880265682547815, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"args": [{"_type": "Template34"}, {"_type": "arg", "arg": "_"}], "_type": "arguments"}, "_type": "FunctionDef", "body": [{"_type": "Template9", "hole0": 2, "hole1": 2}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -5.473832130432129, -0.000644683837890625, -0.07544898986816406, -5.7220458984375e-06, -4.57763671875e-05, -0.0019022035412490368, -1.9073486328125e-06, -0.000141143798828125, -0.00115966796875, -2.47955322265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0012170076370239258, -2.682209014892578e-05, -0.0004546642303466797, -5.817396959173493e-05, -7.62939453125e-06, -0.00217437744140625, -0.4707021713256836, -0.007678985595703125, -9.5367431640625e-06, -6.687641143798828e-05, -4.768367489305092e-06, -1.7177915573120117, -7.43865966796875e-05, -0.0029811859130859375, -0.000255584716796875, -0.000148773193359375, -3.814697265625e-06, -0.04575300216674805, -6.4373016357421875e-06, -0.0001506805419921875, -0.07231330871582031, -0.0013427734375, -2.2411095415009186e-05, -0.00015651127614546567, -0.0025730133056640625, -7.987022399902344e-06, -1.1444091796875e-05], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, CARD_RARITY.COMMON)\n\n    def create_minion(self, _):\n        return Minion(2, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "User", "<EOS>", 68, 156], "score": -8.014234104668049, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "User", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole1": 4}], "name": "create_minion"}], "name": "Leokk"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -7.655677318572998, -9.5367431640625e-05, -0.32428550720214844, -1.9073486328125e-06], "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, User=True)\n"}, {"choice_history": [139, 193, 314], "score": -25.396955490112305, "model_output": {"_type": "Module", "body": []}, "score_history": [-0.0002689361572265625, -7.62939453125e-06, -25.396678924560547], "inferred_code": ""}], "index": 61}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -0.29342439419610855, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -0.0066242218017578125, -0.0001430511474609375, -0.000110626220703125, -0.000141143798828125, -8.392333984375e-05, -0.0011806488037109375, -0.013223648071289062, -0.004534721374511719, -0.2027111053466797, -0.000148773193359375], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 111, 156], "score": -1.992949273651675, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template40"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -0.0066242218017578125, -0.0001430511474609375, -0.000110626220703125, -0.000141143798828125, -8.392333984375e-05, -0.0011806488037109375, -0.013223648071289062, -0.004534721374511719, -1.9021196365356445, -0.0002651214599609375], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 108, 156], "score": -3.7020385528264796, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -0.0066242218017578125, -0.0001430511474609375, -0.000110626220703125, -0.000141143798828125, -8.392333984375e-05, -0.0011806488037109375, -0.013223648071289062, -0.004534721374511719, -3.6087121963500977, -0.0027618408203125], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 119, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -3.954494746266164, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -3.256847381591797, -0.0001773834228515625, -1.9073486328125e-06, -0.2816010117530823, -2.86102294921875e-05, -3.099436753473128e-06, -0.00017762182687874883, -0.000957489013671875, -0.10030937194824219, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.0001354217529296875, -2.0265579223632812e-06, -0.003915309906005859, 0.0, -0.0028200149536132812, -0.005664825439453125, -0.009420394897460938, -3.814697265625e-06, -0.00278472900390625, -1.9073486328125e-06, -0.0002231597900390625, -0.03816032409667969, -0.0002002716064453125, -0.000110626220703125, -0.0001239776611328125, -2.288818359375e-05, -0.0009374618530273438, -0.021448135375976562, -0.0025424957275390625, -0.21484661102294922, -0.0001659393310546875], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, False)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Gallywix's", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 119, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -5.137821633965359, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Gallywix's Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -3.256847381591797, -0.0001773834228515625, -1.9073486328125e-06, -1.4828912019729614, -2.6702880859375e-05, -0.00015889365749899298, -0.0003399848937988281, -0.001678466796875, -0.10424327850341797, -2.6702880859375e-05, -5.7220458984375e-06, 0.0, -0.000156402587890625, -2.0265579223632812e-06, -0.0036001205444335938, 0.0, -0.0029811859130859375, -0.0056934356689453125, -0.009019851684570312, -1.9073486328125e-06, -0.0023441314697265625, -1.9073486328125e-06, -0.0002002716064453125, -0.029890060424804688, -0.0001983642578125, -0.000110626220703125, -0.000118255615234375, -2.47955322265625e-05, -0.0009336471557617188, -0.02196025848388672, -0.0025196075439453125, -0.2006826400756836, -0.0001621246337890625], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Justice\", 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, False)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 119, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 111, 156], "score": -5.542580874501027, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template40"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -3.256847381591797, -0.0001773834228515625, -1.9073486328125e-06, -0.2816010117530823, -2.86102294921875e-05, -3.099436753473128e-06, -0.00017762182687874883, -0.000957489013671875, -0.10030937194824219, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -0.0001354217529296875, -2.0265579223632812e-06, -0.003915309906005859, 0.0, -0.0028200149536132812, -0.005664825439453125, -0.009420394897460938, -3.814697265625e-06, -0.00278472900390625, -1.9073486328125e-06, -0.0002231597900390625, -0.03816032409667969, -0.0002002716064453125, -0.000110626220703125, -0.0001239776611328125, -2.288818359375e-05, -0.0009374618530273438, -0.021448135375976562, -0.0025424957275390625, -1.802703857421875, -0.0003948211669921875], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, False)\n\n    def create_weapon(self, player):\n        return Weapon(1, 3)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -5.726840540032015, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -5.32313346862793, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -1.1086463018727954e-05, -4.053113570989808e-06, -1.9073486328125e-06, -5.340576171875e-05, -0.0002956390380859375, -4.1961669921875e-05, -7.62939453125e-06, -2.288818359375e-05, -7.05718994140625e-05, -0.07801246643066406, -3.814697265625e-05, -1.9073486328125e-06, -0.000364733423339203, -6.103515625e-05, -2.7418097943154862e-06, -3.2067124266177416e-05, -0.0001697540283203125, -0.0002231597900390625, 0.0, -1.9073486328125e-06, 0.0, -0.00011265277862548828, -8.106231689453125e-06, -0.004615426063537598, -2.0265579223632812e-06, -0.0008983612060546875, -0.0003299713134765625, -5.53131103515625e-05, -0.041037678718566895, -3.576278118089249e-07, -0.0008335113525390625, -0.0012378692626953125, -0.000682830810546875, -6.866455078125e-05, -9.34600830078125e-05, -6.866455078125e-05, -0.0021209716796875, -0.02125263214111328, -0.0034961700439453125, -0.24586009979248047, -0.0002231597900390625], "inferred_code": "class <UNK>Justice(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -5.841085103030991, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -5.577012062072754, -0.00011157983681187034, -0.0013275146484375, -1.9073486328125e-05, -1.33514404296875e-05, -0.008798599243164062, 0.0, -0.0003070831298828125, -0.008575439453125, -0.00012969970703125, -6.866455078125e-05, -0.0001277923583984375, -0.0001678466796875, -0.0015745162963867188, -0.011117935180664062, -0.0053653717041015625, -0.17258167266845703, -0.000141143798828125], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 102, 94, 119, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -6.300444396076955, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -3.256847381591797, -0.0001773834228515625, -1.9073486328125e-06, -0.2816010117530823, -2.86102294921875e-05, -3.099436753473128e-06, -0.00017762182687874883, -0.000957489013671875, -2.477452278137207, -0.00183868408203125, -0.0004329681396484375, -0.001239776611328125, -0.0001049041748046875, -0.005233883857727051, -3.814697265625e-06, -0.0006103515625, -0.00835418701171875, -0.000278472900390625, -0.000514984130859375, -0.0002536773681640625, -1.71661376953125e-05, -0.0007190704345703125, -0.013090133666992188, -0.003116607666015625, -0.23641014099121094, -0.000156402587890625], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 99, 108, 156], "score": -6.532707002228335, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template23"}, {"_type": "Template36"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -0.0066242218017578125, -0.0001430511474609375, -0.000110626220703125, -0.000141143798828125, -8.392333984375e-05, -0.0011806488037109375, -0.013223648071289062, -6.277972221374512, -0.16625404357910156, -0.0024509429931640625], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(CARD_RARITY.FREE, 2)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 120, 156], "score": -6.642068173950747, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template52"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -0.0066242218017578125, -0.0001430511474609375, -0.000110626220703125, -0.000141143798828125, -8.392333984375e-05, -0.0011806488037109375, -0.013223648071289062, -0.004534721374511719, -6.550811290740967, -0.0006923675537109375], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 6)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 303, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156], "score": -6.927164883177284, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template38"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Template79"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -6.637762069702148, -0.000217437744140625, -1.9073486328125e-06, -0.00010943325469270349, -0.000202178955078125, -9.65590606938349e-06, -1.7642903912928887e-05, -0.0002880096435546875, -0.00014495849609375, -1.9073486328125e-06, -0.0073528289794921875, -2.2649765014648438e-06, -0.000316619873046875, -0.013769149780273438, -0.000293731689453125, -7.82012939453125e-05, -0.000133514404296875, -0.0001125335693359375, -0.0020990371704101562, -0.00975799560546875, -0.004969596862792969, -0.23848438262939453, -0.000217437744140625], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 115, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 32, 213, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "summon", "<EOS>", 304, 114, 84, 194, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 156], "score": -9.457211005908675, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Template16", "hole0": "<UNK>"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "<UNK>"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "use"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -5.906134605407715, 0.0, -0.000244140625, -0.0041713714599609375, -0.0031147003173828125, -0.44161319732666016, -0.000919342041015625, -6.29425048828125e-05, -1.71661376953125e-05, -0.10730195045471191, -3.814697265625e-06, -0.000705718994140625, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.012387275695800781, -1.9073486328125e-06, -0.00310516357421875, -0.0002288818359375, -0.30869483947753906, -0.08251762390136719, -0.0007610321044921875, -9.918212890625e-05, -3.814697265625e-06, -0.0012903213500976562, 0.0, -0.6727339029312134, -8.857245120452717e-05, -0.007468223571777344, -0.000274658203125, -0.859660267829895, -0.09800168871879578, -0.017690658569335938, -0.003215789794921875, -0.0001373291015625, -2.09808349609375e-05, -0.006305694580078125, -1.9073486328125e-06, -0.6818943023681641, -7.62939453125e-06, -0.0833585262298584, -4.279544737073593e-05, -0.041354767978191376, -1.9550323486328125e-05, -0.000667572021484375, -0.0002231597900390625, -0.0030727386474609375, 0.0, -0.00023627281188964844, 0.0, -0.000537872314453125, 0.0, -5.7220458984375e-06, 0.0, -0.009072303771972656, -1.1444091796875e-05, -2.6702880859375e-05, -0.028947830200195312, -0.0001010894775390625, -0.000751495361328125, -0.0083848237991333, -1.9073486328125e-06, -9.5367431640625e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 4):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n"}, {"choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 115, 316, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 32, 213, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "<UNK>", "<EOS>", "summon", "<EOS>", 304, 114, 84, 194, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 156], "score": -9.51261710801532, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template63"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Template16", "hole0": "<UNK>"}}, {"_type": "Expr", "value": {"args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}, {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template43"}}], "_type": "Call", "func": {"_type": "Name", "id": "len"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "summon", "value": {"_type": "Name", "id": "<UNK>"}}}}], "target": {"_type": "Name", "id": "i"}, "iter": {"args": [{"_type": "Template55"}, {"_type": "Template44"}], "_type": "Call", "func": {"_type": "Name", "id": "range"}}}], "name": "create_weapon"}], "name": "<UNK>Justice"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -5.024430274963379, -0.35225582122802734, -1.0124950408935547, -0.0004253387451171875, -4.9591064453125e-05, -1.71661376953125e-05, -0.19762444496154785, -3.814697265625e-06, -0.0005645751953125, -1.9073486328125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0056705474853515625, -1.9073486328125e-06, -0.00174713134765625, -0.0001964569091796875, -0.27464962005615234, -0.08642196655273438, -0.0010929107666015625, -9.72747802734375e-05, -3.814697265625e-06, -0.0008869171142578125, 0.0, -0.7355871200561523, -9.65594663284719e-05, -0.007931709289550781, -0.00026702880859375, -1.0547783374786377, -0.10976050794124603, -0.019618988037109375, -0.0031261444091796875, -8.0108642578125e-05, -2.47955322265625e-05, -0.0064907073974609375, -1.9073486328125e-06, -0.3805065155029297, -1.9073486328125e-06, -0.06869852542877197, -8.749627158977091e-05, -0.04849492385983467, -1.3828277587890625e-05, -0.0008182525634765625, -0.000274658203125, -0.0030851364135742188, 0.0, -0.00023806095123291016, 0.0, -0.0004978179931640625, 0.0, -5.7220458984375e-06, 0.0, -0.008360862731933594, -1.1444091796875e-05, -2.47955322265625e-05, -0.03152275085449219, -9.1552734375e-05, -0.000743865966796875, -0.008145451545715332, -1.9073486328125e-06, -9.5367431640625e-06], "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        super().use(player, game)\n        for i in range(0, 4):\n            <UNK> = <UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n"}, {"choice_history": [139, 193, 314], "score": -26.51875114440918, "model_output": {"_type": "Module", "body": []}, "score_history": [-8.392333984375e-05, -0.000118255615234375, -26.5185489654541], "inferred_code": ""}], "index": 62}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -0.029899791039490253, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -0.0002551987417973578, -0.000171661376953125, -3.814697265625e-05, -0.00091552734375, -3.62396240234375e-05, -6.222722731763497e-05, -6.0794889577664435e-05, -0.00011181754234712571, -1.1920928244535389e-07, -0.0038830037228763103, 0.0, -6.67572021484375e-05, 0.0], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -5.896756254376662, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -5.844943046569824, -0.02288639545440674, -0.0013921244535595179, -3.457069396972656e-05, -0.000522613525390625, -0.0002498626708984375, -0.000629425048828125, -9.5367431640625e-05, -0.0002231597900390625, -4.780270319315605e-05, -0.00020943149866070598, -0.00016021728515625, -3.4332275390625e-05, -0.0008716583251953125, -3.62396240234375e-05, -6.020066939527169e-05, -6.4490144723095e-05, -0.00011467852164059877, -1.1920928244535389e-07, -0.004075765144079924, 0.0, -6.67572021484375e-05, 0.0], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.210913441253041, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -6.181514739990234, -0.002040863037109375, -0.0027790069580078125, -3.814697265625e-06, -8.58306884765625e-05, -0.0006885528564453125, -0.00010573844338068739, -0.0004536281630862504, -0.00019073486328125, -4.9591064453125e-05, -0.0012664794921875, -4.57763671875e-05, -6.711477908538654e-05, -4.60137271147687e-05, -0.0001085989351850003, -2.3841855067985307e-07, -0.00357830454595387, 0.0, -6.67572021484375e-05, 0.0], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the', 6, CHARACTER_CLASS.ALL, CARD_RARITY\n            .COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -6.236333554247267, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.965426445007324, 0.0, -0.004283905029296875, -5.7220458984375e-06, 0.0, -5.638440416078083e-05, -5.078315734863281e-05, -0.00017905139247886837, -7.271766662597656e-05, -9.381723066326231e-05, -0.0008544921875, -0.002567290561273694, -4.017353057861328e-05, -0.00022125244140625, -0.001956939697265625, -0.0002899169921875, 0.0, -2.6702880859375e-05, 0.0, -0.03547334671020508, 0.0, -0.011288642883300781, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.19862079620361328, -5.841255187988281e-06, -6.103515625e-05, -3.0517578125e-05, -0.00042366981506347656, -1.5139551578613464e-05, -0.000164031982421875, -3.62396240234375e-05, -0.0016689300537109375, -0.0007781982421875, -5.0663868023548275e-05, -0.00026079738745465875, -0.00020801846403628588, -2.861022494471399e-06, -0.006558651570230722, -3.814697265625e-06, -0.0002002716064453125, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 50, 156], "score": -6.45662422540407, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_targetable", "_type": "Template6", "hole3": {"_type": "Template51"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -0.0002551987417973578, -0.000171661376953125, -3.814697265625e-05, -0.00091552734375, -3.62396240234375e-05, -6.222722731763497e-05, -6.0794889577664435e-05, -0.00011181754234712571, -1.1920928244535389e-07, -6.150749683380127, -1.1920928244535389e-07, -0.27991676330566406, -7.62939453125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, spell_targetable=False)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "windfury", "<EOS>", 68, 156], "score": -7.09461601140719, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "windfury", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -0.0002551987417973578, -0.000171661376953125, -3.814697265625e-05, -0.00091552734375, -3.62396240234375e-05, -6.222722731763497e-05, -6.0794889577664435e-05, -0.00011181754234712571, -1.1920928244535389e-07, -7.0686163902282715, -1.9073486328125e-06, -4.57763671875e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, windfury=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 119, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.313456520623269, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -7.069507598876953, -0.0003871917724609375, -1.71661376953125e-05, -4.3510677642188966e-05, -5.6862831115722656e-05, -0.0008153914241120219, -5.9723854064941406e-05, -3.552426278474741e-05, -0.000244140625, -0.0036429164465516806, -0.005747079849243164, -0.20659637451171875, -0.00156402587890625, -7.82012939453125e-05, -0.000209808349609375, -0.0072765350341796875, -2.86102294921875e-05, -0.00014412403106689453, -2.861022494471399e-06, -0.0001163482666015625, -4.76837158203125e-05, -0.0001850128173828125, -8.20159912109375e-05, -6.782998389098793e-05, -3.957677472499199e-05, -0.00017023019609041512, -1.1920928244535389e-07, -0.00922322180122137, 0.0, -7.62939453125e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.546986921641285, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -6.375677108764648, -0.030916213989257812, -1.9073486328125e-06, -5.364284152165055e-05, -3.719329833984375e-05, -0.00044500819058157504, -6.54458999633789e-05, -3.719326196005568e-05, -0.00019276142120361328, -0.003812432289123535, -0.0026895999908447266, -0.26184654235839844, -0.0126800537109375, -0.016364097595214844, -0.0005168914794921875, -0.6018104553222656, 0.0, -1.52587890625e-05, -0.000579833984375, -0.1832742691040039, 0.0, -0.037369489669799805, -5.7220458984375e-06, -0.0002346038818359375, -6.866455078125e-05, -0.0006486177444458008, -9.655950634623878e-06, -7.62939453125e-05, -8.392333984375e-05, -0.0004711151123046875, -0.0001373291015625, -5.626676284009591e-05, -5.161638546269387e-05, -0.00016307721671182662, -1.1920928244535389e-07, -0.009533404372632504, 0.0, -7.05718994140625e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 119, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.955059631102806, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -6.375677108764648, -0.030916213989257812, -1.9073486328125e-06, -5.364284152165055e-05, -3.719329833984375e-05, -0.00044500819058157504, -6.54458999633789e-05, -3.719326196005568e-05, -0.00019276142120361328, -0.003812432289123535, -0.0026895999908447266, -0.26184654235839844, -0.0126800537109375, -0.016364097595214844, -0.0005168914794921875, -1.214482307434082, -0.016065597534179688, -0.002864837646484375, -0.00031638136715628207, -0.0003275871276855469, -6.29425048828125e-05, -4.38690185546875e-05, -0.0001983642578125, -6.103515625e-05, -9.930029045790434e-05, -9.65590606938349e-06, -0.0001678449334576726, -1.1920928244535389e-07, -0.007966398261487484, 0.0, -6.866455078125e-05, 0.0], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -7.9670885242042, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.965426445007324, 0.0, -0.004283905029296875, -5.7220458984375e-06, 0.0, -5.638440416078083e-05, -5.078315734863281e-05, -0.00017905139247886837, -7.271766662597656e-05, -9.381723066326231e-05, -0.0008544921875, -0.002567290561273694, -4.017353057861328e-05, -0.00022125244140625, -0.001956939697265625, -0.0002899169921875, 0.0, -2.6702880859375e-05, 0.0, -0.03547334671020508, 0.0, -0.011288642883300781, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -1.9280977249145508, 0.0, -0.003814697265625, -9.5367431640625e-05, -0.0006923675537109375, -8.583057933719829e-06, -0.0001468658447265625, -4.00543212890625e-05, -0.0006465911865234375, -0.0005950927734375, -4.875654121860862e-05, -0.00026568371686153114, -0.0001720178552204743, -3.099440846199286e-06, -0.004982942249625921, -3.814697265625e-06, -0.0002307891845703125, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "spell_targetable", "<EOS>", 68, 156], "score": -8.034873203065203, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "spell_targetable", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -0.0002551987417973578, -0.000171661376953125, -3.814697265625e-05, -0.00091552734375, -3.62396240234375e-05, -6.222722731763497e-05, -6.0794889577664435e-05, -0.00011181754234712571, -1.1920928244535389e-07, -6.150749683380127, -1.1920928244535389e-07, -1.8581714630126953, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, spell_targetable=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.053136069855093, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion"}], "name": "LordOfThe"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -8.020682334899902, -2.47955322265625e-05, -0.0010986328125, -9.5367431640625e-06, -9.5367431640625e-06, -2.86102294921875e-05, -0.0001671314239501953, -1.2159336620243266e-05, 0.0, -1.1444091796875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -0.0040798187255859375, 0.0, -0.0111083984375, -3.62396240234375e-05, -1.9073486328125e-06, -5.1616290875244886e-05, -6.437301635742188e-05, -0.00010251987987430766, -5.173683166503906e-05, -3.5047494748141617e-05, -0.002132415771484375, -0.003155588870868087, -4.589557647705078e-05, -0.0003948211669921875, -0.0002727508544921875, -0.0002040863037109375, -8.58306884765625e-05, -0.000335693359375, -6.34190218988806e-05, -0.0002582974557299167, -0.000171661376953125, -3.814697265625e-05, -0.0009212493896484375, -3.814697265625e-05, -6.222722731763497e-05, -6.031808152329177e-05, -0.00011169833305757493, -1.1920928244535389e-07, -0.003881096374243498, 0.0, -6.67572021484375e-05, 0.0], "inferred_code": "class LordOfThe(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "6", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156], "score": -8.387010677437495, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"hole2": "taunt", "_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole1": 5}], "name": "create_minion6"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -8.35695743560791, -1.823901038733311e-05, -0.0004024505615234375, -4.9591064453125e-05, -0.00102996826171875, -2.86102294921875e-05, -5.8054902183357626e-05, -5.6622808187967166e-05, -0.00012862590665463358, -1.1920928244535389e-07, -0.0039101834408938885, 0.0, -7.05718994140625e-05, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion6(self, player):\n        return Minion(6, 5, taunt=True)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 153, 200, 20, 172, 47, 303, 123, 123, 311, 138, 291, "charge", "<EOS>", 68, 138, 291, "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Attack", "<EOS>", 79, 171, 54, 304, 79, 171, 25, 194, "Transform", "<EOS>", 302, 93, 213, "Bear", "Lord", "<EOS>", 92, 79, 172, 25, 194, "Greater", "Than", "<EOS>", 302, 79, 171, 25, 194, "Count", "<EOS>", 302, 79, 171, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "value", "<EOS>", 53, 110, 156], "score": -12.74577498016879, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template3"}, "_type": "FunctionDef", "body": [{"_type": "Return", "value": {"args": [{"_type": "Template58"}, {"_type": "Template58"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "charge", "value": {"_type": "Template72"}}, {"_type": "keyword", "arg": "effects", "value": {"_type": "List", "elts": [{"args": [{"_type": "Template16", "hole0": "Attack"}, {"args": [{"args": [{"_type": "Template16", "hole0": "BearLord"}], "_type": "Call", "func": {"_type": "Name", "id": "Transform"}}, {"_type": "Template15"}, {"args": [{"args": [{"args": [{"args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template61"}}], "_type": "Call", "func": {"_type": "Template50"}}], "_type": "Call", "func": {"_type": "Name", "id": "Count"}}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "value", "value": {"_type": "Template55"}}], "func": {"_type": "Name", "id": "GreaterThan"}}], "_type": "Call", "func": {"_type": "Template56"}}], "_type": "Call", "func": {"_type": "Template57"}}, {"_type": "Template39_expr_seq"}]}}], "func": {"_type": "Template47"}}}], "name": "create_minion"}], "name": "LordOfTheArena"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -0.0002551987417973578, -0.000171661376953125, -3.814697265625e-05, -7.052926063537598, -0.0004177093505859375, -0.000110626220703125, -0.00223541259765625, -0.0003814697265625, -0.000293731689453125, -0.5062532424926758, -0.10552310943603516, -0.0016078948974609375, -0.045678138732910156, -7.62939453125e-06, -0.16336703300476074, -8.225440979003906e-05, -0.0028257369995117188, -0.5910243988037109, -7.2479248046875e-05, -1.0591975450515747, -9.5367431640625e-06, -0.0007171630859375, -1.1444091796875e-05, -0.003559112548828125, -3.62396240234375e-05, -2.86102294921875e-05, -0.001068115234375, -8.0108642578125e-05, -0.0010833740234375, -7.82012939453125e-05, -0.7537468671798706, -3.0517578125e-05, -0.0003299713134765625, -5.7220458984375e-05, -0.2247447967529297, -0.5703182220458984, -0.017801284790039062, -0.0050601959228515625, -7.62939453125e-06, 0.0, -0.12150454521179199, -4.5299530029296875e-05, -0.0001773834228515625, -4.9591064453125e-05, -3.814697265625e-06, -0.39480677247047424, -0.11220801621675491, -3.123283022432588e-05, -0.027284622192382812, -0.13729476928710938, -0.2859344482421875, -9.72747802734375e-05, -9.5367431640625e-06, -0.03037548065185547, -0.001415252685546875, -1.9073486328125e-05, -0.000133514404296875, -3.24249267578125e-05, -0.0005950927734375, -6.29425048828125e-05, 0.0, -0.012036323547363281, -1.1444091796875e-05, -4.38690185546875e-05, -0.024106979370117188, -6.103515625e-05, -0.03237724304199219, -0.07602310180664062, -0.13649559020996094, -0.000118255615234375, -0.037097930908203125, -6.29425048828125e-05, -0.014484405517578125, -1.1444091796875e-05, -1.71661376953125e-05, 0.0, -0.000141143798828125, -5.7220458984375e-06, -0.02033519744873047, -7.62939453125e-06, -0.0002117156982421875, -3.0517578125e-05, -5.7220458984375e-06, -0.010365486145019531, -3.814697265625e-06, -0.12524700164794922, -0.008853912353515625, -1.9073486328125e-06], "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True, effects=[Effect(Attack(),\n            ActionTag(Transform(BearLord()), SelfSelector(), GreaterThan(\n            Count(MinionSelector(IsType(MINION_TYPE.BEAST))), value=0)))])\n"}, {"choice_history": [139, 193, 314], "score": -20.823856353759766, "model_output": {"_type": "Module", "body": []}, "score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -20.823835372924805], "inferred_code": ""}], "index": 63}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -0.13130470339160638, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -0.00028228759765625, -0.000171661376953125, -0.00279998779296875, -0.000102996826171875, -7.62939453125e-06, -0.0045909881591796875, -5.14984130859375e-05, -6.29425048828125e-05, -0.0011237564031034708, -4.172325134277344e-06, -3.1470593967242166e-05, -3.814697265625e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -2.207914247698909, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.176947593688965, -2.47955322265625e-05, -0.024044036865234375, -5.7220458984375e-06, -1.9073486328125e-06, -2.9802276912960224e-06, -7.784352055750787e-05, -3.516618744470179e-05, -0.00010466571256984025, -0.0002536773681640625, -2.86102294921875e-05, -6.4849853515625e-05, -7.05718994140625e-05, -6.67572021484375e-05, -0.0001678466796875, -0.00568272452801466, -4.291534423828125e-06, -2.8610154458874604e-06, -3.814697265625e-06, -1.9073486328125e-06], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 97, 119, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -6.051589117553476, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template20"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -0.00028228759765625, -0.000171661376953125, -5.905618667602539, -0.000270843505859375, -3.814697265625e-05, -0.019649505615234375, -8.7738037109375e-05, -7.82012939453125e-05, -0.0032826606184244156, -2.2649765014648438e-06, -3.3735301258275285e-05, -1.9073486328125e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -6.3652323225302325, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.176947593688965, -2.47955322265625e-05, -3.804142951965332, -1.9073486328125e-05, -1.9073486328125e-06, -3.933898824470816e-06, -7.617467053933069e-05, -3.492777614155784e-05, -5.698195309378207e-05, -0.0032482147216796875, -0.0004482269287109375, -0.00029754638671875, -0.0001049041748046875, -0.015616416931152344, -0.0002079010009765625, -5.7220458984375e-06, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.2856600284576416, -1.239776611328125e-05, -0.025499343872070312, -6.866455078125e-05, -0.05234942585229874, -8.344646857949556e-07, -2.74177327810321e-05, 0.0, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -6.536781122053746, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "keyword", "arg": "minion_type", "value": {"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -0.00028228759765625, -0.000171661376953125, -0.00279998779296875, -0.000102996826171875, -7.62939453125e-06, -5.926285743713379, -1.1444091796875e-05, -0.00011646747589111328, -7.05718994140625e-05, -0.0007610321044921875, 0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.62939453125e-06, -0.14610004425048828, -1.9073486328125e-06, -2.86102294921875e-05, -0.0001163482666015625, -0.33778923749923706, -1.1920928244535389e-07, -5.018422962166369e-05, 0.0, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 310, 135, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.253865457275197, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -0.00028228759765625, -0.000171661376953125, -0.00279998779296875, -0.000102996826171875, -7.62939453125e-06, -0.0045909881591796875, -5.14984130859375e-05, -6.29425048828125e-05, -7.123517990112305, -2.491474151611328e-05, -0.0001753410033416003, -5.7220458984375e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -7.640440459459114, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.176947593688965, -2.47955322265625e-05, -0.024044036865234375, -5.7220458984375e-06, -1.9073486328125e-06, -2.9802276912960224e-06, -7.784352055750787e-05, -3.516618744470179e-05, -0.00010466571256984025, -0.0002536773681640625, -2.86102294921875e-05, -6.4849853515625e-05, -7.05718994140625e-05, -6.67572021484375e-05, -0.0001678466796875, -5.438160419464111, -7.867813110351562e-06, -4.589421223499812e-05, -5.7220458984375e-06, -1.9073486328125e-06], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -7.859258976214278, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.176947593688965, -2.47955322265625e-05, -3.804142951965332, -1.9073486328125e-05, -1.9073486328125e-06, -3.933898824470816e-06, -7.617467053933069e-05, -3.492777614155784e-05, -5.698195309378207e-05, -0.0032482147216796875, -0.0004482269287109375, -0.00029754638671875, -0.0001049041748046875, -0.015616416931152344, -0.0002079010009765625, -5.7220458984375e-06, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.4975616931915283, -1.9073486328125e-06, -7.82012939453125e-05, -8.96453857421875e-05, -0.35987791419029236, -5.6028297876764555e-06, -2.9802140488754958e-05, 0.0, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 310, 135, 154, 205, "3", "<EOS>", "1", "<EOS>", 156], "score": -8.296254738340167, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -0.00028228759765625, -0.000171661376953125, -0.00279998779296875, -0.000102996826171875, -7.62939453125e-06, -0.0045909881591796875, -5.14984130859375e-05, -6.29425048828125e-05, -8.16596794128418, -1.1801719665527344e-05, -0.00012587656965479255, -7.62939453125e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(3, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 115, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -8.595830223019448, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template44"}, {"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -7.876617431640625, -0.2512054443359375, 0.0, -6.41325386823155e-05, -0.00012421453720889986, -6.9854584580753e-05, -0.0002540349669288844, -0.0003662109375, -9.72747802734375e-05, -0.0027713775634765625, -4.00543212890625e-05, -0.34127044677734375, -8.7738037109375e-05, -7.05718994140625e-05, -0.0014478261582553387, -2.622604142743512e-06, -1.7165857570944354e-05, -3.814697265625e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__(4, 'Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 122, 95, 94, 119, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -8.67207791573378, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -8.536757469177246, -0.000804901123046875, -0.0023288726806640625, -0.0001125335693359375, -3.814697265625e-06, -0.008586883544921875, -4.76837158203125e-05, -5.340576171875e-05, -0.0012779528042301536, -4.291534423828125e-06, -2.47951211349573e-05, -3.814697265625e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 0, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156], "score": -8.722607116696508, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}, {"_type": "Attribute", "attr": "DRAGON", "value": {"_type": "Name", "id": "MINION_TYPE"}}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.176947593688965, -2.47955322265625e-05, -3.804142951965332, -1.9073486328125e-05, -1.9073486328125e-06, -3.933898824470816e-06, -7.617467053933069e-05, -3.492777614155784e-05, -5.698195309378207e-05, -0.0032482147216796875, -0.0004482269287109375, -0.00029754638671875, -0.0001049041748046875, -0.015616416931152344, -0.0002079010009765625, -5.7220458984375e-06, -3.814697265625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.4975616931915283, -1.9073486328125e-06, -7.82012939453125e-05, -8.96453857421875e-05, -1.2230314016342163, -4.649161837733118e-06, -0.0002215941494796425, -1.9073486328125e-06, -1.9073486328125e-06], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 154, 205, "3", "<EOS>", "1", "<EOS>", 156], "score": -8.888228890012215, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 3, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.176947593688965, -2.47955322265625e-05, -0.024044036865234375, -5.7220458984375e-06, -1.9073486328125e-06, -2.9802276912960224e-06, -7.784352055750787e-05, -3.516618744470179e-05, -0.00010466571256984025, -0.0002536773681640625, -2.86102294921875e-05, -6.4849853515625e-05, -7.05718994140625e-05, -6.67572021484375e-05, -0.0001678466796875, -6.685990333557129, -4.768371127283899e-06, -9.41746293392498e-06, -3.814697265625e-06, -1.9073486328125e-06], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False)\n\n    def create_minion(self, player):\n        return Minion(3, 1)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156], "score": -9.234826200053021, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template35"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mechanical Dragonling Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}], "_type": "Call", "keywords": [{"_type": "Template13"}], "func": {"_type": "Template10"}}}], "name": "__init__"}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "name": "MechanicalDragonling"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -9.10376262664795, -0.0005368455313146114, -0.0001685619354248047, -0.0006465911865234375, -0.000213623046875, -0.0009613037109375, -0.0001354217529296875, -2.288818359375e-05, -0.0053844451904296875, -4.9591064453125e-05, -6.67572021484375e-05, -0.0009071370586752892, -4.0531158447265625e-06, -2.0622919691959396e-05, -3.814697265625e-06, 0.0], "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling Dragonling', 1,\n            CHARACTER_CLASS.ALL, CARD_RARITY.COMMON, False, minion_type=\n            MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n"}, {"choice_history": [139, 193, 314], "score": -24.267515182495117, "model_output": {"_type": "Module", "body": []}, "score_history": [-3.814697265625e-06, -1.9073486328125e-06, -24.26750946044922], "inferred_code": ""}], "index": 64}
{"beams": [{"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -0.1853313750716552, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -0.15268898010253906, -0.0001392364501953125, -2.47955322265625e-05, -3.814697265625e-06, -7.152429316192865e-05, -5.698202585335821e-05, -0.0004596710205078125, -0.0007457733154296875, -4.1961669921875e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.0030345916748046875, -3.814697265625e-06, -0.000362396240234375, -0.01568654738366604, -0.004972219467163086, -0.000586390495300293, -2.0265579223632812e-06, -1.52587890625e-05, -0.0017719268798828125, -2.09808349609375e-05, -0.00025391552480868995, -0.0005787599948234856, -2.86102294921875e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 102, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -2.6268864954663513, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -2.589916229248047, -6.4849853515625e-05, -3.814697265625e-06, -1.1444091796875e-05, -7.843873754609376e-05, -2.4437898900941946e-05, -0.0001697540283203125, -0.0014209747314453125, -4.1961669921875e-05, -0.00333404541015625, -9.5367431640625e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.0023174285888671875, -5.7220458984375e-06, -0.0003814697265625, -0.018776072189211845, -0.004271864891052246, -0.0006074905395507812, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0017986297607421875, -2.09808349609375e-05, -0.00025749183259904385, -0.0005309570697136223, -3.0517578125e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 101, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -3.6062415139158475, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template26"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -3.5716609954833984, -7.43865966796875e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.426642696373165e-05, -2.384184699621983e-05, -0.000274658203125, -0.0014324188232421875, -5.340576171875e-05, -0.0024280548095703125, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -2.47955322265625e-05, -0.00208282470703125, -3.814697265625e-06, -0.000377655029296875, -0.01727491058409214, -0.004427671432495117, -0.0006035566329956055, -2.0265579223632812e-06, -1.71661376953125e-05, -0.00171661376953125, -2.288818359375e-05, -0.0002554652455728501, -0.0005768525297753513, -2.86102294921875e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 106, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -3.876107586328544, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -3.835333824157715, -0.00160980224609375, -1.9073486328125e-06, -1.71661376953125e-05, -4.839859320782125e-05, -3.361699418746866e-05, -0.000278472900390625, -0.001750946044921875, -5.53131103515625e-05, -0.00531005859375, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0027437210083007812, -5.7220458984375e-06, -0.0003662109375, -0.018070952966809273, -0.004399299621582031, -0.0006093978881835938, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0018062591552734375, -2.288818359375e-05, -0.0002578494604676962, -0.0005314339650794864, -3.0517578125e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "minions", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.042571655906613, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -0.15268898010253906, -0.0001392364501953125, -2.47955322265625e-05, -3.814697265625e-06, -7.152429316192865e-05, -5.698202585335821e-05, -0.0004596710205078125, -0.0007457733154296875, -4.1961669921875e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.0030345916748046875, -3.814697265625e-06, -0.000362396240234375, -4.866161346435547, -0.00032329559326171875, -0.009600639343261719, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0042667388916015625, -2.288818359375e-05, -0.00028622144600376487, -0.0004098372010048479, -6.67572021484375e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.minions.damage(player.effective_spell_damage(5), self\n            )\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "damage", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.606092480035841, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "herodamage", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -0.15268898010253906, -0.0001392364501953125, -2.47955322265625e-05, -3.814697265625e-06, -7.152429316192865e-05, -5.698202585335821e-05, -0.0004596710205078125, -0.0007457733154296875, -4.1961669921875e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.0030345916748046875, -3.814697265625e-06, -0.000362396240234375, -0.01568654738366604, -5.420741558074951, -0.00015556812286376953, -0.0035104751586914062, -2.0265579223632812e-06, -1.52587890625e-05, -0.003398895263671875, -3.4332275390625e-05, -0.0002022980188485235, -0.0008888198062777519, -4.1961669921875e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.herodamage.damage(player.effective_spell_damage(5\n            ), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "damage", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.801034201233961, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -0.15268898010253906, -0.0001392364501953125, -2.47955322265625e-05, -3.814697265625e-06, -7.152429316192865e-05, -5.698202585335821e-05, -0.0004596710205078125, -0.0007457733154296875, -4.1961669921875e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.0030345916748046875, -3.814697265625e-06, -0.000362396240234375, -5.62833833694458, -3.278253643657081e-05, -0.006273031234741211, 0.0, -1.52587890625e-05, -0.004032135009765625, -2.86102294921875e-05, -0.0002658366283867508, -0.0005743431393057108, -5.91278076171875e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 99, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -5.9027936930096985, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template23"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -5.86331844329834, -0.0001354217529296875, -3.814697265625e-06, -1.9073486328125e-06, -8.571025682613254e-05, -1.8954269762616605e-05, -0.0002269744873046875, -0.0008106231689453125, -5.14984130859375e-05, -0.0038356781005859375, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.6702880859375e-05, -0.003215789794921875, -5.7220458984375e-06, -0.00037384033203125, -0.020031265914440155, -0.004578948020935059, -0.0006150007247924805, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0017795562744140625, -2.09808349609375e-05, -0.0002565381582826376, -0.0005631434032693505, -2.86102294921875e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CARD_RARITY.FREE, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -6.335586507293556, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -5.020280838012695, -3.814697265625e-06, -6.67572021484375e-05, -0.0001125335693359375, -0.0036526918411254883, -3.218649908376392e-06, -0.7777118682861328, -3.671645754366182e-05, -0.00351715087890625, -7.62939453125e-06, -1.33514404296875e-05, -3.1113602744881064e-05, -2.8014183044433594e-05, -5.340576171875e-05, -0.000499725341796875, -2.86102294921875e-05, -0.4750518798828125, -1.9073486328125e-05, 0.0, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.00514984130859375, -9.5367431640625e-06, -0.0003833770751953125, -0.036123476922512054, -0.006750226020812988, -0.000661015510559082, -2.0265579223632812e-06, -1.71661376953125e-05, -0.001819610595703125, -2.47955322265625e-05, -0.00025570375146344304, -0.00046288882731460035, -3.0517578125e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 103, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -6.6475546639658205, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template28"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -6.610259056091309, -0.000152587890625, 0.0, -2.288818359375e-05, -0.00015782745322212577, -2.6226029149256647e-05, -0.0002231597900390625, -0.002567291259765625, -7.05718994140625e-05, -0.003368377685546875, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -2.09808349609375e-05, -0.0024585723876953125, -5.7220458984375e-06, -0.0003681182861328125, -0.01767531782388687, -0.004195213317871094, -0.0006113052368164062, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0016956329345703125, -2.288818359375e-05, -0.00025510761770419776, -0.0005568254855461419, -3.0517578125e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 37, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -6.733983505250762, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template30"}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -0.15268898010253906, -0.0001392364501953125, -2.47955322265625e-05, -3.814697265625e-06, -7.152429316192865e-05, -5.698202585335821e-05, -0.0004596710205078125, -0.0007457733154296875, -4.1961669921875e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -6.570137977600098, -0.003943084739148617, -2.944469451904297e-05, -1.1444091796875e-05, -0.0011234283447265625, -1.33514404296875e-05, -0.0003242488019168377, -0.00025879687746055424, -0.000110626220703125, -2.09808349609375e-05], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -6.865333314430238, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -5.020280838012695, -3.814697265625e-06, -6.67572021484375e-05, -0.0001125335693359375, -0.0036526918411254883, -3.218649908376392e-06, -0.7777118682861328, -3.671645754366182e-05, -0.00351715087890625, -7.62939453125e-06, -1.33514404296875e-05, -3.1113602744881064e-05, -2.8014183044433594e-05, -5.340576171875e-05, -0.000499725341796875, -2.86102294921875e-05, -0.9768686294555664, -0.0002040863037109375, -0.03250408172607422, -4.00543212890625e-05, -2.47955322265625e-05, -0.00017547607421875, -3.0517578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -0.0011491775512695312, -5.7220458984375e-06, -0.00042557716369628906, -1.3470649719238281e-05, -0.00045013427734375, -0.0001888275146484375, -7.62939453125e-06, -2.86102294921875e-05, -0.00015079912554938346, -3.540515899658203e-05, -0.000286102294921875, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -0.000194549560546875, -0.03522777557373047, -0.0014549493789672852, -1.1920928244535389e-07, -2.6702880859375e-05, -0.006404876708984375, -9.5367431640625e-06, -0.00033724293462000787, -0.00012004253221675754, -6.67572021484375e-05, -1.1444091796875e-05], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -6.90069379137276, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template30"}}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -5.020280838012695, -3.814697265625e-06, -6.67572021484375e-05, -0.0001125335693359375, -0.0036526918411254883, -3.218649908376392e-06, -1.2107009887695312, -4.5299530029296875e-06, -0.008493423461914062, -1.33514404296875e-05, -1.33514404296875e-05, -2.706050690903794e-05, -2.5272369384765625e-05, -9.72747802734375e-05, -0.001678466796875, -5.7220458984375e-05, -0.6057519912719727, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.010975837707519531, -7.62939453125e-06, -0.0003948211669921875, -0.025801559910178185, -0.00635075569152832, -0.000661015510559082, -2.0265579223632812e-06, -1.71661376953125e-05, -0.0019092559814453125, -2.47955322265625e-05, -0.0002580879081506282, -0.0004690876812674105, -3.0517578125e-05, -3.814697265625e-06], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156], "score": -7.125131721826612, "model_output": {"_type": "Module", "body": [{"bases": [{"_type": "Template41"}], "_type": "ClassDef", "body": [{"args": {"_type": "Template5"}, "_type": "FunctionDef", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template23"}], "_type": "Call", "func": {"_type": "Template10"}}}], "name": "__init__"}, {"args": {"_type": "Template1"}, "_type": "FunctionDef", "body": [{"_type": "Template2"}, {"_type": "For", "body": [{"_type": "Expr", "value": {"args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}], "_type": "Call", "func": {"_type": "Attribute", "attr": "damage", "value": {"_type": "Template54"}}}}], "target": {"_type": "Template54"}, "iter": {"args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template30"}}], "_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}}}], "name": "use"}], "name": "MindBlast"}, {"_type": "Template37_stmt_seq"}]}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -5.020280838012695, -3.814697265625e-06, -6.67572021484375e-05, -0.0001125335693359375, -0.0036526918411254883, -3.218649908376392e-06, -1.2107009887695312, -4.5299530029296875e-06, -0.008493423461914062, -1.33514404296875e-05, -1.33514404296875e-05, -2.706050690903794e-05, -2.5272369384765625e-05, -9.72747802734375e-05, -0.001678466796875, -5.7220458984375e-05, -0.7930030822753906, -0.0002002716064453125, -0.03837871551513672, -5.53131103515625e-05, -2.09808349609375e-05, -0.00014495849609375, -5.7220458984375e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.001125335693359375, -5.7220458984375e-06, -0.00044083595275878906, -1.537799835205078e-05, -0.0004367828369140625, -0.0001983642578125, -7.62939453125e-06, -2.86102294921875e-05, -0.0001472228323109448, -3.540515899658203e-05, -0.0002593994140625, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -3.4332275390625e-05, -0.0001888275146484375, -0.033555030822753906, -0.0014780759811401367, -1.1920928244535389e-07, -2.6702880859375e-05, -0.0066967010498046875, -9.5367431640625e-06, -0.00034046158543787897, -0.0001194463184219785, -6.4849853515625e-05, -1.33514404296875e-05], "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(5), self)\n"}, {"choice_history": [139, 193, 314], "score": -26.064931869506836, "model_output": {"_type": "Module", "body": []}, "score_history": [-0.0001735687255859375, -3.814697265625e-06, -26.064754486083984], "inferred_code": ""}], "index": 65}
