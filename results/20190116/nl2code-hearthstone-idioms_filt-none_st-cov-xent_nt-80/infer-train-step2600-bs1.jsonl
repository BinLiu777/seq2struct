{"index": 0, "beams": [{"score_history": [-2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00011444091796875, -6.103515625e-05, -0.00010072819713968784, -0.008025764487683773, -0.01158479880541563, -0.00011169705248903483, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.52587890625e-05, -4.768370445162873e-07, -2.3841830625315197e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.0517578125e-05, -1.9073486328125e-06, -9.34600830078125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.511473424732685e-05, -5.626677375403233e-05, -0.0011674402048811316, -0.0004024505615234375, -0.0002251722471555695, -4.053113570989808e-06, -0.004047393798828125, -5.14984130859375e-05, -8.96453857421875e-05, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -6.23464584350586e-05, -2.503394853192731e-06, -0.0006351470947265625, -1.9073486328125e-06, -2.6702880859375e-05, -0.00035858154296875, -9.918212890625e-05, -5.7220458984375e-06, -0.03811678662896156, -0.00355066591873765, -0.000125885009765625, -7.62939453125e-06, -0.0005512237548828125, 0.0, -0.00785684585571289, -0.0012665987014770508, -6.675719760096399e-06, -0.006687164306640625, -4.9591064453125e-05, 0.0, -0.00150662986561656, -0.00014650750381406397, 0.0, -0.0002956390380859375, -3.814697265625e-06, -2.442288678139448e-05, 0.0, -3.2901640224736184e-05, 0.0, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "AcidicSwampOoze", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Template16", "hole0": "Destroy"}, {"_type": "Call", "func": {"_type": "Name", "id": "WeaponSelector"}, "args": [{"_type": "Template16", "hole0": "EnemyPlayer"}]}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08785088948718567, "inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "choice_history": [139, 193, 316, 147, 173, "Acidic", "Swamp", "Ooze", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 108, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 93, 213, "Destroy", "<EOS>", 79, 171, 25, 194, "Weapon", "Selector", "<EOS>", 302, 93, 213, "Enemy", "Player", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156]}]}
{"index": 1, "beams": [{"score_history": [-9.918212890625e-05, -3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -7.390955033770297e-06, -0.0007846867083571851, -0.0001174142598756589, -0.000492095947265625, -1.52587890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.0531158447265625e-06, -3.266281055402942e-05, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -5.7220458984375e-06, -7.62939453125e-06, -0.000354766845703125, -9.5367431640625e-06, -0.0011501312255859375, -3.814697265625e-06, -8.96453857421875e-05, -2.1457441107486375e-05, -2.562999725341797e-05, -0.0001950091973412782, -4.780292510986328e-05, -0.0015430450439453125, -0.00113677978515625, -0.0003814697265625, -0.020460128784179688, -0.002002716064453125, -3.0517578125e-05, 0.0, -2.8371783628244884e-05, -1.0609614946588408e-05, -5.53131103515625e-05, -0.0675363540649414, -3.814697265625e-06, -0.000347137451171875, -1.71661376953125e-05, -1.9073486328125e-06, -7.62939453125e-05, -1.9073486328125e-06, -5.7220458984375e-05, -0.06115436553955078, -0.008144736289978027, -2.264974000354414e-06, -3.62396240234375e-05, -0.0042514801025390625, -1.52587890625e-05, -0.0017910003662109375, -4.38690185546875e-05, -0.0023937225341796875, -0.000591157004237175, -8.10622896096902e-06, -7.62939453125e-06, -0.010806083679199219, -0.019062042236328125, -0.0006761550903320312, -1.9073486328125e-06, -0.13794326782226562, -0.02229166030883789, -2.86102294921875e-05, -0.0335845947265625, -0.003673553466796875, -7.62939453125e-06, -2.288818359375e-05, -0.000576019287109375, -0.0012226104736328125, -0.0046672821044921875, -0.008576035499572754, -1.1920928244535389e-07, -0.0025005340576171875, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "AncestralHealing", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Template55"}, {"_type": "Template33"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "effective_heal_power"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "calculate_max_health"}}]}, {"_type": "Template42"}]}}, {"_type": "Assign", "value": {"_type": "Template72"}, "targets": [{"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "taunt"}]}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.4213251119274375, "inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "choice_history": [139, 193, 316, 147, 173, "Ancestral", "Healing", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ancestral", " ", "Healing", "<EOS>", 122, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 79, 169, 17, 164, 33, "calculate_max_health", "<EOS>", 113, 144, 163, 302, 76, 164, 33, "taunt", "<EOS>", 68, 156]}]}
{"index": 2, "beams": [{"score_history": [-9.5367431640625e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -0.000683074293192476, -1.1205629562027752e-05, -0.00019453642016742378, -0.000110626220703125, -0.0001544952392578125, -0.013988494873046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018672943115234375, -1.9073486328125e-06, -1.9073486328125e-06, -0.0076751708984375, -1.9073486328125e-06, 0.0, 0.0, -0.0003147125244140625, -9.72747802734375e-05, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.390960945485858e-06, -1.8477439880371094e-05, -2.658331868587993e-05, -1.52587890625e-05, -0.0001468658447265625, -0.00225067138671875, 0.0, -5.7220458984375e-06, 0.0, -0.00044357776641845703, -2.300739288330078e-05, -0.002061128616333008, -2.539156957936939e-05, -0.0003490447998046875, -3.4332275390625e-05, 0.0, -0.0001239776611328125, 0.0, -2.09808349609375e-05, -0.17360973358154297, -0.0019512176513671875, -0.0003871917724609375, -1.33514404296875e-05, -8.20159912109375e-05, -0.0004787445068359375, -7.62939453125e-06, -0.006074190139770508, -0.0004564742266666144, -0.005982398986816406, -0.0032520294189453125, -0.005572319030761719, -0.00461578369140625, -0.000759124755859375, -7.43865966796875e-05, -1.33514404296875e-05, -0.00038909912109375, -1.9073486328125e-06, -0.001476287841796875, -1.9073486328125e-06, -0.06098175048828125, 0.0, -0.011704564094543457, -4.0531158447265625e-06, -0.026589274406433105, -7.390974587906385e-06, -0.003969429526478052, -3.576277322281385e-06, -1.1754330396652222, -6.258487701416016e-05, -0.039910316467285156, -0.000232696533203125, -0.000431060791015625, -4.1961669921875e-05, -0.0005445480346679688, -5.340576171875e-05, -0.00079345703125, -3.814697265625e-06, -0.05422687530517578, 0.0, -0.012015342712402344, -1.9073486328125e-06, -0.103096604347229, -2.622604142743512e-06, -0.008746861480176449, -5.245207830739673e-06, -1.5114039182662964, -0.0006753206253051758, -0.019618988037109375, -0.46625804901123047, -1.1444091796875e-05, -0.001102447509765625, 0.0, -0.5199986696243286, -1.9073486328125e-06, -0.000588536262512207, -3.814697265625e-06, -0.7260971069335938, -7.05718994140625e-05, -0.0006866455078125, -7.62939453125e-06, -0.288493275642395, -1.9073486328125e-06, -0.0001659393310546875, -3.24249267578125e-05, -7.62939453125e-06, -6.866455078125e-05, -0.08801281452178955, -4.6967757953098044e-05, -0.0076427459716796875, -0.000896453857421875, -0.023100852966308594, -0.1358814239501953, -0.0011348724365234375, -0.000308990478515625, -3.814697265625e-06, -0.002780914306640625, -1.9073486328125e-06, -0.027488231658935547, -0.0008201230666600168, -0.40663719177246094, -0.28859424591064453, -5.7220458984375e-06, -1.9073486328125e-06, -0.0019178390502929688, -9.5367431640625e-06, -0.0006561279296875, 0.0, -0.4937896728515625, 0.0, -0.005614280700683594, -3.814697265625e-06, -0.04846787452697754, -5.841247457283316e-06, -0.01827641762793064, -6.675708846159978e-06, -0.8607066869735718, -0.0008260011672973633, -0.26229190826416016, -8.58306884765625e-05, -2.6702880859375e-05, -0.49248504638671875, -0.007943153381347656, -1.9073486328125e-05, -0.009702682495117188, -1.9073486328125e-06, -0.005562782287597656, -3.814697265625e-06, -0.0008640289306640625, -1.9073486328125e-06, -0.015621304512023926, -3.814697265625e-06, -0.000789642333984375, -0.023491859436035156, -0.0001354217529296875, -0.04268491268157959, -0.00014578632544726133, -3.0517578125e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0011920928955078125, -3.62396240234375e-05, -7.62939453125e-06, -0.004464149475097656, -3.814697265625e-06, -0.6676985025405884, -5.5073567637009546e-05, -0.006793974433094263, -1.52587890625e-05, -0.0002460479736328125, -0.0001773834228515625, -0.005096435546875, -5.7220458984375e-06, -0.008751869201660156, -0.0013258453691378236, -1.9073486328125e-06, -8.20159912109375e-05, -3.4332275390625e-05, 0.0, 0.0, -0.0027256011962890625, -1.919269561767578e-05, -9.5367431640625e-06, -0.000438690185546875, -1.9073486328125e-06, -0.013714790344238281, -0.00011920928955078125, 0.0, -0.6570348739624023, -2.47955322265625e-05, -1.9073486328125e-06, -0.002262115478515625, -3.814697265625e-06, 0.0, -0.018706321716308594, 0.0, -0.528253436088562, -2.574904283392243e-05, -0.009269952774047852, -1.1444091796875e-05, -0.000339508056640625, -0.0171356201171875, -0.00040435791015625, -3.814697265625e-06, -0.02123260498046875, -0.0005731582059524953, -3.814697265625e-06, -0.000133514404296875, -8.96453857421875e-05, -1.9073486328125e-06, 0.0, -0.0035915374755859375, -2.682209014892578e-05, -9.5367431640625e-06, -0.000408172607421875, -1.9073486328125e-06, -0.012812614440917969, -0.0001277923583984375, 0.0, -0.00025177001953125, -2.6702880859375e-05, -0.0009441375732421875, -5.7220458984375e-06, -0.0001850128173828125, -0.0020084381103515625, -0.0006103515625, -0.0001201629638671875, -0.0014429092407226562, -0.0007686614990234375, -0.000377655029296875, -0.11707687377929688, -6.29425048828125e-05, -3.24249267578125e-05, -0.0006513595581054688, -8.7738037109375e-05, -0.00069427490234375, -3.814697265625e-06, -0.00011670529784169048, -3.814697265625e-06, -0.003827214241027832, 0.0, -0.0002155303955078125, -0.00045013427734375, -7.62939453125e-05, 0.0, -4.76837158203125e-05, 0.0, -0.0014438629150390625, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.0030670166015625, 0.0, -9.5367431640625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.0034637451171875, -9.48904053075239e-05, -1.1920928244535389e-07, -7.43865966796875e-05, -0.006262779235839844, -1.71661376953125e-05, -0.0060634613037109375, -5.340576171875e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "AnimalCompanion", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Animal Companion"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Assign", "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "Leokk"}}, {"_type": "Template39_expr_seq"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CARD_RARITY"}, "attr": "EPIC"}]}, "targets": [{"_type": "Name", "id": "<UNK>"}]}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Template55"}, {"_type": "Template36"}]}, "body": [{"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "hunter"}}, "targets": [{"_type": "Name", "id": "<UNK>"}]}, {"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "<UNK>"}]}, "targets": [{"_type": "Template54"}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "summon"}, "args": [{"_type": "Template43"}, {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}]}]}}], "target": {"_type": "Name", "id": "i"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "card"}, "attr": "summon"}, "args": [{"_type": "Template43"}, {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}]}]}}], "args": {"_type": "Template1"}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template16", "hole0": "super"}, "attr": "can_use"}, "args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}]}, {"_type": "Compare", "comparators": [{"_type": "Template48"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}]}, "ops": [{"_type": "Lt"}]}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -10.68208877948586, "inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter(), hearthbreaker.cards.\n            minions.Leokk(), CARD_RARITY.EPIC]\n        for i in range(0, 2):\n            <UNK> = hearthbreaker.cards.minions.hunter()\n            minion = game.random_choice(<UNK>)\n            card.summon(player, player.game, len(player.minions))\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "choice_history": [139, 193, 316, 147, 173, "Animal", "Companion", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Animal", " ", "Companion", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 318, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 23, 189, 305, 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 79, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "Leokk", "<EOS>", 110, 76, 164, 25, 194, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "<UNK>", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "card", "<EOS>", "summon", "<EOS>", 304, 114, 76, 164, 43, "game", "<EOS>", 79, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 43, "minions", "<EOS>", 299, 14, 302, 118, 156]}]}
{"index": 3, "beams": [{"score_history": [-1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.7418097943154862e-06, -6.1868253396824e-05, -3.814697265625e-06, -0.000431060791015625, -0.003936767578125, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.537799835205078e-05, -1.5497207641601562e-05, -1.33514404296875e-05, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, -6.866455078125e-05, -1.9073486328125e-06, -0.1268157958984375, -3.814697265625e-06, -3.814697265625e-06, -1.4424220353248529e-05, -9.548664093017578e-05, -1.0013547580456361e-05, -7.748603820800781e-06, -1.52587890625e-05, -0.001110076904296875, -2.09808349609375e-05, -2.47955322265625e-05, -2.288818359375e-05, -0.00286865234375, 0.0, -0.0024771690368652344, -9.775161743164062e-06, -0.000919342041015625, -3.814697265625e-06, -5.7220458984375e-06, -0.00012600421905517578, -9.5367431640625e-06, -8.58306884765625e-05, -0.00011444091796875, -0.0001087188720703125, -0.00109100341796875, -0.00020599365234375, -0.0044155120849609375, -1.33514404296875e-05, -0.0004100799560546875, -7.43865966796875e-05, -4.00543212890625e-05, -2.6702880859375e-05, -1.9073486328125e-06, -0.0013799667358398438, -3.814697265625e-06, -0.00207364559173584, -1.728534698486328e-05, -0.0001354217529296875, -0.00012969970703125, -3.0517578125e-05, -6.866455078125e-05, -0.00032086978899315, -1.5258787243510596e-05, -0.00030517578125, -5.340576171875e-05, 0.0, -1.1444091796875e-05, -1.52587890625e-05, -1.52587890625e-05, -7.43865966796875e-05, -0.00208282470703125, -0.0043792724609375, -1.1920928244535389e-07, -7.05718994140625e-05, -0.019603729248046875, -7.82012939453125e-05, -0.000857298553455621, -5.638598304358311e-05, -0.0002918243408203125, -1.1444091796875e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneExplosion", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Arcane Explosion"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}]}}], "target": {"_type": "Template54"}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.17790987248712753, "inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "choice_history": [139, 193, 316, 147, 173, "Arcane", "Explosion", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Explosion", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 156]}]}
{"index": 4, "beams": [{"score_history": [-1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -3.099436753473128e-06, -7.617238588863984e-05, -1.4185894542606547e-05, -2.47955322265625e-05, -0.001232147216796875, -1.33514404296875e-05, -2.09808349609375e-05, -0.0003871917724609375, -7.867813110351562e-06, -9.155272709904239e-05, -2.6702880859375e-05, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -0.00054931640625, -9.918212890625e-05, -0.04920196533203125, -5.7220458984375e-06, -7.62939453125e-06, -0.0005057962844148278, -0.0001659393310546875, -1.1205645932932384e-05, -1.0848044439626392e-05, -3.0517578125e-05, -0.0035800933837890625, 0.0, -1.9073486328125e-06, 0.0, -0.0001608133316040039, -3.707408905029297e-05, -0.002910017967224121, -5.030632019042969e-05, -0.0005588531494140625, -3.814697265625e-06, -0.0001049041748046875, -0.000217437744140625, -9.5367431640625e-06, -2.6702880859375e-05, -0.0003185272216796875, -0.0001583099365234375, -0.018339157104492188, -0.000308990478515625, -0.000637054443359375, -1.9073486328125e-06, -0.02944493293762207, -5.1856040954589844e-05, -2.09808349609375e-05, -2.86102294921875e-05, -0.00019073486328125, 0.0, -0.0010054109152406454, -6.103362829890102e-05, -0.0001811981201171875, -0.0002956390380859375, -0.0001888275146484375, -0.01735687255859375, -0.0007781982421875, 0.0, -5.7220458984375e-06, -0.0022296905517578125, -0.000286102294921875, 0.0, -0.009604454040527344, -0.0010119816288352013, -7.235829252749681e-05, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneIntellect", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Arcane Intellect"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Template55"}, {"_type": "Template36"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "draw"}}}], "target": {"_type": "Name", "id": "c"}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.14276242189203003, "inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "choice_history": [139, 193, 316, 147, 173, "Arcane", "Intellect", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Intellect", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "c", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 315, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156]}]}
{"index": 5, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -3.099436753473128e-06, -8.618631545687094e-05, -4.172325134277344e-06, -8.0108642578125e-05, -4.76837158203125e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.1682510375976562e-05, -6.31808916295995e-06, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -3.814697265625e-06, -0.0004901885986328125, -5.7220458984375e-06, -1.9073486328125e-06, -1.597391747054644e-05, -8.594989776611328e-05, -4.291534423828125e-06, -1.7523765563964844e-05, -2.6702880859375e-05, -0.000644683837890625, 0.0, -7.05718994140625e-05, -1.1444091796875e-05, -0.00012052059173583984, -2.1457672119140625e-06, -0.005666136275976896, -6.0796710386057384e-06, -0.00042724609375, -3.814697265625e-06, 0.0, -5.841255187988281e-06, -2.86102294921875e-05, -2.09808349609375e-05, -0.000347137451171875, -1.1444091796875e-05, -0.0007228851318359375, -0.0013103485107421875, -0.0034456253051757812, -1.9073486328125e-06, -0.01158440113067627, -2.384185791015625e-06, -0.00046539306640625, 0.0, -1.1444091796875e-05, -3.814697265625e-06, -0.016517996788024902, -4.06503640988376e-05, -9.5367431640625e-05, -5.53131103515625e-05, -0.0013189315795898438, -0.00118255615234375, -0.006457814481109381, -0.00021910015493631363, -0.005221366882324219, -0.0034799575805664062, -6.29425048828125e-05, -1.33514404296875e-05, -0.001216888427734375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.000942230224609375, -5.841255187988281e-06, -0.0014624595642089844, -3.075599670410156e-05, -9.918212890625e-05, -0.00042724609375, -3.814697265625e-06, -5.91278076171875e-05, -0.00020383628725539893, -8.225420970120467e-06, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -6.866455078125e-05, -0.0020999908447265625, -0.008922575041651726, -0.00041508671711198986, -0.000141143798828125, -0.006094932556152344, 0.0, -0.0003376007080078125, -0.03772610053420067, -0.00011110231571365148, -0.0001621246337890625, -1.1444091796875e-05, -1.33514404296875e-05, -0.0006694793701171875, -0.0005283355712890625, 0.0, -6.67572021484375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.0031363964080810547, -2.09808349609375e-05, -0.0009233950986526906, -1.9073486328125e-06, -0.000667572021484375, -0.0032281875610351562, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -7.62939453125e-05, -0.00018310546875, -5.91278076171875e-05, -0.0023059844970703125, -0.007921508513391018, -0.0001388729433529079, -0.00022125244140625, -0.02222728729248047, -0.0064258575439453125, -6.67572021484375e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneMissiles", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Arcane Missiles"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Template55"}, {"_type": "Template8", "hole0": 3}]}, "body": [{"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "targets": [{"_type": "Template78"}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template78"}, "attr": "append"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "hero"}]}}, {"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Template78"}]}, "targets": [{"_type": "Template64"}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "damage"}, "args": [{"_type": "Template38"}, {"_type": "Template42"}]}}], "target": {"_type": "Name", "id": "i"}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.17040022930291343, "inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "choice_history": [139, 193, 316, 147, 173, "Arcane", "Missiles", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcane", " ", "Missiles", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 133, 282, "3", "<EOS>", 318, 144, 163, 302, 132, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 72, "append", "<EOS>", 302, 76, 164, 37, "hero", "<EOS>", 144, 163, 302, 126, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 132, 148, 176, 20, 171, 17, 164, 61, "damage", "<EOS>", 303, 109, 113, 156]}]}
{"index": 6, "beams": [{"score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0001718881248962134, -6.794917680963408e-06, -7.05718994140625e-05, -0.000232696533203125, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.300739288330078e-05, -2.1457672119140625e-06, -1.52587890625e-05, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -0.000202178955078125, -1.33514404296875e-05, -0.00022125244140625, -5.7220458984375e-06, -1.9073486328125e-06, -8.583032467868179e-06, -4.398822784423828e-05, -6.771087646484375e-05, -5.221366882324219e-05, -7.62939453125e-05, -0.0005626678466796875, 0.0, -3.814697265625e-06, -3.814697265625e-05, -0.00019478797912597656, -1.9073486328125e-06, -0.13396501541137695, -0.00021970272064208984, -2.6702880859375e-05, -0.00032806396484375, -1.52587890625e-05, -1.52587890625e-05, -0.0011382102966308594, -2.2649765014648438e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, -0.00017571449279785156, -1.71661376953125e-05, -0.000263214111328125, -5.53131103515625e-05, -0.0006313323974609375, -1.7404556274414062e-05, -0.0023746490478515625, -0.00018310546875, -5.7220458984375e-06, -0.0004558563232421875, -0.0007476806640625, -1.9073486328125e-06, -2.47955322265625e-05, -3.814697265625e-06, -7.62939453125e-06, -0.00104522705078125, -0.0003739595413208008, 0.0, -1.52587890625e-05, -0.00103759765625, -8.58306884765625e-05, -0.0023744567297399044, -5.7220458984375e-06, -0.000186920166015625, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaneShot", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.14835980992211262, "inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "choice_history": [139, 193, 316, 147, 173, "Arcane", "Shot", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Arcane", " ", "Shot", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156]}]}
{"index": 7, "beams": [{"score_history": [-0.0001468658447265625, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.004196884576231241, -1.1205610462639015e-05, -6.914119876455516e-05, -1.52587890625e-05, -0.0010051727294921875, -4.57763671875e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.11679458618164e-05, -8.344646857949556e-07, -1.1444091796875e-05, -0.0002880096435546875, -0.0001354217529296875, 0.0, 0.0, -5.7220458984375e-06, 0.0, -0.007099151611328125, -1.9073486328125e-06, -7.62939453125e-06, -3.111314072157256e-05, -1.8477439880371094e-05, -1.0013530300057027e-05, -0.0004316568374633789, -4.00543212890625e-05, -0.07411670684814453, -0.0002231597900390625, -7.62939453125e-06, -3.814697265625e-06, -0.002194523811340332, -8.463859558105469e-06, -0.00125885009765625, -0.000125885009765625, -0.0003223419189453125, -0.000652313232421875, -0.0014133453369140625, -0.0009136199951171875, -0.0003643035888671875, -7.05718994140625e-05, -0.0013256072998046875, -0.000102996826171875, -0.000141143798828125], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ArcaniteReaper", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Arcanite Reaper"}, {"_type": "Template46"}, {"_type": "Template27"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"_type": "Template79"}, "args": [{"_type": "Template46"}, {"_type": "Template36"}]}}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template63"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.09690535222728158, "inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "choice_history": [139, 193, 316, 147, 173, "Arcanite", "Reaper", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Arcanite", " ", "Reaper", "<EOS>", 116, 102, 94, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 116, 108, 156]}]}
{"index": 8, "beams": [{"score_history": [-3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.1444091796875e-05, -1.1920928244535389e-07, -7.700882270000875e-05, -1.1444091796875e-05, -0.0002193450927734375, -0.000263214111328125, -3.814697265625e-06, -6.67572021484375e-05, -1.3589859008789062e-05, -1.6212332411669195e-05, -1.1444091796875e-05, -1.71661376953125e-05, -7.62939453125e-06, -5.7220458984375e-06, -4.76837158203125e-05, -0.00032806396484375, -3.814697265625e-06, -0.0020236968994140625, -2.288818359375e-05, -3.814697265625e-06, 0.0, -6.556353764608502e-05, -0.0001735687255859375, -0.04138946533203125, -0.000518798828125, -0.010168075561523438, -8.20159912109375e-05, -1.9073486328125e-06, -0.0054819583892822266, -1.9431114196777344e-05, -7.43865966796875e-05, 0.0, -8.58306884765625e-05, -0.001101851463317871, -4.673000512411818e-05, -7.62939453125e-06, -7.62939453125e-06, -2.241134461655747e-05, -1.1920928244535389e-07, -0.0003566741943359375, -6.103515625e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.71661376953125e-05, -4.9591064453125e-05, -0.017030715942382812, -1.9073486328125e-06, -3.814697265625e-06, -0.001468658447265625, -0.004538893699645996, -7.62939453125e-06, -7.05718994140625e-05, -0.0003662109375, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Assassinate", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_enemy_minion_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Template46"}, {"_type": "Template26"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "die"}, "args": [{"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08643615033905405, "inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "choice_history": [139, 193, 316, 147, 173, "Assassinate", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Assassinate", "<EOS>", 116, 101, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156]}]}
{"index": 9, "beams": [{"score_history": [-5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.4305104514278355e-06, -2.7418136596679688e-05, -2.47955322265625e-05, -4.38690185546875e-05, -3.814697265625e-06, 0.0, -8.20159912109375e-05, -5.352497100830078e-05, -7.152555099310121e-07, -1.33514404296875e-05, -0.000118255615234375, -2.288818359375e-05, 0.0, -5.7220458984375e-05, -9.72747802734375e-05, -2.09808349609375e-05, -8.392333984375e-05, -2.47955322265625e-05, -2.6702880859375e-05, -3.9457496313843876e-05, -5.7220458984375e-06, -0.0016498565673828125, -0.012789726257324219, -0.00029754638671875, -0.000453948974609375, -0.00055694580078125, -0.0023956298828125, -0.0002079010009765625, -0.00487672071903944, -0.006799348630011082, -0.0002956390380859375, -0.000171661376953125, -0.000667572021484375, -0.000888824462890625, -0.001346588134765625, -0.000270843505859375, -5.7220458984375e-05, -0.0023419857025146484, -3.2901763916015625e-05, -0.004206657409667969, -8.0108642578125e-05, -0.000164031982421875, -0.0002899169921875, -0.0021686553955078125, -6.29425048828125e-05, -0.0014667510986328125, -7.62939453125e-06, -0.0017881393432617188, -0.004316926002502441, 0.0, -1.71661376953125e-05, -0.020233154296875, -0.000247955322265625, -0.0001926422119140625, -0.0004100799560546875, -5.7220458984375e-06, -3.814697265625e-06, -0.004024505615234375, -0.004473686218261719, -9.5367431640625e-06, -0.0001239776611328125, -0.000396728515625, -3.814697265625e-05, 0.0, -0.0037736892700195312, -0.0058193206787109375, -1.9073486328125e-06, -0.00014495849609375, -3.814697265625e-06, -0.0003339052200317383, -1.9073486328125e-06, -0.0001277923583984375, -0.0005321502685546875, -2.09808349609375e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -0.0001926422119140625, -5.7220458984375e-06, -2.47955322265625e-05, -0.000827789306640625, -0.0002747774124145508, 0.0, -7.62939453125e-06, -0.0024700164794921875, -0.0009765625, -0.0015963244950398803, -1.9073486328125e-06, -0.000202178955078125, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Backstab", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}, {"_type": "keyword", "value": {"_type": "Lambda", "body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "calculate_max_health"}}], "left": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "health"}, "ops": [{"_type": "Eq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "spell_targetable"}}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}, "arg": "filter_func"}], "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Template55"}, {"_type": "Template26"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.09896253378849451, "inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "choice_history": [139, 193, 316, 147, 173, "Backstab", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Backstab", "<EOS>", 122, 101, 99, 311, 137, 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 8, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156]}]}
{"index": 10, "beams": [{"score_history": [-1.52587890625e-05, -1.9073486328125e-06, -0.0001220703125, -9.5367431640625e-06, -9.72747802734375e-05, -4.458328112377785e-05, -0.0002758326008915901, -0.0004905451205559075, -2.503394853192731e-06, -2.288818359375e-05, -5.53131103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -3.898143768310547e-05, -3.182853834005073e-05, -5.7220458984375e-06, -3.24249267578125e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.0020542144775390625, -1.9073486328125e-06, -1.9073486328125e-05, -1.0490362910786644e-05, -0.0002852560137398541, -0.00012373377103358507, -3.6716461181640625e-05, -9.942032193066552e-05, -3.933906555175781e-06, -0.000762939453125, -0.0006198883056640625, -5.7220458984375e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.0037881135940551758, -1.2159347534179688e-05, -0.003163813380524516, -4.780291783390567e-05, -0.000331878662109375, -2.288818359375e-05, -0.0003337860107421875, -4.76837158203125e-05, -3.814697265625e-06, -3.0875205993652344e-05, -2.0265579223632812e-06, -4.1961669921875e-05, -0.15174293518066406, 0.0, -0.005848884582519531, -1.33514404296875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -7.62939453125e-06, -0.030839920043945312, -0.05016911029815674, -0.00018703937530517578, -1.33514404296875e-05, -0.03286552429199219, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -0.07522010803222656, -0.005817292258143425, -5.7220458984375e-06, -7.62939453125e-06, -0.012969970703125, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BlessingOfKings", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "change_attack"}, "args": [{"_type": "Template44"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "increase_health"}, "args": [{"_type": "Template44"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.3790608237102333, "inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Kings", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Kings", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 115, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 115, 156]}]}
{"index": 11, "beams": [{"score_history": [-5.7220458984375e-06, -1.1444091796875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -8.96453857421875e-05, -1.3232143828645349e-05, -0.0010331596713513136, -0.0019309151684865355, -0.0001168189337477088, -5.53131103515625e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -3.457069396972656e-05, -0.0005173690151423216, -1.52587890625e-05, -2.09808349609375e-05, -7.43865966796875e-05, 0.0, -3.24249267578125e-05, -0.0009212493896484375, -7.62939453125e-06, -0.0012969970703125, -3.814697265625e-06, -5.53131103515625e-05, -1.8000440832111053e-05, -0.0002241022593807429, -9.965524077415466e-05, -0.0001667736651143059, -5.102156865177676e-05, -5.066338781034574e-05, -0.0001277923583984375, -0.0002269744873046875, -1.9073486328125e-06, -0.0002498626708984375, -1.9073486328125e-06, -0.0008585159084759653, -2.5510591513011605e-05, -0.002532556653022766, -6.175008456921205e-05, -0.0048313140869140625, -0.000518798828125, -0.000141143798828125, -8.58306884765625e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0002841949462890625, -0.0004482269287109375, -3.62396240234375e-05, -7.2479248046875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -1.33514404296875e-05, -1.33514404296875e-05, -1.9073486328125e-05, -0.015484809875488281, -0.0829923152923584, -9.918209980241954e-05, -1.9073486328125e-06, -0.00179290771484375, -0.00022125244140625], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BlessingOfMight", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "change_attack"}, "args": [{"_type": "Template40"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.1190235205413046, "inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "choice_history": [139, 193, 316, 147, 173, "Blessing", "Of", "Might", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Blessing", " ", "of", " ", "Might", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 111, 156]}]}
{"index": 12, "beams": [{"score_history": [-2.6702880859375e-05, -2.6702880859375e-05, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.00014053787162993103, -0.00011121608258690685, -5.8412348153069615e-05, -1.33514404296875e-05, -1.9073486328125e-05, -1.1444091796875e-05, -0.0002841949462890625, -7.62939453125e-06, -4.1961313399951905e-05, -1.5020284081401769e-05, -1.9073486328125e-06, -0.0002899169921875, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.006580352783203125, -7.62939453125e-06, -0.0018749237060546875, -5.7220458984375e-06, -1.1444091796875e-05, -2.992108420585282e-05, -2.0742414562846534e-05, -0.0001546025014249608, -4.470348358154297e-05, -0.0006046295166015625, -0.000213623046875, -0.010408401489257812, -1.1444091796875e-05, -8.7738037109375e-05, -1.9073486328125e-05, -2.491474151611328e-05, -6.103515625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.0020151138305664062, -9.5367431640625e-06, -0.000217437744140625, -1.33514404296875e-05, -0.00025337893748655915, -1.9073486328125e-06, -5.245107240625657e-05, 0.0, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BloodfenRaptor", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 3, "hole1": 2}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.023926644788843987, "inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "choice_history": [139, 193, 316, 147, 173, "Bloodfen", "Raptor", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bloodfen", " ", "Raptor", "<EOS>", 108, 95, 99, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "3", "<EOS>", "2", "<EOS>", 156]}]}
{"index": 13, "beams": [{"score_history": [-1.52587890625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -4.57763671875e-05, -9.5367431640625e-06, -3.8146954466355965e-06, -7.867789827287197e-05, -4.57763671875e-05, -0.0001926422119140625, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-05, -1.0251998901367188e-05, -1.33514404296875e-05, -3.62396240234375e-05, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0005550384521484375, -0.000148773193359375, -0.001796722412109375, -3.62396240234375e-05, 0.0, -5.9604644775390625e-06, -7.748596544843167e-06, -0.0016832351684570312, -0.006206512451171875, -0.001220703125, -5.7220458984375e-06, -3.62396240234375e-05, -0.0001604551071068272, -7.867813110351562e-06, -0.0001201629638671875, -0.0015354156494140625, -0.000335693359375, -0.0044155120849609375, -1.9073486328125e-05, -0.0005340576171875, -0.013400077819824219, -0.0001049041748046875, -0.0045680999755859375, -0.00026011362206190825, -1.1920928244535389e-07, -0.0059566497802734375, -0.02761077880859375, 0.0, -3.62396240234375e-05, -9.34600830078125e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.0009059906005859375, -0.004201531410217285, -7.62939453125e-06, -7.62939453125e-06, -0.009572982788085938, -9.5367431640625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Bloodlust", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Bloodlust"}, {"_type": "Template46"}, {"_type": "Template33"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "minions"}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "change_temp_attack"}, "args": [{"_type": "Template40"}]}}], "target": {"_type": "Template54"}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08631765653807832, "inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "choice_history": [139, 193, 316, 147, 173, "Bloodlust", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Bloodlust", "<EOS>", 116, 106, 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 43, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "change_temp_attack", "<EOS>", 302, 111, 156]}]}
{"index": 14, "beams": [{"score_history": [-3.62396240234375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -9.5367431640625e-06, -7.390948667307384e-06, -2.610649426060263e-05, -9.536306606605649e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.001357759378152e-05, -1.2278481335670222e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.000606536865234375, 0.0, -3.814697265625e-06, -1.025196434056852e-05, -5.1140785217285156e-05, -1.764281842042692e-05, -3.933906555175781e-06, -4.57763671875e-05, -7.82012939453125e-05, -0.000217437744140625, -1.9073486328125e-06, -0.0045986175537109375, -3.814697265625e-06, -2.3126602172851562e-05, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.0046863555908203125, 0.0, -0.0026187896728515625, -0.0001220703125, -1.1920928955078125e-05, -1.1801670552813448e-05, -3.62396240234375e-05, -4.76837158203125e-05, -0.036197662353515625, -6.67572021484375e-05, -3.528594970703125e-05, -9.655922440288123e-06, -6.6756979322235566e-06, -2.0265558760002023e-06, -0.004160709213465452, -1.9073486328125e-06, -6.103515625e-05, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "BluegillWarrior", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole2": "charge", "hole1": 1}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.054263772459535176, "inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "choice_history": [139, 193, 316, 147, 173, "Bluegill", "Warrior", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Bluegill", " ", "Warrior", "<EOS>", 108, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 68, 156]}]}
{"index": 15, "beams": [{"score_history": [-5.7220458984375e-06, -5.7220458984375e-05, -2.288818359375e-05, -0.0001049041748046875, -2.86102294921875e-05, -1.1920928244535389e-07, -3.8384976505767554e-05, -3.24249267578125e-05, -0.0002269744873046875, -1.71661376953125e-05, -9.918212890625e-05, -7.62939453125e-06, -1.919262831506785e-05, -0.00011109899787697941, -2.47955322265625e-05, -0.00012969970703125, -0.0001087188720703125, -7.62939453125e-06, -4.38690185546875e-05, -0.049510955810546875, -1.33514404296875e-05, -0.0001544952392578125, -2.288818359375e-05, -1.9073486328125e-06, -5.638440416078083e-05, -7.867782187531702e-06, -0.000354766845703125, -3.24249267578125e-05, -0.024721145629882812, -5.340576171875e-05, -9.5367431640625e-06, -0.00022125244140625, -0.0001964569091796875, -0.00011456012725830078, -9.179115295410156e-05, -0.0018558502197265625, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.814697265625e-06, 0.0, -0.0011444091796875, -1.9073486328125e-06, -0.000415802001953125, -7.62939453125e-05, -0.0008518565446138382, 0.0, -5.131566467753146e-06, 0.0, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Boar", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08101211614938819, "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "choice_history": [139, 193, 316, 147, 173, "Boar", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Boar", "<EOS>", 109, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156]}]}
{"index": 16, "beams": [{"score_history": [-1.52587890625e-05, -7.62939453125e-06, -5.14984130859375e-05, -1.33514404296875e-05, -2.288818359375e-05, -4.2914423829643056e-05, -4.768371127283899e-06, -5.53131103515625e-05, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -8.463848644169047e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.000133514404296875, 0.0, -3.0517578125e-05, -0.00016021728515625, -0.0003662109375, -8.0108642578125e-05, -0.0001621246337890625, -1.52587890625e-05, -2.7418097943154862e-06, -8.940695806813892e-06, -0.0019969940185546875, -0.0036058425903320312, -0.00028228759765625, -0.0009059906005859375, -0.05529308319091797, -0.0001659393310546875, -0.0005117653054185212, -2.503394853192731e-06, -7.2479248046875e-05, 0.0, -0.000118255615234375, -0.049433112144470215, -2.324580964341294e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -1.9073486328125e-06, -0.000110626220703125, -0.0034465789794921875, -0.000156402587890625, -0.00101470947265625, -3.814697265625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -3.24249267578125e-05, -0.0001239776611328125, -0.0159304141998291, -3.0517578125e-05, -1.33514404296875e-05, -0.0041217803955078125, -9.918212890625e-05, 0.0, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0007476806640625, -0.19891774654388428, -4.0411949157714844e-05, -3.4332275390625e-05, -0.0011386871337890625, -0.0002288818359375, -0.0008754730224609375, -4.76837158203125e-05, -0.00447845458984375, -0.0032291412353515625, -0.02412710338830948, -0.005719758104532957, -0.0001068115234375], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Charge", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_friendly_minion_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template40"}, {"_type": "Template27"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "change_attack"}, "args": [{"_type": "Template36"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_buff"}, "args": [{"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template16", "hole0": "<UNK>"}]}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.37868209025327815, "inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "choice_history": [139, 193, 316, 147, 173, "Charge", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Charge", "<EOS>", 111, 102, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_friendly_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "<UNK>", "<EOS>", 156]}]}
{"index": 17, "beams": [{"score_history": [-1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0034970815759152174, -0.0003197873884346336, -5.519390106201172e-05, -1.71661376953125e-05, -6.67572021484375e-05, -7.62939453125e-06, -0.0001373291015625, -5.7220458984375e-06, -9.322166442871094e-05, -3.933904736186378e-06, -3.814697265625e-06, -5.14984130859375e-05, -3.814697265625e-06, 0.0, 0.0, -0.0049724578857421875, 0.0, -0.0057621002197265625, -9.5367431640625e-06, -1.33514404296875e-05, -4.887576324108522e-06, -2.527235119487159e-05, -1.2636104656849056e-05, -3.24249267578125e-05, -0.0021495819091796875, -0.0005092620849609375, -0.000263214111328125, -0.0057315826416015625, -7.62939453125e-06, -1.3351391316973604e-05, -2.3841855067985307e-07, -7.867813110351562e-05, -4.768370445162873e-07, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ChillwindYeti", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Chillwind Yeti"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 4, "hole1": 5}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.02389159396156515, "inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "choice_history": [139, 193, 316, 147, 173, "Chillwind", "Yeti", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Chillwind", " ", "Yeti", "<EOS>", 115, 95, 94, 154, 205, "4", "<EOS>", "5", "<EOS>", 156]}]}
{"index": 18, "beams": [{"score_history": [-3.814697265625e-06, 0.0, -1.1444091796875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0003812903305515647, -5.7220458984375e-06, -0.02200794219970703, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -6.556510470545618e-06, -6.794917680963408e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.0001087188720703125, 0.0, -1.9073486328125e-06, -0.0001506805419921875, -9.918212890625e-05, -0.0015964508056640625, -3.814697265625e-06, -3.814697265625e-06, -1.0728830375228426e-06, -0.0020320138428360224, -0.00075531005859375, -0.008947372436523438, -0.003314971923828125, -1.9073486328125e-06, -4.38690185546875e-05, -0.0003085136413574219, -2.1576881408691406e-05, -1.71661376953125e-05, -0.0012969970703125, -0.00048828125, -0.00634002685546875, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0002956390380859375, 0.0, -0.016702651977539062, -0.0007096529006958008, -2.7418097943154862e-06, -0.37579333782196045, 0.0, -0.00012969970703125, -0.00319671630859375, -0.024262428283691406, -2.47955322265625e-05, -1.9073486328125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -1.33514404296875e-05, -0.0006275177001953125, 0.0, -0.0020055770874023438, -0.0007884501828812063, -4.768360213347478e-06, -0.38565075397491455, -0.0002384185791015625, -4.38690185546875e-05, -0.0027408599853515625, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Claw", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Claw"}, {"_type": "Template38"}, {"_type": "Template28"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "hero"}, "attr": "change_temp_attack"}, "args": [{"_type": "Template36"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "hero"}, "attr": "increase_armor"}, "args": [{"_type": "Template36"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.8613583161796825, "inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "choice_history": [139, 193, 316, 147, 173, "Claw", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Claw", "<EOS>", 109, 103, 99, 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "change_temp_attack", "<EOS>", 302, 108, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "increase_armor", "<EOS>", 302, 108, 156]}]}
{"index": 19, "beams": [{"score_history": [-1.1444091796875e-05, -5.7220458984375e-06, -6.866455078125e-05, -4.76837158203125e-05, -3.814697265625e-06, -2.6702524337451905e-05, -1.800060272216797e-05, -2.6702880859375e-05, -0.0002880096435546875, -0.013666152954101562, -0.000576019287109375, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.0001354217529296875, -8.392333984375e-05, -2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0006427764892578125, -7.62939453125e-06, -0.0001201629638671875, -0.0003719329833984375, -1.9073486328125e-06, -5.8412379075889476e-06, -5.9604644775390625e-06, -5.7220458984375e-06, -0.02478790283203125, -0.000576019287109375, -9.1552734375e-05, -1.9073486328125e-06, -0.000164031982421875, -2.0265579223632812e-06, -0.000972747802734375, -0.001873016357421875, -0.0001163482666015625, -0.0008831024169921875, -3.4332275390625e-05, -1.52587890625e-05, -0.00093841552734375, -1.33514404296875e-05, -0.013218998908996582, -3.123283386230469e-05, -0.0091552734375, -5.340576171875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.00072479248046875, 0.0, -0.005654454231262207, -9.5367431640625e-06, -0.0017061233520507812, -9.5367431640625e-06, -0.00020599365234375, -0.000408172607421875, -5.53131103515625e-05, -8.20159912109375e-05, -5.2689938456751406e-05, -9.775161743164062e-06, -0.005828857421875, -0.000255584716796875, -0.0010852813720703125, -5.7220458984375e-06, -0.008513450622558594, -2.0265579223632812e-06, -0.004143714904785156, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0007257461547851562, -2.0265579223632812e-06, -0.0046234130859375, -0.0001621246337890625, -0.0017185211181640625, -0.00095367431640625, -0.0003681182861328125, -0.000179290771484375, -8.58306884765625e-05, -0.0026187896728515625, -0.000579833984375, -4.1961669921875e-05, -2.09808349609375e-05, 0.0, -0.0008363723754882812, 0.0, -0.0071974992752075195, -3.814697265625e-06, -0.006720781326293945, -3.814697265625e-06, -0.001216888427734375, -0.0052738189697265625, -1.71661376953125e-05, -0.0019388198852539062, -8.344650268554688e-05, -0.0004863739013671875, -8.0108642578125e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.001384735107421875, -0.0001277923583984375, -0.0003566741943359375, -3.814697265625e-06, -0.002362966537475586, -3.957742592319846e-05, -0.009487509727478027, -2.86102294921875e-05, -2.09808349609375e-05, -0.07228946685791016, -8.0108642578125e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.00046539306640625, -0.0015414953231811523, -1.9073486328125e-06, -0.0001697540283203125, -0.0063228607177734375, -0.000217437744140625, -0.026238184422254562, -2.86102294921875e-05, -0.0001316070556640625, -4.38690185546875e-05, -5.7220458984375e-06, -0.0004329681396484375, -1.9073486328125e-05, -0.00019073486328125, -0.004459381103515625, -0.0008068084716796875, -0.0010433197021484375, -0.0028543472290039062, -0.0002918243408203125, -0.000507354736328125, -0.000827789306640625, -4.1961669921875e-05, -1.52587890625e-05, -8.0108642578125e-05, -2.6702880859375e-05, -0.0003147125244140625, 0.0, -0.0013930797576904297, -1.33514404296875e-05, -0.0004749298095703125, 0.0, -2.86102294921875e-05, -3.24249267578125e-05, -0.0005359649658203125, -5.7220458984375e-06, -6.961822509765625e-05, -1.9073486328125e-06, -0.0023136138916015625, -0.0010938644409179688, -5.7220458984375e-06, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.0013561248779296875, -1.1920928244535389e-07, -0.0001354217529296875, -0.000148773193359375, -1.9073486328125e-06, -0.00011444091796875, -7.34326386009343e-05, -5.7220458984375e-06, -0.00016021728515625, -0.015475273132324219, -0.0001544952392578125, -0.000171661376953125, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Cleave", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Cleave"}, {"_type": "Template36"}, {"_type": "Template27"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "targets": [{"_type": "Name", "id": "minions"}]}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Template55"}, {"_type": "Template36"}]}, "body": [{"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "game"}, "attr": "random_choice"}, "args": [{"_type": "Name", "id": "minions"}]}, "targets": [{"_type": "Template54"}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "minions"}, "attr": "remove"}, "args": [{"_type": "Template54"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "target": {"_type": "Name", "id": "i"}}], "args": {"_type": "Template1"}}, {"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template16", "hole0": "super"}, "attr": "can_use"}, "args": [{"_type": "Template43"}, {"_type": "Name", "id": "game"}]}, {"_type": "Compare", "comparators": [{"_type": "Template36"}], "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "ops": [{"_type": "GtE"}]}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.2911182442885476, "inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "choice_history": [139, 193, 316, 147, 173, "Cleave", "<EOS>", 302, 112, 317, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Cleave", "<EOS>", 108, 102, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "minions", "<EOS>", 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 149, 177, 25, 194, "i", "<EOS>", 20, 171, 25, 194, "range", "<EOS>", 303, 122, 108, 317, 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "game", "<EOS>", "random_choice", "<EOS>", 302, 84, 194, "minions", "<EOS>", 148, 176, 20, 171, 17, 164, 25, 194, "minions", "<EOS>", "remove", "<EOS>", 302, 121, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 150, 178, "can_use", "<EOS>", 2, 315, 153, 200, 19, 167, 6, 303, 79, 171, 17, 164, 32, 213, "super", "<EOS>", "can_use", "<EOS>", 303, 114, 84, 194, "game", "<EOS>", 80, 174, 20, 171, 25, 194, "len", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 299, 10, 302, 108, 156]}]}
{"index": 20, "beams": [{"score_history": [-3.814697265625e-06, -2.86102294921875e-05, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.576278118089249e-07, -6.091594696044922e-05, -8.58306884765625e-05, -0.000263214111328125, -5.340576171875e-05, -3.814697265625e-06, -2.09808349609375e-05, -8.70227722771233e-06, -4.0531158447265625e-06, -2.288818359375e-05, -2.6702880859375e-05, -1.33514404296875e-05, 0.0, -3.0517578125e-05, -0.000347137451171875, -3.814697265625e-05, -0.0020618438720703125, -5.7220458984375e-05, -3.814697265625e-06, -2.50339189733495e-06, -1.251697449333733e-05, -0.000263214111328125, -0.002086639404296875, -1.9073486328125e-06, -5.340576171875e-05, -1.33514404296875e-05, -0.00047278404235839844, -0.00011444091796875, -0.05514848232269287, -6.29425048828125e-05, -0.0014286041259765625, -3.62396240234375e-05, -1.9073486328125e-06, -0.00016629695892333984, -6.866455078125e-05, -1.71661376953125e-05, -0.049793243408203125, -0.0009822845458984375, -0.002193450927734375, -0.0001220703125, -0.0006885528564453125, -3.4332275390625e-05, -5.340576171875e-05, -0.0001697540283203125, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.0012836456298828125, -3.0517578125e-05, -0.000584721565246582, -2.288818359375e-05, -0.000213623046875, -0.001514434814453125, -6.4849853515625e-05, -3.814697265625e-05, -4.66107958345674e-05, -0.00020241737365722656, -3.24249267578125e-05, -0.000125885009765625, 0.0, -4.38690185546875e-05, -1.33514404296875e-05, -0.0001010894775390625, -3.814697265625e-05, -0.0005931854248046875, -0.006631373893469572, -1.9311904907226562e-05, -0.00011444091796875, -0.001377105712890625, -3.24249267578125e-05, -0.0008968623587861657, -1.5139572496991605e-05, -0.00019073486328125, -0.019863128662109375, -5.7220458984375e-06, -5.340576171875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.002216339111328125, 0.0, -0.003726959228515625, -0.0023484304547309875, -5.9485384554136544e-05, -0.0012181997299194336, 0.0, -6.67572021484375e-05, -0.00019073486328125, -3.62396240234375e-05, -0.0007634523790329695, -3.004073914780747e-05, -9.1552734375e-05, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Consecration", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Consecration"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "target": {"_type": "Template54"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "hero"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.16217181530413427, "inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "choice_history": [139, 193, 316, 147, 173, "Consecration", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Consecration", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156]}]}
{"index": 21, "beams": [{"score_history": [-2.09808349609375e-05, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -5.364274329622276e-05, -5.745722592109814e-05, -5.483620952873025e-06, -1.1444091796875e-05, -0.0001773834228515625, -0.0001811981201171875, -0.0001220703125, -5.340576171875e-05, -6.353852950269356e-05, -6.198863957251888e-06, -1.9073486328125e-06, -0.000164031982421875, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00162506103515625, 0.0, -0.022871971130371094, -1.9073486328125e-06, -1.33514404296875e-05, -4.768360213347478e-06, -0.0004087496199645102, -3.3378106309100986e-05, -7.62939453125e-06, -0.001712799072265625, -5.14984130859375e-05, -0.0001049041748046875, -9.5367431640625e-06, -0.000682830810546875, -3.814697265625e-06, -1.1444091796875e-05, -9.918212890625e-05, -3.24249267578125e-05, 0.0, 0.0, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.0005550384521484375, -1.33514404296875e-05, -0.0008640289306640625, -2.6702880859375e-05, -0.0015040027210488915, -1.1205671398784034e-05, -0.00011336357420077547, -1.1920928244535389e-07, -1.71661376953125e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "CoreHound", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Template48"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 9, "hole1": 5}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.0317581011781769, "inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "choice_history": [139, 193, 316, 147, 173, "Core", "Hound", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Core", " ", "Hound", "<EOS>", 118, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 154, 205, "9", "<EOS>", "5", "<EOS>", 156]}]}
{"index": 22, "beams": [{"score_history": [-0.000133514404296875, -0.0002384185791015625, -2.288818359375e-05, -3.4332275390625e-05, -6.4849853515625e-05, -1.1920928955078125e-06, -0.0001078843415598385, -0.000133514404296875, -0.0064411163330078125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.152555099310121e-07, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -4.9591064453125e-05, -7.2479248046875e-05, -0.017919540405273438, -1.9073486328125e-05, -5.7220458984375e-06, -1.1920928244535389e-07, -4.98284243803937e-05, -0.000148773193359375, -0.0041713714599609375, -5.7220458984375e-06, -0.00030517578125, -0.0001087188720703125, -0.0037728548049926758, -5.7220458984375e-06, -0.06630837917327881, -2.0265579223632812e-06, -0.0002994537353515625, -1.52587890625e-05, -0.0009860992431640625, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -0.0002536773681640625, 0.0, -0.0001983642578125, -0.0030976533889770508, -2.8967857360839844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -6.711483001708984e-05, 0.0, -0.000415802001953125, -0.0001850128173828125, -3.814697265625e-06, -0.00168609619140625, -9.5367431640625e-06, -1.1444091796875e-05, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -0.0023860931396484375, -0.03831362724304199, -0.0002881288528442383, -0.000759124755859375, -0.00064849853515625, -0.00237274169921875, -0.021531105041503906, -2.09808349609375e-05, -0.009517669677734375, -0.000278472900390625, -5.14984130859375e-05, 0.0, -0.0007085797842592001, -0.007443069946020842, -5.7220458984375e-06, -8.96453857421875e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.049139976501464844, -1.9073486328125e-06, -0.0017757415771484375, -3.814697265625e-06, -0.00496673583984375, -0.0001697540283203125, -7.62939453125e-06, -0.00011444091796875, -1.52587890625e-05, -0.0038661956787109375, -0.00041961669921875, -0.0007152557373046875, 0.0, -0.015534043312072754, 0.0, -0.005817413330078125, -3.814697265625e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Corruption", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_enemy_minion_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_effect"}, "args": [{"_type": "Call", "func": {"_type": "Template57"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "TurnStarted"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template16", "hole0": "EnemyPlayer"}, "arg": "player"}]}, {"_type": "Call", "func": {"_type": "Template56"}, "args": [{"_type": "Template16", "hole0": "Kill"}, {"_type": "Template15"}]}]}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.27532112416133003, "inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "choice_history": [139, 193, 316, 147, 173, "Corruption", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Corruption", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "add_effect", "<EOS>", 302, 79, 171, 55, 303, 79, 170, 25, 194, "Turn", "Started", "<EOS>", 310, 138, 291, "player", "<EOS>", 32, 213, "Enemy", "Player", "<EOS>", 79, 171, 54, 303, 93, 213, "Kill", "<EOS>", 92, 156]}]}
{"index": 23, "beams": [{"score_history": [-3.814697265625e-06, 0.0, 0.0, -1.52587890625e-05, -1.71661376953125e-05, -1.680836794548668e-05, -3.64774459740147e-05, -2.2411306417779997e-05, -7.2479248046875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.1457672119140625e-06, -5.197399514145218e-05, 0.0, -1.1444091796875e-05, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -7.05718994140625e-05, -0.000759124755859375, -7.62939453125e-06, -9.5367431640625e-06, -9.298280929215252e-06, -2.777570807666052e-05, -5.960462772236497e-07, -6.079673767089844e-06, -0.000133514404296875, -3.0517578125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, -2.920608312706463e-05, -0.0005187873612158, -8.392333984375e-05, -1.71661376953125e-05, -0.018720626831054688, -2.47955322265625e-05, -2.0980818590032868e-05, -6.19869097135961e-05, -5.495476580108516e-05, -2.9802317840221804e-06, -0.0012203451478853822, -4.5299530029296875e-06, -0.0003204345703125, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DalaranMage", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Dalaran Mage"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 1, "hole2": "spell_damage", "hole1": 4}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.022570354830634187, "inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "choice_history": [139, 193, 316, 147, 173, "Dalaran", "Mage", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Dalaran", " ", "Mage", "<EOS>", 111, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 39, 156]}]}
{"index": 24, "beams": [{"score_history": [-4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -4.768370445162873e-07, -0.0010559961665421724, -1.6927606338867918e-05, -4.57763671875e-05, -0.0006046295166015625, -1.33514404296875e-05, 0.0, 0.0, -9.5367431640625e-06, -2.1695894247386605e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00058746337890625, -5.7220458984375e-06, -0.03032684326171875, -7.62939453125e-06, -6.4849853515625e-05, -2.52720492426306e-05, -6.341934204101562e-05, -0.00012898174463771284, -6.675719760096399e-06, -1.1444091796875e-05, -0.03850555419921875, -6.4849853515625e-05, -0.0005359649658203125, -0.0001850128173828125, -1.52587890625e-05, -7.62939453125e-06, -6.687641143798828e-05, -3.576278118089249e-07, -5.14984130859375e-05, -0.0020961761474609375, -6.67572021484375e-05, -0.004917144775390625, 0.0, -1.9073486328125e-06, -0.07121467590332031, -1.9073486328125e-06, -9.5367431640625e-06, -0.012497901916503906, -0.0189816951751709, -1.9073486328125e-06, -1.9073486328125e-06, -0.0063838958740234375, -3.814697265625e-05, -0.0010509490966796875, -0.03657793998718262, -7.629378160345368e-06, -6.866455078125e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DivineSpirit", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "increase_health"}, "args": [{"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "health"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.22650865432780165, "inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "choice_history": [139, 193, 316, 147, 173, "Divine", "Spirit", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Divine", " ", "Spirit", "<EOS>", 108, 105, 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "increase_health", "<EOS>", 302, 76, 164, 33, "health", "<EOS>", 156]}]}
{"index": 25, "beams": [{"score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -5.7220458984375e-06, -1.3708974620385561e-05, -3.9339050999842584e-05, -1.7046912034857087e-05, -2.6702880859375e-05, -1.9073486328125e-05, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -4.768370445162873e-07, -9.643686644267291e-05, -3.814697265625e-06, -0.002349853515625, -3.814697265625e-06, -0.000118255615234375, -1.9073486328125e-06, -1.9073486328125e-05, -8.0108642578125e-05, -0.0011234283447265625, -1.9073486328125e-06, -1.9073486328125e-06, -8.833035099087283e-05, -6.008138007018715e-05, -2.6583453291095793e-05, -5.841255187988281e-06, -9.34600830078125e-05, -0.0002269744873046875, -7.62939453125e-06, -4.76837158203125e-05, -2.47955322265625e-05, -3.4332275390625e-05, -0.00012993812561035156, -2.9802317840221804e-06, -2.288818359375e-05, -5.7220458984375e-06, -0.0005092620849609375, -0.0002288818359375, -0.0009975433349609375, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -0.04370582103729248, -0.003821906866505742, -0.0054683685302734375, -0.0001430511474609375, -4.1961669921875e-05, -0.0006145877996459603, -0.025369908660650253, -0.004608530085533857, -0.0010242462158203125, 0.0, -0.011204599402844906, -1.537799835205078e-05, -1.1086463018727954e-05, -4.38690185546875e-05, -9.34600830078125e-05, -0.000171169827808626, -1.4305104514278355e-06, -5.602836608886719e-06, -1.1324817933200393e-05, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DragonlingMechanic", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Summon"}, "args": [{"_type": "Template16", "hole0": "MechanicalDragonling"}]}, {"_type": "Template16", "hole0": "PlayerSelector"}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template44"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 2, "hole1": 4}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.1028528439976526, "inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "choice_history": [139, 193, 316, 147, 173, "Dragonling", "Mechanic", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dragonling", " ", "Mechanic", "<EOS>", 115, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Summon", "<EOS>", 302, 93, 213, "Mechanical", "Dragonling", "<EOS>", 93, 213, "Player", "Selector", "<EOS>", 154, 205, "2", "<EOS>", "4", "<EOS>", 156]}]}
{"index": 26, "beams": [{"score_history": [-4.00543212890625e-05, 0.0, 0.0, -7.62939453125e-06, -3.814697265625e-06, -5.8412379075889476e-06, -5.125993993715383e-06, -5.602834789897315e-06, -1.9073486328125e-05, -9.1552734375e-05, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -6.496906280517578e-05, -4.410743713378906e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -1.9073486328125e-05, -0.000133514404296875, -5.7220458984375e-06, -0.0001087188720703125, -1.9073486328125e-06, -7.62939453125e-06, -5.960446742392378e-06, -1.800059908418916e-05, -0.00043156452011317015, -7.17630609869957e-05, -0.0001239776611328125, -0.0122833251953125, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.00035858154296875, -0.0001068115234375, -0.0011800527572631836, -9.5367431640625e-06, -0.001129150390625, -0.0004673004150390625, -2.86102294921875e-05, -8.20159912109375e-05, -0.0014175176620483398, -9.167194366455078e-05, -0.0001163482666015625, 0.0, -0.0001392364501953125, -0.0002881288528442383, 0.0, -0.000110626220703125, -2.288818359375e-05, -0.0021343231201171875, -4.38690185546875e-05, -0.000209808349609375, -0.0036973953247070312, -0.0029087066650390625, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, -5.7220458984375e-06, -0.027070045471191406, -0.0015053749084472656, -1.1920928244535389e-07, -1.1444091796875e-05, -0.0002994537353515625, -4.1961669921875e-05, -0.0007743831374682486, -4.0531158447265625e-06, -0.000301361083984375, -0.0006961822509765625, -3.814697265625e-06, -7.43865966796875e-05, -0.0023441314697265625, 0.0, -1.52587890625e-05, -0.00016021728515625, 0.0, -0.10057544708251953, -0.0012510220985859632, -9.417517503607087e-06, -0.03110945224761963, 0.0, -0.0001888275146484375, -0.0038557052612304688, -3.24249267578125e-05, -0.0013294219970703125, -5.7220458984375e-06, -0.0009517669677734375, -0.0031769268680363894, -3.838539123535156e-05, -7.62939453125e-06, -0.0038232803344726562, -0.0007686614990234375, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DrainLife", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "hero"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "effective_heal_power"}, "args": [{"_type": "Template36"}]}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.20868558191749997, "inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "choice_history": [139, 193, 316, 147, 173, "Drain", "Life", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Drain", " ", "Life", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 43, "hero", "<EOS>", "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 108, 113, 156]}]}
{"index": 27, "beams": [{"score_history": [-1.9073486328125e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.00011431517486926168, -0.00044598837848752737, -3.147124880342744e-05, -4.9591064453125e-05, -5.7220458984375e-05, -3.814697265625e-06, 0.0, -7.62939453125e-06, -2.622604142743512e-06, -3.4570680327306036e-06, 0.0, -4.1961669921875e-05, -5.340576171875e-05, -7.62939453125e-06, -0.000141143798828125, -5.53131103515625e-05, -0.000171661376953125, -0.0001811981201171875, -1.9073486328125e-06, -3.0517578125e-05, -5.245203283266164e-06, -0.0015702906530350447, -6.675708846159978e-06, -0.0001354217529296875, -0.00032806396484375, -0.0006504058837890625, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0015145540237426758, -9.5367431640625e-06, -0.00596010684967041, 0.0, -0.021628379821777344, -0.025056838989257812, -0.0010013580322265625, 0.0, -3.0517578125e-05, 0.0, -0.00441741943359375, -0.0004787445068359375, -1.33514404296875e-05, -0.000637054443359375, 0.0, -0.006163597106933594, -5.7220458984375e-06, -4.00543212890625e-05, -2.47955322265625e-05, -0.0029392242431640625, -9.5367431640625e-06, -0.0004291534423828125, -7.05718994140625e-05, -0.0009969917591661215, -3.7550926208496094e-05, -0.000278472900390625, -0.00048828125, -0.000438690185546875, -0.0022525787353515625, -0.0059070587158203125, -8.96453857421875e-05, -1.71661376953125e-05, 0.0, -5.1856040954589844e-05, -4.172325134277344e-06, -0.0004634857177734375, -9.5367431640625e-06, -0.0002256631851196289, -8.535384404240176e-05, -1.9073486328125e-06, -0.0009174346923828125, -1.71661376953125e-05, -2.0265558760002023e-06, -3.814689989667386e-06, -4.148227162659168e-06, -2.3841855067985307e-07, -3.814697265625e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "DreadInfernal", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template29"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damage"}, "args": [{"_type": "Template38"}]}, {"_type": "Call", "func": {"_type": "Template70"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template16", "hole0": "BothPlayer"}, "arg": "players"}]}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Template52"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "WARLOCK"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 6, "hole1": 6}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08690463187437558, "inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "choice_history": [139, 193, 316, 147, 173, "Dread", "Infernal", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Dread", " ", "Infernal", "<EOS>", 120, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 94, 311, 138, 291, "minion_type", "<EOS>", 36, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 310, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 154, 205, "6", "<EOS>", "6", "<EOS>", 156]}]}
{"index": 28, "beams": [{"score_history": [-2.6702880859375e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -2.09808349609375e-05, -3.576277322281385e-06, -0.00011312322021694854, -5.268965469440445e-05, -7.43865966796875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -4.1961669921875e-05, -3.576272320060525e-06, -2.1219222617219202e-05, -3.814697265625e-06, -0.0001125335693359375, -7.62939453125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.62396240234375e-05, -0.00014495849609375, -0.001911163330078125, -1.9073486328125e-06, -1.9073486328125e-06, -1.2636104656849056e-05, -2.5987612389144488e-05, -1.5497195136049413e-06, -1.3351438610698096e-05, -0.0002536773681640625, -0.000431060791015625, -0.0003528594970703125, -0.000804901123046875, -5.7220458984375e-06, -1.52587890625e-05, -0.0002275705337524414, -2.1457672119140625e-06, -1.71661376953125e-05, 0.0, -6.4849853515625e-05, -0.000118255615234375, -0.0007839202880859375, -3.814697265625e-06, -0.0003681182861328125, -2.288818359375e-05, -0.00035904388641938567, -0.00014901161193847656, -3.24249267578125e-05, -8.96453857421875e-05, -0.0005321502685546875, -0.0007762908935546875, -0.00135040283203125, -0.0024394989013671875, -1.1444091796875e-05, -1.52587890625e-05, -0.00013625621795654297, -8.58306884765625e-06, -0.0006732940673828125, -0.000274658203125, -0.0007154941558837891, -0.00012671947479248047, -3.814697265625e-06, -0.002349853515625, -6.29425048828125e-05, -0.0033740997314453125, -2.5391578674316406e-05, -0.00141143798828125, -0.0002899169921875, -0.0003459453582763672, -0.007052063941955566, -3.0517578125e-05, -1.33514404296875e-05, -7.62939453125e-06, -8.320817141793668e-05, -3.576278118089249e-07, -0.0001719883584883064, -2.3841855067985307e-07, -7.62939453125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ElvenArcher", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damage"}, "args": [{"_type": "Template38"}]}, {"_type": "Call", "func": {"_type": "Template70"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template16", "hole0": "BothPlayer"}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Template16", "hole0": "UserPicker"}, "arg": "picker"}]}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 1, "hole1": 1}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.029118127840803254, "inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "choice_history": [139, 193, 316, 147, 173, "Elven", "Archer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Elven", " ", "Archer", "<EOS>", 109, 95, 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "1", "<EOS>", "1", "<EOS>", 156]}]}
{"index": 29, "beams": [{"score_history": [-0.00017547607421875, -2.47955322265625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -8.702239938429557e-06, -2.491451959940605e-05, -0.000169859136804007, -2.47955322265625e-05, -0.05522632598876953, -3.0517578125e-05, -5.7220458984375e-06, -3.4332275390625e-05, -1.919269561767578e-05, -6.12735457252711e-05, -1.33514404296875e-05, -0.0001010894775390625, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.012653350830078125, -0.0042362213134765625, -0.010831832885742188, -3.24249267578125e-05, -3.814697265625e-06, -0.00019548801355995238, -2.1457672119140625e-05, -0.00036840804386883974, -0.00015854835510253906, -8.0108642578125e-05, -0.09355831146240234, -0.0010814666748046875, -0.0002593994140625, -3.4332275390625e-05, -2.6702880859375e-05, -0.00022399425506591797, -1.5974044799804688e-05, -2.6702880859375e-05, -0.0005092620849609375, -0.000316619873046875, -0.00576019287109375, -1.9073486328125e-06, -9.5367431640625e-06, -0.0006885528564453125, -1.9073486328125e-05, 0.0, -0.0032434463500976562, -0.0007207386079244316, -7.164472481235862e-05, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "ExcessMana", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Template55"}, {"_type": "Template28"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "draw"}}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.19109656517866824, "inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, False)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "choice_history": [139, 193, 316, 147, 173, "Excess", "Mana", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 306, 87, 202, "Excess", " ", "Mana", "<EOS>", 122, 103, 94, 119, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156]}]}
{"index": 30, "beams": [{"score_history": [-2.288818359375e-05, -1.1444091796875e-05, -3.62396240234375e-05, -1.71661376953125e-05, -1.33514404296875e-05, -1.1920928244535389e-07, -9.441217116545886e-05, -5.340576171875e-05, -0.0003032684326171875, -5.7220458984375e-06, 0.0, -0.0007781982421875, -1.537799835205078e-05, -1.9192511899746023e-05, -7.62939453125e-06, -0.000202178955078125, -4.1961669921875e-05, 0.0, -0.001087188720703125, -0.0006103515625, -3.0517578125e-05, -0.03463172912597656, -1.9073486328125e-05, -0.000148773193359375, -1.1920928244535389e-07, -0.0003657971101347357, -0.0009613037109375, -0.016185760498046875, -0.0003833770751953125, -0.000766754150390625, -0.14757537841796875, -0.0014705657958984375, -0.022731661796569824, -1.1444091796875e-05, -8.392333984375e-05, -1.9073486328125e-06, -0.0001888275146484375, -0.002178192138671875, -1.6570085790590383e-05, -0.000812530517578125, -0.0003223419189453125, -0.01994454860687256, -3.802741048275493e-05, -0.0019550323486328125, -0.0003719329833984375, -0.0003757476806640625, -8.0108642578125e-05, -0.0002040863037109375, -0.000194549560546875, -0.0013103485107421875, -0.00525057315826416, -2.2649765014648438e-06, -0.0030202865600585938, -0.0001049041748046875, -8.0108642578125e-05, -0.000347137451171875, -0.0055599212646484375, -0.0013484954833984375, -0.0017251968383789062, -7.62939453125e-06, -0.0017137527465820312, -0.003593921195715666, -3.576278118089249e-07, -3.814697265625e-05, -0.03662872314453125, -0.0002727508544921875, -0.0001316070556640625, -0.0002460479736328125, -3.24249267578125e-05, 0.0, -0.0049800872802734375, -0.006631374359130859, -5.7220458984375e-06, -0.000240325927734375, -0.00020599365234375, -6.866455078125e-05, -3.814697265625e-06, -0.005253791809082031, -0.015501260757446289, -2.1457672119140625e-06, -0.00048828125, 0.0, -0.0006999969482421875, 0.0, -0.000102996826171875, -0.0003070831298828125, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -2.09808349609375e-05, -0.0001163482666015625, -1.9073486328125e-06, -2.47955322265625e-05, -0.0011692047119140625, -0.02257847599685192, -2.47955322265625e-05, -4.00543212890625e-05, -0.0002899169921875, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Execute", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_enemy_minion_spell_target"}, "arg": "target_func"}, {"_type": "keyword", "value": {"_type": "Lambda", "body": {"_type": "BoolOp", "op": {"_type": "And"}, "values": [{"_type": "Compare", "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "calculate_max_health"}}], "left": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "health"}, "ops": [{"_type": "NotEq"}]}, {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template64"}, "attr": "spell_targetable"}}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "target"}]}}, "arg": "filter_func"}], "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template38"}, {"_type": "Template27"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "die"}, "args": [{"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.3755680908179073, "inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "choice_history": [139, 193, 316, 147, 173, "Execute", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Execute", "<EOS>", 109, 102, 99, 311, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_enemy_minion_spell_target", "<EOS>", 138, 291, "filter_func", "<EOS>", 22, 188, 5, 289, 295, 1, 288, "target", "<EOS>", 19, 167, 6, 303, 80, 174, 17, 164, 61, "health", "<EOS>", 299, 16, 302, 79, 169, 17, 164, 61, "calculate_max_health", "<EOS>", 79, 169, 17, 164, 61, "spell_targetable", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "die", "<EOS>", 302, 113, 156]}]}
{"index": 31, "beams": [{"score_history": [0.0, -1.9073486328125e-06, -3.4332275390625e-05, -1.1444091796875e-05, -7.43865966796875e-05, -0.00018439977429807186, -9.310158930020407e-05, -0.0019495581509545445, -2.0265579223632812e-06, -1.1444091796875e-05, -4.76837158203125e-05, -9.1552734375e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, -0.00048065185546875, -5.7220458984375e-06, -0.0013675689697265625, -1.52587890625e-05, -3.814697265625e-06, -5.245195097813848e-06, -2.193449836340733e-05, -2.014631354541052e-05, -2.682209014892578e-05, -0.00015568248636554927, -0.00012981891632080078, -0.0012340545654296875, -0.003849029541015625, -5.7220458984375e-05, -1.1444091796875e-05, 0.0, -1.931189763126895e-05, -2.5033950805664062e-05, -0.0002079010009765625, -0.03480052947998047, -3.0517578125e-05, -0.0013599395751953125, -7.43865966796875e-05, -0.00043487548828125, -1.71661376953125e-05, -0.0040607452392578125, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0004730224609375, -7.748603820800781e-06, -0.0025072097778320312, -1.9073486328125e-05, -5.14984130859375e-05, -0.0001220703125, -3.62396240234375e-05, -6.29425048828125e-05, -0.00013851404946763068, -1.1324866136419587e-05, -8.0108642578125e-05, -0.0001811981201171875, 0.0, -5.7220458984375e-06, -0.0001354217529296875, -3.814697265625e-05, -0.0001087188720703125, -0.0014209747314453125, -0.00041234487434849143, -8.344646857949556e-07, -3.24249267578125e-05, -0.008477210998535156, -0.00017547607421875, -0.0019482631469145417, -0.00038552284240722656, -0.0014820098876953125, -0.000110626220703125, 0.0, -3.814697265625e-06, -0.015573501586914062, -7.2479248046875e-05, 0.0, -0.03058910369873047, -0.0006114243296906352, -5.53131103515625e-05, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FanOfKnives", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Fan of Knives"}, {"_type": "Template40"}, {"_type": "Template26"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}]}}], "target": {"_type": "Template54"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "draw"}}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.11636138464803025, "inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "choice_history": [139, 193, 316, 147, 173, "Fan", "Of", "Knives", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Fan", " ", "of", " ", "Knives", "<EOS>", 111, 101, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156]}]}
{"index": 32, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -2.50339189733495e-06, -0.0002676248550415039, -4.9591064453125e-05, -8.7738037109375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.457069396972656e-05, -6.4373016357421875e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -7.82012939453125e-05, -0.0002536773681640625, -7.62939453125e-06, -0.000179290771484375, -4.57763671875e-05, -3.24249267578125e-05, -4.768370445162873e-07, -2.598749051685445e-05, -0.0001163482666015625, -4.57763671875e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.00095367431640625, -0.0006835460662841797, -3.933906555175781e-06, -0.0037260011304169893, -2.3126414816942997e-05, -0.0004367828369140625, -0.0013866424560546875, -0.0024700164794921875, -0.000164031982421875, -4.613398778019473e-05, -4.291534423828125e-06, -0.0001678466796875, 0.0, -0.000560760498046875, -0.00028395652770996094, -1.4185905456542969e-05, -2.86102294921875e-05, -2.09808349609375e-05, -9.357929229736328e-05, -7.641315460205078e-05, -0.001861572265625, -1.71661376953125e-05, -1.52587890625e-05, -4.38690185546875e-05, -3.0517578125e-05, -3.4332275390625e-05, -9.34600830078125e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0002269744873046875, -0.0003905296325683594, 0.0, -2.6702880859375e-05, -0.0016021728515625, -0.00023651123046875, -0.004793643951416016, -8.106073073577136e-05, -5.7220458984375e-05, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Fireball", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 6}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.022011631345208116, "inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "choice_history": [139, 193, 316, 147, 173, "Fireball", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Fireball", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "6", "<EOS>", 113, 156]}]}
{"index": 33, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -5.7220458984375e-06, -3.099436753473128e-06, -7.700920104980469e-05, -0.000118255615234375, -8.96453857421875e-05, -9.1552734375e-05, 0.0, 0.0, -2.288818359375e-05, -2.0265579223632812e-06, -1.52587890625e-05, -2.09808349609375e-05, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -0.0001430511474609375, -9.5367431640625e-06, -0.0004062652587890625, -1.33514404296875e-05, -1.9073486328125e-06, -2.0265558760002023e-06, -5.9604644775390625e-06, -0.0004138946533203125, -0.0022125244140625, 0.0, -1.33514404296875e-05, -2.86102294921875e-05, -0.0001239776611328125, -5.7220458984375e-06, -0.0010404586791992188, -1.2040138244628906e-05, -4.38690185546875e-05, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -1.1444091796875e-05, -9.5367431640625e-05, -0.0005435943603515625, -0.0002899169921875, -0.0005702972412109375, -0.000118255615234375, -0.008700370788574219, -4.76837158203125e-05, -0.00189971923828125, -0.0002689361572265625, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0019664764404296875, -3.814697265625e-06, -0.004432797431945801, -9.655952453613281e-06, -0.0001983642578125, -0.0002498626708984375, -2.6702880859375e-05, -4.38690185546875e-05, -4.0769478800939396e-05, -2.0265579223632812e-05, -6.866455078125e-05, -4.76837158203125e-05, 0.0, -5.7220458984375e-06, -8.392333984375e-05, -7.05718994140625e-05, -5.7220458984375e-06, -0.000141143798828125, -0.0006521900068037212, -4.0531158447265625e-06, -9.5367431640625e-05, -0.001293182373046875, -1.1444091796875e-05, -0.0026487288996577263, -1.3709068298339844e-05, -1.9073486328125e-05, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Flamestrike", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Flamestrike"}, {"_type": "Template48"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 4}, {"_type": "Template42"}]}}], "target": {"_type": "Template54"}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.029895080788719497, "inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "choice_history": [139, 193, 316, 147, 173, "Flamestrike", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Flamestrike", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "4", "<EOS>", 113, 156]}]}
{"index": 34, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.0001430511474609375, -1.1444091796875e-05, -0.0015126940561458468, -6.532455881824717e-05, -0.0005061585106886923, -2.47955322265625e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.622604142743512e-06, -9.536738616588991e-07, -1.9073486328125e-06, -4.38690185546875e-05, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.001384735107421875, -1.9073486328125e-06, -9.1552734375e-05, 0.0, -5.7220458984375e-06, -4.029192859889008e-05, -2.4795524950604886e-05, -2.8133308660471812e-05, 0.0, -3.814697265625e-05, -0.000911712646484375, -0.0043621063232421875, -4.9591064453125e-05, -0.0001430511474609375, 0.0, -0.0013581514358520508, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.009835243225097656, -5.7220458984375e-06, -6.103515625e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.1920928244535389e-07, -1.71661376953125e-05, -0.000171661376953125, -0.014242172241210938, -2.09808349609375e-05, -1.1205671398784034e-05, -3.325890065752901e-05, -0.00011002876271959394, 0.0, -0.008359909057617188, 0.0, -0.0018100738525390625, -1.1444091796875e-05, -0.000125885009765625, 0.0, -1.9073486328125e-06, -0.004383087158203125, -0.043158531188964844, -0.00469207763671875, -0.0001277923583984375, -0.022570999339222908, -1.9073486328125e-06, -0.031009674072265625, -7.62939453125e-06, -0.0028285980224609375, -0.0005893707275390625, -0.0005588531494140625, -0.00012969970703125, -0.0038994327187538147, -0.005142612848430872, -2.09808349609375e-05, -1.52587890625e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FlametongueTotem", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template36"}, {"_type": "Template33"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Template60"}, "args": [{"_type": "Template12", "hole0": 2}, {"_type": "Call", "func": {"_type": "Template50"}, "args": [{"_type": "Template16", "hole0": "Adjacent"}]}]}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole2": "auras", "hole1": 3}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.16491112265179453, "inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "choice_history": [139, 193, 316, 147, 173, "Flametongue", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Flametongue", " ", "Totem", "<EOS>", 108, 106, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "2", "<EOS>", 79, 171, 49, 302, 93, 213, "Adjacent", "<EOS>", 110, 156]}]}
{"index": 35, "beams": [{"score_history": [-1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -0.00035858154296875, -8.58306884765625e-05, -1.8954096958623268e-05, -0.00023649231297895312, -1.71661376953125e-05, -5.340576171875e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.0265579223632812e-06, -3.4570680327306036e-06, -3.814697265625e-06, -1.71661376953125e-05, -0.0004177093505859375, -5.7220458984375e-06, -1.71661376953125e-05, -0.00173187255859375, -0.0006008148193359375, -0.047913551330566406, -4.57763671875e-05, -1.9073486328125e-06, -0.0002488828031346202, -3.099440846199286e-06, -0.0019969940185546875, -0.0014743804931640625, -3.0517578125e-05, -0.0002155303955078125, -3.62396240234375e-05, -0.0002689361572265625, -0.000736236572265625, -0.00014925003051757812, -1.9073486328125e-06, -0.0011119842529296875, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00045013427734375, -3.814697265625e-06, -1.52587890625e-05, -5.7220458984375e-06, -0.0002307891845703125, -6.318092346191406e-06, -0.0022983551025390625, -4.76837158203125e-05, -0.002742767333984375, -0.0001087188720703125, -0.00014495849609375, -7.62939453125e-06, -0.007166266441345215, -7.629387255292386e-06, -0.0006504058837890625, -0.016222000122070312, -0.00058746337890625, -0.00010037025640485808, -0.00015913753304630518, -0.0002551075886003673, -1.573553163325414e-05, -0.0028515977319329977, -3.933906555175781e-06, -0.0004367828369140625, -7.62939453125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Frog", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Template55"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 0, "hole2": "taunt", "hole1": 1}], "args": {"_type": "arguments", "args": [{"_type": "Template34"}, {"_type": "arg", "arg": "p"}]}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.092386896779999, "inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "choice_history": [139, 193, 316, 147, 173, "Frog", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Frog", "<EOS>", 122, 95, 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 5, 289, 296, 0, 1, 288, "p", "<EOS>", 315, 157, 261, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 68, 156]}]}
{"index": 36, "beams": [{"score_history": [-1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -9.154921281151474e-05, 0.0, -5.7220458984375e-06, -0.0026264190673828125, -5.91278076171875e-05, 0.0, 0.0, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -7.43865966796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.7418097943154862e-06, -4.172325134277344e-05, -9.465209586778656e-05, -1.1801719665527344e-05, -5.14984130859375e-05, -0.0039005279541015625, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -5.7220458984375e-06, -0.000544428825378418, -9.5367431640625e-06, -1.33514404296875e-05, -3.4332275390625e-05, 0.0, -9.1552734375e-05, -7.62939453125e-06, -0.0001983642578125, -0.00229644775390625, -1.52587890625e-05, -0.0041046142578125, -3.62396240234375e-05, -0.0021419525146484375, -0.24584197998046875, 0.0, -0.00035858154296875, -0.00031828717328608036, 0.0, -3.814697265625e-05, -0.0076313018798828125, 0.0, -1.9073486328125e-06, -0.0003910064697265625, -1.9073486328125e-06, -3.24249267578125e-05, -0.0008525848388671875, -0.007191658020019531, -1.9073486328125e-06, -0.0001430511474609375, -4.76837158203125e-05, -0.0001201629638671875, -0.0001220703125, -0.000118255615234375, -0.0057506561279296875, -1.9073486328125e-06, -0.0015132647240534425, -1.9073468138230965e-06, -2.09808349609375e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FrostNova", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Frost Nova"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "add_buff"}, "args": [{"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template16", "hole0": "Frozen"}]}]}}], "target": {"_type": "Template54"}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.2871968913833598, "inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "choice_history": [139, 193, 316, 147, 173, "Frost", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frost", " ", "Nova", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 150, 178, "use", "<EOS>", 2, 316, 155, 149, 177, 52, 17, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156]}]}
{"index": 37, "beams": [{"score_history": [-3.24249267578125e-05, -5.7220458984375e-06, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.536738616588991e-07, -7.46227742638439e-05, -1.0609614946588408e-05, -2.288818359375e-05, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -7.867813110351562e-06, -1.9073486328125e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, -0.0001811981201171875, -4.57763671875e-05, -0.00197601318359375, -1.9073486328125e-06, -1.9073486328125e-06, -8.344646857949556e-07, -4.0411949157714844e-05, -0.00015485282347071916, -2.384185791015625e-06, -0.000179290771484375, -0.006445884704589844, -0.000110626220703125, -0.01275634765625, -2.6702880859375e-05, -7.82012939453125e-05, -0.007505893707275391, -2.6702873583417386e-05, -0.00018310546875, -1.9073486328125e-06, -8.58306884765625e-05, -0.008713126182556152, -0.00014972686767578125, -3.814697265625e-05, -3.814697265625e-06, -4.649162292480469e-05, -6.198883056640625e-06, -3.24249267578125e-05, -0.009966850280761719, -7.05718994140625e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -9.72747802734375e-05, -0.0003414154052734375, -0.001027822494506836, -1.1920928244535389e-07, -7.62939453125e-06, -0.00266265869140625, -0.000492095947265625, -0.0017556811217218637, -0.00018310546875, -0.0001697540283203125, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -0.0002727508544921875, 0.0, -0.000232696533203125, -0.024900436401367188, -0.016916990280151367, -0.0006450414657592773, -4.00543212890625e-05, -0.0002498626708984375, -9.918212890625e-05, -0.004436492919921875, -4.1961669921875e-05, -0.0011425018310546875, -3.814697265625e-06, -0.0037704617716372013, -5.245203283266164e-06, -1.52587890625e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FrostShock", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "<UNK>"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 1}, {"_type": "Template42"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_buff"}, "args": [{"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template16", "hole0": "Frozen"}]}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.10881324137528026, "inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "choice_history": [139, 193, 316, 147, 173, "Frost", "Shock", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frost", " ", "Shock", "<EOS>", 109, 106, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "<UNK>", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "1", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156]}]}
{"index": 38, "beams": [{"score_history": [-3.814697265625e-06, -1.9073486328125e-06, -4.76837158203125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -2.3245540432981215e-05, -1.9669532775878906e-05, -3.24249267578125e-05, -0.0001354217529296875, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.1444091796875e-05, -8.344646857949556e-07, -3.3378219086444005e-05, -2.09808349609375e-05, -0.00011444091796875, -4.57763671875e-05, -5.7220458984375e-06, -1.71661376953125e-05, -0.000888824462890625, -2.1338462829589844e-05, -0.0008668899536132812, -4.0531158447265625e-06, -0.0001735687255859375, -3.4332275390625e-05, -4.76837158203125e-05, -3.0517578125e-05, -0.024188995361328125, 0.0, -9.918212890625e-05, 0.0, -0.0002422332763671875, -0.000888824462890625, -3.814697265625e-06, -9.34600830078125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -8.7738037109375e-05, -0.005526542663574219, -0.000244140625, -0.0001773834228515625, 0.0, -2.288818359375e-05, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0001068115234375, -0.0004190206527709961, 0.0, -5.7220458984375e-06, -0.000812530517578125, -0.000148773193359375, -0.0022274325601756573, -5.924701690673828e-05, -2.86102294921875e-05, -0.0001373291015625, 0.0, -0.0002536773681640625, -0.0013580322265625, -1.9073486328125e-06, -3.814697265625e-06, -0.042992591857910156, -0.02915024757385254, -0.0003185272216796875, -0.0001773834228515625, -0.001190185546875, -0.0002193450927734375, -0.000339508056640625, -1.52587890625e-05, -0.0005092620849609375, -0.0002040863037109375, -0.0012278343783691525, -9.894339200400282e-06, -5.91278076171875e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Frostbolt", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "MAGE"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "add_buff"}, "args": [{"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template16", "hole0": "Frozen"}]}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.11639593531307924, "inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "choice_history": [139, 193, 316, 147, 173, "Frostbolt", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Frostbolt", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 33, "add_buff", "<EOS>", 302, 79, 171, 62, 302, 93, 213, "Frozen", "<EOS>", 156]}]}
{"index": 39, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -1.1444091796875e-05, -4.649054244509898e-05, -0.00011729506513802335, -0.0002966846222989261, -7.62939453125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1801687833212782e-05, -5.364412118069595e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.52587890625e-05, -9.5367431640625e-06, -0.0003871917724609375, -3.814697265625e-06, -1.9073486328125e-06, -1.3112935448589269e-05, -2.6822071959031746e-05, -2.0861407392658293e-05, -3.8743019104003906e-05, -0.0001850128173828125, -0.0001201629638671875, -6.29425048828125e-05, -9.5367431640625e-06, -1.71661376953125e-05, -0.0005884900456294417, -0.0019687581807374954, -0.0006351470947265625, -1.9073486328125e-05, -0.0013103485107421875, -2.6702880859375e-05, -7.748573807475623e-06, -8.940672159951646e-06, -2.563167072366923e-05, -2.1457672119140625e-06, -0.00479296687990427, -1.33514404296875e-05, -0.0002307891845703125, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "FrostwolfGrunt", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Frostwolf Grunt"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 2, "hole2": "taunt", "hole1": 2}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.011139963633013394, "inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "choice_history": [139, 193, 316, 147, 173, "Frostwolf", "Grunt", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Frostwolf", " ", "Grunt", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156]}]}
{"index": 40, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -2.09808349609375e-05, -4.6491513785440475e-06, -2.47952248173533e-05, -9.643760859034956e-05, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -3.8146954466355965e-06, -8.702266313775908e-06, -1.9073486328125e-06, -7.62939453125e-06, -2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-05, -1.1444091796875e-05, -0.0008945465087890625, -3.814697265625e-06, -1.9073486328125e-06, -2.109982233378105e-05, -2.4914723326219246e-05, -9.536738616588991e-07, -5.006789251638111e-06, -0.0004329681396484375, -5.53131103515625e-05, -4.57763671875e-05, -3.814697265625e-06, -4.38690185546875e-05, -6.913983088452369e-05, -0.0024483290035277605, -0.000370025634765625, -3.4332275390625e-05, -0.001026153564453125, -2.09808349609375e-05, -8.583029739384074e-06, -3.29013928421773e-05, -0.00021100019512232393, -4.768370445162873e-07, -0.005092746112495661, -7.62939453125e-06, -0.0002422332763671875, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GoldshireFootman", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Goldshire Footman"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 1, "hole2": "taunt", "hole1": 2}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.011412391299359115, "inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "choice_history": [139, 193, 316, 147, 173, "Goldshire", "Footman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Goldshire", " ", "Footman", "<EOS>", 109, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 68, 156]}]}
{"index": 41, "beams": [{"score_history": [-1.9073486328125e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -3.0517578125e-05, -3.933902007702272e-06, -0.00034386033075861633, -0.00018869225459638983, -1.9073486328125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.8715816622716375e-05, -1.6689286894688848e-06, -1.9073486328125e-06, -8.20159912109375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.43865966796875e-05, -0.00022125244140625, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -2.6106541554327123e-05, -6.413459777832031e-05, -3.576272320060525e-06, -2.2292000721790828e-05, -0.000789642333984375, -8.20159912109375e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0002593994140625, -7.62939453125e-06, -8.70227722771233e-06, -2.288818359375e-05, -3.62396240234375e-05, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.007718086242675781, -1.9073486328125e-06, -0.0024204254150390625, -0.0001316070556640625, -0.005156993865966797, -3.576272320060525e-06, -6.866455078125e-05, -0.001392364501953125, -0.02164459228515625, -9.918212890625e-05, -4.6491513785440475e-06, -9.417505680175964e-06, -5.985685857012868e-05, 0.0, -0.002135157585144043, -1.1444091796875e-05, -0.0008068084716796875, -7.05718994140625e-05, -0.00128936767578125, -1.9073486328125e-06, -8.392333984375e-05, -0.0024051666259765625, -0.000385284423828125, -0.0007495880126953125, -7.62939453125e-06, -0.00020015245536342263, -7.62939453125e-06, -0.0010509490966796875, -0.000133514404296875, -0.0030231475830078125, -6.866455078125e-05, -4.9591064453125e-05, -1.1444091796875e-05, -0.0011272430419921875, -3.62396240234375e-05, -0.0005054473876953125, 0.0, -3.814697265625e-06, 0.0, -0.000125885009765625, -1.9073486328125e-06, -0.005111813545227051, -3.814697265625e-06, -0.016981124877929688, 0.0, -0.002664923667907715, -0.0009980201721191406, -2.09808349609375e-05, -0.002513885498046875, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GrimscaleOracle", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Template60"}, "args": [{"_type": "Template12", "hole0": 1}, {"_type": "Call", "func": {"_type": "Template50"}, "args": [{"_type": "Call", "func": {"_type": "Template61"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "MURLOC"}]}, {"_type": "Template16", "hole0": "BothPlayer"}]}]}, {"_type": "Template39_expr_seq"}]}, "hole0": 1, "hole2": "auras", "hole1": 1}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08418875773486434, "inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "choice_history": [139, 193, 316, 147, 173, "Grimscale", "Oracle", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Grimscale", " ", "Oracle", "<EOS>", 109, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 79, 171, 49, 303, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 93, 213, "Both", "Player", "<EOS>", 110, 156]}]}
{"index": 42, "beams": [{"score_history": [-4.57763671875e-05, -7.62939453125e-06, -4.9591064453125e-05, -0.0001239776611328125, -2.6702880859375e-05, -5.841247457283316e-06, -0.002246241085231304, -0.0003948624071199447, -7.987022399902344e-06, -1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.0609588571242057e-05, -2.622600959512056e-06, 0.0, -0.0001239776611328125, -1.52587890625e-05, -0.0001277923583984375, -9.5367431640625e-06, -1.33514404296875e-05, -1.52587890625e-05, -0.0019054412841796875, -3.814697265625e-06, -1.9073486328125e-06, -2.1576648578047752e-05, -2.574919562903233e-05, -9.333839261671528e-05, -4.208087921142578e-05, -3.8861995562911034e-05, -1.1920928244535389e-07, -0.0018253326416015625, -0.000720977783203125, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00022554397583007812, -7.224082946777344e-05, -0.0019005516078323126, -4.303455352783203e-05, -0.026165008544921875, -2.09808349609375e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002613067626953125, 0.0, -0.0010166168212890625, -1.9073486328125e-06, -0.0006046295166015625, -0.0001735687255859375, -0.0057697296142578125, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.011888434179127216, -7.343290781136602e-05, -0.000278472900390625, -0.022882461547851562, -0.0001983642578125, -3.814697265625e-06, -0.0008260011672973633, -1.1563301086425781e-05, -2.0265579223632812e-06, -2.47955322265625e-05, -1.1444091796875e-05, -2.8848335205111653e-05, -1.5497195136049413e-06, -9.250640869140625e-05, -5.960462772236497e-07, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GuardianOfKings", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Heal"}, "args": [{"_type": "Template52"}]}, {"_type": "Template16", "hole0": "HeroSelector"}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Template48"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 5, "hole1": 6}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.08061534766982703, "inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "choice_history": [139, 193, 316, 147, 173, "Guardian", "Of", "Kings", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Guardian", " ", "of", " ", "Kings", "<EOS>", 118, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 120, 93, 213, "Hero", "Selector", "<EOS>", 154, 205, "5", "<EOS>", "6", "<EOS>", 156]}]}
{"index": 43, "beams": [{"score_history": [-5.7220458984375e-06, 0.0, 0.0, -1.1444091796875e-05, -1.71661376953125e-05, -0.0001230164198204875, -9.250213042832911e-05, -5.006789251638111e-06, -2.288818359375e-05, -3.814697265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-06, -3.933906555175781e-06, -1.0728830375228426e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -2.2411095415009186e-05, -2.372264498262666e-05, -1.4185804502631072e-05, -1.9073486328125e-06, -0.0002231597900390625, -0.0003509521484375, -4.9591064453125e-05, -7.62939453125e-06, -5.7220458984375e-06, -2.861022494471399e-06, -1.549708758830093e-05, -1.1444091796875e-05, -4.00543212890625e-05, -0.000118255615234375, -0.0003204345703125, -1.025196434056852e-05, -1.2159273865108844e-05, -8.296668238472193e-05, -7.033347174001392e-06, -0.002609491115435958, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -0.00080108642578125, -9.5367431640625e-06, -0.0005359649658203125, -0.0003643035888671875, -8.7738037109375e-05, -0.017961502075195312, -0.0001163482666015625, -0.0002613067626953125, -5.7220458984375e-05, -0.1070547103881836, -0.0032738447189331055, -1.8477439880371094e-05, -0.0023326873779296875, -0.000209808349609375, -0.0002498626708984375, -0.0001544952392578125, -0.0016880035400390625, -0.03185749053955078, -0.0001430511474609375, -0.003372668055817485, -0.004407763481140137, -0.006101451814174652, -5.9604644775390625e-06, -6.67572021484375e-05, -0.000102996826171875, -0.0003871917724609375, -7.2479248046875e-05, -0.03373146057128906, -3.0517578125e-05, -0.0008792877197265625, -6.103515625e-05, -0.032752037048339844, -0.0003204345703125, -0.08573351800441742, -3.24249267578125e-05, -0.0002918243408203125, -0.0003185272216796875, -0.0003490447998046875], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "GurubashiBerserker", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Gurubashi Berserker"}, {"_type": "Template46"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Template57"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "CharacterDamaged"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template16", "hole0": "MinionIsTarget"}, "arg": "condition"}]}, {"_type": "Call", "func": {"_type": "Template56"}, "args": [{"_type": "Call", "func": {"_type": "Template49"}, "args": [{"_type": "Template12", "hole0": 3}]}, {"_type": "Template15"}]}]}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole2": "effects", "hole1": 7}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.34058850067492585, "inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "choice_history": [139, 193, 316, 147, 173, "Gurubashi", "Berserker", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Gurubashi", " ", "Berserker", "<EOS>", 116, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 79, 170, 25, 194, "Character", "Damaged", "<EOS>", 310, 138, 291, "condition", "<EOS>", 32, 213, "Minion", "Is", "Target", "<EOS>", 79, 171, 54, 303, 79, 171, 48, 302, 90, 209, "3", "<EOS>", 92, 110, 156]}]}
{"index": 44, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -7.62939453125e-06, -0.0001068115234375, -3.7431014789035544e-05, -0.00010454366565681994, -0.0014067632146179676, -2.753734588623047e-05, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00010216236114501953, -4.863738649873994e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -0.0002155303955078125, 0.0, -0.001857757568359375, -1.9073486328125e-06, -1.9073486328125e-06, -5.483612312673358e-06, -2.121924626408145e-05, -6.067640788387507e-05, -2.7179718017578125e-05, -0.0006934402626939118, -5.9604644775390625e-05, -0.00075531005859375, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00027489662170410156, -7.021427154541016e-05, -0.0030420981347560883, -0.0006669759750366211, -0.000335693359375, -0.000362396240234375, -9.72747802734375e-05, -0.0002193450927734375, -9.131431579589844e-05, -2.2768972485209815e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.000133514404296875, -0.0007902383804321289, -5.841255187988281e-06, -9.5367431640625e-06, -1.33514404296875e-05, -3.445148468017578e-05, -7.62939453125e-06, -1.33514404296875e-05, -0.00487518310546875, -9.5367431640625e-06, -0.000179290771484375, 0.0, -3.814697265625e-06, -0.00528717041015625, -9.5367431640625e-06, -0.0001010894775390625, -0.0001087188720703125, -0.0015864372253417969, -1.1920928244535389e-07, -1.52587890625e-05, -0.028961181640625, -0.0006847381591796875, -0.0011054158676415682, -1.3589859008789062e-05, -0.0064296722412109375, -2.86102294921875e-05, 0.0, -3.814697265625e-06, -0.000621795654296875, -8.0108642578125e-05, 0.0, -0.00022125244140625, -0.0014991703210398555, -3.445148468017578e-05, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HammerOfWrath", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}]}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "draw"}}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.06378311697107364, "inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n", "choice_history": [139, 193, 316, 147, 173, "Hammer", "Of", "Wrath", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 148, 176, 20, 169, 17, 164, 43, "draw", "<EOS>", 156]}]}
{"index": 45, "beams": [{"score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -2.288818359375e-05, -9.5367431640625e-06, -0.0001659393310546875, -0.00016474389121867716, -0.0007114693289622664, -0.002375975949689746, -3.647750781965442e-05, -4.57763671875e-05, -0.00018310546875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -8.881092071533203e-05, -2.6106828954652883e-05, -5.7220458984375e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, -1.52587890625e-05, -0.0003376007080078125, -1.52587890625e-05, -0.0049571990966796875, -5.7220458984375e-06, -4.57763671875e-05, -2.2649652237305418e-05, -5.412063910625875e-05, -6.472984387073666e-05, -0.0001184940047096461, -0.00011003016697941348, -6.520748138427734e-05, -4.76837158203125e-05, -0.00022125244140625, -3.814697265625e-06, -0.0005035400390625, -1.9073486328125e-06, -0.0002709622494876385, -7.021243072813377e-05, -0.0009610506240278482, -1.5973992049111985e-05, -0.0024318695068359375, -2.6702880859375e-05, -0.0001583099365234375, -6.103515625e-05, -3.814697265625e-06, -1.3589859008789062e-05, -1.9073486328125e-06, -4.76837158203125e-05, -0.000659942626953125, -6.103515625e-05, -0.014146804809570312, -0.0001659393310546875, -7.62939453125e-06, -0.005726814270019531, -0.0014286041259765625, -0.004437446594238281, -0.02764725498855114, -2.503394853192731e-06, -0.0049896240234375, -0.0001201629638671875], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HandOfProtection", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Assign", "value": {"_type": "Template72"}, "targets": [{"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "divine_shield"}]}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.07395042967232257, "inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "choice_history": [139, 193, 316, 147, 173, "Hand", "Of", "Protection", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hand", " ", "of", " ", "Protection", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 144, 163, 302, 76, 164, 33, "divine_shield", "<EOS>", 68, 156]}]}
{"index": 46, "beams": [{"score_history": [0.0, 0.0, 0.0, -0.0002155303955078125, -1.33514404296875e-05, -2.7417760065873154e-05, -0.0002252801787108183, -2.3841855067985307e-07, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, 0.0, -1.9073486328125e-06, -3.576278118089249e-07, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, 0.0, -0.005214691162109375, -8.7738037109375e-05, -0.0015735626220703125, -1.71661376953125e-05, -5.7220458984375e-06, -6.794906312279636e-06, -3.135203223791905e-05, -1.7881377516459906e-06, -2.0265579223632812e-06, -0.0001926422119140625, -0.00022125244140625, -0.00119781494140625, -0.0001392364501953125, -0.0012912750244140625, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -0.00017547607421875, 0.0, -0.006805539131164551, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0002231597900390625, 0.0, -0.00035858154296875, -0.0007419586181640625, -0.0002536773681640625, -9.5367431640625e-06, -3.349781036376953e-05, -2.50339189733495e-06, -7.820117752999067e-05, 0.0, -0.0004341602325439453, 0.0, -0.00018310546875, -9.5367431640625e-06, -0.0003376007080078125, -3.814697265625e-06, -1.52587890625e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.000919342041015625, 0.0, -0.0003066062636207789, -0.03873729705810547, -1.9073486328125e-06, -0.001430511474609375, -4.57763671875e-05, -0.0004367828369140625, -3.24249267578125e-05, -0.0003414154052734375, -1.9073486328125e-05, -9.72747802734375e-05, 0.0, -0.0017268647206947207, -1.1563301086425781e-05, -7.62939453125e-06, -0.000335693359375, -0.008207321166992188, -0.0012359619140625, -0.000209808349609375, -0.0011806488037109375, -2.09808349609375e-05, -1.1444091796875e-05, -0.01523590087890625, -2.09808349609375e-05, -0.0011262893676757812, -0.0001735687255859375, -1.71661376953125e-05, -1.9073486328125e-06, -0.002719879150390625, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HealingTotem", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template38"}, {"_type": "Template33"}, {"_type": "Template23"}, {"_type": "Template51"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "TOTEM"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Template57"}, "args": [{"_type": "Template16", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Template56"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Heal"}, "args": [{"_type": "Template38"}]}, {"_type": "Call", "func": {"_type": "Template50"}, "keywords": [{"_type": "keyword", "value": {"_type": "NameConstant", "value": "Null"}, "arg": "condition"}]}]}]}, {"_type": "Template39_expr_seq"}]}, "hole0": 0, "hole2": "effects", "hole1": 2}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.09494886083771803, "inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, False, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "choice_history": [139, 193, 316, 147, 173, "Healing", "Totem", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 307, 87, 202, "Healing", " ", "Totem", "<EOS>", 109, 106, 99, 119, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 23, 189, 303, 79, 171, 55, 303, 93, 213, "Turn", "Ended", "<EOS>", 79, 171, 54, 303, 79, 171, 25, 194, "Heal", "<EOS>", 302, 109, 79, 170, 49, 310, 138, 291, "condition", "<EOS>", 26, 195, "Null", "<EOS>", 110, 156]}]}
{"index": 47, "beams": [{"score_history": [-1.9073486328125e-05, -3.814697265625e-06, 0.0, -5.14984130859375e-05, -3.814697265625e-06, -2.038458114839159e-05, -0.00355731463059783, -5.6028297876764555e-06, -1.71661376953125e-05, -0.000102996826171875, -5.7220458984375e-06, -9.5367431640625e-06, -5.7220458984375e-06, -9.179100743494928e-06, -1.3112959095451515e-05, -9.5367431640625e-06, -1.1444091796875e-05, -7.62939453125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.000217437744140625, -7.62939453125e-06, -0.0015773773193359375, -1.1444091796875e-05, -5.7220458984375e-06, -3.3378546504536644e-06, -1.800059908418916e-05, -9.655922440288123e-06, -6.318092346191406e-06, -0.00014495849609375, -0.0001926422119140625, -0.001537322998046875, -0.00026702880859375, -0.002346038818359375, -5.14984130859375e-05, -0.001359701156616211, -7.152551916078664e-06, -7.62939453125e-06, 0.0, -0.0001163482666015625, -0.0006448030471801758, -0.00012934207916259766, -0.0001277923583984375, -3.62396240234375e-05, -0.00017189979553222656, -3.576278118089249e-07, -0.005046844482421875, -0.0003814697265625, -0.0001277923583984375, -2.47955322265625e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.0003910064697265625, -1.9073486328125e-06, -7.62939453125e-06, -0.0047435760498046875, -0.0038001537322998047, -9.179073458653875e-06, -0.00012969970703125, -0.0025081634521484375, -9.5367431640625e-06, -0.0021314620971679688, -1.1444091796875e-05, -0.0011796951293945312, -0.0009186262614093721, -7.73643987486139e-05, -1.52587890625e-05, -0.02368450164794922, -3.62396240234375e-05, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HealingTouch", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template40"}, {"_type": "Template28"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "effective_heal_power"}, "args": [{"_type": "Template58"}]}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.058108555080650603, "inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "choice_history": [139, 193, 316, 147, 173, "Healing", "Touch", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Healing", " ", "Touch", "<EOS>", 111, 103, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 123, 113, 156]}]}
{"index": 48, "beams": [{"score_history": [-1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.0002231597900390625, -1.9073486328125e-05, -0.00044741283636540174, -0.000214457482798025, -0.000148773193359375, -2.86102294921875e-05, -5.91278076171875e-05, -5.7220458984375e-06, 0.0, -2.3841855067985307e-07, -7.033334895822918e-06, -1.33514404296875e-05, -0.001522064208984375, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -0.0008945465087890625, -7.05718994140625e-05, -0.00018310546875, -4.76837158203125e-05, -4.1961669921875e-05, -2.2768930648453534e-05, -6.675716122117592e-06, -0.0017681121826171875, -0.0235137939453125, -0.000213623046875, -0.0059566497802734375, -0.0003566741943359375, -4.00543212890625e-05, -1.1444091796875e-05, -1.4424319488171022e-05, -2.4795515855657868e-05, -0.000324249267578125, -0.02962493896484375, -0.000156402587890625, -0.04765605926513672, -3.24249267578125e-05, -8.20159912109375e-05, -0.00174713134765625, -0.000537872314453125, -0.2261582612991333, -7.6293927122605965e-06, -0.0054416656494140625, -0.0023736953735351562, -0.0002460479736328125, 0.0, -0.0027828216552734375, -1.9073486328125e-06, -0.0021104812622070312, 0.0, -0.4495534896850586, 0.0, -0.03461599349975586, -3.933906555175781e-06, -0.04902195557951927, -0.0003002431185450405, -0.1414283812046051, -0.0002076410164590925, -0.6615964770317078, -0.0001883382210507989, -0.008459091186523438, -1.9073486328125e-06, -6.866455078125e-05, -0.2099475860595703, -0.022930145263671875, -4.9591064453125e-05, -0.0009222030639648438, -0.000518798828125, -0.02155017852783203, -0.0051250457763671875, -0.2665961980819702, -1.1920928244535389e-07, -0.0035691254306584597, -1.1920928244535389e-07, -0.000713348388671875, -0.009806632995605469, -2.6702880859375e-05, -0.00025176984490826726, -9.655952453613281e-06, -0.00034332275390625, -1.71661376953125e-05, -1.9073486328125e-06, -0.045668601989746094, -3.814697265625e-06, -0.008563041687011719, -0.012675642967224121, -1.0848005331354216e-05, -0.001605987548828125, -5.7220458984375e-06, -0.22518563270568848, -1.9073486328125e-06, -0.0034637451171875, -4.1961669921875e-05, -1.9073486328125e-06, -0.0005550384521484375, -1.52587890625e-05, -1.9073486328125e-06, -0.001071929931640625, -0.11678922176361084, -3.3378591979271732e-06, -0.0014781951904296875, -0.01774311065673828, -5.7220458984375e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Hex", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template40"}, {"_type": "Template33"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "hearthbreaker"}, "attr": "cards"}, "attr": "minions"}, "attr": "<UNK>"}}, "targets": [{"_type": "Name", "id": "frog"}]}, {"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "frog"}, "attr": "create_minion"}, "args": [{"_type": "NameConstant", "value": "Null"}]}, "targets": [{"_type": "Template54"}]}, {"_type": "Assign", "value": {"_type": "Name", "id": "frog"}, "targets": [{"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "card"}]}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "<UNK>"}, "args": [{"_type": "Template54"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -2.677909280951056, "inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "choice_history": [139, 193, 316, 147, 173, "Hex", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Hex", "<EOS>", 111, 106, 99, 310, 137, 150, 178, "use", "<EOS>", 2, 319, 155, 144, 163, 302, 84, 194, "frog", "<EOS>", 20, 169, 17, 164, 17, 164, 17, 164, 25, 194, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", 144, 163, 302, 121, 20, 171, 17, 164, 25, 194, "frog", "<EOS>", "create_minion", "<EOS>", 302, 85, 195, "Null", "<EOS>", 144, 163, 302, 76, 164, 52, "card", "<EOS>", 25, 194, "frog", "<EOS>", 148, 176, 20, 171, 17, 164, 33, "<UNK>", "<EOS>", 302, 121, 156]}]}
{"index": 49, "beams": [{"score_history": [-1.1444091796875e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.311301275563892e-06, -0.00018821482080966234, -0.0014094931539148092, -7.82012939453125e-05, -0.0001316070556640625, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -5.114077066536993e-05, -8.463517588097602e-05, -4.57763671875e-05, -2.09808349609375e-05, -7.62939453125e-06, -5.14984130859375e-05, -2.47955322265625e-05, -0.0001087188720703125, -2.288818359375e-05, -0.0011920928955078125, -1.9073486328125e-06, -1.9073486328125e-05, -4.31528314948082e-05, -7.152557373046875e-05, -5.447825969895348e-05, -7.152556463552173e-06, -2.6702880859375e-05, -0.00075531005859375, 0.0, 0.0, -0.000141143798828125, -0.03679525852203369, -1.025199526338838e-05, -0.005373346619307995, -3.64774459740147e-05, -0.001979827880859375, -2.6702880859375e-05, -0.03143501281738281, -0.0001373291015625, -0.0005739927291870117, -5.364412118069595e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.000244140625, -0.0004374980053398758, -1.1682502190524247e-05, -7.05718994140625e-05, -2.288818359375e-05, -7.832050323486328e-05, -1.5497207641601562e-05, -0.0003108978271484375, -0.000988006591796875, -3.24249267578125e-05, -7.82012939453125e-05, -3.814697265625e-05, -4.00543212890625e-05, -4.57763671875e-05, -5.7220458984375e-06, -4.00543212890625e-05, -0.004337310791015625, -0.00556218484416604, -6.460934673668817e-05, -9.72747802734375e-05, -0.0018329620361328125, -5.340576171875e-05, -0.0017709732055664062, -1.1444091796875e-05, -0.00035858154296875, -0.001851223991252482, -0.00020502442202996463, -5.340576171875e-05, -0.0048313140869140625, -0.0002193450927734375, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HolyLight", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template36"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "heal"}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "effective_heal_power"}, "args": [{"_type": "Template52"}]}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.10472875013738303, "inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "choice_history": [139, 193, 316, 147, 173, "Holy", "Light", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Light", "<EOS>", 108, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "heal", "<EOS>", 303, 79, 171, 17, 164, 43, "effective_heal_power", "<EOS>", 302, 120, 113, 156]}]}
{"index": 50, "beams": [{"score_history": [-2.09808349609375e-05, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -2.0146166207268834e-05, -0.001046830671839416, -2.622600959512056e-06, -2.47955322265625e-05, -0.0001773834228515625, -3.24249267578125e-05, 0.0, -1.9073486328125e-06, -0.00011706352233886719, -2.1457672119140625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -8.96453857421875e-05, 0.0, -1.33514404296875e-05, -0.000560760498046875, -6.866455078125e-05, -0.003147125244140625, -8.392333984375e-05, -9.5367431640625e-06, -4.637133679352701e-05, -4.971027374267578e-05, -0.00011813009041361511, -6.151199340820312e-05, -0.000301361083984375, -0.2317028045654297, -0.000217437744140625, -1.9073486328125e-06, -3.814697265625e-06, -0.00034296512603759766, -1.7523765563964844e-05, -4.1961669921875e-05, -0.011891365051269531, -0.0003948211669921875, -0.007671356201171875, -8.392333984375e-05, -0.000690460205078125, -0.0001087188720703125, -0.001155853271484375, -0.00055694580078125, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0030527114868164062, -7.748603820800781e-06, -0.0057288408279418945, -7.62939453125e-06, -0.0009765625, -0.0003643035888671875, -2.86102294921875e-05, -7.62939453125e-05, -7.677004032302648e-05, -5.674360727425665e-05, -2.09808349609375e-05, -1.52587890625e-05, 0.0, -4.76837158203125e-05, -1.1444091796875e-05, -7.05718994140625e-05, -9.5367431640625e-06, -0.0027008056640625, -0.22455406188964844, -3.576278118089249e-07, -9.918212890625e-05, -0.0042934417724609375, -1.33514404296875e-05, -0.0010231294436380267, -4.5299530029296875e-06, -5.14984130859375e-05, -0.6463260650634766, -3.814697265625e-06, -1.52587890625e-05, -0.016483306884765625, -1.9073486328125e-06, -5.14984130859375e-05, -7.2479248046875e-05, 0.0, -0.02137470245361328, -0.03455786779522896, -7.2834751335904e-05, -0.037901878356933594, 0.0, -1.1444091796875e-05, -0.000873565673828125, -1.9073486328125e-05, -0.0006501558236777782, -6.79492904964718e-06, -8.7738037109375e-05, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HolyNova", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Holy Nova"}, {"_type": "Template46"}, {"_type": "Template31"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "For", "iter": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Name", "id": "copy"}, "attr": "copy"}, "args": [{"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "minions"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template54"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "target": {"_type": "Template54"}}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "hero"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -1.2627436285799263, "inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "choice_history": [139, 193, 316, 147, 173, "Holy", "Nova", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Holy", " ", "Nova", "<EOS>", 116, 105, 94, 150, 178, "use", "<EOS>", 2, 317, 155, 149, 177, 52, 20, 171, 17, 164, 25, 194, "copy", "<EOS>", "copy", "<EOS>", 302, 76, 164, 37, "minions", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 52, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156]}]}
{"index": 51, "beams": [{"score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.1444091796875e-05, -2.8013790142722428e-05, -0.0009632311412133276, -2.9802317840221804e-06, -6.103515625e-05, -0.000125885009765625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.017353057861328e-05, -2.3841855067985307e-07, -1.52587890625e-05, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -0.00028228759765625, 0.0, -0.001384735107421875, -1.9073486328125e-06, -5.7220458984375e-06, -0.00012885693286079913, -5.9604644775390625e-05, -2.682204285520129e-05, -1.9431114196777344e-05, -2.09808349609375e-05, -0.023171424865722656, -0.000274658203125, -0.0015773773193359375, -0.000629425048828125, -2.6702880859375e-05, -0.0003398656554054469, -4.291534423828125e-06, -8.392333984375e-05, -2.6702880859375e-05, -8.7738037109375e-05, -0.00023865699768066406, -9.5367431640625e-06, -0.00023651123046875, -1.52587890625e-05, -0.00018322467803955078, -3.075599670410156e-05, -0.0005779266357421875, -0.0004749298095703125, -7.62939453125e-06, -0.0004444122314453125, -0.0006427764892578125, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0022258758544921875, -0.00038552284240722656, 0.0, -1.52587890625e-05, -0.0009918212890625, -4.9591064453125e-05, -0.0015345867723226547, -1.9073486328125e-06, -8.7738037109375e-05, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "HolySmite", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template38"}, {"_type": "Template31"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 2}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.037726299964077725, "inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "choice_history": [139, 193, 316, 147, 173, "Holy", "Smite", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Holy", " ", "Smite", "<EOS>", 109, 105, 99, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "2", "<EOS>", 113, 156]}]}
{"index": 52, "beams": [{"score_history": [0.0, -1.9073486328125e-06, 0.0, -3.814697265625e-05, -3.0517578125e-05, -0.0007720588473603129, -0.002706289291381836, -2.47955322265625e-05, -0.0001430511474609375, -5.7220458984375e-06, -3.814697265625e-06, -1.9073486328125e-06, -4.172325134277344e-06, -1.8596509107737802e-05, -1.9073486328125e-06, -4.38690185546875e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -4.76837158203125e-05, -3.4332275390625e-05, -7.62939453125e-05, -3.814697265625e-06, -1.52587890625e-05, -6.198863957251888e-06, -8.225440979003906e-06, -0.0002422332763671875, -0.0001735687255859375, 0.0, -3.814697265625e-06, 0.0, -0.0007671109051443636, -7.152551916078664e-06, -0.010146493092179298, -4.243841249262914e-05, -0.0011310577392578125, -0.05510520935058594, -2.6702880859375e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.00011444091796875, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, 0.0, -0.005984306335449219, 0.0, -0.0001239776611328125, -5.7220458984375e-06, -0.00090789794921875, -1.1920928244535389e-07, -0.0013332366943359375, -3.814697265625e-06, -2.288818359375e-05, -0.0001583099365234375, -0.0019989013671875, -2.09808349609375e-05, -0.001056671142578125, -0.0054225921630859375, -0.0026836395263671875, -0.0001850128173828125, -0.0063304901123046875, -0.012866973876953125, -0.000225067138671875, -3.24249267578125e-05, -0.0002460479736328125, -0.012332916259765625, -0.0001926422119140625, -0.001371264341287315, -2.47955322265625e-05, -0.0003070831298828125, -2.09808349609375e-05, -2.86102294921875e-05, -0.0003452301025390625, -0.20656776428222656, -0.000988006591796875, -0.000446794816525653, -1.33514404296875e-05, -0.00455474853515625, -4.76837158203125e-05, -0.000125885009765625, -3.814697265625e-05, -0.020215988159179688, -7.62939453125e-06, -0.0047622486017644405, -7.593357440782711e-05, -0.0035343170166015625, -0.00058746337890625, -0.002346038818359375, -0.011371612548828125, -1.71661376953125e-05, -0.0268096923828125, -3.814697265625e-06, -0.0008449554443359375, -1.71661376953125e-05, -0.0025043487548828125, -2.09808349609375e-05, -0.00079345703125, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -0.12959682941436768, -1.1563301086425781e-05, -0.0020542144775390625, -6.866455078125e-05, -1.9073486328125e-06, -0.0075626373291015625, -2.0265579223632812e-06, -0.0003910064697265625, -1.9073486328125e-06, -0.0004678964614868164, -0.00030541419982910156, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, -7.748594725853764e-06, -3.576278118089249e-07, -6.914138793945312e-05, 0.0, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Houndmaster", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Call", "func": {"_type": "Template49"}, "args": [{"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template14", "hole0": 2}]}, {"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template12", "hole0": 2}]}, {"_type": "Call", "func": {"_type": "Template66"}, "args": [{"_type": "Template16", "hole0": "Taunt"}]}, {"_type": "Template39_expr_seq"}]}]}, {"_type": "Call", "func": {"_type": "Template50"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template16", "hole0": "UserPicker"}, "arg": "picker"}], "args": [{"_type": "Call", "func": {"_type": "Template61"}, "args": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}]}]}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template44"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 4, "hole1": 3}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.5533990909906876, "inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "choice_history": [139, 193, 316, 147, 173, "Houndmaster", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Houndmaster", "<EOS>", 115, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 99, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 48, 302, 82, 189, 305, 79, 171, 62, 302, 91, 211, "2", "<EOS>", 79, 171, 62, 302, 90, 209, "2", "<EOS>", 79, 171, 62, 302, 93, 213, "Taunt", "<EOS>", 110, 79, 172, 49, 302, 79, 171, 59, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 310, 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "4", "<EOS>", "3", "<EOS>", 156]}]}
{"index": 53, "beams": [{"score_history": [-4.9591064453125e-05, -0.0005130767822265625, -5.53131103515625e-05, -6.103515625e-05, -1.1444091796875e-05, -0.0006405447493307292, -4.4345855712890625e-05, -3.814697265625e-06, -8.96453857421875e-05, -9.5367431640625e-06, -4.9591064453125e-05, -1.9073486328125e-06, -1.919269561767578e-05, -3.099440846199286e-06, -9.5367431640625e-05, -2.6702880859375e-05, -9.1552734375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.000217437744140625, -2.288818359375e-05, -0.007754325866699219, -6.103515625e-05, -1.9073486328125e-06, -3.540453326422721e-05, -2.0265579223632812e-06, -0.0001659393310546875, -0.0042934417724609375, -1.9073486328125e-06, -5.53131103515625e-05, 0.0, -0.0018815994262695312, -2.5272369384765625e-05, -0.0002696514129638672, -3.8385387597372755e-05, -0.0001239776611328125, -0.0001049041748046875, -3.814697265625e-06, -0.000217437744140625, 0.0, -8.392333984375e-05, -3.814697265625e-06, -3.0517578125e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -0.00389862060546875, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -4.38690185546875e-05, -0.006221771240234375, -0.0001087188720703125, -2.7656553356791846e-05, -2.3841830625315197e-06, -3.3855187211884186e-05, -1.1920928244535389e-07, -0.0021393296774476767, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Huffer", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole2": "charge", "hole1": 2}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.029776486089950538, "inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "choice_history": [139, 193, 316, 147, 173, "Huffer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Huffer", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 68, 156]}]}
{"index": 54, "beams": [{"score_history": [-1.1444091796875e-05, -4.9591064453125e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.00015938282012939453, -0.00010347220813855529, -0.000278472900390625, -5.340576171875e-05, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -4.684823943534866e-05, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -3.814697265625e-06, -0.0002079010009765625, -0.00016021728515625, -2.288818359375e-05, -0.000492095947265625, -9.5367431640625e-06, -0.0003204345703125, -3.361657581990585e-05, -9.035861876327544e-05, -0.00048828125, -0.046390533447265625, -3.814697265625e-06, -0.0001506805419921875, -9.5367431640625e-06, -0.007108211517333984, -9.775153557711747e-06, -0.013470249250531197, -4.291534423828125e-06, -0.0033512115478515625, -0.00167083740234375, -0.000186920166015625, -5.53131103515625e-05, -5.7220458984375e-06, -9.5367431640625e-05, 0.0, -0.0001964569091796875, -0.0029449462890625, -0.000141143798828125, -0.000354766845703125, -1.1444091796875e-05, -7.62939453125e-06, -0.010234832763671875, -2.47955322265625e-05, -1.71661376953125e-05, -0.002071380615234375, -0.28710246086120605, -4.172325134277344e-06, -9.5367431640625e-06, -0.0790243148803711, -0.001171112060546875, -0.00455474853515625, -0.096832275390625, -0.010545730590820312, -7.43865966796875e-05, -9.918212890625e-05, 0.0, -0.006117820739746094, -0.002415776252746582, -6.079673767089844e-06, -5.7220458984375e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Humility", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "change_attack"}, "args": [{"_type": "BinOp", "op": {"_type": "Sub"}, "left": {"_type": "Template38"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "calculate_attack"}}}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.5791570662468075, "inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "choice_history": [139, 193, 316, 147, 173, "Humility", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Humility", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "change_attack", "<EOS>", 302, 77, 166, 39, 141, 20, 169, 17, 164, 33, "calculate_attack", "<EOS>", 156]}]}
{"index": 55, "beams": [{"score_history": [-1.1444091796875e-05, -7.82012939453125e-05, 0.0, -0.0001125335693359375, -3.814697265625e-05, -0.000362956227036193, -8.892617915989831e-05, -1.9073486328125e-05, -4.9591064453125e-05, -0.0013332366943359375, -4.9591064453125e-05, 0.0, 0.0, -3.814697265625e-06, -1.4662635294371285e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-05, -9.5367431640625e-06, -0.0001049041748046875, -0.0005283355712890625, -2.47955322265625e-05, -0.000560760498046875, -0.000385284423828125, -1.33514404296875e-05, -0.0001262374862562865, -0.00010311603546142578, -5.769562994828448e-05, -2.7418136596679688e-05, -0.000324249267578125, -0.0016622543334960938, 0.0, -3.24249267578125e-05, 0.0, -0.002697467803955078, -2.384185791015625e-06, -0.043979763984680176, -0.00015735576744191349, -0.0031909942626953125, -0.0035257339477539062, -0.0004119873046875, -5.53131103515625e-05, -3.814697265625e-06, -7.82012939453125e-05, 0.0, -0.000247955322265625, -0.00043487548828125, -2.47955322265625e-05, -0.0001201629638671875, 0.0, -9.5367431640625e-06, -0.00064849853515625, -1.9073486328125e-06, -2.47955322265625e-05, -0.001316070556640625, -0.6849149465560913, -1.0609603123157285e-05, -7.62939453125e-06, -0.20217609405517578, -4.00543212890625e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "<UNK>Mark", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template7"}], "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Template55"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "set_health_to"}, "args": [{"_type": "Template38"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.9502530815516366, "inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "choice_history": [139, 193, 316, 147, 173, "<UNK>", "Mark", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "<UNK>", " ", "Mark", "<EOS>", 122, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 137, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 33, "set_health_to", "<EOS>", 302, 109, 156]}]}
{"index": 56, "beams": [{"score_history": [-2.6702880859375e-05, 0.0, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -0.00014423283573705703, -0.0002489972102921456, -0.0001673622173257172, -1.33514404296875e-05, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -4.38690185546875e-05, -4.053113570989808e-06, -1.3113007298670709e-05, -3.814697265625e-06, -6.29425048828125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -3.814697265625e-06, -2.6702880859375e-05, -7.2479248046875e-05, -0.0006084442138671875, -1.9073486328125e-06, -1.9073486328125e-06, -1.5139465176616795e-05, -2.8491003831732087e-05, -2.0503786799963564e-05, -0.00010919570922851562, -0.000518798828125, -4.00543212890625e-05, -1.71661376953125e-05, -0.1803741455078125, -4.38690185546875e-05, -0.0008182525634765625, -0.0002448558807373047, -7.748603820800781e-06, -0.0029735565185546875, -1.33514404296875e-05, -2.288818359375e-05, 0.0, -0.0003376007080078125, 0.0, -0.008494377136230469, -1.9073486328125e-06, -0.000438690185546875, -0.0001773834228515625, -0.001496434211730957, -9.536738616588991e-07, -0.000408172607421875, -1.9073486328125e-06, -7.2479248046875e-05, -9.5367431640625e-06, -0.0005931854248046875, -3.814697265625e-06, -0.000263214111328125, -1.52587890625e-05, -0.0009137469460256398, -0.0003257989592384547, -4.57763671875e-05, -9.72747802734375e-05, -0.0028858184814453125, -0.001007080078125, -0.000766754150390625, -0.002620697021484375, -1.1444091796875e-05, -1.33514404296875e-05, -0.00015342235565185547, -1.1086463018727954e-05, -0.00067901611328125, -0.0002231597900390625, -0.0007306337356567383, -0.00011515617370605469, -3.814697265625e-06, -0.004009246826171875, -6.4849853515625e-05, -0.0042476654052734375, -2.3484230041503906e-05, -0.001392364501953125, -0.00022125244140625, -0.0003210306167602539, -0.006893515586853027, -2.47955322265625e-05, -1.33514404296875e-05, -5.7220458984375e-06, -0.0002627318608574569, -2.3841855067985307e-07, -4.518609057413414e-05, 0.0, -4.38690185546875e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "IronforgeRifleman", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "<UNK>"}, "arg": "minion_type"}, {"_type": "keyword", "value": {"_type": "Call", "func": {"_type": "Template45"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Damage"}, "args": [{"_type": "Template38"}]}, {"_type": "Call", "func": {"_type": "Template70"}, "keywords": [{"_type": "keyword", "value": {"_type": "Template16", "hole0": "BothPlayer"}, "arg": "players"}, {"_type": "keyword", "value": {"_type": "Template16", "hole0": "UserPicker"}, "arg": "picker"}]}]}, "arg": "battlecry"}], "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 2, "hole1": 2}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.22726388614316306, "inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "choice_history": [139, 193, 316, 147, 173, "Ironforge", "Rifleman", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironforge", " ", "Rifleman", "<EOS>", 111, 95, 94, 311, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 138, 291, "battlecry", "<EOS>", 20, 171, 45, 303, 79, 171, 25, 194, "Damage", "<EOS>", 302, 109, 79, 170, 66, 311, 138, 291, "players", "<EOS>", 32, 213, "Both", "Player", "<EOS>", 138, 291, "picker", "<EOS>", 32, 213, "User", "Picker", "<EOS>", 154, 205, "2", "<EOS>", "2", "<EOS>", 156]}]}
{"index": 57, "beams": [{"score_history": [-5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.33514404296875e-05, -1.9073486328125e-05, -0.00038425691309385, -0.0002797450579237193, -4.72068386443425e-05, -0.0009708404541015625, -5.7220458984375e-05, -5.7220458984375e-06, -0.000728607177734375, -1.9073486328125e-06, -9.417532055522315e-06, -5.245203283266164e-06, -1.71661376953125e-05, -9.5367431640625e-06, -0.0005474090576171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000339508056640625, -9.5367431640625e-06, -0.0006198883056640625, -1.1444091796875e-05, -6.67572021484375e-05, -1.0490381100680679e-05, -4.172316403128207e-05, -0.00022182388056535274, -2.3126602172851562e-05, -0.0005779266357421875, -8.392333984375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.006732940673828125, -5.340576171875e-05, -2.300739288330078e-05, -2.09808349609375e-05, -3.814697265625e-05, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, 0.0, -0.0040798187255859375, -2.288818359375e-05, -3.814697265625e-06, -3.814697265625e-06, -1.3828277587890625e-05, -5.841247457283316e-06, -0.000156402587890625, -9.5367431640625e-05, -0.0009784698486328125, -4.76837158203125e-05, -3.039742477994878e-05, -3.576227754820138e-05, -0.00020109242177568376, -7.152555099310121e-07, -0.0019708755426108837, -1.9073486328125e-06, -0.0007686614990234375, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "IronfurGrizzly", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template40"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 3, "hole2": "taunt", "hole1": 3}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.020459249016539616, "inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "choice_history": [139, 193, 316, 147, 173, "Ironfur", "Grizzly", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Ironfur", " ", "Grizzly", "<EOS>", 111, 95, 94, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 68, 156]}]}
{"index": 58, "beams": [{"score_history": [-9.5367431640625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, -0.00011252723925281316, -8.928377064876258e-05, -5.125998541188892e-06, -6.4849853515625e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -5.960462772236497e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -7.748573807475623e-06, -0.00025999522767961025, -0.0026720843743532896, -1.52587890625e-05, -5.53131103515625e-05, -0.0001277923583984375, 0.0, -7.62939453125e-06, 0.0, -0.0002269744873046875, -3.814697265625e-06, -0.006047725677490234, -9.894371032714844e-06, -0.0006961822509765625, -4.00543212890625e-05, -4.76837158203125e-05, -1.1444091796875e-05, -0.00238037109375, 0.0, -7.62939453125e-06, 0.0, -0.0005397796630859375, -0.000461578369140625, -1.71661376953125e-05, -0.0001888275146484375, -1.9073486328125e-06, -0.0001964569091796875, 0.0, -0.000293731689453125, -0.060359954833984375, -3.814697265625e-06, -0.03665447235107422, -8.7738037109375e-05, -1.9073486328125e-05, -0.05241203308105469, -2.288818359375e-05, -0.0011203289031982422, -1.561638418934308e-05, -0.0076808929443359375, -0.0060176849365234375, -0.0004291534423828125, 0.0, -0.002628326416015625, -0.004688620567321777, 0.0, -0.000843048095703125, -0.0039653778076171875, 0.0, -0.1933116912841797, -0.004434581845998764, -7.62939453125e-06, -0.00237274169921875, -0.0003719329833984375, -0.0024929046630859375, -0.0005588531494140625, -0.0003490447998046875, -0.0017795562744140625, -2.09808349609375e-05, -0.004516720771789551, -2.3841830625315197e-06, -0.0029354095458984375, -0.009792327880859375, -0.000598907470703125, -1.9073486328125e-06, -0.00818634033203125, -1.9073486328125e-06, -0.000400543212890625, -3.814697265625e-06, -0.0073729753494262695, -1.740455445542466e-05, -0.01907360553741455, -3.814697265625e-06, -0.0022498369216918945, 0.0, -1.9073486328125e-06, -0.006683349609375, -2.47955322265625e-05, -0.00966644287109375, 0.0, -0.00012969970703125, 0.0, -0.000133514404296875, 0.0, -0.0036687850952148438, -1.9073486328125e-06, -0.003452301025390625, -0.0017490386962890625, -0.0026578903198242188, -0.0004253387451171875, -0.0001392364501953125, -3.814697265625e-06, -0.0008054971694946289, -0.00040721893310546875, -3.62396240234375e-05, -0.005055427551269531, -3.814697265625e-06, -0.0023260116577148438, -0.0001583099365234375, -0.0006184577941894531, 0.0, -0.009382247924804688, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -0.0002307891845703125, -0.0001697540283203125, -5.7220458984375e-06, -0.005390167236328125, -0.0003859996795654297, 0.0, -9.5367431640625e-06, -0.0009403228759765625, -9.5367431640625e-06, -0.5250587463378906, -1.9073486328125e-06, -4.00543212890625e-05, -4.76837158203125e-05, -0.000152587890625, 0.0, -5.7220458984375e-05, -4.9591064453125e-05, -3.4332275390625e-05, -1.9073486328125e-06, -7.82012939453125e-05, -0.0001958608627319336, 0.0, -1.52587890625e-05, -0.0014972686767578125, -1.33514404296875e-05, -0.5675886273384094, -7.62939453125e-06, -6.866455078125e-05, -9.5367431640625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "KillCommand", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "find_spell_target"}, "arg": "target_func"}], "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Assign", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template22"}, "attr": "<UNK>"}, "args": [{"_type": "Attribute", "value": {"_type": "Template43"}, "attr": "game"}, {"_type": "Lambda", "body": {"_type": "Compare", "comparators": [{"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}], "left": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "x"}, "attr": "card"}, "attr": "minion_type"}, "ops": [{"_type": "Is"}]}, "args": {"_type": "arguments", "args": [{"_type": "arg", "arg": "x"}]}}]}, "targets": [{"_type": "Name", "id": "<UNK>"}]}, {"_type": "If", "test": {"_type": "Compare", "comparators": [{"_type": "NameConstant", "value": "Null"}], "left": {"_type": "Name", "id": "<UNK>"}, "ops": [{"_type": "Is"}]}, "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}]}}], "orelse": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Template19"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 3}, {"_type": "Template42"}]}}]}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -1.6021613416713194, "inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        if <UNK> is Null:\n            self.target.damage(player.effective_spell_damage(3), self)\n        else:\n            self.target.damage(player.effective_spell_damage(3), self)\n", "choice_history": [139, 193, 316, 147, 173, "Kill", "Command", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 305, 87, 202, "Kill", " ", "Command", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 310, 138, 291, "target_func", "<EOS>", 17, 164, 34, "find_spell_target", "<EOS>", 150, 178, "use", "<EOS>", 2, 317, 155, 144, 163, 302, 84, 194, "<UNK>", "<EOS>", 20, 171, 17, 164, 34, "<UNK>", "<EOS>", 303, 76, 164, 43, "game", "<EOS>", 81, 188, 5, 289, 295, 1, 288, "x", "<EOS>", 21, 174, 17, 164, 17, 164, 25, 194, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 299, 12, 302, 76, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 151, 182, 21, 174, 25, 194, "<UNK>", "<EOS>", 299, 12, 302, 85, 195, "Null", "<EOS>", 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 315, 148, 176, 20, 171, 17, 164, 33, "damage", "<EOS>", 303, 133, 282, "3", "<EOS>", 113, 156]}]}
{"index": 59, "beams": [{"score_history": [-3.814697265625e-06, 0.0, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, -4.339123915997334e-05, -0.0001399419124936685, -0.00036604044726118445, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -2.384185791015625e-06, -5.1973900554003194e-05, 0.0, -1.1444091796875e-05, -6.103515625e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.340576171875e-05, -0.00034332275390625, -9.5367431640625e-06, -3.814697265625e-06, -1.4543427823809907e-05, -2.539156957936939e-05, -1.9192511899746023e-05, -2.8967857360839844e-05, -0.0001201629638671875, -0.0002079010009765625, -6.67572021484375e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.00027343229157850146, -0.0010483827209100127, -0.0001373291015625, -1.52587890625e-05, -0.004108428955078125, -1.9073486328125e-05, -7.951256702654064e-05, -9.095255518332124e-05, -1.4784724044147879e-05, -1.1920928244535389e-07, -0.0008397102355957031, -6.079673767089844e-06, -0.000453948974609375, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "KoboldGeomancer", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Kobold Geomancer"}, {"_type": "Template36"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template38"}, "hole0": 2, "hole2": "spell_damage", "hole1": 2}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.008768754276381685, "inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "choice_history": [139, 193, 316, 147, 173, "Kobold", "Geomancer", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kobold", " ", "Geomancer", "<EOS>", 108, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 39, 156]}]}
{"index": 60, "beams": [{"score_history": [-4.1961669921875e-05, -0.000102996826171875, -1.1444091796875e-05, -8.58306884765625e-05, -7.62939453125e-06, -0.013478847220540047, -0.003105700248852372, -4.875659942626953e-05, -1.52587890625e-05, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -3.814697265625e-06, -3.933904736186378e-06, -1.9073486328125e-06, -1.52587890625e-05, -2.288818359375e-05, 0.0, 0.0, -0.0001926422119140625, 0.0, -0.000240325927734375, -5.7220458984375e-06, -4.1961669921875e-05, -5.793414675281383e-05, -2.6583669750834815e-05, -6.9141146923357155e-06, -3.814697265625e-06, -9.1552734375e-05, -0.16631603240966797, -0.0001811981201171875, -3.814697265625e-06, -1.9073486328125e-06, -1.919269561767578e-05, -2.586808113846928e-05, -6.67572021484375e-05, -0.0001049041748046875, -0.003261566162109375, -7.82012939453125e-05, -1.8239019482280128e-05, -1.8000440832111053e-05, -2.8491003831732087e-05, -8.106198947643861e-06, -0.003922321368008852, -3.933906555175781e-06, -3.4332275390625e-05, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "<UNK>Elite", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Kor'kron Elite"}, {"_type": "Template44"}, {"_type": "Template27"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 4, "hole2": "charge", "hole1": 3}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.19174087834426246, "inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "choice_history": [139, 193, 316, 147, 173, "<UNK>", "Elite", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Kor'kron", " ", "Elite", "<EOS>", 115, 102, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 68, 156]}]}
{"index": 61, "beams": [{"score_history": [-0.0002689361572265625, -7.62939453125e-06, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.2278545909794047e-05, -7.8320357715711e-05, -7.62939453125e-06, -0.000335693359375, -3.814697265625e-06, -9.5367431640625e-05, -3.814697265625e-06, -6.0439109802246094e-05, -7.748602001811378e-06, -8.7738037109375e-05, -2.09808349609375e-05, -4.9591064453125e-05, 0.0, -1.9073486328125e-06, -0.0043544769287109375, -1.52587890625e-05, -0.00255584716796875, -9.5367431640625e-05, -1.9073486328125e-06, -0.0005326711107045412, -5.7220458984375e-06, -0.0009307861328125, -0.000316619873046875, -3.814697265625e-05, -5.340576171875e-05, -3.814697265625e-06, -0.0006526708602905273, -1.5735626220703125e-05, -0.00019812583923339844, -9.179113840218633e-05, -8.7738037109375e-05, -0.00017547607421875, 0.0, -0.0003032684326171875, 0.0, -9.34600830078125e-05, -5.7220458984375e-06, -0.000148773193359375, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -3.814697265625e-06, 0.0, -0.0016536712646484375, -1.1444091796875e-05, -2.86102294921875e-05, -3.0517578125e-05, -0.0002614259719848633, -4.410743713378906e-06, -9.5367431640625e-06, -0.000270843505859375, -0.019498825073242188, -0.000431060791015625, -1.9788545614574105e-05, -9.536738616588991e-07, -0.0001653383078519255, -2.1457672119140625e-06, -0.0019001960754394531, -3.814697265625e-06, -0.00032806396484375, -4.1961669921875e-05, -0.000286102294921875, -1.9073486328125e-06, -1.1444091796875e-05, -0.0002593994140625, -0.0033111572265625, -0.0002117156982421875, -0.0003032684326171875, -0.00043522584019228816, -2.09808349609375e-05, -0.0004825592041015625, 0.0, -0.0044097900390625, -0.000133514404296875, -0.00010693073272705078, -0.001178741455078125, -1.33514404296875e-05], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "Leokk", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "keyword", "value": {"_type": "Attribute", "value": {"_type": "Name", "id": "MINION_TYPE"}, "attr": "BEAST"}, "arg": "minion_type"}], "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template40"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "HUNTER"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Template60"}, "args": [{"_type": "Template12", "hole0": 1}, {"_type": "Template16", "hole0": "MinionSelector"}]}, {"_type": "Template39_expr_seq"}]}, "hole0": 2, "hole2": "auras", "hole1": 4}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.047614128977784276, "inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "choice_history": [139, 193, 316, 147, 173, "Leokk", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Leokk", "<EOS>", 111, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 94, 119, 310, 138, 291, "minion_type", "<EOS>", 17, 164, 25, 194, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 23, 189, 303, 79, 171, 58, 303, 90, 209, "1", "<EOS>", 93, 213, "Minion", "Selector", "<EOS>", 110, 156]}]}
{"index": 62, "beams": [{"score_history": [-8.392333984375e-05, -0.000118255615234375, 0.0, -0.0001983642578125, -7.82012939453125e-05, -9.202698129229248e-05, -0.00022384998737834394, -0.0004898305633105338, -1.9073486328125e-06, -0.007943153381347656, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.72747802734375e-05, -2.1457672119140625e-06, -1.71661376953125e-05, -9.5367431640625e-05, -0.0012149810791015625, -7.2479248046875e-05, -3.814697265625e-06, -2.6702880859375e-05, -4.76837158203125e-05, -0.041774749755859375, -2.6702880859375e-05, -1.9073486328125e-06, -0.0004097773344255984, -5.7220458984375e-05, -2.7418097943154862e-06, -3.2782365451566875e-05, -0.000179290771484375, -0.0002117156982421875, 0.0, -1.9073486328125e-06, 0.0, -0.00011646747589111328, -8.106231689453125e-06, -0.004734992515295744, -2.0265579223632812e-06, -0.00103759765625, -1.9073486328125e-05, -3.814697265625e-06, -0.003726959228515625, 0.0, -0.0013523101806640625, -0.0066242218017578125, -0.0001430511474609375, -0.000110626220703125, -0.000141143798828125, -8.392333984375e-05, -0.0011806488037109375, -0.013223648071289062, -0.004534721374511719, -0.2027111053466797, -0.000148773193359375], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "<UNK>Justice", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "<UNK> Justice"}, {"_type": "Template38"}, {"_type": "Attribute", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}, "attr": "PALADIN"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_weapon", "body": [{"_type": "Return", "value": {"_type": "Call", "func": {"_type": "Template79"}, "args": [{"_type": "Template38"}, {"_type": "Template44"}]}}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template63"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.29342439419610855, "inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "choice_history": [139, 193, 316, 147, 173, "<UNK>", "Justice", "<EOS>", 302, 125, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "<UNK>", " ", "Justice", "<EOS>", 109, 76, 164, 25, 194, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 99, 150, 178, "create_weapon", "<EOS>", 3, 315, 153, 200, 20, 171, 73, 303, 109, 115, 156]}]}
{"index": 63, "beams": [{"score_history": [-1.9073486328125e-05, -1.9073486328125e-06, -8.20159912109375e-05, -0.0004596710205078125, -0.0015506744384765625, -0.0001102642563637346, -0.0006489753141067922, -0.00033974461257457733, -0.000512595463078469, -4.6968070819275454e-05, -1.9073486328125e-05, -8.20159912109375e-05, -5.7220458984375e-06, -1.1444091796875e-05, -3.814697265625e-05, -0.00031566619873046875, -9.536735888104886e-06, 0.0, -1.1444091796875e-05, -4.00543212890625e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0026702880859375, 0.0, -0.010492324829101562, -3.4332275390625e-05, -1.9073486328125e-06, -5.030505417380482e-05, -6.437301635742188e-05, -0.00010287750046700239, -5.173683166503906e-05, -3.51667040376924e-05, -0.002216339111328125, -0.0029289720114320517, -4.398822784423828e-05, -0.00038909912109375, -0.0002727508544921875, -0.0002040863037109375, -8.20159912109375e-05, -0.0002765655517578125, -6.282299000304192e-05, -0.0002551987417973578, -0.000171661376953125, -3.814697265625e-05, -0.00091552734375, -3.62396240234375e-05, -6.222722731763497e-05, -6.0794889577664435e-05, -0.00011181754234712571, -1.1920928244535389e-07, -0.0038830037228763103, 0.0, -6.67572021484375e-05, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "LordOfTheArena", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Lord of the Arena"}, {"_type": "Template52"}, {"_type": "Template18"}, {"_type": "Template17"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "create_minion", "body": [{"_type": "Template6", "hole3": {"_type": "Template72"}, "hole0": 6, "hole2": "taunt", "hole1": 5}], "args": {"_type": "Template3"}}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.029899791039490253, "inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "choice_history": [139, 193, 316, 147, 173, "Lord", "Of", "The", "Arena", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", 120, 95, 94, 150, 178, "create_minion", "<EOS>", 3, 315, 157, 261, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 68, 156]}]}
{"index": 64, "beams": [{"score_history": [-3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -6.437291176553117e-06, -7.712599472142756e-05, -7.62939453125e-06, -7.62939453125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -1.9073486328125e-06, -5.1617604185594246e-05, -9.059900548891164e-06, -1.9073486328125e-06, -4.00543212890625e-05, -6.4849853515625e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.12082099914550781, -5.7220458984375e-06, -0.000171661376953125, -0.00045013427734375, 0.0, -3.2186455882765586e-06, -6.866433250252157e-05, -9.98927716864273e-05, -0.00012958049774169922, -0.00028228759765625, -0.000171661376953125, -0.00279998779296875, -0.000102996826171875, -7.62939453125e-06, -0.0045909881591796875, -5.14984130859375e-05, -6.29425048828125e-05, -0.0011237564031034708, -4.172325134277344e-06, -3.1470593967242166e-05, -3.814697265625e-06, 0.0], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "MechanicalDragonling", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "keywords": [{"_type": "Template13"}], "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template38"}, {"_type": "Template18"}, {"_type": "Template17"}, {"_type": "Template51"}]}}], "args": {"_type": "Template5"}}, {"_type": "Template0", "hole0": 2, "hole1": 1}], "bases": [{"_type": "Template35"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.13130470339160638, "inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "choice_history": [139, 193, 316, 147, 173, "Mechanical", "Dragonling", "<EOS>", 302, 107, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 172, 29, 306, 87, 202, "Mechanical", " ", "Dragonling", "<EOS>", 109, 95, 94, 119, 310, 135, 154, 205, "2", "<EOS>", "1", "<EOS>", 156]}]}
{"index": 65, "beams": [{"score_history": [-0.0001735687255859375, -3.814697265625e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -4.887569048150908e-06, -3.8146317820064723e-05, 0.0, -8.7738037109375e-05, -0.000217437744140625, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.609325045137666e-05, -4.470293060876429e-05, -2.288818359375e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -3.0517578125e-05, -0.000583648681640625, -1.9073486328125e-06, -0.001178741455078125, -0.000125885009765625, -7.62939453125e-06, -3.302042750874534e-05, -7.033343717921525e-05, -1.2397689715726301e-05, -3.111325349891558e-05, -1.1444091796875e-05, -0.15268898010253906, -0.0001392364501953125, -2.47955322265625e-05, -3.814697265625e-06, -7.152429316192865e-05, -5.698202585335821e-05, -0.0004596710205078125, -0.0007457733154296875, -4.1961669921875e-05, -0.000972747802734375, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -2.86102294921875e-05, -0.0030345916748046875, -3.814697265625e-06, -0.000362396240234375, -0.01568654738366604, -0.004972219467163086, -0.000586390495300293, -2.0265579223632812e-06, -1.52587890625e-05, -0.0017719268798828125, -2.09808349609375e-05, -0.00025391552480868995, -0.0005787599948234856, -2.86102294921875e-05, -3.814697265625e-06], "model_output": {"_type": "Module", "body": [{"_type": "ClassDef", "name": "MindBlast", "body": [{"_type": "FunctionDef", "name": "__init__", "body": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template10"}, "args": [{"_type": "Str", "s": "Mind Blast"}, {"_type": "Template36"}, {"_type": "Template31"}, {"_type": "Template23"}]}}], "args": {"_type": "Template5"}}, {"_type": "FunctionDef", "name": "use", "body": [{"_type": "Template2"}, {"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Attribute", "value": {"_type": "Attribute", "value": {"_type": "Template30"}, "attr": "hero"}, "attr": "damage"}, "args": [{"_type": "Template8", "hole0": 5}, {"_type": "Template42"}]}}], "args": {"_type": "Template1"}}], "bases": [{"_type": "Template41"}]}, {"_type": "Template37_stmt_seq"}]}, "score": -0.1853313750716552, "inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "choice_history": [139, 193, 316, 147, 173, "Mind", "Blast", "<EOS>", 302, 112, 316, 150, 178, "__init__", "<EOS>", 4, 315, 148, 176, 20, 171, 29, 305, 87, 202, "Mind", " ", "Blast", "<EOS>", 108, 105, 99, 150, 178, "use", "<EOS>", 2, 316, 155, 148, 176, 20, 171, 17, 164, 17, 164, 37, "hero", "<EOS>", "damage", "<EOS>", 303, 133, 282, "5", "<EOS>", 113, 156]}]}
