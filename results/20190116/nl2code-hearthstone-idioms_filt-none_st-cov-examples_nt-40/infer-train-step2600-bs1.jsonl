{"index": 0, "beams": [{"inferred_code": "class AcidicSwampOoze(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidic Swamp Ooze', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Destroy(),\n            WeaponSelector(EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.04733269868302159, "score_history": [-1.9073486328125e-06, -3.4332275390625e-05, -0.00030262686777859926, -0.0029422170482575893, -0.0022625229321420193, -0.00019762947340495884, -2.2426247596740723e-06, -2.3960823455126956e-05, -4.768370445162873e-07, -7.62939453125e-06, -0.000423431396484375, -3.814697265625e-06, -2.47955322265625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.0002193450927734375, -1.9073486328125e-05, -7.62939453125e-06, -0.0024649493861943483, -7.534016913268715e-05, -0.0002919294638559222, -9.262561070499942e-05, -0.0001380443572998047, -1.9073486328125e-06, -4.00543212890625e-05, -1.52587890625e-05, -0.0003604888916015625, -0.002475738525390625, -3.4332275390625e-05, -1.52587890625e-05, -0.0030509226489812136, -4.768367489305092e-06, -0.00107574462890625, -2.47955322265625e-05, -2.6702880859375e-05, -3.814697265625e-06, -0.0001468658447265625, -5.9604644775390625e-06, -7.62939453125e-06, -0.0004425048828125, -7.62939453125e-06, -0.009092588908970356, -0.016483206301927567, -0.000194549560546875, -4.9591064453125e-05, -0.0018998360028490424, -3.24249267578125e-05, 0.0, -7.05718994140625e-05, -1.9073486328125e-06, -0.0012674329336732626, -0.00020909305021632463, 0.0, -2.47955322265625e-05, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -0.000522613525390625, -0.000156402587890625, -2.0265538296371233e-06, -2.264974000354414e-06, -3.576278118089249e-07, -3.576278118089249e-07], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 3, "hole1": 2}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template25", "hole0": "Destroy"}, {"_type": "Template19", "hole0": "WeaponSelector", "hole1": {"_type": "Name", "id": "EnemyPlayer"}}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Acidic Swamp Ooze"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "AcidicSwampOoze"}, "choice_history": [77, 145, "Acidic", "Swamp", "Ooze", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Acidic", " ", "Swamp", " ", "Ooze", "<EOS>", 68, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 63, 171, "Destroy", "<EOS>", 59, 155, "Weapon", "Selector", "<EOS>", 25, 133, "Enemy", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"]}]}
{"index": 1, "beams": [{"inferred_code": "class AncestralHealing(SpellCard):\n\n    def __init__(self):\n        super().__init__('Ancestral Healing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.target.taunt = True\n", "score": -0.7089951119526106, "score_history": [-2.288818359375e-05, -0.0022144317626953125, -1.1920928244535389e-07, -4.160358730587177e-05, -1.263618378288811e-05, -0.009309664368629456, -4.8160552978515625e-05, -5.7220458984375e-06, -7.62939453125e-06, -9.1552734375e-05, -1.1444091796875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -6.198863957251888e-06, -4.494190216064453e-05, -6.306066643446684e-05, -2.86102294921875e-05, -0.00011444091796875, -1.9073486328125e-06, -4.863434151047841e-05, -8.344646857949556e-07, -1.71661376953125e-05, -0.0003070831298828125, -3.814697265625e-06, 0.0, -2.288818359375e-05, -5.7220458984375e-06, -0.006367683410644531, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -2.09808349609375e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.0003204345703125, -1.1444091796875e-05, -1.9073486328125e-06, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, -9.5367431640625e-06, 0.0, -1.33514404296875e-05, 0.0, -7.82012939453125e-05, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.010106325149536133, 0.0, -4.1961669921875e-05, 0.0, -0.00015401840209960938, 0.0, -3.0517578125e-05, -7.05718994140625e-05, -4.1961669921875e-05, -0.0004426240921020508, -1.5497195136049413e-06, -0.07179450988769531, -2.288818359375e-05, -0.23623371124267578, -2.47955322265625e-05, -6.103515625e-05, 0.0, -7.62939453125e-05, 0.0, -2.5033950805664062e-05, -1.9073486328125e-06, -0.00010907649993896484, -1.9073486328125e-06, -0.15684330463409424, -1.9073486328125e-06, -0.00040435791015625, -0.0001049041748046875, -3.814697265625e-05, -6.103515625e-05, 0.0, -4.57763671875e-05, -0.0007250286871567369, -0.0012116432189941406, -9.5367431640625e-06, -0.06212139129638672, -0.0013370513916015625, -6.4849853515625e-05, -0.002201080322265625, -5.7220458984375e-06, 0.0, -0.005718231201171875, -7.62939453125e-06, -0.0006475448608398438, -0.0002307891845703125, -0.00021564960479736328, -6.866455078125e-05, -0.09430217742919922, -8.58306884765625e-05, -6.67572021484375e-05, -0.0002346038818359375, -0.0002117156982421875, -7.62939453125e-06, -0.027652740478515625, -0.00038909912109375, -1.9073486328125e-06, -0.000194549560546875, -5.14984130859375e-05, -0.0001678466796875, 0.0, -0.0001430511474609375, 0.0, -0.00020599365234375, -1.52587890625e-05, -7.2479248046875e-05, 0.0, -0.012799263000488281, 0.0, -0.00104522705078125, -0.0001125335693359375, -0.00012791156768798828, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template38"}}, "args": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "taunt", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "value": {"_type": "NameConstant", "value": true}}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Ancestral Healing"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "AncestralHealing", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Ancestral", "Healing", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ancestral", " ", "Healing", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 48, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 53, 133, "self", "<EOS>", 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 2, "beams": [{"inferred_code": "class AnimalCompanion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Animal Companion', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = [hearthbreaker.cards.minions.hunter.Leokk()]\n        card = game.random_choice(<UNK>)\n        card.summon(player, player.game, len(player.minions))\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score": -3.1357790610183542, "score_history": [-1.9073486328125e-06, -0.0015344619750976562, -9.440929716220126e-05, -0.0002954767260234803, -5.8887653722194955e-05, -3.7178717320784926e-05, -1.9073468138230965e-06, -0.0018216371536254883, -3.814697265625e-06, -0.000370025634765625, -0.0002593994140625, -5.531158240046352e-05, -0.0002138614363502711, -2.861022494471399e-06, -2.6702880859375e-05, -8.558871923014522e-05, -4.410743713378906e-05, -0.003276228904724121, -4.1961669921875e-05, -2.4437898900941946e-05, -7.62939453125e-06, -0.0005321502685546875, -5.7220458984375e-06, -3.0040715500945225e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -6.675716122117592e-06, -1.728534698486328e-05, -0.008626937866210938, -0.0009517669677734375, -6.866455078125e-05, -2.6702880859375e-05, -1.9073486328125e-05, -4.57763671875e-05, -2.09808349609375e-05, -0.027037356048822403, -6.341859989333898e-05, -0.0290679931640625, -0.004238128662109375, -0.03902912139892578, -0.010049819946289062, -0.011905670166015625, -6.4849853515625e-05, 0.0, -0.000316619873046875, 0.0, -0.0004405975341796875, 0.0, -0.11299991607666016, -3.814697265625e-06, -0.010295867919921875, -1.71661376953125e-05, -0.00060272216796875, 0.0, -0.0008451938629150391, 0.0, -0.000939488410949707, 0.0, -0.017575740814208984, -6.496906280517578e-05, -1.117507815361023, 0.0, -0.1163492202758789, -0.6550874710083008, -0.6140737533569336, -0.011363029479980469, -0.001003265380859375, -2.09808349609375e-05, -0.000339508056640625, -1.9073486328125e-06, -0.013022780418395996, 0.0, -0.0006580352783203125, -0.11049461364746094, -0.00012969970703125, 0.0, -0.002437591552734375, 0.0, -0.0006705522537231445, 0.0, -0.004439830780029297, 0.0, -1.1444091796875e-05, -7.43865966796875e-05, 0.0, -0.014034595340490341, -5.61460001335945e-05, -0.01502227783203125, -0.13954639434814453, -4.9591064453125e-05, -7.62939453125e-06, -0.010653665289282799, -3.576278118089249e-07, -0.0019873380661010742, -1.1920922133867862e-06, -0.0001983642578125, -0.00029754638671875, -0.0036163330078125, -3.814697265625e-06, -9.5367431640625e-06, -0.0004500150680541992, 0.0, -0.0002841949462890625, -0.0006580352783203125, -7.62939453125e-06, 0.0, -0.0004062652587890625, -1.9073486328125e-06, -4.1961669921875e-05, -0.000152587890625, -8.96453857421875e-05, -1.52587890625e-05, -0.000400304765207693, 0.0, -0.0001964569091796875, -0.0003910064697265625, -1.9073486328125e-05, -0.00021970267698634416, 0.0, -9.1552734375e-05, -1.9073486328125e-05, -4.38690185546875e-05, -4.9591064453125e-05, -0.0006923675537109375, -1.71661376953125e-05, -5.53131103515625e-05, -3.814697265625e-05, -0.0049800872802734375, -4.00543212890625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -5.352455627871677e-05, -2.0265579223632812e-06, -0.0005779266357421875, 0.0, -0.0001049041748046875, -1.9073486328125e-06, -0.0033931732177734375, 0.0, -0.0025691986083984375, -1.9073486328125e-06, -0.0002536773681640625, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -5.495546793099493e-05, 0.0, -6.4849853515625e-05, -1.33514404296875e-05, -0.000232696533203125, -0.0002765655517578125, -0.00014090535114519298, 0.0, -1.52587890625e-05, -0.00054168701171875, -1.9073486328125e-06, -7.2479248046875e-05, -1.9073486328125e-06, -0.0006051061791367829, -2.09808349609375e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "List", "elts": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "Leokk", "value": {"_type": "Attribute", "attr": "hunter", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}, {"_type": "Template36_expr_seq"}]}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "card"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "<UNK>"}]}}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "card"}, "hole1": "summon", "hole2": [{"_type": "Template38"}, {"_type": "Attribute", "attr": "game", "value": {"_type": "Template38"}}, {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template38"}}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Animal Companion", "hole1": 3, "hole3": "COMMON", "hole2": "HUNTER"}], "hole0": "AnimalCompanion", "hole5": [{"_type": "arg", "arg": "game"}], "hole7": [{"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Template17", "hole0": {"_type": "Template25", "hole0": "super"}, "hole1": "can_use", "hole3": "game", "hole2": "player"}, {"_type": "Compare", "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Template38"}}]}, "ops": [{"_type": "Lt"}], "comparators": [{"_type": "Num", "n": 7}]}], "op": {"_type": "And"}}}], "args": {"_type": "Template8"}}]}, "choice_history": [77, 148, "Animal", "Companion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Animal", " ", "Companion", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 220, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 23, 129, 208, 48, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "hunter", "<EOS>", "Leokk", "<EOS>", 71, 71, 71, 82, 103, 205, 53, 133, "card", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "<UNK>", "<EOS>", 97, 166, 25, 133, "card", "<EOS>", "summon", "<EOS>", 207, 73, 45, 104, 42, "game", "<EOS>", 48, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 42, "minions", "<EOS>", 202, 14, 205, 55, 138, "7", "<EOS>"]}]}
{"index": 3, "beams": [{"inferred_code": "class ArcaneExplosion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Explosion', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score": -0.033156244951719316, "score_history": [-6.866455078125e-05, -0.0014858245849609375, -3.576278118089249e-07, -1.5020326827652752e-05, -5.364403477869928e-06, -9.534996934235096e-06, -3.7670135498046875e-05, -8.106231689453125e-06, 0.0, -0.0001983642578125, -4.00543212890625e-05, -4.768370445162873e-07, -0.0003491395036689937, -5.245203283266164e-06, 0.0, -9.297892393078655e-05, -5.7220458984375e-06, -0.0031567811965942383, -1.9073486328125e-05, -0.0014801025390625, -5.7220458984375e-06, -0.00017547607421875, -1.33514404296875e-05, -9.179100743494928e-06, 0.0, -5.340576171875e-05, -4.76837158203125e-05, -2.86102294921875e-05, -2.288818359375e-05, -1.2874577805632725e-05, -0.0037221908569335938, -5.7220458984375e-06, -0.0022487640380859375, -0.0004730224609375, -6.103515625e-05, -3.0517578125e-05, -0.008900046348571777, -3.814697265625e-06, -0.0001697540283203125, -3.4332275390625e-05, -0.0001735687255859375, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0012798309326171875, 0.0, -0.0006618499755859375, -3.814697265625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.4332275390625e-05, -6.866455078125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.00035858154296875, 0.0, -0.0002288818359375, -4.9591064453125e-05, -0.000788569450378418, -7.62939453125e-05, -1.71661376953125e-05, -0.000701904296875, -0.0001583099365234375, -5.53131103515625e-05, 0.0, -4.7802921471884474e-05, 0.0, -0.0003032684326171875, 0.0, -1.9073486328125e-06, -0.001300811767578125, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-05, -2.09808349609375e-05, -0.00013506400864571333, -1.1920928244535389e-07, -0.00052642822265625, -0.0019168853759765625, -0.00078582763671875, -1.9073486328125e-06, -0.0002576112747192383, -3.814697265625e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template34"}]}, {"_type": "Name", "id": "self"}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Arcane Explosion", "hole1": 2, "hole3": "FREE", "hole2": "MAGE"}], "hole0": "ArcaneExplosion", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Arcane", "Explosion", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Explosion", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>"]}]}
{"index": 4, "beams": [{"inferred_code": "class ArcaneIntellect(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Intellect', 3, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for c in range(0, 2):\n            player.draw()\n", "score": -0.02919005302101141, "score_history": [-2.86102294921875e-05, -0.007568359375, -1.9073468138230965e-06, -3.8384725485229865e-05, -4.768360213347478e-06, 0.0, -1.4305060176411644e-05, -8.940691259340383e-06, 0.0, -6.103515625e-05, -2.09808349609375e-05, -7.867811291362159e-06, -0.00010824146011145785, -7.271752110682428e-06, -9.5367431640625e-06, -8.940653060562909e-06, -8.201598393497989e-05, -0.000499725341796875, -3.814697265625e-06, -0.0031186342239379883, 0.0, -0.0005474090576171875, 0.0, -1.8119757442036644e-05, 0.0, -4.38690185546875e-05, -0.000213623046875, -2.47955322265625e-05, -3.898143768310547e-05, -8.463837730232626e-06, -0.0025472640991210938, -0.000888824462890625, -0.0002574920654296875, -5.53131103515625e-05, -7.05718994140625e-05, -5.14984130859375e-05, -0.006500481627881527, -2.861022494471399e-06, -0.000186920166015625, -1.9073486328125e-06, -0.000270843505859375, -1.71661376953125e-05, -0.0003350971674080938, -2.50339189733495e-06, -2.09808349609375e-05, -0.00072479248046875, -7.62939453125e-06, -0.00016879255417734385, -3.4570680327306036e-06, -4.76837158203125e-05, -0.0020580291748046875, -0.0001926422119140625, -0.001361846923828125, -7.05718994140625e-05, -0.0008542536525055766, -2.0265579223632812e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "c"}, "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33"}]}, "body": [{"_type": "Template23", "hole0": {"_type": "Template38"}, "hole1": "draw"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Arcane Intellect", "hole1": 3, "hole3": "FREE", "hole2": "MAGE"}], "hole0": "ArcaneIntellect", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Arcane", "Intellect", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Intellect", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "c", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 217, 97, 165, 42, "draw", "<EOS>"]}]}
{"index": 5, "beams": [{"inferred_code": "class ArcaneMissiles(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Missiles', 1, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, player.effective_spell_damage(3)):\n            targets = copy.copy(game.other_player.minions)\n            targets.append(game.other_player.hero)\n            target = game.random_choice(targets)\n            target.damage(1, self)\n", "score": -0.19942641136105976, "score_history": [-1.1444091796875e-05, -0.00125885009765625, -8.344646857949556e-07, -1.3470632438838948e-05, -3.0278701160568744e-05, -1.3581302482634783e-05, -3.802776336669922e-05, -2.491474151611328e-05, -1.9073486328125e-06, -7.62939453125e-05, -6.29425048828125e-05, -1.6689286894688848e-06, -0.00021254165039863437, -2.8133048544987105e-05, -1.9073486328125e-06, -4.2907195165753365e-06, -0.00018906593322753906, -0.00030517578125, -1.52587890625e-05, -0.008840560913085938, -1.9073486328125e-06, -6.67572021484375e-05, -0.000171661376953125, -2.0503983250819147e-05, 0.0, -2.09808349609375e-05, -0.000125885009765625, -5.7220458984375e-06, -4.029273986816406e-05, -2.181529998779297e-05, -0.005139350891113281, -9.5367431640625e-06, -0.001613616943359375, -0.00012969970703125, -7.62939453125e-06, -0.000171661376953125, -0.0007474422454833984, -1.4185829968482722e-05, -0.0001850128173828125, -1.71661376953125e-05, -3.62396240234375e-05, -1.52587890625e-05, -0.001695394515991211, -1.9073486328125e-06, -0.000225067138671875, -0.0035085678100585938, -0.0004444122314453125, -0.0013945293612778187, -2.5272369384765625e-05, -0.0013322830200195312, -3.814697265625e-06, -2.47955322265625e-05, -1.33514404296875e-05, -4.9591064453125e-05, -0.0027055733371526003, -6.794924956921022e-06, -0.0002727508544921875, -0.02001190185546875, -0.020406723022460938, -0.0003223419189453125, -0.0017261505126953125, -8.392333984375e-05, -0.0004329681396484375, -1.9073486328125e-06, -0.001615762012079358, 0.0, -7.2479248046875e-05, -5.7220458984375e-06, -0.0002040863037109375, 0.0, -1.1444091796875e-05, 0.0, -0.000431060791015625, 0.0, -0.03880596160888672, 0.0, -9.1552734375e-05, -9.5367431640625e-06, -4.57763671875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0001277923583984375, -3.814697265625e-06, -0.000507354736328125, -1.9073486328125e-06, -0.0001392364501953125, -2.47955322265625e-05, -0.005787372589111328, 0.0, -0.00066375732421875, -0.0001850128173828125, -5.340576171875e-05, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0015376806259155273, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -0.000324249267578125, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.00037384033203125, -1.9073486328125e-06, -0.003438115119934082, -2.3126602172851562e-05, -0.0010883808135986328, 0.0, -0.008611679077148438, -0.00052642822265625, -6.103515625e-05, -0.012146949768066406, 0.0, -0.007997870445251465, 0.0, -0.001697540283203125, -5.7220458984375e-06, -0.0006160736083984375, -1.9073486328125e-06, -6.4849853515625e-05, 0.0, -0.011870384216308594, 0.0, -0.005749702453613281, -1.9073486328125e-06, -2.47955322265625e-05, -0.0004520416259765625, 0.0, -0.00027179718017578125, 0.0, -0.0001010894775390625, -0.0026979446411132812, -2.09808349609375e-05, -3.814697265625e-06, -0.0002802609233185649, 0.0, -0.0005054473876953125, 0.0, -1.33514404296875e-05, -0.0019378662109375, -0.013311386108398438, -7.62939453125e-06, -0.00022220611572265625, -7.62939453125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template35"}]}]}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "targets"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "append", "hole2": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "target"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "targets"}]}}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "target"}, "hole1": "damage", "hole2": [{"_type": "Template34"}, {"_type": "Name", "id": "self"}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Arcane Missiles", "hole1": 1, "hole3": "FREE", "hole2": "MAGE"}], "hole0": "ArcaneMissiles", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Arcane", "Missiles", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Arcane", " ", "Missiles", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 220, 82, 103, 205, 53, 133, "targets", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "target", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 69, 53, 133, "self", "<EOS>"]}]}
{"index": 6, "beams": [{"inferred_code": "class ArcaneShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Arcane Shot', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.01866471277934778, "score_history": [-0.000171661376953125, -0.0013256072998046875, -1.1920928244535389e-07, -1.7642965758568607e-05, -7.629365427419543e-06, -1.3588520232588053e-05, -8.82148651726311e-06, -1.8835040464182384e-05, -3.814697265625e-06, -7.62939453125e-05, -1.1444091796875e-05, -0.000125885009765625, -2.6702880859375e-05, -9.5367431640625e-06, -6.4849853515625e-05, -1.52587890625e-05, -9.5367431640625e-06, -1.8000440832111053e-05, -0.0001193255084217526, -2.6702873583417386e-05, -1.0848020792764146e-05, -1.71661376953125e-05, -1.9073486328125e-05, -0.0001544952392578125, -3.24249267578125e-05, -9.5367431640625e-06, -3.24249267578125e-05, 0.0, -0.007020473480224609, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000102996826171875, -0.0001087188720703125, -0.0004425048828125, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -2.86102294921875e-05, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0001087188720703125, 0.0, -0.00014495849609375, -3.814697265625e-06, -0.0015718936920166016, -8.58306884765625e-05, -4.780292510986328e-05, -1.9073486328125e-06, -8.702257764525712e-05, 0.0, -0.0001983642578125, -9.34600830078125e-05, -2.47955322265625e-05, 0.0, 0.0, -0.0022687911987304688, -2.86102294921875e-05, -3.62396240234375e-05, -0.00017547607421875, -3.62396240234375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0009307861328125, -1.9073486328125e-06, -9.095660789171234e-05, -3.814697265625e-06, -6.902217864990234e-05, 0.0, -7.43865966796875e-05, -0.0006237030029296875, -3.0517578125e-05, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -0.0012483596801757812, -2.0265579223632812e-06, -0.0003223419189453125, -2.09808349609375e-05, -2.47955322265625e-05, 0.0, -7.355210982495919e-05, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Arcane Shot"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "ArcaneShot", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Arcane", "Shot", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Arcane", " ", "Shot", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"]}]}
{"index": 7, "beams": [{"inferred_code": "class ArcaniteReaper(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Arcanite Reaper', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(5, 2)\n", "score": -0.1438024851790516, "score_history": [-4.38690185546875e-05, -0.0003719329833984375, -8.153582894010469e-05, -0.00011419619113439694, -0.00012516192509792745, -0.00015746366989333183, -5.05443022120744e-05, -5.841247457283316e-06, -9.5367431640625e-06, -0.13517189025878906, -2.6702880859375e-05, -1.1920928244535389e-07, -5.269050598144531e-05, -1.1682510375976562e-05, -9.739398956298828e-05, -0.00047206931049004197, -2.3841855067985307e-07, -0.00347149302251637, 0.0, -1.8477439880371094e-05, 0.0, -0.0020427703857421875, 0.0, -0.00014805189857725054, -1.1920928244535389e-07, -0.000797271728515625, -5.53131103515625e-05, -0.0003147125244140625, -8.094245276879519e-05, -6.0794889577664435e-05, 0.0, 0.0, -1.966952368093189e-05, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template20", "hole0": "Weapon", "hole1": 5, "hole2": 2}], "hole4": "player", "hole1": "WeaponCard", "hole3": "create_weapon", "hole2": [{"_type": "Template6", "hole0": "Arcanite Reaper", "hole1": 5, "hole3": "COMMON", "hole2": "WARRIOR"}], "hole0": "ArcaniteReaper"}, "choice_history": [77, 145, "Arcanite", "Reaper", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "Arcanite", " ", "Reaper", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "5", "<EOS>", "2", "<EOS>"]}]}
{"index": 8, "beams": [{"inferred_code": "class Assassinate(SpellCard):\n\n    def __init__(self):\n        super().__init__('Assassinate', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.38719189143431976, "score_history": [-0.0001068115234375, -0.008508682250976562, -9.179095286526717e-06, -1.2874520507466514e-05, -4.7682260628789663e-07, -1.9311904907226562e-05, -9.5367431640625e-06, -5.7220458984375e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.1444091796875e-05, -0.010907173156738281, -9.5367431640625e-06, -0.0001430511474609375, -1.33514404296875e-05, -2.288818359375e-05, -8.344646857949556e-07, -7.62939453125e-06, -0.000148773193359375, -2.6702880859375e-05, -1.7881377516459906e-06, -2.622604142743512e-06, -7.62939453125e-06, -0.00045013427734375, -5.7220458984375e-05, 0.0, -8.7738037109375e-05, 0.0, -0.0007495880126953125, 0.0, -3.814697265625e-05, -3.4332275390625e-05, -0.000965118408203125, -0.0001220703125, -8.96453857421875e-05, -0.22376728057861328, -9.5367431640625e-06, -1.9073486328125e-06, -4.57763671875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.0005893707275390625, -0.0001220703125, -1.9073486328125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.0022869110107421875, 0.0, -0.0002956390380859375, 0.0, -0.005867123603820801, -3.814697265625e-06, -8.20159912109375e-05, 0.0, -0.000546693685464561, 0.0, -4.38690185546875e-05, -0.0004730224609375, -7.62939453125e-05, -0.0004215240478515625, -1.1920928244535389e-07, -0.0016527175903320312, -1.71661376953125e-05, -4.38690185546875e-05, -0.11644268035888672, -7.62939453125e-05, -3.814697265625e-06, -0.0001049041748046875, 0.0, -0.0001277923583984375, 0.0, -7.748603820800781e-06, 0.0, -0.0024377107620239258, 0.0, -0.0002498626708984375, -0.008440017700195312, -4.76837158203125e-05, -0.00011348724365234375, -3.24249267578125e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Assassinate"}, {"_type": "Num", "n": 5}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Assassinate", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Assassinate", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Assassinate", "<EOS>", 55, 138, "5", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"]}]}
{"index": 9, "beams": [{"inferred_code": "class Backstab(SpellCard):\n\n    def __init__(self):\n        super().__init__('Backstab', 0, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target, filter_func=lambda target: target.\n            health == target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.5487849690110735, "score_history": [-2.09808349609375e-05, -0.0007076263427734375, -2.002696055569686e-05, -2.2649765014648438e-06, -2.5033823476405814e-06, -1.4066685253055766e-05, -1.9788742065429688e-05, -1.9073486328125e-06, -0.0002613067626953125, -1.71661376953125e-05, -0.0001220703125, -1.33514404296875e-05, -3.24249267578125e-05, -1.33514404296875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.0265574676159304e-06, -3.0517578125e-05, -0.000518798828125, -8.96453857421875e-05, -1.1920838005607948e-07, -4.768370445162873e-07, -5.7220458984375e-05, -3.4332275390625e-05, -4.00543212890625e-05, 0.0, -0.0005054473876953125, 0.0, -0.000881195068359375, -1.9073486328125e-06, -0.0013408660888671875, -5.7220458984375e-05, -0.00360870361328125, -3.4332275390625e-05, -5.14984130859375e-05, -0.26150035858154297, -6.103515625e-05, -7.82012939453125e-05, -0.000125885009765625, 0.0, -7.62939453125e-06, -0.0002899169921875, -4.9591064453125e-05, 0.0, -6.4849853515625e-05, 0.0, -0.0005970001220703125, 0.0, -0.0001583099365234375, 0.0, -0.0023300647735595703, 0.0, -6.67572021484375e-05, -4.9591064453125e-05, -0.0040569305419921875, 0.0, -0.0012388229370117188, -0.0002613067626953125, -0.0001735687255859375, -5.340576171875e-05, -0.0010919570922851562, -6.866455078125e-05, -0.0034999847412109375, -0.00030517578125, -0.0016956329345703125, -0.0007781982421875, -0.0027008056640625, -1.71661376953125e-05, -0.06647300720214844, -1.33514404296875e-05, -0.0004673004150390625, -3.814697265625e-06, -0.0010097026824951172, 0.0, -0.022599339485168457, 0.0, -5.7220458984375e-06, -0.11815834045410156, -2.09808349609375e-05, -0.000213623046875, -0.0003204345703125, -0.000179290771484375, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.00027191638946533203, -5.7220458984375e-06, -0.02177715301513672, -1.1920928244535389e-07, -0.00095367431640625, -0.00042724609375, -0.0003490447998046875, -1.9073486328125e-06, -0.000354766845703125, -1.9073486328125e-06, -0.0017099380493164062, -7.62939453125e-06, -0.005280494689941406, 0.0, -0.000301361083984375, 0.0, -3.218649362679571e-05, 0.0, -0.000110626220703125, -5.53131103515625e-05, -1.9073486328125e-05, -2.110004425048828e-05, 0.0, -0.0006847381591796875, -0.000125885009765625, -3.0517578125e-05, -0.00305938720703125, -0.00012969970703125, 0.0, -7.62939453125e-06, 0.0, -7.259845733642578e-05, -1.9073486328125e-06, -5.5432316003134474e-05, 0.0, -0.007895588874816895, 0.0, -0.0015544891357421875, -0.002044677734375, -4.38690185546875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -0.0017359236953780055, -2.1457672119140625e-06, -0.0001735687255859375, -2.47955322265625e-05, -1.52587890625e-05, -1.9073486328125e-06, -3.850459688692354e-05, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Name", "id": "target"}}, "ops": [{"_type": "Eq"}], "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Name", "id": "target"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "target"}}}], "op": {"_type": "And"}}, "args": {"_type": "Template13", "hole0": "target"}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Backstab"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "ROGUE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Backstab", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Backstab", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Backstab", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 8, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"]}]}
{"index": 10, "beams": [{"inferred_code": "class BlessingOfKings(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Kings', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(4)\n        self.target.increase_health(4)\n", "score": -0.49957030601853347, "score_history": [-4.57763671875e-05, -0.0055675506591796875, -0.00021504749020095915, -0.0004457204486243427, -0.0007691025384701788, -1.6689160474925302e-05, -3.5762423067353666e-07, -6.318092346191406e-06, 0.0, -5.7220458984375e-06, -0.000133514404296875, -3.814697265625e-06, -1.1444091796875e-05, -6.866455078125e-05, -2.288818359375e-05, -0.000133514404296875, -2.86102294921875e-05, -1.1444091796875e-05, -3.8265450712060556e-05, -0.00022125244140625, -0.00026367680402472615, -3.814697265625e-05, -4.744529724121094e-05, -1.9073486328125e-06, -0.0005512237548828125, -5.7220458984375e-06, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -3.826618194580078e-05, -2.47955322265625e-05, -0.004391670227050781, 0.0, -0.0008754730224609375, -0.040434837341308594, -7.62939453125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -6.29425048828125e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-05, 0.0, -0.0001983642578125, -1.9073486328125e-06, -5.14984130859375e-05, -1.1920928244535389e-07, -0.0012443065643310547, 0.0, -3.600120544433594e-05, 0.0, -0.00010346993803977966, 0.0, -2.86102294921875e-05, -5.7220458984375e-06, -5.7220458984375e-06, -2.0146366296103224e-05, -7.867813110351562e-06, -0.3854207992553711, -1.52587890625e-05, -0.000202178955078125, -3.4332275390625e-05, -3.0517578125e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -2.5153160095214844e-05, -1.9073486328125e-06, -5.9604644775390625e-06, 0.0, -0.03740882873535156, 0.0, -9.5367431640625e-06, -0.0064907073974609375, -6.67572021484375e-05, -5.7220458984375e-05, -0.0001163482666015625, -1.9073486328125e-06, -0.0016651153564453125, 0.0, -8.726119995117188e-05, -5.7220458984375e-06, -6.0796710386057384e-06, -3.814697265625e-06, -0.00960075855255127, 0.0, -1.9073486328125e-05, -0.00185394287109375], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"_type": "Template37"}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "increase_health", "hole2": [{"_type": "Template37"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Blessing of Kings"}, {"_type": "Template37"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "BlessingOfKings", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Blessing", "Of", "Kings", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Kings", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 72, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 72]}]}
{"index": 11, "beams": [{"inferred_code": "class BlessingOfMight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessing of Might', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score": -0.09638114386586238, "score_history": [-4.76837158203125e-05, -0.0013332366943359375, -2.8729255063808523e-05, -0.0006326237926259637, -0.00020013349421788007, -1.2636104656849056e-05, -9.416762623004615e-06, -1.0013580322265625e-05, -4.768370445162873e-07, -1.9073486328125e-06, -7.2479248046875e-05, -1.33514404296875e-05, -0.0001621246337890625, -6.866455078125e-05, -4.00543212890625e-05, -0.0003414154052734375, -4.38690185546875e-05, -1.9073486328125e-05, -6.01988795096986e-05, -0.0001621246337890625, -0.0001442432403564453, -0.00018715858459472656, -4.1484832763671875e-05, 0.0, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-06, -2.6941299438476562e-05, -9.72747802734375e-05, -0.0012233253801241517, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -5.7220458984375e-05, -1.71661376953125e-05, -0.000644683837890625, -1.9073486328125e-06, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -2.09808349609375e-05, -6.4849853515625e-05, -0.00026702880859375, -3.814697265625e-06, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001506805419921875, -1.9073486328125e-06, -0.0002155303955078125, 0.0, -0.005138516426086426, 0.0, -0.00030350685119628906, 0.0, -0.00010168395965592936, 0.0, -3.4332275390625e-05, -5.91278076171875e-05, -0.0002651214599609375, -0.0005016326904296875, -1.1920928244535389e-07, -0.0031528472900390625, -0.0013828277587890625, -5.91278076171875e-05, -8.0108642578125e-05, -0.0063457489013671875, -1.52587890625e-05, -4.9591064453125e-05, 0.0, -0.00012063980102539062, -2.86102294921875e-05, -1.382827485940652e-05, 0.0, -0.06851410865783691, 0.0, -3.814697265625e-06, -0.00350189208984375], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"_type": "Template35"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Blessing of Might"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "BlessingOfMight", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Blessing", "Of", "Might", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Blessing", " ", "of", " ", "Might", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 70]}]}
{"index": 12, "beams": [{"inferred_code": "class BloodfenRaptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bloodfen Raptor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score": -0.004202433313139409, "score_history": [-1.9073486328125e-06, -1.71661376953125e-05, -1.9788545614574105e-05, -0.0008733150316402316, -7.390960945485858e-06, -9.402632713317871e-06, -1.919269561767578e-05, 0.0, 0.0, -0.000247955322265625, -1.33514404296875e-05, -1.33514404296875e-05, -0.000431060791015625, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.2172682292875834e-05, -4.482268923311494e-05, -2.503394853192731e-06, -0.0001373291015625, -7.62939453125e-06, -9.72747802734375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -5.340576171875e-05, -0.0003038644208572805, -1.6450869225081988e-05, -2.09808349609375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.00017595216922927648, -3.814697265625e-06, -9.655922440288123e-06, 0.0, -3.778930113185197e-05, 0.0, -0.000125885009765625, -0.0010128021240234375, -0.000133514404296875, -9.536729521641973e-07, -1.9073486328125e-06, -0.00021777207439299673, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 3, "hole1": 2}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Bloodfen Raptor"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "BloodfenRaptor"}, "choice_history": [77, 145, "Bloodfen", "Raptor", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bloodfen", " ", "Raptor", "<EOS>", 68, 65, 45, 104, 35, "FREE", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "3", "<EOS>", "2", "<EOS>"]}]}
{"index": 13, "beams": [{"inferred_code": "class Bloodlust(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bloodlust', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.change_temp_attack(3)\n", "score": -0.39576210671384615, "score_history": [-7.62939453125e-06, -0.003387451171875, -2.9802301924064523e-06, -0.0009859984274953604, -5.016569048166275e-05, -0.00021815276704728603, -4.768370445162873e-07, -5.7220458984375e-06, -8.7738037109375e-05, -1.9073486328125e-05, -1.1444026313256472e-05, -6.079673767089844e-06, -1.0728830375228426e-06, -0.00019884109497070312, -0.006030082702636719, -7.62939453125e-06, -0.0012569427490234375, -5.7220458984375e-06, -0.0001125335693359375, 0.0, -3.409376950003207e-05, 0.0, -7.2479248046875e-05, -0.0023097991943359375, -4.57763671875e-05, -7.903575897216797e-05, -1.6570091247558594e-05, -0.06010150909423828, -0.00032806396484375, -0.0001087188720703125, -0.0001201629638671875, -0.000152587890625, 0.0, -0.002619028091430664, -0.00017404556274414062, -0.0018405914306640625, 0.0, -0.0001697540283203125, -0.00470891036093235, 0.0, -0.000766754150390625, -0.0002422332763671875, -6.4849853515625e-05, -0.0001926422119140625, -7.62939453125e-06, -0.0003148317337036133, -4.0531158447265625e-06, -0.08546924591064453, 0.0, -4.57763671875e-05, -0.22337722778320312], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template38"}}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "change_temp_attack", "hole2": [{"_type": "Template35"}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Bloodlust", "hole1": 5, "hole3": "COMMON", "hole2": "SHAMAN"}], "hole0": "Bloodlust", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Bloodlust", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Bloodlust", "<EOS>", "5", "<EOS>", "SHAMAN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "change_temp_attack", "<EOS>", 205, 70]}]}
{"index": 14, "beams": [{"inferred_code": "class BluegillWarrior(MinionCard):\n\n    def __init__(self):\n        super().__init__('Bluegill Warrior', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score": -0.014839846025630266, "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -9.775113539944869e-06, -3.242446109652519e-05, -3.397406908334233e-05, -4.388391971588135e-06, -7.152556463552173e-06, -1.3589857189799659e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -2.86102294921875e-05, -6.67572021484375e-05, -1.9073486328125e-06, -0.0008716583251953125, 0.0, 0.0, -9.65590606938349e-06, -5.388259523897432e-05, -5.364418029785156e-05, -2.09808349609375e-05, -3.814697265625e-06, -3.0517578125e-05, -0.0001659393310546875, -4.00543212890625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.004187457263469696, -7.748603820800781e-06, -1.8834980437532067e-05, 0.0, -0.00015234597958624363, 0.0, -0.00049591064453125, -0.0005035400390625, -3.24249267578125e-05, -1.0848044439626392e-05, -8.344646857949556e-07, -1.2516895367298275e-05, -1.1920928244535389e-07, -0.0072958399541676044, -1.9073486328125e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.00010788440704345703, -2.3841855067985307e-07], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 2, "hole1": 1, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "MURLOC"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Bluegill Warrior"}, {"_type": "Template33"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "BluegillWarrior"}, "choice_history": [77, 145, "Bluegill", "Warrior", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Bluegill", " ", "Warrior", "<EOS>", 68, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 15, "beams": [{"inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.0233716163354174, "score_history": [-9.5367431640625e-06, -0.000133514404296875, -1.9073468138230965e-06, -0.00015579719911329448, -2.413243055343628e-05, -9.298318218498025e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0010356903076171875, -9.918212890625e-05, -2.288818359375e-05, -0.009273529052734375, -1.9073486328125e-06, -0.004878997802734375, -3.814697265625e-06, 0.0, -2.50339189733495e-06, -2.3841855067985307e-07, -0.0001220703125, -3.62396240234375e-05, -0.000232696533203125, -0.0001087188720703125, -3.24249267578125e-05, -6.401530845323578e-05, -9.536738616588991e-07, -0.0001087188720703125, -6.103515625e-05, -3.814697265625e-05, -0.005825040861964226, -1.1920928244535389e-07, -7.6293927122605965e-06, 0.0, -0.000617027108091861, 0.0, -0.000125885009765625, -0.000244140625, -1.9073486328125e-05, -3.2186455882765586e-06, -8.106212590064388e-06, -5.60267835680861e-05, -3.576277322281385e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 1, "hole1": 1}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Boar"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"_type": "NameConstant", "value": true}]}}], "hole0": "Boar"}, "choice_history": [77, 145, "Boar", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Boar", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"]}]}
{"index": 16, "beams": [{"inferred_code": "class Charge(SpellCard):\n\n    def __init__(self):\n        super().__init__('Charge', 3, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.add_buff(Buff(<UNK>()))\n", "score": -0.534646229162604, "score_history": [-0.000209808349609375, -0.025234222412109375, -4.887569048150908e-06, -3.2186455882765586e-06, -1.704655005596578e-05, -8.940695806813892e-06, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -9.5367431640625e-06, -0.0013790130615234375, -4.9591064453125e-05, -4.1961669921875e-05, -3.62396240234375e-05, -3.62396240234375e-05, -1.5497195136049413e-06, -3.24249267578125e-05, -0.005535125732421875, -1.9073486328125e-06, -4.57763671875e-05, -5.7220458984375e-06, 0.0, -4.780292510986328e-05, -5.7220458984375e-06, -0.00419771671295166, -3.814697265625e-06, -3.814697265625e-06, -9.34600830078125e-05, -1.9073486328125e-06, -0.00011444091796875, -7.62939453125e-06, -0.018192291259765625, -1.9073486328125e-06, 0.0, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005245208740234375, 0.0, -2.6702880859375e-05, -9.5367431640625e-06, -0.10034847259521484, 0.0, -5.543231964111328e-05, 0.0, -3.647750781965442e-05, 0.0, -0.0002231597900390625, -9.918212890625e-05, -0.0001125335693359375, -6.866455078125e-05, -2.1457672119140625e-06, -0.15034770965576172, -2.47955322265625e-05, -0.0002613067626953125, -6.67572021484375e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00014781951904296875, 0.0, -5.841255187988281e-06, 0.0, -0.1360931396484375, 0.0, -1.9073486328125e-06, -0.000286102294921875, -2.6702880859375e-05, -0.000232696533203125, -3.4332275390625e-05, 0.0, -0.00098419189453125, 0.0, -4.57763671875e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.08345222473144531, 0.0, -0.000148773193359375, -0.000148773193359375, -0.000392913818359375, -0.001057744026184082, -0.00012803077697753906, -5.7220458984375e-06, 0.0, -0.003672557882964611, -6.484919867943972e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"_type": "Template33"}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_buff", "hole2": [{"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "<UNK>"}}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_friendly_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Charge"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Charge", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Charge", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Charge", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "<UNK>", "<EOS>"]}]}
{"index": 17, "beams": [{"inferred_code": "class ChillwindYeti(MinionCard):\n\n    def __init__(self):\n        super().__init__('Chillwind Yeti', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score": -0.005748417137255046, "score_history": [-1.52587890625e-05, -5.7220458984375e-06, -0.0004164305282756686, -0.0003424303140491247, -2.3841855067985307e-07, -4.316400736570358e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005435943603515625, -3.814697265625e-05, -3.4570634852570947e-06, -0.0001480579376220703, -8.106231689453125e-06, 0.0, -0.0011225159978494048, -1.311301275563892e-06, -0.00048279762268066406, -1.9073486328125e-06, -2.9802322387695312e-05, 0.0, -3.814697265625e-06, 0.0, -0.0006157159805297852, 0.0, -1.71661376953125e-05, -0.0016078948974609375, -0.0002346038818359375, -5.364364369597752e-06, -1.7881377516459906e-06, -5.137917469255626e-05, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 4, "hole1": 5}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Chillwind Yeti", "hole1": 4, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "ChillwindYeti"}, "choice_history": [77, 145, "Chillwind", "Yeti", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Chillwind", " ", "Yeti", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "5", "<EOS>"]}]}
{"index": 18, "beams": [{"inferred_code": "class Claw(SpellCard):\n\n    def __init__(self):\n        super().__init__('Claw', 1, CHARACTER_CLASS.DRUID, CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score": -0.31285094501160415, "score_history": [-4.76837158203125e-05, -0.0009002685546875, -2.9802276912960224e-06, -1.1324817933200393e-05, -4.881527274847031e-06, -3.957737499149516e-05, -1.311301275563892e-06, -1.9073486328125e-06, -0.0006561279296875, -1.71661376953125e-05, 0.0, -2.634511110954918e-05, -1.1920926112907182e-07, -2.8729255063808523e-05, -0.00017189978098031133, -1.9073486328125e-06, -0.0032521486282348633, 0.0, -0.005402565002441406, 0.0, -2.7179445169167593e-05, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -0.0003452301025390625, -1.6570091247558594e-05, -2.0265579223632812e-06, -0.004746437072753906, -5.340576171875e-05, -0.0002307891845703125, -4.1961669921875e-05, -5.53131103515625e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0007710456848144531, 0.0, -0.27926695346832275, 0.0, -3.0517578125e-05, -0.001300811767578125, -2.86102294921875e-05, -7.43865966796875e-05, -0.0001926422119140625, -1.1444091796875e-05, -8.7738037109375e-05, -0.0007098910282365978, -1.9073486328125e-06, -0.01357126235961914, -8.344650268554688e-06, -3.0517578125e-05, -0.0005340576171875], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template38"}}, "hole1": "change_temp_attack", "hole2": [{"_type": "Template33"}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template38"}}, "hole1": "increase_armor", "hole2": [{"_type": "Template33"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Claw", "hole1": 1, "hole3": "FREE", "hole2": "DRUID"}], "hole0": "Claw", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Claw", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Claw", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 42, "hero", "<EOS>", "change_temp_attack", "<EOS>", 205, 68, 97, 166, 17, 104, 42, "hero", "<EOS>", "increase_armor", "<EOS>", 205, 68]}]}
{"index": 19, "beams": [{"inferred_code": "class Cleave(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cleave', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(2), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "score": -0.3463588247077922, "score_history": [-3.814697265625e-05, -0.0019502639770507812, -1.4424220353248529e-05, -1.609315222594887e-05, -0.0006524322088807821, -1.1563301086425781e-05, -9.357929229736328e-05, -1.9073486328125e-06, -0.0002918243408203125, -1.71661376953125e-05, -1.5497205367864808e-06, -9.655952453613281e-06, -2.622600504764705e-06, -9.5367431640625e-06, -0.02037668228149414, 0.0, -5.829334259033203e-05, 0.0, -0.0023899078369140625, -1.9073486328125e-06, -6.461139128077775e-05, 0.0, -2.6702880859375e-05, 0.0, -1.33514404296875e-05, -0.0002881288528442383, -7.867782187531702e-06, -0.041373252868652344, -0.000518798828125, -0.0005435943603515625, -3.814697265625e-06, -1.52587890625e-05, -0.0002422332763671875, -3.814697265625e-06, -0.01962639018893242, 0.0, -0.0029420852661132812, -1.9073486328125e-05, -0.0001926422119140625, -1.9073486328125e-06, -0.000293731689453125, 0.0, -0.0009039640426635742, 0.0, -0.0002651214599609375, 0.0, -8.7738037109375e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -0.000324249267578125, 0.0, -6.29425048828125e-05, 0.0, -0.00011205672490177676, -5.602834789897315e-06, -0.00047469150740653276, -3.814697265625e-06, -0.013980865478515625, -0.000385284423828125, -2.288818359375e-05, -1.9073486328125e-06, -0.002514362335205078, -2.276871418871451e-05, -0.0017309188842773438, -0.0001583099365234375, -5.7220458984375e-06, -5.7220458984375e-06, -0.004146099090576172, -1.1920928244535389e-07, -0.000308990478515625, -0.0006952285766601562, -5.7220458984375e-06, -0.0010997031349688768, -2.3841855067985307e-07, -0.0001850128173828125, -0.007521629333496094, -0.0003871917724609375, -7.62939453125e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.007393434643745422, 0.0, -0.00028228759765625, -1.52587890625e-05, -0.0002002716064453125, -7.62939453125e-06, -0.000286102294921875, 0.0, -0.0023517608642578125, 0.0, -0.008646488189697266, -1.049041748046875e-05, -2.09808349609375e-05, -0.0009021759033203125, 0.0, -0.09842619299888611, -2.3841855067985307e-07, -0.0005664825439453125, -0.001194000244140625, -2.09808349609375e-05, 0.0, -0.006663504056632519, -1.1920922133867862e-06, -0.01092982292175293, 0.0, -0.0001277923583984375, -0.000621795654296875, 0.0, -0.003812256036326289, -3.933906555175781e-06, -0.0007991790771484375, -7.62939453125e-05, -2.288818359375e-05, -1.9073486328125e-06, -0.0437929704785347, -3.099440846199286e-06, -0.0003294944763183594, 0.0, 0.0, -0.004238128662109375, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.00023233878891915083, -1.1920928244535389e-07, -0.0001621246337890625, -7.43865966796875e-05, -0.0004558563232421875, -3.814697265625e-06, -7.98700493760407e-05, 0.0, -1.33514404296875e-05, -0.001476287841796875, -0.0001125335693359375, -0.00044272950617596507, 0.0, -0.0003032684326171875, -0.0031909942626953125, -0.00014495849609375, -1.9073486328125e-05, -0.0001811981201171875, -2.86102294921875e-05, -0.0009918212890625, 0.0, -0.0001621246337890625, -9.5367431640625e-05, -0.000156402587890625, -3.814697265625e-06, -7.974827167345211e-05, -8.344646857949556e-07, -0.0005818605422973633, 0.0, -4.410743713378906e-05, 0.0, -0.0003337860107421875, 0.0, -0.0002593994140625, -9.5367431640625e-05, -0.0020160675048828125, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001233816146850586, 0.0, -1.71661376953125e-05, -0.00012969970703125, -1.33514404296875e-05, -0.010710716247558594, -1.9073486328125e-06, -0.00064849853515625, 0.0, -0.00033092498779296875, 0.0, -6.532668339787051e-05, -2.741813204920618e-06, -0.0003299713134765625, -1.9073486328125e-05, -3.814697265625e-05, -0.0018310546875, -7.82012939453125e-05, -0.000705718994140625], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minions"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}}, {"_type": "For", "target": {"_type": "Name", "id": "i"}, "iter": {"_type": "Call", "func": {"_type": "Name", "id": "range"}, "args": [{"_type": "Num", "n": 0}, {"_type": "Template33"}]}, "body": [{"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "minions"}]}}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "minions"}, "hole1": "remove", "hole2": [{"_type": "Name", "id": "minion"}]}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Cleave", "hole1": 2, "hole3": "COMMON", "hole2": "WARRIOR"}], "hole0": "Cleave", "hole5": [{"_type": "arg", "arg": "game"}], "hole7": [{"_type": "FunctionDef", "name": "can_use", "body": [{"_type": "Return", "value": {"_type": "BoolOp", "values": [{"_type": "Template17", "hole0": {"_type": "Template25", "hole0": "super"}, "hole1": "can_use", "hole3": "game", "hole2": "player"}, {"_type": "Compare", "left": {"_type": "Call", "func": {"_type": "Name", "id": "len"}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "ops": [{"_type": "GtE"}], "comparators": [{"_type": "Template33"}]}], "op": {"_type": "And"}}}], "args": {"_type": "Template8"}}]}, "choice_history": [77, 148, "Cleave", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Cleave", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 82, 103, 205, 53, 133, "minions", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 87, 117, 25, 133, "i", "<EOS>", 20, 111, 25, 133, "range", "<EOS>", 206, 55, 138, "0", "<EOS>", 68, 219, 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "minions", "<EOS>", 97, 166, 25, 133, "minions", "<EOS>", "remove", "<EOS>", 205, 53, 133, "minion", "<EOS>", 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 217, 88, 118, "can_use", "<EOS>", 3, 217, 91, 140, 19, 107, 6, 206, 58, 153, 34, 171, "super", "<EOS>", "can_use", "<EOS>", "player", "<EOS>", "game", "<EOS>", 49, 114, 20, 111, 25, 133, "len", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 202, 10, 205, 68]}]}
{"index": 20, "beams": [{"inferred_code": "class Consecration(SpellCard):\n\n    def __init__(self):\n        super().__init__('Consecration', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score": -0.18938158756384382, "score_history": [-3.4332275390625e-05, -0.0059108734130859375, -1.0848042620636988e-05, -6.079665126890177e-06, -1.7752638086676598e-05, -0.00014138221740722656, -1.728534698486328e-05, 0.0, -0.000301361083984375, -1.1444091796875e-05, -1.0728836059570312e-05, -1.9073486328125e-06, -5.960462772236497e-07, -3.9934966480359435e-05, -0.002055763965472579, 0.0, -0.00025582313537597656, -3.814697265625e-06, -1.71661376953125e-05, -1.52587890625e-05, -6.115363794378936e-05, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -1.96695291379001e-05, -1.859664735093247e-05, -0.11275672912597656, -0.00018310546875, -0.020391464233398438, -0.000965118408203125, -8.7738037109375e-05, -1.1444091796875e-05, -0.007583022117614746, -1.52587890625e-05, -0.001026153564453125, -3.814697265625e-06, -0.0002231597900390625, -1.9073486328125e-06, -0.0009517669677734375, 0.0, -0.0030584335327148438, -1.9073486328125e-06, -0.000484466552734375, 0.0, -2.288818359375e-05, -2.6702880859375e-05, -0.0001010894775390625, -0.0011196136474609375, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-06, -9.429453348275274e-05, -1.9073486328125e-05, -0.0008175372495315969, -3.0517578125e-05, -0.0001659393310546875, -0.000423431396484375, -1.33514404296875e-05, -0.0006580352783203125, 0.0, -0.00019800655718427151, 0.0, -0.0005973577499389648, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0007228851318359375, -0.0002698894531931728, -4.768370445162873e-07, -0.000583648681640625, -4.57763671875e-05, -0.0004787445068359375, -6.67572021484375e-05, -0.00019896027515642345, -1.9073486328125e-06, -0.00125885009765625, -0.0002193450927734375, -0.000118255615234375, -3.24249267578125e-05, -0.0022907257080078125, -8.58306884765625e-05, -0.0067958831787109375, 0.0, -0.0050811767578125, 0.0, -0.0006411075592041016, -5.841255187988281e-06, -0.0010145902633666992, 0.0, -0.005749821662902832, 0.0, -5.7220458984375e-06, -0.000396728515625, -6.67572021484375e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.0108642578125e-05, -0.0008373255259357393, -3.576278118089249e-07, -0.00017547607421875, -3.24249267578125e-05, -0.000705718994140625, -4.1961669921875e-05, -0.00016784656327217817, -5.7220458984375e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Consecration", "hole1": 4, "hole3": "COMMON", "hole2": "PALADIN"}], "hole0": "Consecration", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Consecration", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Consecration", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"]}]}
{"index": 21, "beams": [{"inferred_code": "class CoreHound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Core Hound', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(9, 5)\n", "score": -0.01781519303028034, "score_history": [0.0, -7.62939453125e-06, -5.364403477869928e-06, -4.374922355054878e-05, -5.781524669146165e-05, -3.600306808948517e-05, -5.9604644775390625e-06, 0.0, 0.0, -0.0013561248779296875, -3.62396240234375e-05, -9.5367431640625e-06, -0.0002841949462890625, -3.24249267578125e-05, -0.012254714965820312, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -0.00026593252550810575, -2.682209014892578e-05, -4.982921382179484e-05, -0.000102996826171875, -2.288818359375e-05, -0.0017701382748782635, -1.7166108591482043e-05, -0.0001354217529296875, -5.14984130859375e-05, -0.0001506805419921875, -2.47955322265625e-05, -5.7220458984375e-06, -0.00032019606442190707, -2.7060508728027344e-05, -1.7881393432617188e-05, 0.0, -1.788138979463838e-05, 0.0, -0.0001201629638671875, -0.0002841949462890625, -5.7220458984375e-05, -4.768370445162873e-07, -0.00017724950157571584, -3.52856659446843e-05, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 9, "hole1": 5}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Core Hound"}, {"_type": "Num", "n": 7}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "CoreHound"}, "choice_history": [77, 145, "Core", "Hound", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Core", " ", "Hound", "<EOS>", 55, 138, "7", "<EOS>", 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "9", "<EOS>", "5", "<EOS>"]}]}
{"index": 22, "beams": [{"inferred_code": "class Corruption(SpellCard):\n\n    def __init__(self):\n        super().__init__('Corruption', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_effect(Effect(TurnStarted(player=EnemyPlayer()),\n            ActionTag(Kill(), SelfSelector())))\n", "score": -0.3321600939061682, "score_history": [-6.4849853515625e-05, -0.0019321441650390625, -1.645074735279195e-05, -3.576278118089249e-07, -4.887438990408555e-06, -2.8848648071289062e-05, 0.0, -1.9073486328125e-06, -4.38690185546875e-05, -9.5367431640625e-06, -2.09808349609375e-05, -0.0003643035888671875, -7.62939453125e-06, -0.0001811981201171875, -1.52587890625e-05, -1.33514404296875e-05, -5.960462772236497e-07, -2.0265579223632812e-06, -3.4332275390625e-05, -9.918212890625e-05, -0.00028228759765625, -6.29425048828125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.0002651214599609375, -5.7220458984375e-06, -0.002071380615234375, -0.10197639465332031, -3.4332275390625e-05, 0.0, -4.00543212890625e-05, 0.0, -0.0001201629638671875, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.0002288818359375, 0.0, -0.0003414154052734375, 0.0, -0.0035296676214784384, -1.728534698486328e-05, -2.288818359375e-05, 0.0, -5.280914774630219e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.000247955322265625, -1.9311904907226562e-05, -2.264974000354414e-06, -0.03226947784423828, -5.7220458984375e-06, -3.62396240234375e-05, -0.017175674438476562, -0.0004863739013671875, -1.9073486328125e-06, -0.0009746551513671875, 0.0, -6.127357482910156e-05, 0.0, -4.1365623474121094e-05, 0.0, -0.1225196123123169, 0.0, -1.71661376953125e-05, -0.0012569427490234375, -3.814697265625e-05, -9.5367431640625e-06, 0.0, -0.006119966506958008, -2.288818359375e-05, -7.62939453125e-06, -0.0006580352783203125, -0.00049591064453125, -3.62396240234375e-05, -3.814697265625e-06, -0.0027647018432617188, -0.0024172067642211914, 0.0, -0.00182342529296875, -7.62939453125e-06, 0.0, -0.0021477937698364258, 0.0, -0.0002346038818359375, 0.0, -0.006605267524719238, -3.814697265625e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0002040863037109375, -3.814697265625e-06, 0.0, -0.0007171630859375, -2.09808349609375e-05, 0.0, -0.0008449554443359375, -0.014806747436523438, -9.5367431640625e-06, -0.0036216771695762873, -4.9114227294921875e-05, -0.0007762908935546875, -3.814697265625e-06, -8.976459503173828e-05, -0.000492095947265625, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_effect", "hole2": [{"_type": "Call", "func": {"_type": "Name", "id": "Effect"}, "args": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "player", "value": {"_type": "Template25", "hole0": "EnemyPlayer"}}], "func": {"_type": "Name", "id": "TurnStarted"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template25", "hole0": "Kill"}, {"_type": "Template25", "hole0": "SelfSelector"}]}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Corruption"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "Corruption", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Corruption", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Corruption", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_effect", "<EOS>", 205, 48, 111, 25, 133, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Turn", "Started", "<EOS>", 212, 76, 195, "player", "<EOS>", 34, 171, "Enemy", "Player", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 63, 171, "Kill", "<EOS>", 63, 171, "Self", "Selector", "<EOS>"]}]}
{"index": 23, "beams": [{"inferred_code": "class DalaranMage(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dalaran Mage', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score": -0.011554002069374292, "score_history": [-1.71661376953125e-05, -0.0002841949462890625, -2.145764938177308e-06, -5.6028297876764555e-06, -1.8715683836489916e-05, -5.245208740234375e-06, -1.811981201171875e-05, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0008563995361328125, -5.7220458984375e-05, -1.5497195136049413e-06, -4.4226646423339844e-05, -1.9073486328125e-06, 0.0, -0.00022888151579536498, -5.745887756347656e-05, -0.0008838176727294922, 0.0, -0.00020265579223632812, 0.0, -4.1961669921875e-05, 0.0, -5.435933417174965e-05, 0.0, -7.62939453125e-06, -0.0011882781982421875, -1.33514404296875e-05, -2.193450927734375e-05, -1.3828206647303887e-05, -9.405611490365118e-05, 0.0, -0.00244903564453125, 0.0, -0.0049800872802734375], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 1, "hole1": 4, "hole3": {"_type": "Template34"}, "hole2": "spell_damage"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Dalaran Mage", "hole1": 3, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "DalaranMage"}, "choice_history": [77, 145, "Dalaran", "Mage", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Dalaran", " ", "Mage", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 38]}]}
{"index": 24, "beams": [{"inferred_code": "class DivineSpirit(SpellCard):\n\n    def __init__(self):\n        super().__init__('Divine Spirit', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.health)\n", "score": -0.12080250504455847, "score_history": [-7.43865966796875e-05, -0.014703750610351562, -9.834766387939453e-05, -4.51792984677013e-05, -5.245207830739673e-06, -0.0003034919500350952, -5.9604644775390625e-06, -6.115436553955078e-05, -2.09808349609375e-05, -0.0001277923583984375, -6.29425048828125e-05, -9.5367431640625e-06, -0.0001392364501953125, -3.814697265625e-05, -0.000560760498046875, -5.91278076171875e-05, -0.000152587890625, -0.0012590885162353516, -0.0016824015183374286, -1.788126610335894e-05, -8.463859558105469e-06, -3.62396240234375e-05, -1.9073486328125e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.34600830078125e-05, -2.09808349609375e-05, -0.0003409385681152344, -1.9073486328125e-06, -1.9073486328125e-05, -0.0006313323974609375, -1.33514404296875e-05, -2.09808349609375e-05, -4.1961669921875e-05, 0.0, -9.1552734375e-05, -0.0046539306640625, -8.20159912109375e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001316070556640625, 0.0, -0.0019168853759765625, -1.1920928244535389e-07, -0.0012698173522949219, -2.3841855067985307e-07, -0.00010192394256591797, 0.0, -7.569650188088417e-05, 0.0, -0.0001373291015625, -0.000152587890625, -5.340576171875e-05, -4.076957702636719e-05, -2.2649765014648438e-06, -0.053073883056640625, -2.288818359375e-05, -0.0020294189453125, -0.0003185272216796875, -6.67572021484375e-05, -7.05718994140625e-05, -9.5367431640625e-06, 0.0, -3.075599670410156e-05, -5.7220458984375e-06, -2.992151894432027e-05, 0.0, -0.01044774055480957, 0.0, 0.0, -0.0026416778564453125, -0.00016021728515625, -0.000156402587890625, 0.0, -0.0001850128173828125, 0.0, -0.000400543212890625, -5.7220458984375e-06, -5.2690491429530084e-05, -1.9073486328125e-06, -0.02165687084197998, -2.1457672119140625e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "increase_health", "hole2": [{"_type": "Attribute", "attr": "health", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Divine Spirit"}, {"_type": "Template33"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "DivineSpirit", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Divine", "Spirit", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Divine", " ", "Spirit", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"]}]}
{"index": 25, "beams": [{"inferred_code": "class DragonlingMechanic(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dragonling Mechanic', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Summon(\n            MechanicalDragonling()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score": -0.02499131187414605, "score_history": [-7.62939453125e-05, -1.1444091796875e-05, -7.152555099310121e-07, -9.012222290039062e-05, -0.0001147919538198039, -2.3813918232917786e-06, -9.655935173213948e-06, -2.9802317840221804e-06, -3.814697265625e-06, -0.0021343231201171875, -1.52587890625e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.33514404296875e-05, -0.0002841949462890625, -1.9073486328125e-06, 0.0, -2.7418097943154862e-06, -5.578940545092337e-05, -0.0009118318557739258, -4.208087921142578e-05, -0.0001697540283203125, -0.0002155303955078125, -0.00014495849609375, -0.0008392333984375, -6.866455078125e-05, -1.9073486328125e-05, -0.0006321668042801321, -6.5565000113565475e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.001184701919555664, -2.1457672119140625e-06, -1.9073486328125e-05, -0.0001735687255859375, -6.29425048828125e-05, -0.004157789051532745, -0.00037222274113446474, -2.288818359375e-05, -3.62396240234375e-05, -0.006783946882933378, -0.005708710290491581, -0.00014804698002990335, -9.5367431640625e-06, -1.9073486328125e-06, -6.0677466535707936e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -4.9471847887616605e-05, 0.0, -0.0001354217529296875, -7.43865966796875e-05, -1.9073486328125e-05, -1.6689160474925302e-05, -1.168244216387393e-05, -9.5367431640625e-06, -3.814689989667386e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 2, "hole1": 4}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template19", "hole0": "Summon", "hole1": {"_type": "Name", "id": "MechanicalDragonling"}}, {"_type": "Template25", "hole0": "PlayerSelector"}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Dragonling Mechanic"}, {"_type": "Template37"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "DragonlingMechanic"}, "choice_history": [77, 145, "Dragonling", "Mechanic", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dragonling", " ", "Mechanic", "<EOS>", 72, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 59, 155, "Summon", "<EOS>", 25, 133, "Mechanical", "Dragonling", "<EOS>", 63, 171, "Player", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "4", "<EOS>"]}]}
{"index": 26, "beams": [{"inferred_code": "class DrainLife(SpellCard):\n\n    def __init__(self):\n        super().__init__('Drain Life', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score": -0.3145560706165753, "score_history": [-0.0001220703125, -0.0029754638671875, -4.0531076592742465e-06, -0.0003122795606032014, -2.3841855067985307e-07, -3.8142388802953064e-06, -2.8848648071289062e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.00543212890625e-05, -1.33514404296875e-05, -4.76837158203125e-05, -0.000102996826171875, -1.52587890625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -9.5367431640625e-06, -2.932505594799295e-05, -5.447863441077061e-05, -2.741813204920618e-06, 0.0, -0.0017375946044921875, -1.33514404296875e-05, -9.5367431640625e-06, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005435943603515625, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.53131103515625e-05, -4.76837158203125e-05, -0.00102996826171875, -3.814697265625e-06, 0.0, -1.1444091796875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0002117156982421875, 0.0, -0.0006618499755859375, -1.9073486328125e-05, -0.003366231918334961, -3.4332275390625e-05, -1.3470649719238281e-05, -1.9073486328125e-06, -0.00010168435983359814, 0.0, -0.00014495849609375, -7.43865966796875e-05, -1.52587890625e-05, -3.814697265625e-06, -2.0265579223632812e-06, -0.26578712463378906, -4.00543212890625e-05, -3.62396240234375e-05, -2.09808349609375e-05, -4.57763671875e-05, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -4.57763671875e-05, 0.0, -3.612041473388672e-05, 0.0, -0.008667349815368652, 0.0, -0.000152587890625, -0.0013275146484375, -8.7738037109375e-05, -3.814697265625e-06, -1.9073486328125e-06, -3.4332275390625e-05, -0.009743690490722656, -1.1920928244535389e-07, -0.00026702880859375, -2.6702880859375e-05, -3.814697265625e-05, -7.62939453125e-06, -4.9829479394247755e-05, -1.9073486328125e-06, -0.001293182373046875, -4.9591064453125e-05, -1.52587890625e-05, -1.52587890625e-05, -0.000457763671875, -0.00017499923706054688, 0.0, -0.012108802795410156, -1.1920928244535389e-07, -8.58306884765625e-05, -1.1444091796875e-05, -0.000148773193359375, -5.7220458984375e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0010223385179415345, -0.0001850128173828125, -0.000225067138671875, -4.38690185546875e-05, -5.340576171875e-05, -1.1444091796875e-05, -6.687640416203067e-05, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Template38"}}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Drain Life"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "DrainLife", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Drain", "Life", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Drain", " ", "Life", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 42, "hero", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"]}]}
{"index": 27, "beams": [{"inferred_code": "class DreadInfernal(MinionCard):\n\n    def __init__(self):\n        super().__init__('Dread Infernal', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score": -0.031117642912988686, "score_history": [-1.52587890625e-05, -2.6702880859375e-05, -6.115249561844394e-05, -1.3470619705913123e-05, -1.311301275563892e-06, -0.0007617175579071045, -4.172325134277344e-06, -4.0531158447265625e-06, 0.0, -6.29425048828125e-05, -1.52587890625e-05, -5.53131103515625e-05, -1.9073486328125e-05, -5.7220458984375e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -5.960462772236497e-07, -0.00010573862527962774, -9.655952453613281e-06, -9.72747802734375e-05, -0.0001544952392578125, -1.33514404296875e-05, -6.604033842450008e-05, -6.318092346191406e-06, -2.288818359375e-05, 0.0, -3.814697265625e-06, 0.0, -4.589557647705078e-05, -2.6702880859375e-05, -0.0006427764892578125, -3.814697265625e-06, -0.0004482269287109375, -0.000606536865234375, -0.0022335052490234375, -4.9591064453125e-05, -0.002974390983581543, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-06, -0.0005956888198852539, -1.5497195136049413e-06, -0.0002269744873046875, 0.0, -3.24249267578125e-05, 0.0, -2.6702880859375e-05, -1.33514404296875e-05, -0.0007419586181640625, -0.0024566650390625, -7.62939453125e-05, -0.0006039142608642578, -6.79492904964718e-06, -0.0019371593371033669, -3.5524353734217584e-05, -4.1961669921875e-05, -0.0003032684326171875, -5.7220458984375e-06, -7.62939453125e-06, -0.0072689056396484375, -0.0005092620849609375, 0.0, -0.00345611572265625, -2.47955322265625e-05, -9.72747802734375e-05, -0.0001983642578125, 0.0, -0.0007610321044921875, -1.71661376953125e-05, -0.000541210116352886, -6.67572021484375e-05, 0.0, -0.00054168701171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -4.38690185546875e-05, -0.00092315673828125, -7.62939453125e-05, -0.00023278867593035102, -0.000505677133332938, -4.915738827548921e-06, -6.973525887588039e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 6, "hole1": 6}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "DEMON"}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template21", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template25", "hole0": "BothPlayer"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Dread Infernal"}, {"_type": "Num", "n": 6}, {"_type": "Attribute", "attr": "WARLOCK", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "DreadInfernal"}, "choice_history": [77, 145, "Dread", "Infernal", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Dread", " ", "Infernal", "<EOS>", 55, 138, "6", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 64, 213, 75, 164, "DEMON", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 212, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "6", "<EOS>", "6", "<EOS>"]}]}
{"index": 28, "beams": [{"inferred_code": "class ElvenArcher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Elven Archer', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score": -0.3974901418609349, "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.0728830375228426e-06, -2.3722410332993604e-05, -1.4305104514278355e-06, -3.568828105926514e-05, -2.622604142743512e-06, 0.0, -1.9073486328125e-06, -0.00016021728515625, -6.103515625e-05, -9.5367431640625e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0009746551513671875, -1.9073486328125e-06, -9.5367431640625e-06, -5.960462772236497e-07, -5.376307308324613e-05, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.000583648681640625, -2.86102294921875e-05, -4.1961669921875e-05, -0.37596702575683594, -0.0001277923583984375, -7.62939453125e-06, -0.00017094610666390508, -1.847726889536716e-05, -7.62939453125e-06, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -2.1457672119140625e-05, -1.1444091796875e-05, -9.5367431640625e-06, -0.0017147064208984375, -0.0001964569091796875, -0.0001866718230303377, -0.00010096536425407976, -0.003917068243026733, -2.2649765014648438e-06, -1.52587890625e-05, -0.00057220458984375, -1.9073486328125e-06, -3.814697265625e-06, -0.0009059906005859375, -1.71661376953125e-05, 0.0, -0.00141143798828125, -0.00287628173828125, -5.53131103515625e-05, -0.00021576881408691406, 0.0, -6.67572021484375e-05, 0.0, -8.27300755190663e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.0004425048828125, 0.0, -0.0042514801025390625, -7.62939453125e-06, -0.0010833740234375, -0.00040221214294433594, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -1.7642974853515625e-05, 0.0, -0.000286102294921875, -8.96453857421875e-05, -4.57763671875e-05, -1.7881368421512889e-06, -1.347058241663035e-05, -4.1723219510458875e-06, -1.4305104514278355e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 1, "hole1": 1}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template21", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template25", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template25", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Elven Archer"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "ElvenArcher"}, "choice_history": [77, 145, "Elven", "Archer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Elven", " ", "Archer", "<EOS>", 69, 65, 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "1", "<EOS>", "1", "<EOS>"]}]}
{"index": 29, "beams": [{"inferred_code": "class ExcessMana(SpellCard):\n\n    def __init__(self):\n        super().__init__('Excess Mana', 0, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.draw()\n", "score": -0.36760147848414704, "score_history": [-6.29425048828125e-05, -0.0064678192138671875, -4.887569048150908e-06, -2.4795384888420813e-05, -9.298318218498025e-06, -7.565785199403763e-05, -1.072883515007561e-05, 0.0, -1.1444091796875e-05, -0.0001373291015625, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.00078582763671875, -0.0004749298095703125, -5.53131103515625e-05, -6.29425048828125e-05, -1.645074735279195e-05, -0.00013411043619271368, -1.6927675460465252e-05, -2.682209014892578e-05, -0.0018339157104492188, -7.62939453125e-06, -3.611593274399638e-05, -7.939038187032565e-05, -0.0013885498046875, -1.33514404296875e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.00022518634796142578, 0.0, -0.0003119706525467336, 0.0, -0.0012531280517578125, -0.0013599395751953125, -9.5367431640625e-06, -0.00018715858459472656, 0.0, -0.0007154941558837891, 0.0, -0.003414285834878683, 0.0, -2.86102294921875e-05, -1.71661376953125e-05, -1.52587890625e-05, -0.0006275177001953125, -2.3841855067985307e-07, -0.3396272659301758, -2.47955322265625e-05, -0.005213737487792969, -0.00040435791015625, -0.000202178955078125, -0.0021158456802368164, -2.09808349609375e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Template38"}, "hole1": "draw"}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Excess Mana"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}, {"_type": "NameConstant", "value": true}]}}], "hole0": "ExcessMana", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Excess", "Mana", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 209, 56, 142, "Excess", " ", "Mana", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 64, 54, 134, "False", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 165, 42, "draw", "<EOS>"]}]}
{"index": 30, "beams": [{"inferred_code": "class Execute(SpellCard):\n\n    def __init__(self):\n        super().__init__('Execute', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY\n            .FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target, filter_func=lambda target: \n            target.health != target.calculate_max_health() and target.\n            spell_targetable())\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score": -0.40532946509772927, "score_history": [-9.72747802734375e-05, -0.0024471282958984375, -1.883488948806189e-05, -1.1920922133867862e-06, -1.6211917682085186e-05, -9.894371032714844e-06, -1.9073486328125e-06, 0.0, -3.0517578125e-05, -1.52587890625e-05, -0.0001354217529296875, -9.1552734375e-05, -1.33514404296875e-05, -2.6702880859375e-05, -2.288818359375e-05, -4.1961669921875e-05, -3.576278118089249e-07, -1.1920928244535389e-07, -0.000152587890625, -0.0002288818359375, -6.29425048828125e-05, -2.288818359375e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -0.10213696956634521, -9.5367431640625e-06, -1.1444091796875e-05, -0.00023651123046875, -6.4849853515625e-05, -0.0067577362060546875, -0.0002155303955078125, -0.008337020874023438, -0.000133514404296875, -2.86102294921875e-05, -8.20159912109375e-05, -3.814697265625e-06, -4.76837158203125e-05, -3.24249267578125e-05, -4.9591064453125e-05, -7.62939453125e-06, -2.09808349609375e-05, -1.1444091796875e-05, -0.000377655029296875, 0.0, -0.0001811981201171875, 0.0, -0.020127177238464355, -1.1444091796875e-05, -0.0008907318115234375, -9.72747802734375e-05, -0.0035839080810546875, -3.814697265625e-06, -0.00502777099609375, -7.82012939453125e-05, -0.07215213775634766, -0.0006866455078125, -0.0004177093505859375, 0.0, -0.01690673828125, -0.00074005126953125, -0.030544281005859375, -2.47955322265625e-05, -0.009573936462402344, -1.1444091796875e-05, -0.027181625366210938, -9.1552734375e-05, -0.000583648681640625, -1.9073486328125e-06, -0.00022137165069580078, -1.9073486328125e-06, -0.005624175071716309, -3.814697265625e-06, -3.814697265625e-06, -0.024832725524902344, -0.001049041748046875, -0.0012950897216796875, -0.0001430511474609375, -3.24249267578125e-05, -0.000316619873046875, -0.0001163482666015625, 0.0, -0.000286102294921875, 0.0, -0.028095245361328125, -1.9073486328125e-06, -0.005313873291015625, -0.0002956390380859375, -0.000476837158203125, -4.1961669921875e-05, -0.0001468658447265625, -7.62939453125e-06, -0.00628662109375, -9.5367431640625e-06, -0.007637977600097656, 0.0, -0.005451202392578125, -3.814697265625e-06, -7.998938963282853e-05, 0.0, -0.0001239776611328125, -0.000202178955078125, -0.0011806488037109375, -0.0014972686767578125, 0.0, -0.000522613525390625, -0.0001773834228515625, -7.2479248046875e-05, -0.0007762908935546875, -4.57763671875e-05, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -6.866455078125e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -0.001084446907043457, -1.9073486328125e-06, -0.0001506805419921875, -0.0003948211669921875, -4.57763671875e-05, -0.0002155303955078125, -3.814697265625e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "die", "hole2": [{"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_enemy_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}, {"_type": "keyword", "arg": "filter_func", "value": {"_type": "Lambda", "body": {"_type": "BoolOp", "values": [{"_type": "Compare", "left": {"_type": "Attribute", "attr": "health", "value": {"_type": "Name", "id": "target"}}, "ops": [{"_type": "NotEq"}], "comparators": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_max_health", "value": {"_type": "Name", "id": "target"}}}]}, {"_type": "Call", "func": {"_type": "Attribute", "attr": "spell_targetable", "value": {"_type": "Name", "id": "target"}}}], "op": {"_type": "And"}}, "args": {"_type": "Template13", "hole0": "target"}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Execute"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "WARRIOR", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Execute", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Execute", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Execute", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 76, 195, "filter_func", "<EOS>", 22, 128, 2, 150, "target", "<EOS>", 19, 107, 6, 206, 49, 114, 17, 104, 25, 133, "target", "<EOS>", "health", "<EOS>", 202, 16, 205, 48, 109, 17, 104, 25, 133, "target", "<EOS>", "calculate_max_health", "<EOS>", 48, 109, 17, 104, 25, 133, "target", "<EOS>", "spell_targetable", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 205, 53, 133, "self", "<EOS>"]}]}
{"index": 31, "beams": [{"inferred_code": "class FanOfKnives(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fan of Knives', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        player.draw()\n", "score": -0.07425319068337899, "score_history": [-1.9073486328125e-05, -0.0020751953125, -3.683499380713329e-05, -0.0009297076612710953, -0.00040999744669534266, -3.325883881188929e-05, -1.0223593562841415e-05, -7.271765298355604e-06, -6.556510470545618e-06, 0.0, -0.0010929107666015625, -1.9073486328125e-05, -2.3841855067985307e-07, -3.945806747651659e-05, -9.02414321899414e-05, -4.017353057861328e-05, -8.988380432128906e-05, -5.7220458984375e-06, -1.621240699023474e-05, -5.960462203802308e-06, -0.004536747932434082, 0.0, -0.000110626220703125, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.731240576598793e-05, 0.0, -8.58306884765625e-05, -8.58306884765625e-05, -2.47955322265625e-05, -5.543231964111328e-05, -6.914134246471804e-06, -0.038840293884277344, -0.001277923583984375, -0.001667022705078125, -0.001979827880859375, -0.0023174285888671875, -4.1961669921875e-05, -0.0026671886444091797, -3.933906555175781e-06, -0.0004634857177734375, -6.29425048828125e-05, -0.0004596710205078125, -1.52587890625e-05, -0.0001773834228515625, 0.0, -0.0010014772415161133, 0.0, -0.00028228759765625, 0.0, -9.5367431640625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.00011444091796875, -1.52587890625e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.00025177001953125, 0.0, -0.00041794776916503906, -2.0265579223632812e-06, -0.0006642264197580516, -9.5367431640625e-06, -1.9073486328125e-05, -8.58306884765625e-05, -0.003528594970703125, -6.29425048828125e-05, 0.0, -0.00020241428865119815, 0.0, -0.00017631053924560547, 0.0, -1.9073486328125e-06, -0.0002918243408203125, -1.1444091796875e-05, -3.24249267578125e-05, -2.86102294921875e-05, -5.340576171875e-05, -0.0001761902531143278, -1.0728830375228426e-06, -5.53131103515625e-05, -0.000457763671875, -0.0005893707275390625, -2.86102294921875e-05, -0.001217961311340332, -1.9073486328125e-06, -0.0023288726806640625, -0.000225067138671875, -5.7220458984375e-05, -0.0019665956497192383, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template34"}]}, {"_type": "Name", "id": "self"}]}]}, {"_type": "Template23", "hole0": {"_type": "Template38"}, "hole1": "draw"}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Fan of Knives", "hole1": 3, "hole3": "COMMON", "hole2": "ROGUE"}], "hole0": "FanOfKnives", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Fan", "Of", "Knives", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Fan", " ", "of", " ", "Knives", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>"]}]}
{"index": 32, "beams": [{"inferred_code": "class Fireball(SpellCard):\n\n    def __init__(self):\n        super().__init__('Fireball', 4, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            FREE, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score": -0.04123388402876316, "score_history": [-3.4332275390625e-05, -0.00823974609375, -0.00047529948642477393, -9.536738616588991e-07, -7.148250006139278e-06, -1.919269561767578e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001010894775390625, -3.814697265625e-06, -1.33514404296875e-05, -0.00017547607421875, -1.9073486328125e-05, -3.814697265625e-06, -1.1444091796875e-05, -3.0517578125e-05, -2.622603005875135e-06, -2.09808349609375e-05, -0.0008411407470703125, -3.814697265625e-06, -7.05718994140625e-05, -0.0001049041748046875, -3.814697265625e-06, -0.000881195068359375, 0.0, -0.0025025606155395508, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -0.0003032684326171875, -0.000370025634765625, -0.00183868408203125, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001392364501953125, 0.0, -0.00080108642578125, -7.62939453125e-06, -0.004381299018859863, -4.76837158203125e-05, -0.0027751922607421875, 0.0, -0.00016534299356862903, 0.0, -0.0006256103515625, -0.0002841949462890625, -4.1961669921875e-05, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0005178451538085938, -0.0008335113525390625, -0.000385284423828125, -0.0001201629638671875, -2.86102294921875e-05, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.0003948211669921875, -1.9073486328125e-06, -2.1219253540039062e-05, -3.814697265625e-06, -0.0004044771194458008, 0.0, -1.71661376953125e-05, -0.0001201629638671875, -0.0003528594970703125, -1.9073486328125e-06, -1.9073486328125e-06, -1.33514404296875e-05, -0.0001747608184814453, -1.9073486328125e-06, -0.0001049041748046875, -0.011837005615234375, -7.62939453125e-06, -0.00022337771952152252, -1.8596509107737802e-05, -1.33514404296875e-05, 0.0, -9.632110595703125e-05, -3.814697265625e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Fireball"}, {"_type": "Template37"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Fireball", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Fireball", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Fireball", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"]}]}
{"index": 33, "beams": [{"inferred_code": "class Flamestrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flamestrike', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(4), self)\n", "score": -0.040799254816874964, "score_history": [-5.7220458984375e-06, -0.00594329833984375, -9.989239333663136e-05, -4.649161837733118e-06, -3.2183670555241406e-06, -0.00015294551849365234, -7.748603820800781e-06, 0.0, -0.00034332275390625, -3.4332275390625e-05, -2.861018856492592e-06, 0.0, -7.152555099310121e-07, -6.783008575439453e-05, -0.0008776187896728516, -9.5367431640625e-06, -8.034706115722656e-05, -2.09808349609375e-05, -1.52587890625e-05, -4.1961669921875e-05, -9.298318218498025e-06, 0.0, -0.00012969970703125, -2.86102294921875e-05, -3.24249267578125e-05, -3.325939178466797e-05, -2.1815263608004898e-05, -0.01639842987060547, -3.24249267578125e-05, -0.0009918212890625, -0.0003604888916015625, -0.0004253387451171875, -9.5367431640625e-06, -0.0006279945373535156, -1.9073486328125e-06, -0.0004482269287109375, -0.0001697540283203125, -0.0002384185791015625, -1.9073486328125e-06, -0.000514984130859375, 0.0, -0.0016870498657226562, 0.0, -0.0005664825439453125, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -1.71661376953125e-05, -6.67572021484375e-05, 0.0, -7.62939453125e-06, 0.0, -7.43865966796875e-05, 0.0, -0.0003032684326171875, -3.62396240234375e-05, -0.0008478164672851562, -5.7220458984375e-06, -2.288818359375e-05, -0.0009822845458984375, -9.1552734375e-05, -0.0001392364501953125, 0.0, -9.47713851928711e-05, 0.0, -0.0005762577056884766, 0.0, -1.9073486328125e-06, -0.0005283355712890625, -1.71661376953125e-05, -3.814697265625e-06, -2.09808349609375e-05, -2.09808349609375e-05, -0.00030672550201416016, -1.9073486328125e-06, -0.0001583099365234375, -0.0057468414306640625, -5.14984130859375e-05, -1.9073486328125e-05, -0.00019073486328125, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template37"}]}, {"_type": "Name", "id": "self"}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Flamestrike", "hole1": 7, "hole3": "COMMON", "hole2": "MAGE"}], "hole0": "Flamestrike", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Flamestrike", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Flamestrike", "<EOS>", "7", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 72, 53, 133, "self", "<EOS>"]}]}
{"index": 34, "beams": [{"inferred_code": "class FlametongueTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flametongue Totem', 2, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 3, auras=[Aura(ChangeAttack(2), MinionSelector(\n            Adjacent()))])\n", "score": -0.23544464192195136, "score_history": [-1.9073486328125e-05, -0.00034332275390625, -0.0038273907266557217, -0.00032348473905585706, 0.0, -2.455897629261017e-05, -2.193450927734375e-05, -5.960462772236497e-07, 0.0, -0.000118255615234375, -2.47955322265625e-05, -3.24249267578125e-05, -0.0002040863037109375, -5.7220458984375e-06, -6.866455078125e-05, -2.09808349609375e-05, -1.9073486328125e-06, -2.5748875486897305e-05, -0.00014889029262121767, -2.741813204920618e-06, -3.814697265625e-06, -1.9073486328125e-05, -9.5367431640625e-06, -3.814697265625e-06, -3.814697265625e-05, -9.5367431640625e-06, -0.0001373291015625, 0.0, -0.002395153045654297, 0.0, -0.0003147125244140625, -3.4332275390625e-05, -0.0001087188720703125, -9.34600830078125e-05, -0.014571547508239746, -7.62939453125e-06, -4.3392181396484375e-05, -5.7220458984375e-06, -0.000493287923745811, -2.145764938177308e-06, -4.9591064453125e-05, -0.0053863525390625, -4.76837158203125e-05, -3.814689989667386e-06, -0.0004961451631970704, -0.00013637467054650187, -2.9802276912960224e-06, -0.0007369259838014841, -1.1920928244535389e-07, -0.0005779266357421875, -8.0108642578125e-05, -0.0026559908874332905, -1.454353241570061e-05, -8.20159912109375e-05, -0.15681838989257812, -1.71661376953125e-05, -0.0009179037879221141, -0.0035969018936157227, -5.7220458984375e-06, -0.017491459846496582, -1.3470649719238281e-05, -0.0017795562744140625, -0.0021495819091796875, -0.0004425048828125, -0.002039313316345215, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.012884378433227539, -3.576278118089249e-07, -1.71661376953125e-05, -0.003482818603515625], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 0, "hole1": 3, "hole3": {"_type": "Template24", "hole0": "Aura", "hole1": [{"_type": "Template21", "hole0": "ChangeAttack", "hole1": 2}, {"_type": "Template19", "hole0": "MinionSelector", "hole1": {"_type": "Name", "id": "Adjacent"}}], "hole2": [{"_type": "Template36_expr_seq"}]}, "hole2": "auras"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "TOTEM"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Flametongue Totem"}, {"_type": "Template33"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "FlametongueTotem"}, "choice_history": [77, 145, "Flametongue", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Flametongue", " ", "Totem", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 64, 212, 75, 164, "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "2", "<EOS>", 59, 155, "Minion", "Selector", "<EOS>", 25, 133, "Adjacent", "<EOS>", 205, 71]}]}
{"index": 35, "beams": [{"inferred_code": "class Frog(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frog', 0, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(0, 1, taunt=True)\n", "score": -0.04678967332654338, "score_history": [-0.0002651214599609375, -0.0001373291015625, -1.1920868928427808e-05, -1.2993811651540454e-05, -0.00011628866195678711, -1.215931297338102e-05, -1.9073486328125e-06, -3.814697265625e-06, -8.7738037109375e-05, -3.0517578125e-05, -3.62396240234375e-05, -0.00252532958984375, -1.9073486328125e-06, -0.0021457672119140625, -1.9073486328125e-06, -1.9073486328125e-06, -5.960462772236497e-07, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001837166491895914, -0.0002922595595009625, -0.0001163482666015625, -3.4332275390625e-05, -0.000133514404296875, -5.14984130859375e-05, -9.417533146915957e-05, -4.768370445162873e-07, -0.0023784637451171875, -3.4332275390625e-05, -3.814697265625e-05, -0.00024688243865966797, -8.0108642578125e-05, -0.003199458122253418, 0.0, -0.003567921230569482, -3.814697265625e-06, -0.01759052276611328, -0.00128936767578125, -7.82012939453125e-05, -9.202549699693918e-05, -2.7418097943154862e-06, -0.0011789909331128001, -3.576278118089249e-07, -0.010468006134033203, 0.0, -3.62396240234375e-05, -1.9073486328125e-06, -0.00017368792032357305, -9.655952453613281e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 0, "hole1": 1, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}], "hole4": "p", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Frog"}, {"_type": "Num", "n": 0}, {"_type": "Template27"}, {"_type": "Template26"}, {"_type": "NameConstant", "value": true}]}}], "hole0": "Frog"}, "choice_history": [77, 145, "Frog", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Frog", "<EOS>", 55, 138, "0", "<EOS>", 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "p", "<EOS>", 217, 93, 151, "0", "<EOS>", "1", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 36, "beams": [{"inferred_code": "class FrostNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Nova', 3, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Frozen()))\n", "score": -0.19442085250921082, "score_history": [-5.7220458984375e-06, -0.019680023193359375, -1.990795135498047e-05, -0.00023588736075907946, -1.6689286894688848e-06, -0.0004774034023284912, -2.110004425048828e-05, -2.1457672119140625e-06, -0.00017547607421875, -8.96453857421875e-05, -4.76837158203125e-05, -9.000300633488223e-05, -2.9563849238911644e-05, -2.0027138816658407e-05, -2.0265579223632812e-06, -0.00017331518756691366, -1.1801719665527344e-05, -0.0001277923583984375, 0.0, -9.167194366455078e-05, -3.814697265625e-06, -0.000133514404296875, -5.7220458984375e-06, -6.914137884450611e-06, 0.0, -0.0001659393310546875, -5.91278076171875e-05, -0.0001087188720703125, -1.7642974853515625e-05, -1.6689286894688848e-06, -0.006812095642089844, -3.0517578125e-05, -0.000148773193359375, -0.0001506805419921875, -9.5367431640625e-05, -7.62939453125e-06, -0.0038232803344726562, -1.9073486328125e-06, -0.026693344116210938, -0.0002193450927734375, -0.0023212432861328125, -1.52587890625e-05, -0.00049591064453125, -3.814697265625e-06, -0.0021905899047851562, 0.0, -0.00023496150970458984, -3.6597251892089844e-05, -0.0015993118286132812, 0.0, -0.000102996826171875, -0.0002994537353515625, -0.000396728515625, -0.0002155303955078125, -1.9073486328125e-06, -0.00012230873107910156, 0.0, -0.11987018585205078, 0.0, -8.0108642578125e-05, -0.0004901885986328125, -0.0003032684326171875, -0.0003243684768676758, -2.7179718017578125e-05, -0.0002727508544921875, -7.62939453125e-06, -0.005219689570367336, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "add_buff", "hole2": [{"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Frost Nova", "hole1": 3, "hole3": "COMMON", "hole2": "MAGE"}], "hole0": "FrostNova", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Frost", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Frost", " ", "Nova", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"]}]}
{"index": 37, "beams": [{"inferred_code": "class FrostShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frost Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.5453993641374097, "score_history": [-0.0001239776611328125, -0.000476837158203125, -1.7881377516459906e-06, -0.00012182447244413197, -2.0265410057618283e-05, -0.00010382616892457008, -1.5258787243510596e-05, -2.9802276912960224e-06, -1.9073486328125e-06, -0.0001125335693359375, -3.814697265625e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.52587890625e-05, -1.33514404296875e-05, -2.86102294921875e-05, -4.9591064453125e-05, -7.390960945485858e-06, -4.9114227294921875e-05, -3.8146954466355965e-06, -2.3841855067985307e-07, -2.09808349609375e-05, -6.67572021484375e-05, -0.000247955322265625, -2.86102294921875e-05, -3.814697265625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0025777816772460938, 0.0, 0.0, 0.0, -9.5367431640625e-06, -0.0002480745315551758, -3.814697265625e-06, -0.0009632110595703125, -3.814697265625e-06, 0.0, -8.392333984375e-05, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.00031280517578125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0032062530517578125, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -0.0001398324966430664, 0.0, -0.00019073486328125, -9.918212890625e-05, -0.0001659393310546875, -3.0517578125e-05, -1.9073486328125e-06, -0.11352348327636719, -9.72747802734375e-05, -4.1961669921875e-05, -2.09808349609375e-05, -0.00012969970703125, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -0.00013172626495361328, 0.0, -0.0014696121215820312, 0.0, -1.9073486328125e-06, -0.10377788543701172, -2.86102294921875e-05, -1.1444091796875e-05, -3.0517578125e-05, -1.1444091796875e-05, -0.00012457369302865118, -2.2649765014648438e-06, -0.0013141632080078125, -0.00058746337890625, -0.0001087188720703125, -1.71661376953125e-05, -0.0012273788452148438, 0.0, -0.004620552062988281, -0.0003147125244140625, -0.0057582855224609375, 0.0, -2.288818359375e-05, 0.0, -0.003949165344238281, -1.9073486328125e-05, -5.7220458984375e-06, 0.0, -0.2936134338378906, 0.0, -0.0002574920654296875, -0.000946044921875, -0.0005588531494140625, -0.0020160675048828125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0005897970404475927, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template34"}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_buff", "hole2": [{"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Frost Shock"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "FrostShock", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Frost", "Shock", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frost", " ", "Shock", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 69, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"]}]}
{"index": 38, "beams": [{"inferred_code": "class Frostbolt(SpellCard):\n\n    def __init__(self):\n        super().__init__('Frostbolt', 2, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        self.target.add_buff(Buff(Frozen()))\n", "score": -0.31934412547747115, "score_history": [-8.20159912109375e-05, -0.001041412353515625, -2.9802276912960224e-06, -3.576277322281385e-06, -5.051051266491413e-05, -9.894352842820808e-06, -9.655952453613281e-06, -1.9073486328125e-06, -3.62396240234375e-05, -3.814697265625e-06, -3.0517578125e-05, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -2.9802276912960224e-06, -1.33514404296875e-05, -1.71661376953125e-05, -5.340576171875e-05, -3.24249267578125e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.0005419254302978516, -1.1444091796875e-05, -4.57763671875e-05, -0.18560218811035156, -0.000164031982421875, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -9.5367431640625e-06, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -0.0002231597900390625, 0.0, -0.000774383544921875, -3.814697265625e-06, -0.03876018524169922, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -5.495547520695254e-05, 0.0, -0.000690460205078125, -0.0001468658447265625, -3.24249267578125e-05, -1.33514404296875e-05, -2.3841855067985307e-07, -0.007273674011230469, -5.53131103515625e-05, -6.4849853515625e-05, -2.288818359375e-05, -4.9591064453125e-05, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.0001220703125, -1.1444091796875e-05, -8.58306884765625e-05, 0.0, -0.0028181076049804688, 0.0, -3.814697265625e-06, -0.0029659271240234375, -6.866455078125e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001506805419921875, -0.0012929439544677734, -2.3841855067985307e-07, -3.0517578125e-05, -0.04815101623535156, -6.103515625e-05, -8.0108642578125e-05, -0.001331329345703125, -9.5367431640625e-06, -8.0108642578125e-05, -3.814697265625e-05, -0.00054931640625, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.000835418701171875, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.018945813179016113, 0.0, -0.0019283294677734375, -0.000782012939453125, -0.0009479522705078125, -0.0011920928955078125, -1.9073486328125e-06, -3.814697265625e-06, -3.62396240234375e-05, -0.000453826563898474, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template35"}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "add_buff", "hole2": [{"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Frozen"}}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Frostbolt"}, {"_type": "Template33"}, {"_type": "Attribute", "attr": "MAGE", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "Frostbolt", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Frostbolt", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Frostbolt", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "MAGE", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 205, 59, 155, "Buff", "<EOS>", 25, 133, "Frozen", "<EOS>"]}]}
{"index": 39, "beams": [{"inferred_code": "class FrostwolfGrunt(MinionCard):\n\n    def __init__(self):\n        super().__init__('Frostwolf Grunt', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "score": -0.023406061306758374, "score_history": [-0.00011444091796875, -0.00026702880859375, -1.168244216387393e-05, -7.915226888144389e-05, -2.7418097943154862e-06, -2.4884939193725586e-06, -4.52994936495088e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000255584716796875, -9.34600830078125e-05, -1.7881377516459906e-06, -4.482269287109375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.731280594365671e-05, -1.3470649719238281e-05, -0.00027322748792357743, 0.0, -0.00023031234741210938, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.0001476997567806393, 0.0, -7.62939453125e-06, -0.001312255859375, -7.62939453125e-06, -2.622600959512056e-06, -5.745887756347656e-05, -3.0210649129003286e-05, -5.841255187988281e-06, -0.01988077163696289, 0.0, -6.866455078125e-05, -9.5367431640625e-06, -0.00042247772216796875, -2.3841855067985307e-07], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 2, "hole1": 2, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Frostwolf Grunt", "hole1": 2, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "FrostwolfGrunt"}, "choice_history": [77, 145, "Frostwolf", "Grunt", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Frostwolf", " ", "Grunt", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 40, "beams": [{"inferred_code": "class GoldshireFootman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goldshire Footman', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 2, taunt=True)\n", "score": -0.015479620672266492, "score_history": [-9.5367431640625e-05, -7.05718994140625e-05, -2.7418097943154862e-06, -1.2159294783486985e-05, -4.6491513785440475e-06, -6.377696990966797e-06, -4.649158654501662e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.000240325927734375, -0.0001087188720703125, -2.3841830625315197e-06, -4.0411949157714844e-05, -1.9073486328125e-06, 0.0, -0.0002025376888923347, 0.0, -0.00017213821411132812, 0.0, -0.00020813941955566406, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00025164958788082004, 0.0, -1.33514404296875e-05, -0.0015430450439453125, -5.7220458984375e-06, -4.649158654501662e-06, -4.589557647705078e-05, -8.821146911941469e-05, -2.0265579223632812e-06, -0.011797666549682617, 0.0, -6.866455078125e-05, -7.62939453125e-06, -0.00046443939208984375, -2.3841855067985307e-07], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 1, "hole1": 2, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Goldshire Footman", "hole1": 1, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "GoldshireFootman"}, "choice_history": [77, 145, "Goldshire", "Footman", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Goldshire", " ", "Footman", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "2", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 41, "beams": [{"inferred_code": "class GrimscaleOracle(MinionCard):\n\n    def __init__(self):\n        super().__init__('Grimscale Oracle', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 1, auras=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score": -0.03422876002507991, "score_history": [-3.814697265625e-05, -3.0517578125e-05, -3.3378546504536644e-06, -4.41074053014745e-06, -2.1576648578047752e-05, -1.8537044525146484e-05, -5.841255187988281e-06, -2.2649765014648438e-06, 0.0, -0.002895355224609375, -1.71661376953125e-05, -9.5367431640625e-06, -9.34600830078125e-05, -3.814697265625e-06, -2.288818359375e-05, -6.103515625e-05, -3.814697265625e-06, -1.9073304429184645e-05, -0.00012361998960841447, -3.933906555175781e-06, -1.1920928244535389e-07, -4.38690185546875e-05, -9.5367431640625e-06, -2.47955322265625e-05, -2.47955322265625e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.006097674369812012, -1.5735626220703125e-05, -0.0002461671829223633, -9.5367431640625e-06, -4.4941734813619405e-05, 0.0, -0.0002117156982421875, -0.0008087158203125, -7.62939453125e-06, -2.0503786799963564e-05, -1.6093232261482626e-05, -3.2186485441343393e-06, -2.0265579223632812e-06, -0.004113832488656044, -1.52587890625e-05, -0.000457763671875, -7.82012939453125e-05, -0.001257540425285697, -0.0001174193384940736, -0.000507354736328125, -0.0025730133056640625, -9.5367431640625e-06, -0.0006589213153347373, -0.0005900859832763672, -9.1552734375e-05, -0.004690813831984997, -3.6597251892089844e-05, -0.0003948211669921875, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.000400543212890625, -0.0001506805419921875, -2.0265579223632812e-06, -5.53131103515625e-05, -0.0014142990112304688, -0.000110626220703125, -5.340576171875e-05, -5.7220458984375e-06, -5.7816483604256064e-05, -0.00025331974029541016, 0.0, -0.000209808349609375, -2.09808349609375e-05, -5.7220458984375e-06, -8.7738037109375e-05, 0.0, -0.000396728515625, -3.576278118089249e-07, -0.002974987030029297, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -0.000728607177734375, -1.33514404296875e-05, 0.0, -7.62939453125e-06, -0.0004119873046875], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 1, "hole1": 1, "hole3": {"_type": "Template24", "hole0": "Aura", "hole1": [{"_type": "Template21", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Call", "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "attr": "MURLOC", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}, {"_type": "Template25", "hole0": "BothPlayer"}]}], "hole2": [{"_type": "Template36_expr_seq"}]}, "hole2": "auras"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "MURLOC"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Grimscale Oracle"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "GrimscaleOracle"}, "choice_history": [77, 145, "Grimscale", "Oracle", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Grimscale", " ", "Oracle", "<EOS>", 69, 65, 64, 212, 75, 164, "MURLOC", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "1", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 48, 111, 25, 133, "Minion", "Selector", "<EOS>", 206, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 63, 171, "Both", "Player", "<EOS>", 205, 71]}]}
{"index": 42, "beams": [{"inferred_code": "class GuardianOfKings(MinionCard):\n\n    def __init__(self):\n        super().__init__('Guardian of Kings', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Heal(6), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 6)\n", "score": -0.0716157369256436, "score_history": [-7.62939453125e-06, -1.71661376953125e-05, -0.0004254914238117635, -0.0003094504645559937, -0.001833100337535143, -0.00040595707832835615, -2.968311309814453e-05, -3.3974134566960856e-05, -4.053113570989808e-06, -1.9073486328125e-06, -0.0001277923583984375, -1.52587890625e-05, -1.33514404296875e-05, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, 0.0, -8.344646857949556e-07, -0.00023912836331874132, -0.0011246204376220703, -3.24249267578125e-05, -6.687641143798828e-05, -1.33514404296875e-05, -0.0004177093505859375, -7.62939453125e-06, -2.6941148462356068e-05, -6.198702612891793e-05, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.1563301086425781e-05, -5.7220458984375e-06, -0.0006846182513982058, -1.1920928244535389e-07, -0.000164031982421875, -0.015350341796875, -3.814697265625e-06, 0.0, -0.0042438507080078125, -4.768370445162873e-07, -0.0001049041748046875, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001392364501953125, -0.00106048583984375, -2.47955322265625e-05, -0.010972794145345688, -0.0004634179931599647, -0.0319167859852314, -5.7220440794480965e-06, -7.62939453125e-05, -9.918212890625e-05, -0.00040404757601208985, -0.00012981891632080078, 0.0, -1.52587890625e-05, 0.0, -4.768371127283899e-06, 0.0, -0.0001468658447265625, -0.0001010894775390625, -2.09808349609375e-05, -2.5510627892799675e-05, -1.0013547580456361e-05, -0.00010216236114501953, -7.748586540401448e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 5, "hole1": 6}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template21", "hole0": "Heal", "hole1": 6}, {"_type": "Template25", "hole0": "HeroSelector"}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Guardian of Kings"}, {"_type": "Num", "n": 7}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "GuardianOfKings"}, "choice_history": [77, 145, "Guardian", "Of", "Kings", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Guardian", " ", "of", " ", "Kings", "<EOS>", 55, 138, "7", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "6", "<EOS>", 63, 171, "Hero", "Selector", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "5", "<EOS>", "6", "<EOS>"]}]}
{"index": 43, "beams": [{"inferred_code": "class GurubashiBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gurubashi Berserker', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 7, effects=[Effect(CharacterDamaged(condition=\n            MinionIsTarget()), ActionTag(Give(ChangeAttack(3)),\n            SelfSelector()))])\n", "score": -0.1939973597352136, "score_history": [-1.9073486328125e-06, -8.58306884765625e-05, -0.00030012393835932016, -0.0004322851309552789, -1.1920928244535389e-07, -4.175305366516113e-05, -4.0531158447265625e-06, -1.5497207641601562e-05, 0.0, -0.0001430511474609375, -1.52587890625e-05, -2.1457441107486375e-05, -5.567072003032081e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0007714032544754446, -2.3841855067985307e-07, -0.0005567073822021484, 0.0, -0.00012362001871224493, 0.0, -8.392333984375e-05, 0.0, -3.3020973205566406e-05, 0.0, -1.9073486328125e-06, -0.000263214111328125, -1.52587890625e-05, -5.483612312673358e-06, -1.5497195136049413e-06, -0.00041738696745596826, -1.5497195136049413e-06, -0.00011074542999267578, 0.0, -2.47955322265625e-05, -0.000102996826171875, -0.0003056115529034287, -1.3351424058782868e-05, -0.00066375732421875, -0.0001163482666015625, -0.0003261566162109375, -3.814697265625e-06, -1.9073486328125e-06, -0.000888943497557193, -0.03558504581451416, 0.0, -0.00067138671875, -1.9073486328125e-06, -1.9073486328125e-06, -0.1080479621887207, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, -0.00037568609695881605, -0.0009534650598652661, -0.014840282499790192, -0.0001302877499256283, -1.33514404296875e-05, -2.6702880859375e-05, 0.0, 0.0, -0.0002651214599609375, -1.406666160619352e-05, 0.0, -0.0001125335693359375, -0.000446319580078125, -0.0014858245849609375, -0.0001995563507080078, -1.9311904907226562e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0016075371531769633, -0.00040364230517297983, -1.9073486328125e-06, -3.814697265625e-06, -0.021381378173828125, -0.0009212493896484375, -9.5367431640625e-06, -0.00029405896202661097, -5.14984130859375e-05, 0.0, -3.24249267578125e-05, -8.7738037109375e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 2, "hole1": 7, "hole3": {"_type": "Template24", "hole0": "Effect", "hole1": [{"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "Template25", "hole0": "MinionIsTarget"}}], "func": {"_type": "Name", "id": "CharacterDamaged"}}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template19", "hole0": "Give", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Template35"}]}, {"_type": "Template25", "hole0": "SelfSelector"}]}], "hole2": [{"_type": "Template36_expr_seq"}]}, "hole2": "effects"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Gurubashi Berserker", "hole1": 5, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "GurubashiBerserker"}, "choice_history": [77, 145, "Gurubashi", "Berserker", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Gurubashi", " ", "Berserker", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 48, 110, 25, 133, "Character", "Damaged", "<EOS>", 212, 76, 195, "condition", "<EOS>", 34, 171, "Minion", "Is", "Target", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 59, 157, "Give", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 70, 63, 171, "Self", "Selector", "<EOS>", 205, 71]}]}
{"index": 44, "beams": [{"inferred_code": "class HammerOfWrath(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hammer of Wrath', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        player.draw()\n        player.draw()\n        player.draw()\n", "score": -0.49479543502999945, "score_history": [-4.9591064453125e-05, -0.00292205810546875, -0.00026842381339520216, -0.0005956750828772783, -0.0008152057998813689, -5.722038622479886e-06, -1.1920565157197416e-07, -4.291534423828125e-06, 0.0, 0.0, -2.47955322265625e-05, -5.7220458984375e-06, -7.82012939453125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -4.1961669921875e-05, -3.814697265625e-06, -4.8874615458771586e-05, -0.00010311603546142578, -0.0001635475200600922, -3.4332275390625e-05, -1.192092622659402e-05, -3.814697265625e-06, -0.000392913818359375, -3.814697265625e-06, -1.9073486328125e-06, -8.0108642578125e-05, -9.5367431640625e-06, -7.510185241699219e-05, -9.5367431640625e-06, -0.00644075870513916, 0.0, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.000194549560546875, -0.000209808349609375, -0.0007038116455078125, -1.9073486328125e-06, 0.0, -0.00014495849609375, 0.0, -7.82012939453125e-05, -5.53131103515625e-05, -4.38690185546875e-05, -7.62939453125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -0.0005741119384765625, -2.3841855067985307e-07, -0.000400543212890625, -4.398822784423828e-05, -0.00014221668243408203, 0.0, -0.00031411528470925987, 0.0, -0.000621795654296875, -0.000247955322265625, -5.53131103515625e-05, -4.57763671875e-05, -3.576272320060525e-06, -0.3759012222290039, -0.0041484832763671875, -1.9073486328125e-05, -0.001010894775390625, -0.00138092041015625, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.00011467933654785156, 0.0, -0.007508635520935059, 0.0, -5.7220458984375e-06, -0.00136566162109375, -3.4332275390625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000110626220703125, -0.00033736228942871094, 0.0, -4.00543212890625e-05, -0.06702899932861328, -0.000274658203125, -3.814697265625e-06, -0.002549886703491211, 0.0, -4.9591064453125e-05, -0.00569915771484375, -8.20159912109375e-05, -0.0027658939361572266, 0.0, -8.0108642578125e-05, -0.0014705657958984375, -3.62396240234375e-05, -0.0009775161743164062, 0.0, -3.62396240234375e-05, -0.004604339599609375, -3.4332275390625e-05, -0.0008546113967895508, -2.0265579223632812e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template35"}]}, {"_type": "Name", "id": "self"}]}, {"_type": "Template23", "hole0": {"_type": "Template38"}, "hole1": "draw"}, {"_type": "Template23", "hole0": {"_type": "Template38"}, "hole1": "draw"}, {"_type": "Template23", "hole0": {"_type": "Template38"}, "hole1": "draw"}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Hammer of Wrath"}, {"_type": "Template37"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "HammerOfWrath", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Hammer", "Of", "Wrath", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hammer", " ", "of", " ", "Wrath", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 70, 53, 133, "self", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>", 97, 165, 42, "draw", "<EOS>"]}]}
{"index": 45, "beams": [{"inferred_code": "class HandOfProtection(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hand of Protection', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.divine_shield = True\n", "score": -0.1534924940932001, "score_history": [-7.05718994140625e-05, -0.0014781951904296875, -1.4543427823809907e-05, -0.0032003929372876883, -0.0010043279035016894, -0.0007169060409069061, -3.445148468017578e-05, -1.192092622659402e-05, -2.9802317840221804e-06, -3.814697265625e-06, -7.82012939453125e-05, -5.7220458984375e-06, -2.6702880859375e-05, -6.103515625e-05, -7.62939453125e-06, -0.00069427490234375, -5.53131103515625e-05, -2.09808349609375e-05, -7.426462980220094e-05, -4.398822784423828e-05, -0.0009342432022094727, -0.00542759895324707, -0.0021866559982299805, -1.52587890625e-05, -2.288818359375e-05, -1.33514404296875e-05, -1.1444091796875e-05, -5.14984130859375e-05, -5.7220458984375e-06, -4.673004150390625e-05, -1.52587890625e-05, -0.0008461472461931407, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, 0.0, -0.000148773193359375, -9.5367431640625e-06, -0.00093841552734375, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000179290771484375, -8.96453857421875e-05, -2.47955322265625e-05, 0.0, -0.0001964569091796875, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.00022125244140625, -5.960462772236497e-07, -0.0015213489532470703, 0.0, -2.4557111828471534e-05, 0.0, -0.0005372551968321204, 0.0, -0.00018310546875, -4.9591064453125e-05, -1.9073486328125e-05, -0.01447141170501709, -6.079655122448457e-06, -0.03455924987792969, -0.0020656585693359375, -8.96453857421875e-05, -0.00060272216796875, -4.1961669921875e-05, -0.00096893310546875, -0.0001583099365234375, -0.000110626220703125, 0.0, -0.027965545654296875, 0.0, -6.198882329044864e-05, -7.867813110351562e-06, -0.039734598249197006, 0.0, -0.01013648509979248, 0.0, -0.000362396240234375, -0.0001468658447265625, -0.0004388093948364258, -3.933904736186378e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "divine_shield", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}], "value": {"_type": "NameConstant", "value": true}}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Hand of Protection"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "HandOfProtection", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Hand", "Of", "Protection", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hand", " ", "of", " ", "Protection", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 82, 103, 205, 45, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "divine_shield", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 46, "beams": [{"inferred_code": "class HealingTotem(MinionCard):\n\n    def __init__(self):\n        super().__init__('Healing Totem', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE, True, MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(0, 2, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            MinionSelector(condition=Null)))])\n", "score": -0.06777808727473911, "score_history": [-2.86102294921875e-05, -0.0002899169921875, -7.629365427419543e-06, -4.386829095892608e-05, 0.0, -1.2993812561035156e-05, -1.71661376953125e-05, 0.0, -1.9073486328125e-06, -6.67572021484375e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.00051116943359375, -0.0018672943115234375, -0.0006008148193359375, -9.5367431640625e-06, -1.764281842042692e-05, -0.0002496209926903248, -5.006789251638111e-06, -1.1920928244535389e-07, -3.4332275390625e-05, -1.1444091796875e-05, -4.57763671875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.0002593994140625, 0.0, -0.000545501708984375, 0.0, -1.52587890625e-05, 0.0, -6.29425048828125e-05, -0.0005571842193603516, 0.0, -0.0011348724365234375, -8.20159912109375e-05, -0.00015842914581298828, 0.0, -4.00543212890625e-05, -3.814697265625e-06, -0.000812530517578125, -1.71661376953125e-05, -0.000331878662109375, 0.0, -0.0016002655029296875, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.012783050537109375, -9.1552734375e-05, -2.7418097943154862e-06, -2.622600959512056e-06, -0.00018082447058986872, 0.0, -0.00046074390411376953, 0.0, -4.1961669921875e-05, -7.62939453125e-05, -0.00010132789611816406, 0.0, -2.09808349609375e-05, -0.001800537109375, -5.7220458984375e-06, -0.0004495382308959961, -0.00023281574249267578, -1.1444091796875e-05, -9.5367431640625e-06, -3.4332275390625e-05, -1.9073486328125e-06, 0.0, -0.0002307891845703125, -6.115436553955078e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.000701904296875, -5.7220458984375e-06, -0.01199030876159668, -8.392333984375e-05, -0.0037002533208578825, 0.0, -0.000164031982421875, -8.392333984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.001155853271484375, -5.91278076171875e-05, 0.0, -0.001056671142578125, -5.7220458984375e-06, -1.1444091796875e-05, -0.012441754341125488, 0.0, -0.0005702972412109375, -0.0077381134033203125, -0.0006349086761474609, 0.0, -5.14984130859375e-05, -0.000885009765625], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 0, "hole1": 2, "hole3": {"_type": "Template24", "hole0": "Effect", "hole1": [{"_type": "Template25", "hole0": "TurnEnded"}, {"_type": "Call", "func": {"_type": "Name", "id": "ActionTag"}, "args": [{"_type": "Template21", "hole0": "Heal", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "condition", "value": {"_type": "NameConstant", "value": "Null"}}], "func": {"_type": "Name", "id": "MinionSelector"}}]}], "hole2": [{"_type": "Template36_expr_seq"}]}, "hole2": "effects"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Healing Totem"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}, {"_type": "NameConstant", "value": true}, {"_type": "Attribute", "attr": "TOTEM", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}}], "hole0": "HealingTotem"}, "choice_history": [77, 145, "Healing", "Totem", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 111, 30, 210, 56, 142, "Healing", " ", "Totem", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 54, 134, "False", "<EOS>", 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "0", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 33, 168, "Effect", "<EOS>", 206, 63, 171, "Turn", "Ended", "<EOS>", 48, 111, 25, 133, "Action", "Tag", "<EOS>", 206, 60, 163, "Heal", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Minion", "Selector", "<EOS>", 212, 76, 195, "condition", "<EOS>", 26, 135, "Null", "<EOS>", 205, 71]}]}
{"index": 47, "beams": [{"inferred_code": "class HealingTouch(SpellCard):\n\n    def __init__(self):\n        super().__init__('Healing Touch', 3, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(8), self)\n", "score": -0.078279035564087, "score_history": [-0.0001583099365234375, -0.010091781616210938, -5.960462772236497e-07, -0.00014566341997124255, -1.9788545614574105e-05, -1.4781819118070416e-05, -2.2649763195659034e-05, -1.9073486328125e-06, -3.814697265625e-06, -0.0001125335693359375, -1.33514404296875e-05, -6.4849853515625e-05, -0.000762939453125, -0.000171661376953125, -0.0001125335693359375, -1.71661376953125e-05, -2.86102294921875e-05, -2.777537883957848e-05, -9.64401478995569e-05, -7.033342626527883e-06, -4.00543212890625e-05, -0.0006866455078125, -3.814697265625e-06, -1.9073486328125e-06, -5.91278076171875e-05, 0.0, -0.0001220703125, -1.9073486328125e-06, -9.274481271859258e-05, -3.814697265625e-06, -1.52587890625e-05, 0.0, -0.000240325927734375, -4.9591064453125e-05, -5.340576171875e-05, -0.0015964508056640625, -5.7220458984375e-06, -5.7220458984375e-06, -5.14984130859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000431060791015625, 0.0, -0.0004100799560546875, -1.9073486328125e-06, -0.002705693244934082, -7.43865966796875e-05, -0.0005799531936645508, 0.0, -0.0002567753253970295, 0.0, -0.0007610321044921875, -0.0001125335693359375, -5.340576171875e-05, -3.933906555175781e-06, -1.1920928244535389e-07, -0.038852691650390625, -0.000713348388671875, -4.57763671875e-05, -0.000141143798828125, -0.0005893707275390625, -7.62939453125e-06, -9.72747802734375e-05, 0.0, -0.0001430511474609375, -1.9073486328125e-06, -0.00029873845051042736, -7.62939453125e-06, -0.010226011276245117, -3.933906555175781e-06, -4.1961669921875e-05, -0.0002269744873046875, -5.91278076171875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.62396240234375e-05, -0.0005588529165834188, -3.0517578125e-05, -1.9073486328125e-05, -0.0026607513427734375, -0.000133514404296875, -9.727314318297431e-05, -0.0008091052295640111, -4.00543212890625e-05, -3.814697265625e-06, -0.0020809173583984375, -7.62939453125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template38"}}, "args": [{"_type": "Num", "n": 8}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Healing Touch"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "DRUID", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "HealingTouch", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Healing", "Touch", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Healing", " ", "Touch", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "8", "<EOS>", 53, 133, "self", "<EOS>"]}]}
{"index": 48, "beams": [{"inferred_code": "class Hex(SpellCard):\n\n    def __init__(self):\n        super().__init__('Hex', 3, CHARACTER_CLASS.SHAMAN, CARD_RARITY.FREE,\n            target_func=hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        frog = hearthbreaker.cards.minions.<UNK>.Frog()\n        minion = frog.create_minion(Null)\n        minion.card = frog\n        self.target.<UNK>(minion)\n", "score": -0.7746760107422475, "score_history": [-1.33514404296875e-05, -0.0070171356201171875, -1.5735502529423684e-05, -8.821482879284304e-06, -2.7415953809395432e-06, -2.2649765014648438e-06, 0.0, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0013885498046875, -1.1444091796875e-05, -1.1444091796875e-05, -2.288818359375e-05, -1.71661376953125e-05, -1.6689286894688848e-06, -0.0001697540283203125, -0.001850128173828125, -1.9073486328125e-06, -1.9073486328125e-05, -5.340576171875e-05, 0.0, -5.364418029785156e-05, 0.0, -0.00266265869140625, 0.0, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.0004215240478515625, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.0004253387451171875, -0.0005550384521484375, -1.1444091796875e-05, -3.814697265625e-06, -8.0108642578125e-05, -1.9073486328125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.1920928244535389e-07, -0.004031062126159668, -7.152555099310121e-07, -0.0001422166678821668, 0.0, -9.965540812117979e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, 0.0, -3.743171691894531e-05, -1.4781842764932662e-05, -0.0051059722900390625, -0.0028781890869140625, -0.006443023681640625, -0.0004825592041015625, -3.4332275390625e-05, -0.001384735107421875, -9.5367431640625e-06, -0.08175309002399445, -8.14170780358836e-05, -0.0019521713256835938, -0.0001773834228515625, -0.011736869812011719, -0.0001850128173828125, -0.000110626220703125, -3.62396240234375e-05, -0.0002002716064453125, 0.0, -0.015389442443847656, 0.0, -0.011693954467773438, -5.7220458984375e-06, -0.03940880298614502, -1.1920928244535389e-07, -0.007498740218579769, -1.311301275563892e-06, -0.0012436950346454978, -1.9073486328125e-06, -0.008775655180215836, -0.0001560330856591463, -0.004209285601973534, -0.0001767873327480629, -0.0002040863037109375, -1.9073486328125e-05, -0.0004825592041015625, -0.024344444274902344, 0.0, -0.04997676983475685, -1.1920928244535389e-07, -0.01721668243408203, -0.009478569030761719, -0.000812530517578125, -5.7220458984375e-06, -0.0057010650634765625, 0.0, -0.054827213287353516, -2.0384748495416716e-05, -0.0218278169631958, 0.0, -0.0018472671508789062, -0.010450363159179688, -0.0002307891845703125, -0.00021993429982103407, -1.0132789611816406e-05, -0.00034332275390625, -2.09808349609375e-05, -0.000133514404296875, -0.000885009765625, -0.000102996826171875, -0.005206108093261719, 0.0, -0.053719162940979004, 0.0, -0.00681614875793457, 0.0, -0.001312255859375, 0.0, -0.08886599540710449, -1.1324880688334815e-05, -0.007940292358398438, -3.0517578125e-05, -0.00818634033203125, 0.0, -0.0008945465087890625, 0.0, -0.007344245910644531, 0.0, -0.0010144710540771484, -2.110004425048828e-05, -0.007719159126281738, 0.0, -0.0021209716796875, -0.0015411376953125, 0.0, -0.1616116762161255, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "frog"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "Frog", "value": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "cards", "value": {"_type": "Name", "id": "hearthbreaker"}}}}}}}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "minion"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "create_minion", "value": {"_type": "Name", "id": "frog"}}, "args": [{"_type": "NameConstant", "value": "Null"}]}}, {"_type": "Assign", "targets": [{"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "minion"}}], "value": {"_type": "Name", "id": "frog"}}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "<UNK>", "hole2": [{"_type": "Name", "id": "minion"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Hex"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "SHAMAN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Hex", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Hex", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Hex", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "frog", "<EOS>", 20, 109, 17, 104, 17, 104, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "cards", "<EOS>", "minions", "<EOS>", "<UNK>", "<EOS>", "Frog", "<EOS>", 82, 103, 205, 53, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "frog", "<EOS>", "create_minion", "<EOS>", 205, 54, 135, "Null", "<EOS>", 82, 103, 205, 45, 104, 25, 133, "minion", "<EOS>", "card", "<EOS>", 25, 133, "frog", "<EOS>", 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 205, 53, 133, "minion", "<EOS>"]}]}
{"index": 49, "beams": [{"inferred_code": "class HolyLight(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Light', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(6), self)\n", "score": -0.047990802493579565, "score_history": [-0.0001201629638671875, -0.0018634796142578125, 0.0, -4.660991544369608e-05, -5.006785613659304e-06, -0.00016266334569081664, -4.7087669372558594e-05, -2.0265579223632812e-06, -5.7220458984375e-06, -0.00014495849609375, -1.1444091796875e-05, -2.86102294921875e-05, -0.001064300537109375, -4.76837158203125e-05, -0.00014495849609375, -1.1444091796875e-05, -2.09808349609375e-05, -1.4662635294371285e-05, -2.1219253540039062e-05, -5.483620952873025e-06, -1.3709019185625948e-05, -4.1961669921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001068115234375, -9.5367431640625e-06, -5.173683166503906e-05, -1.9073486328125e-06, -0.0031499862670898438, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001220703125, -0.000423431396484375, -1.9073486328125e-06, 0.0, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -4.38690185546875e-05, -1.9073486328125e-06, -0.0002346038818359375, 0.0, -0.000240325927734375, -1.9073486328125e-06, -0.00233614444732666, -6.866455078125e-05, -0.0004291534423828125, 0.0, -0.0002552260411903262, 0.0, -0.000209808349609375, -4.9591064453125e-05, -7.62939453125e-05, -1.52587890625e-05, -1.1920928244535389e-07, -0.02028369903564453, -0.000186920166015625, -4.57763671875e-05, -0.000247955322265625, -0.000362396240234375, -9.5367431640625e-06, -0.00017547607421875, 0.0, -0.0001163482666015625, 0.0, -0.00038993358612060547, -1.9073486328125e-06, -0.007209420204162598, -2.0265579223632812e-06, -7.43865966796875e-05, -6.4849853515625e-05, -9.72747802734375e-05, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -0.00046694267075508833, -0.001041412353515625, -1.1444091796875e-05, -0.001369476318359375, -5.53131103515625e-05, -0.0011271112598478794, -0.0002949994814116508, -1.9073486328125e-05, -1.9073486328125e-06, -0.0024995803833007812, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template38"}}, "args": [{"_type": "Num", "n": 6}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Holy Light"}, {"_type": "Template33"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "HolyLight", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Holy", "Light", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Light", "<EOS>", 68, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 55, 138, "6", "<EOS>", 53, 133, "self", "<EOS>"]}]}
{"index": 50, "beams": [{"inferred_code": "class HolyNova(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Nova', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(2), self)\n        for minion in player.minions:\n            minion.heal(player.effective_heal_power(2), self)\n", "score": -0.2355859707584429, "score_history": [-1.71661376953125e-05, -0.005802154541015625, -1.0728830375228426e-06, -0.000287849543383345, -1.6689286894688848e-06, -4.9919821321964264e-05, -6.318092346191406e-05, -7.987022399902344e-06, 0.0, -0.0003452301025390625, -0.0001163482666015625, -3.576278118089249e-07, -2.872943878173828e-05, -1.0251977982989047e-05, -7.748603820800781e-06, -2.4318396754097193e-05, -0.00012922286987304688, -0.01153576374053955, -2.09808349609375e-05, -0.0004807710647583008, -5.7220458984375e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.0967253729177173e-05, 0.0, -1.1444091796875e-05, -1.33514404296875e-05, -2.6702880859375e-05, -1.1682510375976562e-05, -0.0002969503402709961, -0.02817249298095703, -3.24249267578125e-05, -0.012899398803710938, -3.62396240234375e-05, -1.33514404296875e-05, -5.14984130859375e-05, -0.00103759765625, -1.52587890625e-05, -0.00615692138671875, -0.000156402587890625, -0.0001659393310546875, 0.0, -0.0001354217529296875, 0.0, -0.0010738372802734375, 0.0, -0.0003185272216796875, 0.0, -3.0517578125e-05, -0.0001163482666015625, -5.53131103515625e-05, -3.62396240234375e-05, 0.0, -0.00035858154296875, -1.9073486328125e-06, -6.29425048828125e-05, -7.62939453125e-06, -0.00017762184143066406, -0.00015842914581298828, -0.0004050731658935547, -1.9073486328125e-06, -6.67572021484375e-05, -0.0003452301025390625, -1.9073486328125e-05, -0.0001678466796875, 0.0, -0.000214219035115093, 0.0, -0.10970926284790039, 0.0, -9.5367431640625e-06, -4.38690185546875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.62939453125e-06, -0.008596180938184261, -1.1920928244535389e-07, -0.0004215240478515625, -2.09808349609375e-05, -0.0001659393310546875, -2.47955322265625e-05, -7.60553521104157e-05, -1.9073486328125e-06, -0.014906883239746094, -0.0010395050048828125, -0.0004062652587890625, -9.5367431640625e-06, -0.006041049957275391, 0.0, -0.00038051605224609375, -1.9073486328125e-05, -0.0021686553955078125, -0.0010352134704589844, 0.0, -0.000179290771484375, -0.0002269744873046875, -1.52587890625e-05, -0.0017452239990234375, 0.0, -0.00011432170867919922, 0.0, -0.010258913040161133, 0.0, -2.86102294921875e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.9073486328125e-05, -3.814697265625e-06, -1.71661376953125e-05, -0.005127186421304941, -1.2040138244628906e-05, -0.000598907470703125, -2.09808349609375e-05, -0.0001354217529296875, -2.09808349609375e-05, -6.628032133448869e-05, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Call", "func": {"_type": "Attribute", "attr": "copy", "value": {"_type": "Name", "id": "copy"}}, "args": [{"_type": "Attribute", "attr": "minions", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}]}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}]}, {"_type": "For", "target": {"_type": "Name", "id": "minion"}, "iter": {"_type": "Attribute", "attr": "minions", "value": {"_type": "Template38"}}, "body": [{"_type": "Template23", "hole0": {"_type": "Name", "id": "minion"}, "hole1": "heal", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_heal_power", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Holy Nova", "hole1": 5, "hole3": "COMMON", "hole2": "PRIEST"}], "hole0": "HolyNova", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Holy", "Nova", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Holy", " ", "Nova", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", "COMMON", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 219, 92, 87, 117, 25, 133, "minion", "<EOS>", 20, 111, 17, 104, 25, 133, "copy", "<EOS>", "copy", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>", 87, 117, 25, 133, "minion", "<EOS>", 17, 104, 42, "minions", "<EOS>", 217, 97, 166, 25, 133, "minion", "<EOS>", "heal", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_heal_power", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"]}]}
{"index": 51, "beams": [{"inferred_code": "class HolySmite(SpellCard):\n\n    def __init__(self):\n        super().__init__('Holy Smite', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score": -0.09250175104554614, "score_history": [-6.866455078125e-05, -0.0022296905517578125, -2.3841855067985307e-07, -0.00010084635141538456, -1.2636104656849056e-05, -2.384065737714991e-06, -1.1682508556987159e-05, -4.2199935705866665e-05, -1.9073486328125e-06, -9.5367431640625e-05, -1.9073486328125e-05, -0.00034332275390625, -7.62939453125e-06, -1.33514404296875e-05, -9.72747802734375e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.092700980138034e-05, -3.063678741455078e-05, -3.6954863844584906e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.33514404296875e-05, -1.1444091796875e-05, -1.52587890625e-05, -1.9073486328125e-06, -6.29425048828125e-05, -3.814697265625e-06, -0.07078957557678223, -1.9073486328125e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -5.53131103515625e-05, -0.0001621246337890625, -0.009181976318359375, -3.814697265625e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.0517578125e-05, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001087188720703125, 0.0, -0.0001010894775390625, -3.814697265625e-06, -0.00252532958984375, -1.71661376953125e-05, -7.62939453125e-05, -1.9073486328125e-06, -0.0002163641038350761, 0.0, -0.0002899169921875, -0.000133514404296875, -7.2479248046875e-05, -3.814697265625e-06, 0.0, -0.001850128173828125, -3.4332275390625e-05, -4.38690185546875e-05, -0.0002765655517578125, -8.20159912109375e-05, 0.0, -9.5367431640625e-06, 0.0, -0.0007238388061523438, -1.9073486328125e-06, -6.449208012782037e-05, -3.814697265625e-06, -0.00014913082122802734, 0.0, -5.53131103515625e-05, -0.000392913818359375, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.001015305519104004, -1.9073486328125e-06, -0.000396728515625, -3.4332275390625e-05, -5.53131103515625e-05, 0.0, -5.698204040527344e-05, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Template33"}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Holy Smite"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "PRIEST", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "HolySmite", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Holy", "Smite", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Holy", " ", "Smite", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 68, 53, 133, "self", "<EOS>"]}]}
{"index": 52, "beams": [{"inferred_code": "class Houndmaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Houndmaster', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(Taunt())]), MinionSelector(IsType(MINION_TYPE.BEAST),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score": -0.7183741735798463, "score_history": [-3.24249267578125e-05, -0.0005702972412109375, -0.005657699424773455, -0.0007303952006623149, -2.3469328880310059e-07, -2.3364949811366387e-05, -8.344646857949556e-07, -4.38690185546875e-05, -5.7220458984375e-05, -2.09808349609375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -3.0517578125e-05, -1.52587890625e-05, -5.340576171875e-05, -2.288818359375e-05, -1.4185901818564162e-05, -9.34600830078125e-05, -0.0003147125244140625, -9.1552734375e-05, -0.000202178955078125, -0.0002155303955078125, -1.9073486328125e-06, -4.076957702636719e-05, 0.0, -0.0034629106521606445, -7.62939453125e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0001983642578125, -0.0008565187454223633, -1.1920928244535389e-07, -0.0024261474609375, -0.0009174346923828125, -7.62939453125e-06, -0.00579380989074707, -1.1920928244535389e-07, -0.0003662109375, -7.62939453125e-06, -0.0006192922010086477, -3.4570634852570947e-06, -2.288818359375e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -4.57763671875e-05, -5.7220458984375e-06, -0.00042724609375, -0.0024013519287109375, -0.000152587890625, -3.814697265625e-06, -3.814697265625e-06, -0.0013805986382067204, -0.0001170573232229799, -4.38690185546875e-05, -0.021696090698242188, -0.0018177032470703125, -0.0030193328857421875, -0.07860755920410156, -0.0015106201171875, -0.000874399789609015, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -0.00022946065291762352, -0.12579943239688873, 0.0, -3.814697265625e-06, -0.0005931854248046875, -0.0009517669677734375, -0.00489044189453125, -0.015857454389333725, -2.384185791015625e-06, -3.814697265625e-06, 0.0, -5.9008452808484435e-05, -0.24678055942058563, -1.33514404296875e-05, -1.9073486328125e-05, -0.0002117156982421875, -0.000560760498046875, -0.12891483306884766, -0.010293364524841309, -2.384185791015625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.0035028699785470963, -8.678137965034693e-05, -0.016094207763671875, -3.0517578125e-05, -0.0002079010009765625, -4.57763671875e-05, 0.0, -0.0006920099258422852, -6.556510470545618e-06, -1.1444091796875e-05, -5.7220458984375e-06, -0.0002536773681640625, -5.340576171875e-05, -1.9073486328125e-05, 0.0, -0.0010738859418779612, -1.5020368664409034e-05, 0.0, -0.0001087188720703125, -0.012769699096679688, 0.0, -0.0001430511474609375, 0.0, -3.933906555175781e-05, -3.576278118089249e-07, -0.008840560913085938, -3.814697265625e-06, -0.00087738037109375, -1.33514404296875e-05, -1.9073486328125e-06, -0.0006940364837646484, -1.9073486328125e-06, -6.4849853515625e-05, -3.814697265625e-06, -0.001483917236328125, -0.00012290477752685547, -4.1723224057932384e-06, -8.0108642578125e-05, 0.0, -7.748603820800781e-06, 0.0, -3.0517578125e-05, -0.0003871917724609375, -7.2479248046875e-05, -1.6331530787283555e-05, -4.768367489305092e-06, -0.00017285303329117596, -8.106231689453125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 4, "hole1": 3}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "<UNK>"}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "Give"}, "args": [{"_type": "List", "elts": [{"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeHealth"}, "hole2": [{"_type": "Template33"}]}, {"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "ChangeAttack"}, "hole2": [{"_type": "Template33"}]}, {"_type": "Template19", "hole0": "Buff", "hole1": {"_type": "Name", "id": "Taunt"}}, {"_type": "Template36_expr_seq"}]}]}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "picker", "value": {"_type": "Template25", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "MinionSelector"}, "args": [{"_type": "Call", "func": {"_type": "Name", "id": "IsType"}, "args": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}]}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Houndmaster"}, {"_type": "Template37"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Attribute", "attr": "FREE", "value": {"_type": "Template30"}}]}}], "hole0": "Houndmaster"}, "choice_history": [77, 145, "Houndmaster", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Houndmaster", "<EOS>", 72, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 45, 104, 35, "FREE", "<EOS>", 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 48, 111, 25, 133, "Give", "<EOS>", 205, 51, 129, 208, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Health", "<EOS>", 205, 68, 59, 157, "Buff", "<EOS>", 25, 133, "Change", "Attack", "<EOS>", 205, 68, 59, 155, "Buff", "<EOS>", 25, 133, "Taunt", "<EOS>", 71, 48, 112, 25, 133, "Minion", "Selector", "<EOS>", 205, 48, 111, 25, 133, "Is", "Type", "<EOS>", 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 212, 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "4", "<EOS>", "3", "<EOS>"]}]}
{"index": 53, "beams": [{"inferred_code": "class Huffer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Huffer', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score": -0.02456474192075575, "score_history": [-1.9073486328125e-06, -5.340576171875e-05, -0.0007537225028499961, -9.655882604420185e-05, -1.537799835205078e-05, -3.30209695675876e-05, 0.0, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -4.38690185546875e-05, -0.0006656646728515625, -1.9073486328125e-06, -0.003643035888671875, -1.9073486328125e-06, -1.1444091796875e-05, -1.0847986231965479e-05, -0.0002899169921875, -0.000499725341796875, -9.72747802734375e-05, -6.103515625e-05, -9.918212890625e-05, -1.9073486328125e-06, -0.00010502338409423828, 0.0, -0.0018963813781738281, 0.0, -0.00574493408203125, -0.0009479522705078125, -1.1444091796875e-05, -8.904933201847598e-05, -1.9073486328125e-06, -0.0004177093505859375, -0.0001354217529296875, -6.866455078125e-05, -0.00024461743305437267, 0.0, -0.00015795230865478516, 0.0, -0.0016783896135166287, 0.0, -0.000171661376953125, -0.0027790069580078125, -5.7220458984375e-05, -2.622600959512056e-06, -3.576278118089249e-07, -9.250213042832911e-05, 0.0, -0.00301110721193254, -1.9073486328125e-06, -0.0003337860107421875, -2.47955322265625e-05, -0.0001323223114013672, -9.5367431640625e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 4, "hole1": 2, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Huffer"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}, {"_type": "NameConstant", "value": true}]}}], "hole0": "Huffer"}, "choice_history": [77, 145, "Huffer", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Huffer", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 54, "beams": [{"inferred_code": "class Humility(SpellCard):\n\n    def __init__(self):\n        super().__init__('Humility', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -0.4191596477263957, "score_history": [-8.96453857421875e-05, -0.0021800994873046875, -2.622600959512056e-06, -4.1723224057932384e-06, -2.9802104108966887e-06, -1.0132789611816406e-05, -1.1920928244535389e-07, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -3.814697265625e-05, -4.38690185546875e-05, -1.71661376953125e-05, -5.91278076171875e-05, -2.86102294921875e-05, -3.0517578125e-05, -3.576278118089249e-07, -4.0531158447265625e-06, -0.000186920166015625, -0.000484466552734375, -0.00012969970703125, -1.52587890625e-05, 0.0, -2.47955322265625e-05, -3.62396240234375e-05, -0.029681680724024773, 0.0, -0.000141143798828125, -0.1987285614013672, -3.24249267578125e-05, -7.62939453125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.288818359375e-05, -0.000728607177734375, -7.82012939453125e-05, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00017547607421875, 0.0, -0.0001354217529296875, -1.1920928244535389e-07, -0.0027347803115844727, -1.1920928244535389e-07, -3.4451481042196974e-05, 0.0, -6.186844257172197e-05, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -9.918212890625e-05, -0.00017976760864257812, -3.4570680327306036e-06, -0.0056819915771484375, -1.9073486328125e-05, -0.0012187957763671875, -0.0006732940673828125, -2.47955322265625e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -2.3126602172851562e-05, -1.9073486328125e-06, -1.9073484509135596e-05, 0.0, -0.0136185884475708, 0.0, 0.0, -0.13132095336914062, -0.0015087127685546875, -0.0025844573974609375, -0.015340805053710938, -0.000217437744140625, -0.000209808349609375, -1.71661376953125e-05, -7.43865966796875e-05, -0.0009632110595703125, -3.814697265625e-06, -0.003978729248046875, -9.5367431640625e-06, -0.0012035369873046875, -1.52587890625e-05, -1.919269561767578e-05, -5.7220458984375e-06, -0.0040283203125, -2.0265579223632812e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "left": {"_type": "Template34"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Humility"}, {"_type": "Template34"}, {"_type": "Attribute", "attr": "PALADIN", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "Humility", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Humility", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Humility", "<EOS>", 69, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"]}]}
{"index": 55, "beams": [{"inferred_code": "class <UNK>Mark(SpellCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Mark', 0, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score": -1.2692131022300543, "score_history": [-3.814697265625e-06, -0.011226654052734375, -0.0007326399791054428, -0.0003956987929996103, -4.768370445162873e-07, -3.6952333175577223e-06, -6.556510470545618e-06, 0.0, -1.9073486328125e-06, -6.866455078125e-05, -5.7220458984375e-06, -1.52587890625e-05, -4.57763671875e-05, -9.34600830078125e-05, -0.0001201629638671875, -0.00016021728515625, -1.52587890625e-05, -0.0030270812567323446, -5.7220451708417386e-05, -3.790815389947966e-05, -2.288818359375e-05, -0.0002384185791015625, -0.000156402587890625, -2.8609247237909585e-06, -3.6954863844584906e-06, -0.006070137023925781, 0.0, -1.9073486328125e-06, 0.0, -1.5377996533061378e-05, -1.9073486328125e-06, -0.0022214651107788086, 0.0, -8.96453857421875e-05, -0.0081939697265625, -0.000308990478515625, -5.7220458984375e-06, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -0.0005931854248046875, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0001678466796875, 0.0, -4.38690185546875e-05, 0.0, -0.00027501583099365234, 0.0, -3.635883331298828e-05, 0.0, -9.894352842820808e-06, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.000217437744140625, -1.5497207641601562e-05, -5.841255187988281e-06, -0.014024734497070312, -3.814697265625e-06, -0.0001773834228515625, -0.000377655029296875, -2.288818359375e-05, -7.62939453125e-06, -1.71661376953125e-05, 0.0, -1.3828277587890625e-05, -1.9073486328125e-06, -4.911422001896426e-05, 0.0, -0.28036022186279297, 0.0, 0.0, -0.8129215240478516, -0.001895904541015625, -0.00189971923828125, -0.017271041870117188, -0.0003204345703125, -0.000980377197265625, -2.09808349609375e-05, -9.34600830078125e-05, -0.000675201416015625, -3.814697265625e-06, -0.09415245056152344, -9.5367431640625e-06, -0.00247955322265625, -1.9073486328125e-06, -2.491474151611328e-05, -5.7220458984375e-06, -0.006509900093078613, -2.3841855067985307e-07], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}, "hole1": "change_attack", "hole2": [{"_type": "BinOp", "left": {"_type": "Template34"}, "right": {"_type": "Call", "func": {"_type": "Attribute", "attr": "calculate_attack", "value": {"_type": "Attribute", "attr": "target", "value": {"_type": "Name", "id": "self"}}}}, "op": {"_type": "Sub"}}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_minion_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "<UNK> Mark"}, {"_type": "Num", "n": 0}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "<UNK>Mark", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "<UNK>", "Mark", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "<UNK>", " ", "Mark", "<EOS>", 55, 138, "0", "<EOS>", 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 205, 46, 106, 38, 79, 20, 109, 17, 104, 17, 104, 25, 133, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"]}]}
{"index": 56, "beams": [{"inferred_code": "class IronforgeRifleman(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironforge Rifleman', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(1), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score": -0.2898599653522069, "score_history": [-1.9073486328125e-06, -2.86102294921875e-05, -1.311301275563892e-06, -4.327211718191393e-05, -1.9788545614574105e-05, -4.914402961730957e-05, -3.576277322281385e-06, 0.0, -1.9073486328125e-06, -0.0001430511474609375, -3.814697265625e-05, -6.4849853515625e-05, -1.33514404296875e-05, -9.5367431640625e-06, -0.0001201629638671875, -1.9073486328125e-06, -3.814697265625e-06, -5.960446742392378e-06, -5.805476394016296e-05, 0.0, -3.826618194580078e-05, -0.0020275115966796875, -0.0001239776611328125, -0.0001583099365234375, -0.018217086791992188, -0.000396728515625, -0.0001316070556640625, -0.0004895925521850586, -4.291525328881107e-06, -1.9073486328125e-06, 0.0, -0.0013903379440307617, -5.8412379075889476e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.7404556274414062e-05, -7.62939453125e-06, -1.9073486328125e-05, -0.0010395050048828125, -0.000102996826171875, -9.131235128734261e-05, -0.00014602098963223398, -0.25452226400375366, -2.2649765014648438e-06, -2.288818359375e-05, -0.0005626678466796875, -1.9073486328125e-06, -3.814697265625e-06, -0.0007266998291015625, -1.9073486328125e-05, 0.0, -0.00128173828125, -0.002277374267578125, -5.340576171875e-05, -0.00020241737365722656, 0.0, -6.866455078125e-05, 0.0, -8.106103632599115e-05, -1.52587890625e-05, 0.0, 0.0, 0.0, -0.00043487548828125, 0.0, -0.0029287338256835938, -5.7220458984375e-06, -0.0008927583112381399, -0.00036013126373291016, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, -2.384185791015625e-05, 0.0, -0.000148773193359375, -8.0108642578125e-05, -4.38690185546875e-05, -1.9073468138230965e-06, -1.4662635294371285e-05, -2.7418205718277022e-05, -3.4570680327306036e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 2, "hole1": 2}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "<UNK>"}, {"_type": "keyword", "arg": "battlecry", "value": {"_type": "Call", "func": {"_type": "Name", "id": "Battlecry"}, "args": [{"_type": "Template21", "hole0": "Damage", "hole1": 1}, {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "players", "value": {"_type": "Template25", "hole0": "BothPlayer"}}, {"_type": "keyword", "arg": "picker", "value": {"_type": "Template25", "hole0": "UserPicker"}}], "func": {"_type": "Name", "id": "CharacterSelector"}}]}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Ironforge Rifleman"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "IronforgeRifleman"}, "choice_history": [77, 145, "Ironforge", "Rifleman", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironforge", " ", "Rifleman", "<EOS>", 70, 65, 64, 213, 75, 164, "<UNK>", "<EOS>", 76, 195, "battlecry", "<EOS>", 20, 111, 25, 133, "Battlecry", "<EOS>", 206, 60, 163, "Damage", "<EOS>", "1", "<EOS>", 48, 110, 25, 133, "Character", "Selector", "<EOS>", 213, 76, 195, "players", "<EOS>", 34, 171, "Both", "Player", "<EOS>", 76, 195, "picker", "<EOS>", 34, 171, "User", "Picker", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "2", "<EOS>"]}]}
{"index": 57, "beams": [{"inferred_code": "class IronfurGrizzly(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironfur Grizzly', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(3, 3, taunt=True)\n", "score": -0.07035622265152597, "score_history": [-0.0002231597900390625, -0.00026702880859375, -0.001465557492338121, -0.0005536940880119801, -2.503394853192731e-06, -1.4796853065490723e-05, -1.9073486328125e-06, 0.0, 0.0, -8.58306884765625e-05, -2.47955322265625e-05, -3.0517578125e-05, -0.000293731689453125, 0.0, -0.015283584594726562, 0.0, 0.0, -6.437280717364047e-06, -4.601476757670753e-05, -2.0265579223632812e-06, -4.017353057861328e-05, -0.000164031982421875, -0.00043487548828125, -0.000263214111328125, -0.000125885009765625, -1.1444091796875e-05, -1.1444091796875e-05, -0.0003854036040138453, -5.7220458984375e-06, -3.2663341698935255e-05, -1.9073486328125e-06, -0.02304982952773571, 0.0, -4.76837158203125e-05, -0.00313568115234375, -4.38690185546875e-05, -2.7418095669418108e-06, -9.536738616588991e-07, -0.00010048788681160659, 0.0, -0.02377450466156006, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.0002599954605102539, -3.814697265625e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 3, "hole1": 3, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Ironfur Grizzly"}, {"_type": "Template35"}, {"_type": "Template27"}, {"_type": "Template26"}]}}], "hole0": "IronfurGrizzly"}, "choice_history": [77, 145, "Ironfur", "Grizzly", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Ironfur", " ", "Grizzly", "<EOS>", 70, 65, 64, 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "3", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 58, "beams": [{"inferred_code": "class KillCommand(SpellCard):\n\n    def __init__(self):\n        super().__init__('Kill Command', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = hearthbreaker.targeting.<UNK>(player.game, lambda x: x.card\n            .minion_type is MINION_TYPE.BEAST)\n        targets.append(game.current_player.hero)\n        <UNK> = game.random_choice(targets)\n        target.damage(player.effective_spell_damage(5), self)\n", "score": -5.878962981579889, "score_history": [-2.09808349609375e-05, -0.0035037994384765625, -1.4305104514278355e-06, -2.5749075575731695e-05, -8.583032467868179e-06, -5.4834708862472326e-06, -3.933906555175781e-06, -7.748603820800781e-06, -1.9073486328125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -3.814697265625e-06, -5.7220458984375e-05, -3.24249267578125e-05, -2.288818359375e-05, -1.1444091796875e-05, -1.1444026313256472e-05, -4.971027374267578e-05, -2.622604142743512e-06, -4.00543212890625e-05, -0.0005512237548828125, -3.62396240234375e-05, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -6.508827209472656e-05, 0.0, -0.006780862808227539, -1.9073486328125e-06, -0.0008220672607421875, -0.009611129760742188, -0.0006961822509765625, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.0001430511474609375, -1.9073486328125e-06, -6.29425048828125e-05, 0.0, -0.0004024505615234375, -3.814697265625e-06, -0.0012617111206054688, -2.86102294921875e-05, -4.00543212890625e-05, -5.7220458984375e-06, -5.710094410460442e-05, 0.0, -8.392333984375e-05, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -8.344646857949556e-07, -0.972625732421875, -0.01827239990234375, -0.0037441253662109375, -0.0001583099365234375, -8.58306884765625e-05, -0.00336456298828125, -7.05718994140625e-05, -0.028427356854081154, -4.053113570989808e-06, -0.0034246444702148438, -0.0011453628540039062, -3.62396240234375e-05, -1.9073486328125e-06, -0.0017223358154296875, -2.09808349609375e-05, -0.010194778442382812, -1.9073486328125e-06, -0.024164199829101562, 0.0, -0.004193544387817383, -1.33514404296875e-05, -0.002365708351135254, -1.9073486328125e-06, -0.013781547546386719, -0.0009784698486328125, -0.0001926422119140625, -0.0002040863037109375, -0.0003361698181834072, 0.0, -0.00150299072265625, -0.0011043548583984375, -0.006379127502441406, -0.0001468658447265625, -0.007304549217224121, -4.398822784423828e-05, -0.0003337860107421875, -0.0003261566162109375, -0.012212753295898438, -7.2479248046875e-05, -0.005528450012207031, -2.47955322265625e-05, -0.00366973876953125, -3.814697265625e-06, -0.062430500984191895, 0.0, -0.01787269115447998, 0.0, -0.0021666288375854492, -5.7220458984375e-06, -0.0036029815673828125, -0.009975433349609375, -0.00220489501953125, -0.0001506805419921875, 0.0, -0.0007457733154296875, -3.814697265625e-06, -0.0008363723754882812, 0.0, -0.007929801940917969, 0.0, -0.5916252136230469, -1.71661376953125e-05, -0.15555572509765625, -3.814697265625e-06, -0.04813957214355469, 0.0, -0.7221765518188477, 0.0, -1.9073486328125e-06, -0.0011653900146484375, -1.9073486328125e-06, -0.03818321228027344, 0.0, -2.47955322265625e-05, 0.0, -0.059952735900878906, 0.0, -0.3817939758300781, -1.9073486328125e-06, -0.06403923034667969, 0.0, -0.06160449981689453, -8.7738037109375e-05, -0.0004291534423828125, -0.0198516845703125, 0.0, -0.26947033405303955, 0.0, -0.013640403747558594, -5.7220458984375e-06, -0.028890609741210938, -7.62939453125e-06, -0.5362701416015625, -1.9073486328125e-06, -0.11569690704345703, 0.0, -0.3988572359085083, -2.0265579223632812e-06, -0.0001277923583984375, -0.0016117095947265625, 0.0, -0.033150672912597656, 0.0, -0.00014495849609375, -5.14984130859375e-05, -0.22899818420410156, -2.6702880859375e-05, -0.02770829014480114, 0.0, -0.0018281936645507812, 0.0, -4.38690185546875e-05, -0.00327301025390625, -0.00046539306640625, -1.1444091796875e-05, -7.62939453125e-06, -9.1552734375e-05, -0.001674652099609375, -2.2649765014648438e-06, -4.1961669921875e-05, -0.8088502883911133, -4.00543212890625e-05, -0.0018775463104248047, -8.570796489948407e-05, -0.0001850128173828125, 0.0, -0.000385284423828125, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "<UNK>", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}, "args": [{"_type": "Attribute", "attr": "game", "value": {"_type": "Template38"}}, {"_type": "Lambda", "body": {"_type": "Compare", "left": {"_type": "Attribute", "attr": "minion_type", "value": {"_type": "Attribute", "attr": "card", "value": {"_type": "Name", "id": "x"}}}, "ops": [{"_type": "Is"}], "comparators": [{"_type": "Attribute", "attr": "BEAST", "value": {"_type": "Name", "id": "MINION_TYPE"}}]}, "args": {"_type": "Template13", "hole0": "x"}}]}}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "targets"}, "hole1": "append", "hole2": [{"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "current_player", "value": {"_type": "Name", "id": "game"}}}]}, {"_type": "Assign", "targets": [{"_type": "Name", "id": "<UNK>"}], "value": {"_type": "Call", "func": {"_type": "Attribute", "attr": "random_choice", "value": {"_type": "Name", "id": "game"}}, "args": [{"_type": "Name", "id": "targets"}]}}, {"_type": "Template23", "hole0": {"_type": "Name", "id": "target"}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Num", "n": 5}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "keyword", "arg": "target_func", "value": {"_type": "Attribute", "attr": "find_spell_target", "value": {"_type": "Attribute", "attr": "targeting", "value": {"_type": "Name", "id": "hearthbreaker"}}}}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Kill Command"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}]}}], "hole0": "KillCommand", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Kill", "Command", "<EOS>", "Spell", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 208, 56, 142, "Kill", " ", "Command", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 212, 76, 195, "target_func", "<EOS>", 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 221, 92, 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 17, 104, 25, 133, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 206, 45, 104, 42, "game", "<EOS>", 50, 128, 2, 150, "x", "<EOS>", 21, 114, 17, 104, 17, 104, 25, 133, "x", "<EOS>", "card", "<EOS>", "minion_type", "<EOS>", 202, 12, 205, 45, 104, 25, 133, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 97, 166, 25, 133, "targets", "<EOS>", "append", "<EOS>", 205, 45, 104, 17, 104, 25, 133, "game", "<EOS>", "current_player", "<EOS>", "hero", "<EOS>", 82, 103, 205, 53, 133, "<UNK>", "<EOS>", 20, 111, 17, 104, 25, 133, "game", "<EOS>", "random_choice", "<EOS>", 205, 53, 133, "targets", "<EOS>", 97, 166, 25, 133, "target", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"]}]}
{"index": 59, "beams": [{"inferred_code": "class KoboldGeomancer(MinionCard):\n\n    def __init__(self):\n        super().__init__('Kobold Geomancer', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, spell_damage=1)\n", "score": -0.009762565634048315, "score_history": [-1.9073486328125e-05, -0.0006771087646484375, -5.960462772236497e-07, -1.5854784578550607e-05, -7.986990567587782e-06, -5.036592483520508e-06, -1.5139572496991605e-05, -4.172325134277344e-06, -1.9073486328125e-06, -0.000644683837890625, -7.05718994140625e-05, -2.145764938177308e-06, -3.921985626220703e-05, -1.9073486328125e-06, -3.814697265625e-06, -1.6571000742260367e-05, -3.814697265625e-06, -0.0015625891974195838, 0.0, -0.0001269578788196668, 0.0, -5.7220458984375e-06, 0.0, -0.00032758424640633166, 0.0, -5.7220458984375e-06, -0.000152587890625, -1.1444091796875e-05, -3.099440846199286e-06, -1.5258743587764911e-05, -3.6735262256115675e-05, -4.410743713378906e-06, -0.0018075702246278524, 0.0, -0.00417327880859375], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 2, "hole1": 2, "hole3": {"_type": "Template34"}, "hole2": "spell_damage"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Kobold Geomancer", "hole1": 2, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "KoboldGeomancer"}, "choice_history": [77, 145, "Kobold", "Geomancer", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kobold", " ", "Geomancer", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "2", "<EOS>", "spell_damage", "<EOS>", 38]}]}
{"index": 60, "beams": [{"inferred_code": "class <UNK>Elite(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Kor'kron Elite\", 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, charge=True)\n", "score": -0.1816631828259787, "score_history": [-2.288818359375e-05, -0.0014801025390625, -0.003419801127165556, -0.1464802771806717, -9.536714060232043e-06, -1.125037670135498e-05, -8.225440979003906e-06, -3.099436753473128e-06, 0.0, -9.72747802734375e-05, -1.1444091796875e-05, -2.6940935640595853e-05, -0.0001164674322353676, -2.503394853192731e-06, -5.7220458984375e-06, -0.00042615924030542374, -1.7762025890988298e-05, -0.016299722716212273, 0.0, -1.6212459740927443e-05, 0.0, -4.1961669921875e-05, 0.0, -0.00035166737507097423, 0.0, -3.814697265625e-06, -0.0061397552490234375, -7.62939453125e-06, -7.152555099310121e-07, -7.152555099310121e-07, -3.147075040033087e-05, -2.3841855067985307e-07, -0.005023360252380371, -1.9073486328125e-06, -0.0002155303955078125, -7.62939453125e-06, -0.0013812780380249023, -1.1920928244535389e-07], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 4, "hole1": 3, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "charge"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Kor'kron Elite", "hole1": 4, "hole3": "COMMON", "hole2": "WARRIOR"}], "hole0": "<UNK>Elite"}, "choice_history": [77, 145, "<UNK>", "Elite", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Kor'kron", " ", "Elite", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "4", "<EOS>", "3", "<EOS>", "charge", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 61, "beams": [{"inferred_code": "class Leokk(MinionCard):\n\n    def __init__(self):\n        super().__init__('Leokk', 3, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(2, 4, auras=[Aura(ChangeAttack(1), MinionSelector())])\n", "score": -0.2218351709039439, "score_history": [-1.52587890625e-05, -0.000118255615234375, -1.5020359569462016e-05, -0.0004451501299627125, -8.87364149093628e-06, -1.7404556274414062e-05, 0.0, 0.0, -0.0004425048828125, -4.9591064453125e-05, -9.5367431640625e-06, -0.0004673004150390625, -1.1444091796875e-05, -0.00101470947265625, -2.288818359375e-05, -4.00543212890625e-05, -3.0278757549240254e-05, 0.0, -0.0006923675537109375, -7.05718994140625e-05, -1.52587890625e-05, -2.09808349609375e-05, 0.0, -0.00015270709991455078, 0.0, -0.0003641843795776367, 0.0, -0.0023250579833984375, -0.0053806304931640625, -7.62939453125e-06, -0.00025331974029541016, -2.3841855067985307e-07, -0.001102447509765625, -1.71661376953125e-05, -0.00011444091796875, -0.0008529424085281789, -2.1457672119140625e-06, -2.038477578025777e-05, 0.0, -0.00011384385288693011, 0.0, -7.62939453125e-06, -0.0037078857421875, -4.38690185546875e-05, -2.3841855067985307e-07, -1.0728830375228426e-06, -1.5258759958669543e-05, -1.1920922133867862e-06, -0.005397319793701172, 0.0, -0.0002689361572265625, -0.0006084442138671875, -0.0032966891303658485, -7.498263585148379e-05, -1.71661376953125e-05, -0.1548919677734375, -1.33514404296875e-05, -0.0011876821517944336, -0.0016326898476108909, -1.9073486328125e-06, -0.024722224101424217, -1.1920928955078125e-05, -0.001483917236328125, -1.9073486328125e-05, -0.006483912467956543, -0.00020837783813476562, 0.0, -4.38690185546875e-05, -0.00347900390625], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 2, "hole1": 4, "hole3": {"_type": "Template24", "hole0": "Aura", "hole1": [{"_type": "Template21", "hole0": "ChangeAttack", "hole1": 1}, {"_type": "Template25", "hole0": "MinionSelector"}], "hole2": [{"_type": "Template36_expr_seq"}]}, "hole2": "auras"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "BEAST"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Leokk"}, {"_type": "Template35"}, {"_type": "Attribute", "attr": "HUNTER", "value": {"_type": "Name", "id": "CHARACTER_CLASS"}}, {"_type": "Template26"}, {"_type": "NameConstant", "value": true}]}}], "hole0": "Leokk"}, "choice_history": [77, 145, "Leokk", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Leokk", "<EOS>", 70, 45, 104, 25, 133, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 64, 54, 134, "False", "<EOS>", 212, 75, 164, "BEAST", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "2", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 33, 168, "Aura", "<EOS>", 206, 60, 163, "Change", "Attack", "<EOS>", "1", "<EOS>", 63, 171, "Minion", "Selector", "<EOS>", 205, 71]}]}
{"index": 62, "beams": [{"inferred_code": "class <UNK>Justice(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Justice', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(1, 4)\n", "score": -0.36408514247503376, "score_history": [-1.9073486328125e-06, -0.0002918243408203125, -0.0002585315378382802, -0.001400800421833992, -5.972277722321451e-05, -0.0003943857445847243, -9.298091754317284e-05, -5.960462772236497e-07, 0.0, -0.3500537872314453, -0.001495361328125, -0.0015859752893447876, -5.125993266119622e-05, -8.225440979003906e-06, 0.0, -0.00025054969592019916, -2.3841855067985307e-07, -0.0008854866027832031, 0.0, -0.0037232637405395508, 0.0, -0.001434326171875, 0.0, -0.0001274294627364725, 0.0, -2.86102294921875e-05, -0.0004367828369140625, -0.0008144378662109375, -0.00010001159535022452, -2.9802322387695312e-05, 0.0, 0.0, -0.0005588451749645174, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template20", "hole0": "Weapon", "hole1": 1, "hole2": 4}], "hole4": "player", "hole1": "WeaponCard", "hole3": "create_weapon", "hole2": [{"_type": "Template6", "hole0": "<UNK> Justice", "hole1": 1, "hole3": "FREE", "hole2": "PALADIN"}], "hole0": "<UNK>Justice"}, "choice_history": [77, 145, "<UNK>", "Justice", "<EOS>", "Weapon", "Card", "<EOS>", 217, 98, 185, "<UNK>", " ", "Justice", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "FREE", "<EOS>", "create_weapon", "<EOS>", "player", "<EOS>", 217, 96, 161, "Weapon", "<EOS>", "1", "<EOS>", "4", "<EOS>"]}]}
{"index": 63, "beams": [{"inferred_code": "class LordOfTheArena(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lord of the Arena', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 5, taunt=True)\n", "score": -0.06267401753831336, "score_history": [-3.814697265625e-06, -0.0001468658447265625, -0.004445915576070547, -0.002657759701833129, -0.0010254101362079382, -0.000402688019676134, -3.576278118089249e-07, -3.8370490074157715e-06, -5.245207830739673e-06, 0.0, -1.9073486328125e-06, -0.000843048095703125, -6.103515625e-05, -0.0005372762680053711, -8.881092071533203e-05, -0.00046098229358904064, -0.0001239776611328125, -0.0001929998106788844, -0.0003662109375, -0.004696235526353121, -5.7220458984375e-06, -0.00024819333339110017, 0.0, -6.687641143798828e-05, 0.0, -0.00024890899658203125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -3.647799530881457e-05, 0.0, -5.7220458984375e-06, -0.028873443603515625, -9.5367431640625e-06, -5.328655970515683e-05, -4.768370445162873e-07, -7.343290781136602e-05, 0.0, -0.01643967628479004, 0.0, -0.00012969970703125, -9.5367431640625e-06, -0.0003972053527832031, 0.0], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template14", "hole0": 6, "hole1": 5, "hole3": {"_type": "NameConstant", "value": true}, "hole2": "taunt"}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Template6", "hole0": "Lord of the Arena", "hole1": 6, "hole3": "COMMON", "hole2": "ALL"}], "hole0": "LordOfTheArena"}, "choice_history": [77, 145, "Lord", "Of", "The", "Arena", "<EOS>", "Minion", "Card", "<EOS>", 217, 98, 185, "Lord", " ", "of", " ", "the", " ", "Arena", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "COMMON", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 93, 151, "6", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 26, 134, "True", "<EOS>"]}]}
{"index": 64, "beams": [{"inferred_code": "class MechanicalDragonling(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mechanical Dragonling', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score": -0.01673952342274987, "score_history": [-1.9073486328125e-06, -9.5367431640625e-05, 0.0, -1.4185901818564162e-05, -1.9550132492440753e-05, -3.0077993869781494e-05, -3.3378546504536644e-06, -3.814697265625e-06, 0.0, -0.0040111541748046875, -0.000152587890625, -3.814697265625e-06, -0.0046863555908203125, -0.00011444091796875, -0.0024394989013671875, -5.7220458984375e-06, 0.0, -2.861018856492592e-06, -0.0006194304442033172, -2.1457672119140625e-06, -6.151010165922344e-05, -5.14984130859375e-05, -0.0001850128173828125, -2.09808349609375e-05, -8.58306884765625e-05, -0.0004444122314453125, -0.0002701109042391181, -8.344646857949556e-07, -0.000244140625, -2.288818359375e-05, -1.71661376953125e-05, -0.0011796948965638876, 0.0, -5.841255187988281e-06, 0.0, -6.639886123593897e-05, -1.1920928244535389e-07, -0.00086212158203125, -0.0003070831298828125, -2.86102294921875e-05, -1.4305111108114943e-05, -8.344646857949556e-07, -0.0006489753723144531, -1.4901099348207936e-05], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template16", "hole0": 2, "hole1": 1}], "hole4": "player", "hole1": "MinionCard", "hole3": "create_minion", "hole2": [{"_type": "Expr", "value": {"_type": "Call", "keywords": [{"_type": "Template22", "hole0": "MECH"}], "func": {"_type": "Template18"}, "args": [{"_type": "Str", "s": "Mechanical Dragonling"}, {"_type": "Template34"}, {"_type": "Template27"}, {"_type": "Template26"}, {"_type": "NameConstant", "value": true}]}}], "hole0": "MechanicalDragonling"}, "choice_history": [77, 145, "Mechanical", "Dragonling", "<EOS>", "Minion", "Card", "<EOS>", 217, 86, 116, 20, 112, 30, 209, 56, 142, "Mechanical", " ", "Dragonling", "<EOS>", 69, 65, 64, 54, 134, "False", "<EOS>", 212, 75, 164, "MECH", "<EOS>", "create_minion", "<EOS>", "player", "<EOS>", 217, 94, 152, "2", "<EOS>", "1", "<EOS>"]}]}
{"index": 65, "beams": [{"inferred_code": "class MindBlast(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mind Blast', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(5), self)\n", "score": -0.049831523259477706, "score_history": [-7.62939453125e-06, -0.003147125244140625, -1.1920928244535389e-07, -2.3126451196731068e-05, -1.1324854312988464e-05, -0.0002367057604715228, -2.8252599804545753e-05, -9.775161743164062e-06, -3.814697265625e-06, -0.0039577484130859375, -0.0002193450927734375, -2.3841855067985307e-07, -2.5391578674316406e-05, -1.060962586052483e-05, -1.1444091796875e-05, -0.00019977505144197494, -9.655950634623878e-06, -0.001722574234008789, -3.814697265625e-06, -0.004820108413696289, 0.0, -1.9073486328125e-05, 0.0, -0.00026294687995687127, 0.0, -0.0001888275146484375, -5.91278076171875e-05, -9.5367431640625e-05, -1.1563301086425781e-05, -8.344646857949556e-07, -0.0022258758544921875, -1.9073486328125e-06, -0.0025005340576171875, -0.0002193450927734375, -5.53131103515625e-05, -5.340576171875e-05, -1.52587890625e-05, -0.0003108978271484375, -2.6702880859375e-05, -3.814697265625e-06, -0.00026702880859375, 0.0, -0.0020284652709960938, -0.0002690553665161133, -0.004244327079504728, -1.9073486328125e-06, -0.0011883974075317383, 0.0, -1.9073486328125e-06, -0.0002193450927734375, -0.0001163482666015625, -3.814697265625e-06, -3.814697265625e-06, -5.340576171875e-05, -0.0001296996488235891, 0.0, -3.0517578125e-05, -0.020254135131835938, -1.9073486328125e-06, -0.0001802320621209219, -0.0001089572615455836, -9.5367431640625e-05, 0.0, -0.0001316070556640625, -1.9073486328125e-06], "model_output": {"_type": "Template0", "hole6": [{"_type": "Template10"}, {"_type": "Template23", "hole0": {"_type": "Attribute", "attr": "hero", "value": {"_type": "Attribute", "attr": "other_player", "value": {"_type": "Name", "id": "game"}}}, "hole1": "damage", "hole2": [{"_type": "Call", "func": {"_type": "Attribute", "attr": "effective_spell_damage", "value": {"_type": "Template38"}}, "args": [{"_type": "Num", "n": 5}]}, {"_type": "Name", "id": "self"}]}], "hole4": "player", "hole1": "SpellCard", "hole3": "use", "hole2": [{"_type": "Template6", "hole0": "Mind Blast", "hole1": 2, "hole3": "FREE", "hole2": "PRIEST"}], "hole0": "MindBlast", "hole5": [{"_type": "arg", "arg": "game"}]}, "choice_history": [77, 147, "Mind", "Blast", "<EOS>", "Spell", "Card", "<EOS>", 217, 98, 185, "Mind", " ", "Blast", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", "FREE", "<EOS>", "use", "<EOS>", "player", "<EOS>", 199, 1, 192, "game", "<EOS>", 218, 92, 97, 166, 17, 104, 17, 104, 25, 133, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 206, 48, 111, 17, 104, 42, "effective_spell_damage", "<EOS>", 205, 55, 138, "5", "<EOS>", 53, 133, "self", "<EOS>"]}]}
