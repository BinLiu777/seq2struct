{"gold_code": "class AssassinsBlade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Assassin's Blade\", 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -0.09468460083007812, -0.012624740600585938, -0.0004787421494256705, -0.0019626617431640625, -0.0004499302594922483, 0.0, -0.0017622351879253983, 0.0, -0.05918121337890625, 0.0, -0.009648323059082031, 0.0, -0.0027914047241210938, 0.0, -3.0517578125e-05, -0.000377655029296875, -2.47955322265625e-05, -5.9604644775390625e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.0002536773681640625, -0.000225067138671875, -0.00011444091796875, -0.0001888275146484375, -0.0058765411376953125, -4.1961669921875e-05, 0.0, -0.0001678466796875, -1.52587890625e-05, -2.6702880859375e-05, -0.00017547607421875, -1.9073486328125e-06, -0.0009823718573898077, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -0.0007243850268423557, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "PALADIN"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.19615270711067012}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -2.5673513412475586, -0.0001621246337890625, -0.0007271752692759037, -6.4849853515625e-05, -0.0001907348050735891, 0.0, -0.005628085229545832, 0.0, -0.5062408447265625, -5.340576171875e-05, -0.0007762908935546875, 0.0, -0.004504203796386719, 0.0, -1.9073486328125e-06, -0.0012788772583007812, -5.7220458984375e-06, -8.785724639892578e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -0.00060272216796875, -0.000476837158203125, -7.62939453125e-05, -0.0001430511474609375, -0.012365341186523438, -3.62396240234375e-05, 0.0, -0.00020611286163330078, -2.47955322265625e-05, -3.0517578125e-05, -0.0002155303955078125, -3.814697265625e-06, -0.0012853207299485803, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.0007460849592462182, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.1065658735314656}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PRIEST", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -0.09468460083007812, -0.012624740600585938, -0.0004787421494256705, -0.0019626617431640625, -0.0004499302594922483, 0.0, -0.0017622351879253983, 0.0, -3.1527099609375, -1.1920928244535389e-07, -0.28365135192871094, 0.0, -0.005337715148925781, 0.0, -4.57763671875e-05, -0.0003986358642578125, -2.86102294921875e-05, -7.271766662597656e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.0004520416259765625, -0.000255584716796875, -9.5367431640625e-05, -0.000213623046875, -0.0068912506103515625, -3.814697265625e-05, 0.0, -0.0001811981201171875, -1.9073486328125e-05, -2.6702880859375e-05, -0.0001697540283203125, -1.9073486328125e-06, -0.0009512092219665647, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -0.0007162802503444254, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "PRIEST"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.567499848504589}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -2.5673513412475586, -0.0001621246337890625, -0.0007271752692759037, -6.4849853515625e-05, -0.0001907348050735891, 0.0, -0.005628085229545832, 0.0, -1.637495994567871, -1.9073486328125e-06, -0.03705120086669922, 0.0, -0.0040950775146484375, 0.0, -9.5367431640625e-06, -0.0009517669677734375, -3.814697265625e-06, -5.543231964111328e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -0.000652313232421875, -0.0004940032958984375, -5.91278076171875e-05, -0.0001468658447265625, -0.014400482177734375, -3.814697265625e-05, 0.0, -0.00020802021026611328, -2.288818359375e-05, -2.86102294921875e-05, -0.0002079010009765625, -3.814697265625e-06, -0.0013199219247326255, -4.38690185546875e-05, 0.0, -1.9073486328125e-06, -0.0007388110971078277, -2.0265579223632812e-06], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template4", "hole2": "MAGE"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.275391647519392}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -2.5673513412475586, -0.0001621246337890625, -0.0007271752692759037, -6.4849853515625e-05, -0.0001907348050735891, 0.0, -0.005628085229545832, 0.0, -2.22891902923584, 0.0, -0.0018491744995117188, 0.0, -0.0042667388916015625, 0.0, -5.7220458984375e-06, -0.0010089874267578125, -5.7220458984375e-06, -8.022785186767578e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -0.0005035400390625, -0.0003566741943359375, -8.20159912109375e-05, -0.000156402587890625, -0.014661788940429688, -3.814697265625e-05, 0.0, -0.00019276142120361328, -2.09808349609375e-05, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -0.0012339245295152068, -4.00543212890625e-05, 0.0, -1.9073486328125e-06, -0.0007323746103793383, -2.0265579223632812e-06], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template4", "hole2": "PALADIN"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.8317510111227975}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -5.03773307800293, -0.0005474090576171875, -0.04371253401041031, -8.96453857421875e-05, -0.0003739595122169703, -4.38690185546875e-05, -0.002974762348458171, -3.814697265625e-06, -0.9331741333007812, -1.9073486328125e-06, -0.0004673004150390625, 0.0, -0.004078865051269531, 0.0, -3.814697265625e-06, -0.0007562637329101562, -9.5367431640625e-06, -9.846687316894531e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -3.576278118089249e-07, -0.0003757476806640625, -0.000431060791015625, -7.05718994140625e-05, -0.0001583099365234375, -0.009675979614257812, -3.24249267578125e-05, 0.0, -0.000202178955078125, -1.9073486328125e-05, -2.86102294921875e-05, -0.0002155303955078125, -1.9073486328125e-06, -0.0008831016020849347, -5.91278076171875e-05, 0.0, -1.9073486328125e-06, -0.0007496711332350969, -2.0265579223632812e-06], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template5", "hole2": "PALADIN"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.0402144196704555}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -2.5673513412475586, -0.0001621246337890625, -0.0007271752692759037, -6.4849853515625e-05, -0.0001907348050735891, 0.0, -0.005628085229545832, 0.0, -3.447171211242676, -1.9073486328125e-06, -0.0023469924926757812, 0.0, -0.004254341125488281, 0.0, -1.71661376953125e-05, -0.0021791458129882812, -1.9073486328125e-06, -6.687641143798828e-05, 0.0, 0.0, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0004558563232421875, -0.0004978179931640625, -6.103515625e-05, -0.00018310546875, -0.01119232177734375, -3.4332275390625e-05, 0.0, -0.000194549560546875, -2.09808349609375e-05, -2.6702880859375e-05, -0.0001983642578125, -3.814697265625e-06, -0.0014917467487975955, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -0.0007272480288520455, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template4", "hole2": "HUNTER"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.0485275924874955}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 83, 176, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "ROGUE", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -2.5673513412475586, -0.0001621246337890625, -0.0007271752692759037, -6.4849853515625e-05, -0.0001907348050735891, 0.0, -0.005628085229545832, 0.0, -3.467863082885742, -0.0003814697265625, -0.00537872314453125, 0.0, -0.005194664001464844, 0.0, -7.62939453125e-06, -0.0024003982543945312, -3.814697265625e-06, -9.739398956298828e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -0.0006084442138671875, -0.000484466552734375, -5.91278076171875e-05, -0.0001468658447265625, -0.013029098510742188, -3.4332275390625e-05, 0.0, -0.0001964569091796875, -2.09808349609375e-05, -3.0517578125e-05, -0.000213623046875, -1.9073486328125e-06, -0.0014244494959712029, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -0.0007372592808678746, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template4", "hole2": "ROGUE"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.07571690091568}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -0.09468460083007812, -0.012624740600585938, -0.0004787421494256705, -0.0019626617431640625, -0.0004499302594922483, 0.0, -0.0017622351879253983, 0.0, -6.0269269943237305, 0.0, -0.00713348388671875, 0.0, -0.0049037933349609375, 0.0, -2.47955322265625e-05, -0.0009002685546875, -2.47955322265625e-05, -4.0650367736816406e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -5.960462772236497e-07, -0.000415802001953125, -0.0003833770751953125, -8.392333984375e-05, -0.000148773193359375, -0.008069992065429688, -3.4332275390625e-05, 0.0, -0.000186920166015625, -1.71661376953125e-05, -3.0517578125e-05, -0.000194549560546875, -1.9073486328125e-06, -0.0010083499364554882, -4.1961669921875e-05, 0.0, -1.9073486328125e-06, -0.000721647054888308, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "HUNTER"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.166498913793291}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "MAGE", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -0.09468460083007812, -0.012624740600585938, -0.0004787421494256705, -0.0019626617431640625, -0.0004499302594922483, 0.0, -0.0017622351879253983, 0.0, -6.102475643157959, 0.0, -0.014911651611328125, 0.0, -0.007271766662597656, 0.0, -4.9591064453125e-05, -0.0003814697265625, -3.0517578125e-05, -5.650520324707031e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.0003795623779296875, -0.00029754638671875, -7.82012939453125e-05, -0.0002269744873046875, -0.0072383880615234375, -3.62396240234375e-05, 0.0, -0.000186920166015625, -1.9073486328125e-05, -2.6702880859375e-05, -0.00017547607421875, -1.9073486328125e-06, -0.0009384580189362168, -3.814697265625e-05, 0.0, -1.9073486328125e-06, -0.0007136594504117966, -1.1920928244535389e-07], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "MAGE"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.250737168724228}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -5.03773307800293, -0.0005474090576171875, -0.04371253401041031, -8.96453857421875e-05, -0.0003739595122169703, -4.38690185546875e-05, -0.002974762348458171, -3.814697265625e-06, -1.1690444946289062, -1.1444091796875e-05, -9.1552734375e-05, 0.0, -0.0037126541137695312, 0.0, -1.9073486328125e-06, -0.0030336380004882812, -7.62939453125e-06, -8.797645568847656e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -4.768370445162873e-07, -0.0006084442138671875, -0.0009746551513671875, -6.866455078125e-05, -0.0001277923583984375, -0.010725021362304688, -3.0517578125e-05, 0.0, -0.00019848346710205078, -2.6702880859375e-05, -3.62396240234375e-05, -0.000247955322265625, -1.9073486328125e-06, -0.0008944279979914427, -6.29425048828125e-05, 0.0, -1.9073486328125e-06, -0.0007609977037645876, -2.0265579223632812e-06], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template5", "hole2": "HUNTER"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.279475096394769}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Gallywix's", " ", "Blade", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__(\"Gallywix's Blade\", 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4)\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -5.6637115478515625, -0.000293731689453125, -3.4332275390625e-05, -7.2479248046875e-05, -0.0003204345703125, -3.4332275390625e-05, -4.00543212890625e-05, -0.0024988651275634766, -4.76837158203125e-05, -0.000667572021484375, -3.4332275390625e-05, -0.0002765655517578125, -7.62939453125e-06, -0.0012683868408203125, -0.000110626220703125, 0.0, -0.00067901611328125, 0.0, -2.8252559786778875e-05, -4.1961669921875e-05, -3.62396240234375e-05, 0.0, -0.00090789794921875, -9.34600830078125e-05, -1.9073486328125e-05, -0.3495819866657257, -0.022347450256347656, -0.0026778115425258875, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.014725139364600182, -0.0002574920654296875, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.0002117156982421875, 0.0, -0.3001432418823242, 0.0, -0.0002536773681640625, 0.0, -5.7220458984375e-06, 0.0, -0.0004940032958984375, 0.0, -0.1945056915283203, -1.9073486328125e-06, -0.00077056884765625, -0.000579833984375, -0.0010311603546142578, -2.1457672119140625e-06, -0.030388832092285156, -5.7220458984375e-06, -0.005280494689941406, 0.0, -2.47955322265625e-05, -0.0001659393310546875, -1.9073486328125e-06, -4.971027374267578e-05, 0.0, 0.0, -9.5367431640625e-06, -3.576278118089249e-07, -0.0015411376953125, -0.0009136199951171875, -0.0001163482666015625, -8.0108642578125e-05, -0.000728607177734375, -2.09808349609375e-05, 0.0, -0.00021183490753173828, -8.392333984375e-05, -1.71661376953125e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.0020516274962574244, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0005926539888605475, -2.0265579223632812e-06], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gallywix's Blade", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.6044380078691844}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "stealth", "<EOS>", 20, 126, "True", "<EOS>", 52, 158, "6", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4, stealth=True, enrage=[Aura(ChangeAttack(6),\n            SelfSelector())])\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -0.09468460083007812, -0.012624740600585938, -0.0004787421494256705, -0.0019626617431640625, -0.0004499302594922483, 0.0, -0.0017622351879253983, 0.0, -0.05918121337890625, 0.0, -0.009648323059082031, 0.0, -0.0027914047241210938, 0.0, -3.0517578125e-05, -0.000377655029296875, -2.47955322265625e-05, -5.9604644775390625e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.0002536773681640625, -0.000225067138671875, -0.00011444091796875, -0.0001888275146484375, -5.161898612976074, -6.67572021484375e-05, 0.0, -0.0037660598754882812, -4.00543212890625e-05, -5.7220458984375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.00030737981433048844, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -0.0022059225011616945, -1.9073486328125e-06, -0.035363197326660156, -0.007897377014160156, -5.7220458984375e-05, -1.189539909362793, -1.9073486328125e-06, -0.0002422332763671875, -5.53131103515625e-05, -0.0006219148635864258, -3.814697265625e-06, -0.8680267333984375, -0.07804012298583984, -0.34737691283226013, -1.9073486328125e-06], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "PALADIN"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole0": 6, "_type": "Template20"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.883714522307791}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Blade", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "<UNK>", " ", "Blade", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "stealth", "<EOS>", 20, 126, "True", "<EOS>", 51, 148, "Did", "Damage", "<EOS>", "Kill", "<EOS>", "Target", "Selector", "<EOS>", 208, 49, 174, "Is", "Minion", "<EOS>"], "inferred_code": "class <UNK>Blade(WeaponCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Blade', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 4, stealth=True, effects=[Effect(DidDamage(),\n            ActionTag(Kill(), TargetSelector(IsMinion())))])\n", "score_history": [-0.0001926422119140625, -0.000148773193359375, -1.71661376953125e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.00021576705330517143, -0.001628267695195973, -1.1920928244535389e-07, 0.0, -1.9073486328125e-05, -1.9073486328125e-06, -0.0005998611450195312, -0.0001201629638671875, -0.000152587890625, -5.340576171875e-05, -0.09468460083007812, -0.012624740600585938, -0.0004787421494256705, -0.0019626617431640625, -0.0004499302594922483, 0.0, -0.0017622351879253983, 0.0, -0.05918121337890625, 0.0, -0.009648323059082031, 0.0, -0.0027914047241210938, 0.0, -3.0517578125e-05, -0.000377655029296875, -2.47955322265625e-05, -5.9604644775390625e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -3.576278118089249e-07, -0.0002536773681640625, -0.000225067138671875, -0.00011444091796875, -0.0001888275146484375, -5.161898612976074, -6.67572021484375e-05, 0.0, -0.0037660598754882812, -4.00543212890625e-05, -5.7220458984375e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.00030737981433048844, -1.33514404296875e-05, 0.0, -3.814697265625e-06, -0.0022059225011616945, -1.9073486328125e-06, -0.035363197326660156, -0.007897377014160156, -5.7220458984375e-05, -1.189539909362793, -1.9073486328125e-06, -0.0002422332763671875, -5.53131103515625e-05, -0.0006219148635864258, -3.814697265625e-06, -0.7914361953735352, -0.45352792739868164, -0.3493086099624634, -0.11584532260894775, -0.0009522437467239797, -0.9201987981796265, -9.5367431640625e-06, -0.0271989107131958, -0.0002453327178955078, -1.1920928244535389e-07, -1.71661376953125e-05, -0.1494007110595703, -1.1444091796875e-05, -0.10845363140106201, -0.018042445182800293, -2.86102294921875e-05], "model_output": {"body": [{"name": "<UNK>Blade", "body": [{"hole1": 5, "hole0": "<UNK> Blade", "_type": "Template6", "hole2": "PALADIN"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "stealth", "_type": "keyword"}, {"hole4": [{"hole0": "IsMinion", "_type": "Template38"}], "hole1": "Kill", "hole3": "TargetSelector", "hole0": "DidDamage", "_type": "Template12"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.524945850498554}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-0.0001926422119140625, -0.000148773193359375, -21.699522018432617], "model_output": {"body": [], "_type": "Module"}, "score": -21.69986343383789}]}
{"gold_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -0.5039854049682617, -0.0013885498046875, -0.0006062407046556473, -3.302092227386311e-05, -3.0398367016459815e-05, -1.9073486328125e-06, -0.0005194200202822685, -2.765655517578125e-05, -0.0003650188446044922, -2.0265579223632812e-06, -0.10265159606933594, -2.09808349609375e-05, -0.0003337302478030324, -4.529942543740617e-06, -0.0008807495469227433, -0.0002818107604980469], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.6287260451085785}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -0.27538108825683594, -0.0001544952392578125, -1.645074735279195e-05, -7.164468115661293e-05, -7.569788431283087e-05, -3.814697265625e-06, -0.0001493692398071289, -6.4373016357421875e-06, -0.08359658718109131, -1.1563301086425781e-05, -0.0003479713632259518, -8.106231689453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, 0.0, -0.1385747194290161, -0.0003261566162109375, -8.392333984375e-05, -5.7220458984375e-06, -0.0002064490836346522, -2.861018856492592e-06, -0.0011543497676029801, -1.9669532775878906e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boulderfist Ogre", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 6, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.527348877194072}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -0.27538108825683594, -0.0001544952392578125, -1.645074735279195e-05, -7.164468115661293e-05, -7.569788431283087e-05, -3.814697265625e-06, -0.0001493692398071289, -6.4373016357421875e-06, -0.08359658718109131, -1.1563301086425781e-05, -0.0003479713632259518, -8.106231689453125e-06, -1.33514404296875e-05, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -5.14984130859375e-05, 0.0, -2.506345748901367, -5.1975250244140625e-05, -0.0001697540283203125, -5.7220458984375e-06, -0.0003297975636087358, -2.50339189733495e-06, -0.001042788615450263, -2.9325485229492188e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boulderfist Ogre", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 6, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8949526416422486}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "7", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, stealth=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -0.5039854049682617, -0.0013885498046875, -0.0006062407046556473, -3.302092227386311e-05, -3.0398367016459815e-05, -1.9073486328125e-06, -0.0005194200202822685, -2.765655517578125e-05, -0.0003650188446044922, -2.0265579223632812e-06, -2.333132743835449, -0.000270843505859375, -2.074220174108632e-05, -1.1920922133867862e-06, -0.0030179431196302176, -1.5258781786542386e-05, -1.1289832592010498, -0.0001125335693359375, -0.00058746337890625, -0.0037975311279296875, -0.0003509521484375, -3.4332275390625e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9948774429442437}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, charge=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -0.5039854049682617, -0.0013885498046875, -0.0006062407046556473, -3.302092227386311e-05, -3.0398367016459815e-05, -1.9073486328125e-06, -0.0005194200202822685, -2.765655517578125e-05, -0.0003650188446044922, -2.0265579223632812e-06, -2.333132743835449, -0.000270843505859375, -2.074220174108632e-05, -1.1920922133867862e-06, -0.0030179431196302176, -1.5258781786542386e-05, -1.408628225326538, 0.0, -0.0009822845458984375, -0.00235748291015625, -0.0002307891845703125, -6.67572021484375e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.2732769104125055}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -4.103330612182617, -0.0002422332763671875, -9.0000219643116e-05, -1.633167266845703e-05, -0.0005475282669067383, -9.5367431640625e-06, -0.0010154247283935547, -3.3378591979271732e-06, -4.38690185546875e-05, -3.814697265625e-06, -0.24814891815185547, -1.71661376953125e-05, -0.00012110928946640342, -1.311301275563892e-06, -0.001274673268198967, -3.8504600524902344e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template5", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.372497375026796}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class Boulderfist<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -4.124454021453857, -0.0012499926378950477, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -6.198883056640625e-06, -0.00016224384307861328, -0.0002079010009765625, -9.5367431640625e-06, -0.24952030181884766, -0.0011386871337890625, -0.00043728738091886044, -3.540510078892112e-05, -3.2067298889160156e-05, -1.9073486328125e-06, -0.00046195928007364273, -2.1696090698242188e-05, -0.0003420114517211914, -2.1457672119140625e-06, -0.08098602294921875, -1.9073486328125e-05, -0.00031049191602505744, -4.6491513785440475e-06, -0.0008553734514862299, -0.00028192996978759766], "model_output": {"body": [{"name": "Boulderfist<UNK>", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.460933673039108}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -0.27538108825683594, -0.0001544952392578125, -1.645074735279195e-05, -7.164468115661293e-05, -7.569788431283087e-05, -3.814697265625e-06, -0.0001493692398071289, -6.4373016357421875e-06, -3.136561632156372, 0.0, -0.00016033642168622464, -3.933906555175781e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, 0.0, -0.1564093828201294, -0.0003032684326171875, -7.43865966796875e-05, -3.814697265625e-06, -0.0002945226151496172, -2.622600959512056e-06, -0.0012172856368124485, -2.1576881408691406e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boulderfist Ogre", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 6, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.598054024305611}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Boulderfist", " ", "Ogre", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.LEGENDARY, True, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -1.4311542510986328, -2.09808349609375e-05, -2.288818359375e-05, -0.11377525329589844, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, -0.000713348388671875, -1.9073486328125e-06, -0.009485244750976562, -0.000217437744140625, -2.288818359375e-05, -2.6106808945769444e-05, -2.372264862060547e-05, -0.0002412795729469508, 0.0, -0.000568389892578125, -1.9073486328125e-06, -0.11625713109970093, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0062580108642578125, 0.0, -1.1007757186889648, -2.6702880859375e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -5.960462772236497e-07, -0.3277778625488281, 0.0, -0.000446319580078125, -0.0006885528564453125, -0.000217437744140625, -1.9073486328125e-06, -0.0006771087646484375, 0.0, -2.47955322265625e-05, 0.0, -0.0011386871337890625, 0.0, -0.6013127565383911, -0.000614166259765625, -9.5367431640625e-05, -3.814697265625e-06, -0.00028761065914295614, -5.960462772236497e-07, -0.0021836860105395317, -0.00012099742889404297], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.742526060011755}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Boulderfist", " ", "Ogre", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, True, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -1.4311542510986328, -2.09808349609375e-05, -2.288818359375e-05, -0.11377525329589844, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, -0.000713348388671875, -1.9073486328125e-06, -0.009485244750976562, -0.000217437744140625, -2.288818359375e-05, -2.6106808945769444e-05, -2.372264862060547e-05, -0.0002412795729469508, 0.0, -0.000568389892578125, -1.9073486328125e-06, -0.11625713109970093, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0062580108642578125, 0.0, -1.2616100311279297, -7.62939453125e-06, -3.814697265625e-06, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -3.4332275390625e-05, -9.536738616588991e-07, -0.45611095428466797, 0.0, -0.0007781982421875, -0.00113677978515625, -0.0002766847610473633, -3.814697265625e-06, -0.001190185546875, 0.0, -2.288818359375e-05, 0.0, -0.00054168701171875, -1.1920928244535389e-07, -0.7492611408233643, -0.0005397796630859375, -9.1552734375e-05, -3.814697265625e-06, -0.0002658013836480677, -7.152555099310121e-07, -0.0022116738837212324, -0.00014197826385498047], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.180314406997461}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Boulderfist", " ", "Ogre", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DREAM", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.DREAM,\n            CARD_RARITY.LEGENDARY, True, MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -1.4311542510986328, -2.09808349609375e-05, -2.288818359375e-05, -0.11377525329589844, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, -0.000713348388671875, -1.9073486328125e-06, -0.009485244750976562, -0.000217437744140625, -2.288818359375e-05, -2.6106808945769444e-05, -2.372264862060547e-05, -0.0002412795729469508, 0.0, -0.000568389892578125, -1.9073486328125e-06, -0.11625713109970093, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0062580108642578125, 0.0, -1.349675178527832, -0.0001697540283203125, -1.1444091796875e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -4.57763671875e-05, -7.152555099310121e-07, -0.7705154418945312, 0.0, -0.00057220458984375, -0.000911712646484375, -0.0002231597900390625, -1.9073486328125e-06, -0.0005950927734375, 0.0, -2.09808349609375e-05, 0.0, -0.000751495361328125, 0.0, -0.669714093208313, -0.0005359649658203125, -9.5367431640625e-05, -3.814697265625e-06, -0.00027104519540444016, -7.152555099310121e-07, -0.0022878497838974, -0.00013446807861328125], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "DREAM"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.502579912555575}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Boulderfist", " ", "Ogre", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, True, MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -1.0091524124145508, -2.86102294921875e-05, -1.5139577953959815e-05, -3.2782554626464844e-05, -1.1444091796875e-05, -3.0517578125e-05, -3.814697265625e-06, -2.0146346287219785e-05, -2.551055331423413e-05, -0.000156402587890625, -1.4311542510986328, -2.09808349609375e-05, -2.288818359375e-05, -0.11377525329589844, -1.9073486328125e-05, -7.62939453125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-05, -5.7220458984375e-06, -0.000713348388671875, -1.9073486328125e-06, -0.009485244750976562, -0.000217437744140625, -2.288818359375e-05, -2.6106808945769444e-05, -2.372264862060547e-05, -0.0002412795729469508, 0.0, -0.000568389892578125, -1.9073486328125e-06, -0.11625713109970093, -3.814697265625e-06, -7.62939453125e-06, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0062580108642578125, 0.0, -1.2616100311279297, -7.62939453125e-06, -3.814697265625e-06, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -3.4332275390625e-05, -9.536738616588991e-07, -0.45611095428466797, 0.0, -0.0007781982421875, -0.00113677978515625, -0.0002766847610473633, -3.814697265625e-06, -0.001190185546875, 0.0, -2.288818359375e-05, 0.0, -0.00054168701171875, -1.1920928244535389e-07, -1.265413522720337, -0.000507354736328125, -0.000240325927734375, -1.9073486328125e-06, -4.815939246327616e-05, -1.311301275563892e-06, -0.0017239850712940097, -0.00014972686767578125], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boulderfist Ogre", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.6958842436583765}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 72, 145, "6", "<EOS>", "7", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(6, 7, stealth=True)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -4.103330612182617, -0.0002422332763671875, -9.0000219643116e-05, -1.633167266845703e-05, -0.0005475282669067383, -9.5367431640625e-06, -0.0010154247283935547, -3.3378591979271732e-06, -4.38690185546875e-05, -3.814697265625e-06, -1.5173282623291016, -0.000598907470703125, -2.2291887944447808e-05, -8.344646857949556e-07, -0.0053157140500843525, -1.2993807104066946e-05, -0.28757035732269287, -0.0001068115234375, -0.00228118896484375, -0.006146430969238281, -0.000469207763671875, -3.4332275390625e-05], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template5", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.942783025106678}, {"choice_history": [55, 124, 221, 63, 103, "Boulderfist", "Ogre", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Boulderfist", " ", "Ogre", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", 73, 146, "6", "<EOS>", "7", "<EOS>"], "inferred_code": "class BoulderfistOgre(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boulderfist Ogre', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(6, 7)\n", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -1.1444091796875e-05, -5.7220458984375e-06, -3.814697265625e-06, -0.00034127046819776297, -0.016861680895090103, -3.302042750874534e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -5.9604644775390625e-06, -0.00019276142120361328, -0.0001010894775390625, -7.62939453125e-06, -6.075962066650391, -0.000148773193359375, -4.5894983486505225e-05, -9.894371032714844e-06, -0.0009194612503051758, -3.814697265625e-06, -0.0004847828531637788, -8.737722964724526e-05, -0.0007841587066650391, -1.1682510375976562e-05, -0.03703498840332031, -1.71661376953125e-05, -0.00019107421394437551, -6.318072337307967e-06, -0.0013336651027202606, -0.00015532970428466797], "model_output": {"body": [{"name": "BoulderfistOgre", "body": [{"hole1": 6, "hole0": "Boulderfist Ogre", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.1347894516929955}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -1.33514404296875e-05, -20.933059692382812], "model_output": {"body": [], "_type": "Module"}, "score": -20.933074951171875}]}
{"gold_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.weapon.base_attack += 2\n        player.hero.change_temp_attack(2)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and player.weapon is not None\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(1)\n        player.hero.increase_armor(1)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -0.29147911071777344, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -9.977815352613106e-05, -0.683527946472168, -0.1119070053100586, -0.014597674831748009, -5.388134377426468e-05, -0.00930023193359375, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0004978179931640625, 0.0, -0.3062019348144531, -2.3841855067985307e-07, -0.0032790403347462416, -3.8146954466355965e-06, -0.0525667667388916, -1.1920928244535389e-07, -0.001415252685546875, -0.009188652038574219, -1.9073486328125e-06, -0.02977796643972397, -7.62939453125e-06], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 1, "_type": "Template29"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.3407010328950903}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(1)\n        player.hero.increase_armor(1)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -1.1054059267044067, 0.0, -0.19867706298828125, 0.0, -8.225440979003906e-06, 0.0, 0.0, -4.38690185546875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.000141143798828125, -9.5367431640625e-06, -0.2920560836791992, -6.4849853515625e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.00010168550215894356, -0.6724748611450195, -0.10930061340332031, -0.014644498005509377, -5.3046922403154895e-05, -0.008862495422363281, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, 0.0, -0.000492095947265625, 0.0, -0.30829715728759766, -2.3841855067985307e-07, -0.003283808473497629, -3.8146954466355965e-06, -0.05222725868225098, -1.1920928244535389e-07, -0.0014095306396484375, -0.009190559387207031, -1.9073486328125e-06, -0.029769865795969963, -7.62939453125e-06], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 1, "_type": "Template29"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.8860483451771373}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -1.5061264038085938, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.767005182453431e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, -7.200240361271426e-05, -0.06873607635498047, -7.62939453125e-06, -0.000217437744140625, 0.0, -0.10582923144102097, -5.0901166105177253e-05, -0.000553131103515625, 0.0, -0.2711181640625, 0.0, -0.0022735595703125, -8.344646857949556e-07, -0.0007427928503602743, -1.9073486328125e-06, -0.0005054473876953125, -0.09722042083740234, 0.0, -3.814697265625e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.00012969970703125, -0.06884956359863281, 0.0, -0.00781869888305664, -3.611976353568025e-05, -0.42310917377471924, -3.814697265625e-06, -1.1444091796875e-05, -0.0018978118896484375, -2.288818359375e-05, -6.4849853515625e-05, 0.0, -0.0038465261459350586, -0.012128233909606934, -0.0006504058837890625, -0.0001983642578125, -4.57763671875e-05, -0.029823418706655502, -0.017572838813066483], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.446196260750291}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.add_buff(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -1.1054059267044067, 0.0, -0.19867706298828125, 0.0, -8.225440979003906e-06, 0.0, 0.0, -4.38690185546875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.000141143798828125, -9.5367431640625e-06, -1.4972667694091797, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.767005182453431e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, -7.200240361271426e-05, -0.06899070739746094, -7.62939453125e-06, -0.00022125244140625, 0.0, -0.10586952418088913, -5.0781964091584086e-05, -0.0005550384521484375, 0.0, -0.26862621307373047, 0.0, -0.0022735595703125, -8.344646857949556e-07, -0.0007437465246766806, -1.9073486328125e-06, -0.0005016326904296875, -0.097686767578125, 0.0, -3.814697265625e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.00012969970703125, -0.06870269775390625, 0.0, -0.00783395767211914, -3.611976353568025e-05, -0.4210015535354614, -3.814697265625e-06, -1.1444091796875e-05, -0.001911163330078125, -2.288818359375e-05, -6.4849853515625e-05, 0.0, -0.0038303136825561523, -0.012168288230895996, -0.0006504058837890625, -0.0001983642578125, -4.57763671875e-05, -0.029815776273608208, -0.017561275511980057], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.990462352423144}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 39, 130, "1", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(1)\n        player.hero.change_temp_attack(2)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -0.29147911071777344, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -9.977815352613106e-05, -2.020660400390625, -8.96453857421875e-05, -0.04967498779296875, -0.000209808349609375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.004611968994140625, -4.768370445162873e-07, -9.655952453613281e-06, -3.576278118089249e-07, -0.17509663105010986, -2.1457672119140625e-06, -0.0001316070556640625, -0.06402206420898438, -1.9073486328125e-06, -0.22797974944114685, -3.0517578125e-05, -0.23612117767333984, -0.00148773193359375, -0.19424675405025482, -7.62939453125e-06], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.092815590183179}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 68, 113, "hearthbreaker.cards.minions.druid", "<EOS>", 198, 193, "weapon", "<EOS>", "0", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import weapon\n        player.hero.increase_armor(1)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -0.29147911071777344, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -9.977815352613106e-05, -1.5189199447631836, -0.013317108154296875, -0.03801107406616211, -1.0251987987430766e-05, -0.009694099426269531, -0.0016870498657226562, -0.1384359747171402, -0.028330903500318527, -0.04049109295010567, 0.0, -0.9498357772827148, -1.9073486328125e-06, -3.24249267578125e-05, -3.4332275390625e-05, -3.814697265625e-06, 0.0, -0.0001392364501953125, 0.0, -0.000820159912109375, 0.0, -0.4864816665649414, -1.1920928244535389e-07, -0.005264103878289461, -2.9802276912960224e-06, -0.05887579917907715, 0.0, -0.00025177001953125, -0.016733169555664062, -1.9073486328125e-06, -0.05450506508350372, -5.7220458984375e-06], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"module": "hearthbreaker.cards.minions.druid", "level": 0, "_type": "ImportFrom", "names": [{"name": "weapon", "_type": "alias"}]}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.480191943778188}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(1)\n        self.target.add_buff(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -0.29147911071777344, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -9.977815352613106e-05, -0.683527946472168, -0.1119070053100586, -0.014597674831748009, -5.388134377426468e-05, -0.00930023193359375, -1.52587890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0004978179931640625, 0.0, -1.3369321823120117, 0.0, -2.47955322265625e-05, -9.536738616588991e-07, -0.6319077014923096, 0.0, -4.76837158203125e-05, -0.42333316802978516, -0.0010013580322265625, -0.05489349365234375, 0.0, -0.002972126007080078, -0.01481485366821289, -0.0015735626220703125, -2.47955322265625e-05, -2.09808349609375e-05, -0.06042229384183884, -0.018216367810964584], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 1, "_type": "Template29"}, {"value": {"args": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.48444402753465}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card.add_buff(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -1.627253532409668, -0.0019016265869140625, -9.5367431640625e-06, -8.7738037109375e-05, -0.0067920684814453125, -4.00543212890625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.2917766571044922, 0.0, -0.0004712343215942383, -2.0265579223632812e-06, -0.6392332315444946, -5.7220458984375e-06, -0.9423452615737915, -5.841255187988281e-06, -0.00890350341796875, -0.0002193450927734375, -0.00151824951171875, -0.0001964569091796875, 0.0, -0.2609928846359253, -0.0012135505676269531, -0.0031280517578125, -1.1444091796875e-05, 0.0, -0.13464859127998352, -0.021483419463038445], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"hole1": "add_buff", "hole0": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Template1", "hole2": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.548560406282824}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in player.minions:\n            minion.<UNK>(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -1.5061264038085938, -9.5367431640625e-06, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -3.767005182453431e-05, 0.0, -3.0517578125e-05, 0.0, -5.7220458984375e-06, -2.288818359375e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -1.71661376953125e-05, -1.52587890625e-05, -3.62396240234375e-05, -7.200240361271426e-05, -0.06873607635498047, -7.62939453125e-06, -0.000217437744140625, 0.0, -0.10582923144102097, -5.0901166105177253e-05, -0.000553131103515625, 0.0, -0.2711181640625, 0.0, -0.0022735595703125, -8.344646857949556e-07, -0.0007427928503602743, -1.9073486328125e-06, -0.0005054473876953125, -0.09722042083740234, 0.0, -3.814697265625e-06, -3.24249267578125e-05, -5.7220458984375e-06, -0.00012969970703125, -0.06884956359863281, 0.0, -0.00781869888305664, -3.611976353568025e-05, -1.4261418581008911, -2.2649765014648438e-06, -3.814697265625e-06, -0.02962970733642578, -0.0065479278564453125, -0.0002193450927734375, 0.0, -0.12733781337738037, -0.001493215560913086, -0.000209808349609375, -0.000640869140625, -1.1444091796875e-05, -0.023396166041493416, -0.01156399305909872], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.584018941856918}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 39, 130, "1", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>(1)\n        player.hero.change_temp_attack(2)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -1.1054059267044067, 0.0, -0.19867706298828125, 0.0, -8.225440979003906e-06, 0.0, 0.0, -4.38690185546875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.000141143798828125, -9.5367431640625e-06, -0.2920560836791992, -6.4849853515625e-05, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -0.00010168550215894356, -2.055631637573242, -8.7738037109375e-05, -0.051319122314453125, -0.000209808349609375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -8.96453857421875e-05, 0.0, -0.004680633544921875, -4.768370445162873e-07, -1.1563301086425781e-05, -3.576278118089249e-07, -0.1748563051223755, -2.1457672119140625e-06, -0.0001316070556640625, -0.06379985809326172, -1.9073486328125e-06, -0.22884923219680786, -3.0517578125e-05, -0.22602176666259766, -0.0014896392822265625, -0.19441980123519897, -7.62939453125e-06], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.677637812779537}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.card.add_buff(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -1.1054059267044067, 0.0, -1.732773780822754, -0.001556396484375, -1.33514404296875e-05, -5.91278076171875e-05, -0.011194229125976562, -2.6702880859375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.4487800598144531, 0.0, -0.0004292726516723633, -2.1457672119140625e-06, -0.3602747917175293, -3.814697265625e-06, -0.9183121919631958, -9.655952453613281e-06, -0.0089874267578125, -0.0002307891845703125, -0.0016765594482421875, -0.00012969970703125, 0.0, -0.2165745496749878, -0.0019479990005493164, -0.0023059844970703125, -9.5367431640625e-06, 0.0, -0.1501232236623764, -0.021638033911585808], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "PALADIN"}, {"hole1": "add_buff", "hole0": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}, "_type": "Template1", "hole2": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.061495523175829}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 68, 113, "hearthbreaker.cards.minions.druid", "<EOS>", 198, 193, "weapon", "<EOS>", "0", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        from hearthbreaker.cards.minions.druid import weapon\n        for minion in player.minions:\n            minion.card.add_buff(Buff(weapon()))\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -0.29147911071777344, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -9.977815352613106e-05, -1.5189199447631836, -0.013317108154296875, -0.03801107406616211, -1.0251987987430766e-05, -0.009694099426269531, -0.0016870498657226562, -0.1384359747171402, -0.028330903500318527, -0.04049109295010567, 0.0, -0.5455780029296875, -8.392333984375e-05, -8.58306884765625e-05, 0.0, -0.00024127960205078125, -2.145764938177308e-06, -9.34600830078125e-05, 0.0, -0.07793426513671875, 0.0, -0.001598358154296875, -4.768370445162873e-07, -0.000861644628457725, -3.814697265625e-06, -0.0001773834228515625, -0.16188907623291016, 0.0, -5.7220458984375e-06, -0.0001068115234375, -5.7220458984375e-06, -2.09808349609375e-05, -0.12399578094482422, 0.0, -1.71661376953125e-05, 0.0, -0.21037054061889648, -3.3378591979271732e-06, -0.25321877002716064, -1.4305104514278355e-06, -0.7349815368652344, -5.7220458984375e-06, -0.000102996826171875, -0.0003185272216796875, -0.0003719329833984375, -8.392333984375e-05, 0.0, -0.06757164001464844, -0.0007988214492797852, -0.012109756469726562, -9.5367431640625e-05, -1.1444091796875e-05, -0.08340107649564743, -0.029967540875077248], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"module": "hearthbreaker.cards.minions.druid", "level": 0, "_type": "ImportFrom", "names": [{"name": "weapon", "_type": "alias"}]}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "card"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.213318197948624}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Deadly", " ", "Poison", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(3)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -2.760284423828125, -5.7220458984375e-06, -4.5299530029296875e-06, -1.1920928244535389e-07, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -2.3841855067985307e-07, -2.47955322265625e-05, -6.866455078125e-05, -3.62396240234375e-05, -3.814697265625e-06, -0.00234222412109375, -3.814697265625e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.5377907402580604e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.000965118408203125, -5.7220458984375e-05, -0.00019073486328125, -3.993438804172911e-05, -2.288818359375e-05, -1.3589810805569869e-05, 0.0, -5.91278076171875e-05, 0.0, -3.933615516871214e-06, -2.7418097943154862e-06, -1.9073486328125e-06, -4.9591064453125e-05, -1.9073486328125e-05, 0.0, -4.398822784423828e-05, -2.622604142743512e-06, -0.1903057098388672, 0.0, -5.7220458984375e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0001811981201171875, -7.152531907195225e-06, -0.1160898208618164, 0.0, -0.0001125335693359375, -0.0003261566162109375, 0.0, -0.018036961555480957, 0.0, -0.0001087188720703125, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.0002193450927734375, 0.0, -7.05718994140625e-05, 0.0, -0.884445309638977, -3.4809112548828125e-05, -0.07246780395507812, -3.62396240234375e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.53131103515625e-05, -2.145764938177308e-06, -1.9311904907226562e-05, -1.1920928244535389e-07, -1.155089020729065, -2.3841855067985307e-07, -1.9073486328125e-05, -0.001712799072265625, -2.47955322265625e-05, -0.11388298124074936, 0.0], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Deadly Poison", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 3, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.32406991953296}, {"choice_history": [55, 124, 221, 63, 103, "Deadly", "Poison", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Deadly", " ", "Poison", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "weapon", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class DeadlyPoison(SpellCard):\n\n    def __init__(self):\n        super().__init__('Deadly Poison', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(weapon()))\n        player.hero.increase_armor(1)\n", "score_history": [0.0, -3.62396240234375e-05, -1.71661376953125e-05, -5.7220458984375e-05, -9.5367431640625e-06, -5.6622808187967166e-05, -0.00448056124150753, -0.0015313844196498394, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -0.00017368793487548828, -2.205371856689453e-05, -1.9073486328125e-06, -4.9591064453125e-05, -0.07071590423583984, -0.0005855560302734375, -0.0011818574275821447, -6.139278411865234e-05, -7.62939453125e-06, 0.0, -5.602552846539766e-06, -1.1920928244535389e-07, -0.527288556098938, -3.4570634852570947e-06, -0.21972370147705078, 0.0, -8.225440979003906e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -1.1563301086425781e-05, 0.0, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -0.0001468658447265625, -9.5367431640625e-06, -0.29147911071777344, -6.4849853515625e-05, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00015425673336721957, 0.0, -1.33514404296875e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0001068115234375, -3.814697265625e-06, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -9.5367431640625e-06, -3.4332275390625e-05, -9.977815352613106e-05, -2.2376813888549805, -3.0517578125e-05, -0.0002269744873046875, 0.0, -0.00992727279663086, -1.5735502529423684e-05, -0.0010128021240234375, 0.0, -0.5597009658813477, 0.0, -7.62939453125e-06, 0.0, -0.022687911987304688, -3.576278118089249e-07, -0.001633047591894865, 0.0, -0.003410195466130972, -3.814697265625e-06, -0.002475738525390625, -0.0076656341552734375, 0.0, -8.392333984375e-05, -7.62939453125e-06, -1.9073486328125e-05, -5.53131103515625e-05, -0.16404438018798828, 0.0, -0.004080772399902344, -8.630380034446716e-05, -0.562687873840332, -3.814697265625e-06, -1.33514404296875e-05, -0.0004425048828125, -4.76837158203125e-05, -8.0108642578125e-05, 0.0, -0.006590127944946289, -0.0015591381816193461, -0.0005588531494140625, -0.0001621246337890625, -4.1961669921875e-05, -0.03133581206202507, -0.032678574323654175, -0.0014467239379882812, -3.814697265625e-06, -2.288818359375e-05, -0.07889080047607422, -0.0001239776611328125, -1.33514404296875e-05, -0.0010128021240234375, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.43178749084472656, -2.861018856492592e-06, -0.008739626966416836, -7.033342626527883e-06, -0.46850788593292236, 0.0, -0.0018157958984375, -0.012745857238769531, -7.62939453125e-06, -0.2866731286048889, -1.1444091796875e-05], "model_output": {"body": [{"name": "DeadlyPoison", "body": [{"hole1": 1, "hole0": "Deadly Poison", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "weapon", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.061184541164877}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -3.62396240234375e-05, -21.747222900390625], "model_output": {"body": [], "_type": "Module"}, "score": -21.74725914001465}]}
{"gold_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.660578727722168, -3.814697265625e-06, -0.00015007461479399353, -1.2278556823730469e-05, -7.867813110351562e-06, 0.0, -0.00025107921101152897, -2.50339189733495e-06, -0.14227569103240967, 0.0, -0.002072095638141036, -2.50339189733495e-06, -0.0001068115234375, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00018036362598650157, -4.1723224057932384e-06, -5.7220458984375e-06, -0.003650665283203125, -0.0001201629638671875, -0.0223308727145195, -8.058547973632812e-05, -0.012332916259765625, -0.00032806396484375, -0.0001163482666015625, -1.9073486328125e-05, -0.007110831327736378, -0.00036501846625469625, -8.797645568847656e-05, -0.00130462646484375, -0.0024480819702148438, -0.0002956390380859375, -0.0004787445068359375, -2.288818359375e-05, -0.000507354736328125, -3.814697265625e-06, -0.0005072354688309133, -5.14984130859375e-05, 0.0, -6.103515625e-05, -2.86102294921875e-05, -0.0006256103515625, -1.9073486328125e-06, -8.96453857421875e-05, -3.814697265625e-06, -0.0004640817642211914, -0.0010567903518676758, 0.0, -0.000194549560546875, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.56206214427948, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"_type": "Template3", "hole0": "Fire Elemental", "hole4": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.4233084850418436}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.660578727722168, -3.814697265625e-06, -0.00015007461479399353, -1.2278556823730469e-05, -7.867813110351562e-06, 0.0, -0.00025107921101152897, -2.50339189733495e-06, -0.14227569103240967, 0.0, -0.002072095638141036, -2.50339189733495e-06, -0.0001068115234375, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00018036362598650157, -4.1723224057932384e-06, -5.7220458984375e-06, -0.003650665283203125, -0.0001201629638671875, -0.0223308727145195, -8.058547973632812e-05, -0.012332916259765625, -0.00032806396484375, -0.0001163482666015625, -1.9073486328125e-05, -0.007110831327736378, -0.00036501846625469625, -8.797645568847656e-05, -0.00130462646484375, -0.0024480819702148438, -0.0002956390380859375, -0.0004787445068359375, -2.288818359375e-05, -0.000507354736328125, -3.814697265625e-06, -0.0005072354688309133, -5.14984130859375e-05, 0.0, -6.103515625e-05, -2.86102294921875e-05, -0.0006256103515625, -1.9073486328125e-06, -8.96453857421875e-05, -3.814697265625e-06, -0.0004640817642211914, -0.0010567903518676758, 0.0, -0.000194549560546875, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.8440866470336914, -3.3378591979271732e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"_type": "Template3", "hole0": "Fire Elemental", "hole4": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 5, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.7053345375175013}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -0.5002542734146118, 0.0, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, -0.0003299713134765625, -5.1856040954589844e-05, -3.385492891538888e-05, -0.08004951477050781, -5.125993993715383e-06, -0.003749847412109375, -0.0001010894775390625, -1.9073486328125e-06, -0.0014640092849731445, -1.0013580322265625e-05, -1.1444091796875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.0049571990966796875, 0.0, -0.3404655456542969, -0.002409815788269043, -0.000762939453125, -5.7220458984375e-06, -0.0036945343017578125, 0.0, -1.1444091796875e-05, -0.0012683868408203125, -1.52587890625e-05, -1.9073486328125e-06, -0.0007381439208984375, -2.741813204920618e-06, -2.6702880859375e-05, -0.0008134841918945312, -0.0002307891845703125, -0.014009018428623676, -0.00023174285888671875, -0.03529930114746094, -0.0007114410400390625, -7.82012939453125e-05, -1.71661376953125e-05, -0.020028231665492058, -0.0003591754357330501, -7.867813110351562e-05, -0.00151824951171875, -0.0033788681030273438, -0.00055694580078125, -0.0013942718505859375, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-06, -0.0003166198148392141, -5.340576171875e-05, 0.0, -6.866455078125e-05, -3.24249267578125e-05, -0.000614166259765625, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004754066467285156, -0.0010796785354614258, 0.0, -0.0002079010009765625, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.5340087413787842, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.297653900522846}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.<UNK>, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -0.5002542734146118, 0.0, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, -0.0003299713134765625, -5.1856040954589844e-05, -3.385492891538888e-05, -0.08004951477050781, -5.125993993715383e-06, -0.003749847412109375, -0.0001010894775390625, -1.9073486328125e-06, -0.0014640092849731445, -1.0013580322265625e-05, -1.1444091796875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.0049571990966796875, 0.0, -0.3404655456542969, -0.002409815788269043, -0.000762939453125, -5.7220458984375e-06, -0.0036945343017578125, 0.0, -1.1444091796875e-05, -0.0012683868408203125, -1.52587890625e-05, -1.9073486328125e-06, -0.0007381439208984375, -2.741813204920618e-06, -2.6702880859375e-05, -0.0008134841918945312, -0.0002307891845703125, -0.014009018428623676, -0.00023174285888671875, -0.03529930114746094, -0.0007114410400390625, -7.82012939453125e-05, -1.71661376953125e-05, -0.020028231665492058, -0.0003591754357330501, -7.867813110351562e-05, -0.00151824951171875, -0.0033788681030273438, -0.00055694580078125, -0.0013942718505859375, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-06, -0.0003166198148392141, -5.340576171875e-05, 0.0, -6.866455078125e-05, -3.24249267578125e-05, -0.000614166259765625, -1.9073486328125e-06, -9.34600830078125e-05, -5.7220458984375e-06, -0.0004754066467285156, -0.0010796785354614258, 0.0, -0.0002079010009765625, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.882536768913269, -3.3378591979271732e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.646183477778777}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "WARRIOR", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.660578727722168, -3.814697265625e-06, -0.00015007461479399353, -1.2278556823730469e-05, -7.867813110351562e-06, 0.0, -0.00025107921101152897, -2.50339189733495e-06, -2.532086133956909, -9.5367431640625e-06, -0.0013598203659057617, -7.152555099310121e-07, -9.918212890625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.0002000331733142957, -4.1723224057932384e-06, -5.7220458984375e-06, -0.002780914306640625, -0.000110626220703125, -0.022549742832779884, -5.3882598876953125e-05, -0.015837669372558594, -0.0003299713134765625, -0.0001316070556640625, -1.9073486328125e-05, -0.008058545179665089, -0.00036537612322717905, -8.988380432128906e-05, -0.00122833251953125, -0.0023164749145507812, -0.0002880096435546875, -0.0004940032958984375, -2.09808349609375e-05, -0.000514984130859375, -3.814697265625e-06, -0.0005111693753860891, -5.14984130859375e-05, 0.0, -6.103515625e-05, -2.86102294921875e-05, -0.0006237030029296875, -1.9073486328125e-06, -9.1552734375e-05, -3.814697265625e-06, -0.0004717111587524414, -0.0010606050491333008, 0.0, -0.0001964569091796875, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.5609997510910034, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"_type": "Template3", "hole0": "Fire Elemental", "hole4": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "WARRIOR"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.814983005769136}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "WARRIOR", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.660578727722168, -3.814697265625e-06, -0.00015007461479399353, -1.2278556823730469e-05, -7.867813110351562e-06, 0.0, -0.00025107921101152897, -2.50339189733495e-06, -2.532086133956909, -9.5367431640625e-06, -0.0013598203659057617, -7.152555099310121e-07, -9.918212890625e-05, -1.71661376953125e-05, -9.5367431640625e-06, -7.62939453125e-06, -0.0002000331733142957, -4.1723224057932384e-06, -5.7220458984375e-06, -0.002780914306640625, -0.000110626220703125, -0.022549742832779884, -5.3882598876953125e-05, -0.015837669372558594, -0.0003299713134765625, -0.0001316070556640625, -1.9073486328125e-05, -0.008058545179665089, -0.00036537612322717905, -8.988380432128906e-05, -0.00122833251953125, -0.0023164749145507812, -0.0002880096435546875, -0.0004940032958984375, -2.09808349609375e-05, -0.000514984130859375, -3.814697265625e-06, -0.0005111693753860891, -5.14984130859375e-05, 0.0, -6.103515625e-05, -2.86102294921875e-05, -0.0006237030029296875, -1.9073486328125e-06, -9.1552734375e-05, -3.814697265625e-06, -0.0004717111587524414, -0.0010606050491333008, 0.0, -0.0001964569091796875, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.8454961776733398, -3.3378591979271732e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"_type": "Template3", "hole0": "Fire Elemental", "hole4": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "WARRIOR"}, {"hole1": 5, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.099480982072919}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -0.5002542734146118, 0.0, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, -0.0003299713134765625, -5.1856040954589844e-05, -3.385492891538888e-05, -0.08004951477050781, -5.125993993715383e-06, -0.003749847412109375, -0.0001010894775390625, -1.9073486328125e-06, -0.0014640092849731445, -1.0013580322265625e-05, -1.1444091796875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.0049571990966796875, 0.0, -2.2401652336120605, -9.453296661376953e-05, -0.0003566741943359375, -9.5367431640625e-06, -0.0015087127685546875, -1.9073486328125e-06, -1.52587890625e-05, -0.000202178955078125, -1.1444091796875e-05, 0.0, -0.0003262758255004883, -2.622604142743512e-06, -1.9073486328125e-05, -0.0008287429809570312, -0.000274658203125, -0.012721659615635872, -0.00026226043701171875, -0.038115501403808594, -0.0008945465087890625, -8.0108642578125e-05, -1.33514404296875e-05, -0.02355766110122204, -0.00035571795888245106, -0.00010728836059570312, -0.0013666152954101562, -0.002918243408203125, -0.0005245208740234375, -0.0013484954833984375, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00031483167549595237, -5.340576171875e-05, 0.0, -7.2479248046875e-05, -3.0517578125e-05, -0.0006084442138671875, -1.9073486328125e-06, -8.96453857421875e-05, -5.7220458984375e-06, -0.0004677772521972656, -0.0010377168655395508, 0.0, -0.0002079010009765625, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.5300357341766357, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.191594092762898}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -1.95052969455719, -7.62939453125e-06, -0.00016021728515625, 0.0, -0.0001583099365234375, -0.0011844635009765625, -0.0003324747085571289, -3.5523866245057434e-05, -0.3118811845779419, -9.775161743164062e-06, -0.033477783203125, -0.0001544952392578125, 0.0, -0.5877394676208496, 0.0, -0.0002193450927734375, -7.82012939453125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.00023281574249267578, -3.933906555175781e-06, -2.09808349609375e-05, -0.0015411376953125, -0.000331878662109375, -0.03281031921505928, -0.0002353191375732422, -0.038944244384765625, -0.0015735626220703125, -7.05718994140625e-05, -5.7220458984375e-06, -0.009819254279136658, -0.00042533472878858447, -0.0002123117446899414, -0.0012578964233398438, -0.0016679763793945312, -0.00029754638671875, -0.000621795654296875, -1.1444091796875e-05, -0.000209808349609375, -5.7220458984375e-06, -0.00039708608528599143, -5.340576171875e-05, 0.0, -6.866455078125e-05, -2.47955322265625e-05, -0.0006465911865234375, -3.814697265625e-06, -9.918212890625e-05, -7.62939453125e-06, -0.0004736185073852539, -0.0011540651321411133, 0.0, -0.0002117156982421875, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.5460842847824097, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.26660221915904}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "CHARACTER_CLASS", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "<UNK>", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.\n            CHARACTER_CLASS, CARD_RARITY.COMMON, minion_type=MINION_TYPE.\n            <UNK>, battlecry=Battlecry(Damage(2), CharacterSelector(players\n            =BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -2.4679360389709473, 0.0, -1.33514404296875e-05, 0.0, -5.7220458984375e-05, -0.0035009384155273438, -0.0006628036499023438, -0.00014792833826504648, -0.2214338779449463, -7.057171751512215e-05, -0.00244903564453125, -0.0002613067626953125, -1.9073486328125e-06, -0.001744389533996582, -1.2159347534179688e-05, -1.33514404296875e-05, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.00872039794921875, 0.0, -0.2327728271484375, -0.0017936229705810547, -0.000797271728515625, -5.7220458984375e-06, -0.00389862060546875, 0.0, -1.1444091796875e-05, -0.0012798309326171875, -1.52587890625e-05, -1.9073486328125e-06, -0.000690460205078125, -2.622604142743512e-06, -2.86102294921875e-05, -0.0008716583251953125, -0.0002288818359375, -0.01784268021583557, -0.00023555755615234375, -0.03853607177734375, -0.0007991790771484375, -7.43865966796875e-05, -1.1444091796875e-05, -0.01838528923690319, -0.00035083130933344364, -8.428096771240234e-05, -0.0013875961303710938, -0.0033311843872070312, -0.0004901885986328125, -0.001232147216796875, -5.7220458984375e-06, -0.0001430511474609375, -3.814697265625e-06, -0.0003412961377762258, -5.340576171875e-05, 0.0, -7.05718994140625e-05, -3.24249267578125e-05, -0.0006084442138671875, -1.9073486328125e-06, -9.918212890625e-05, -5.7220458984375e-06, -0.0004773139953613281, -0.0011254549026489258, 0.0, -0.0002079010009765625, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.5362346172332764, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "CHARACTER_CLASS"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.312939512386947}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "combo", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, combo=Battlecry(Damage(2), CharacterSelector(\n            players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -1.95052969455719, -7.62939453125e-06, -0.00016021728515625, 0.0, -0.0001583099365234375, -0.0011844635009765625, -0.0003324747085571289, -3.5523866245057434e-05, -0.3118811845779419, -9.775161743164062e-06, -0.033477783203125, -0.0001544952392578125, 0.0, -0.8649182319641113, 0.0, -0.0017261505126953125, -8.7738037109375e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.0002919435501098633, -6.079673767089844e-06, -1.1444091796875e-05, -0.0013713836669921875, -0.00054931640625, -0.022809192538261414, -0.0003039836883544922, -0.0341949462890625, -0.0013484954833984375, -6.866455078125e-05, -3.814697265625e-06, -0.022952310740947723, -0.00041520351078361273, -0.0002849102020263672, -0.0014162063598632812, -0.0023059844970703125, -0.0004367828369140625, -0.0008640289306640625, -9.5367431640625e-06, -0.0001773834228515625, -3.814697265625e-06, -0.0003554820432327688, -5.340576171875e-05, 0.0, -7.43865966796875e-05, -2.86102294921875e-05, -0.0006084442138671875, -1.9073486328125e-06, -0.000102996826171875, -7.62939453125e-06, -0.0004812479019165039, -0.0011559724807739258, 0.0, -0.000209808349609375, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.530724287033081, -1.7881377516459906e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "combo", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.529421574221715}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Damage(2), CharacterSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -0.5002542734146118, 0.0, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, -0.0003299713134765625, -5.1856040954589844e-05, -3.385492891538888e-05, -0.08004951477050781, -5.125993993715383e-06, -0.003749847412109375, -0.0001010894775390625, -1.9073486328125e-06, -0.0014640092849731445, -1.0013580322265625e-05, -1.1444091796875e-05, 0.0, -0.0002918243408203125, -1.9073486328125e-06, -0.0049571990966796875, 0.0, -2.2401652336120605, -9.453296661376953e-05, -0.0003566741943359375, -9.5367431640625e-06, -0.0015087127685546875, -1.9073486328125e-06, -1.52587890625e-05, -0.000202178955078125, -1.1444091796875e-05, 0.0, -0.0003262758255004883, -2.622604142743512e-06, -1.9073486328125e-05, -0.0008287429809570312, -0.000274658203125, -0.012721659615635872, -0.00026226043701171875, -0.038115501403808594, -0.0008945465087890625, -8.0108642578125e-05, -1.33514404296875e-05, -0.02355766110122204, -0.00035571795888245106, -0.00010728836059570312, -0.0013666152954101562, -0.002918243408203125, -0.0005245208740234375, -0.0013484954833984375, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-06, -0.00031483167549595237, -5.340576171875e-05, 0.0, -7.2479248046875e-05, -3.0517578125e-05, -0.0006084442138671875, -1.9073486328125e-06, -8.96453857421875e-05, -5.7220458984375e-06, -0.0004677772521972656, -0.0010377168655395508, 0.0, -0.0002079010009765625, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.8881920576095581, -3.3378591979271732e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.549751965917267}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Fire", " ", "Elemental", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "6", "<EOS>", "5", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(2),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(6, 5)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.7284469604492188, -0.0001049041748046875, -2.503394853192731e-06, -2.7418097943154862e-06, -0.0002574920654296875, -0.0015659332275390625, -2.288818359375e-05, -0.0028004643972963095, 0.0, -4.38690185546875e-05, -0.0001010894775390625, -1.1444091796875e-05, 0.0, -0.0008563995361328125, -9.5367431640625e-06, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -4.649161837733118e-06, 0.0, -0.0002079010009765625, 0.0, -0.0002002716064453125, -6.4849853515625e-05, -0.0002231597900390625, -8.463848644169047e-06, -2.300739288330078e-05, -5.1259346946608275e-05, 0.0, -0.000133514404296875, 0.0, -0.00032220594584941864, -4.41074053014745e-06, -0.0001125335693359375, -1.9073486328125e-06, -0.000865936279296875, -0.0034694671630859375, -0.0002689361572265625, -8.70227722771233e-06, -1.95052969455719, -7.62939453125e-06, -0.00016021728515625, 0.0, -0.0001583099365234375, -0.0011844635009765625, -0.0003324747085571289, -3.5523866245057434e-05, -0.3118811845779419, -9.775161743164062e-06, -0.033477783203125, -0.0001544952392578125, 0.0, -0.5877394676208496, 0.0, -0.0002193450927734375, -7.82012939453125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.00023281574249267578, -3.933906555175781e-06, -2.09808349609375e-05, -0.0015411376953125, -0.000331878662109375, -0.03281031921505928, -0.0002353191375732422, -0.038944244384765625, -0.0015735626220703125, -7.05718994140625e-05, -5.7220458984375e-06, -0.009819254279136658, -0.00042533472878858447, -0.0002123117446899414, -0.0012578964233398438, -0.0016679763793945312, -0.00029754638671875, -0.000621795654296875, -1.1444091796875e-05, -0.000209808349609375, -5.7220458984375e-06, -0.00039708608528599143, -5.340576171875e-05, 0.0, -6.866455078125e-05, -2.47955322265625e-05, -0.0006465911865234375, -3.814697265625e-06, -9.918212890625e-05, -7.62939453125e-06, -0.0004736185073852539, -0.0011540651321411133, 0.0, -0.0002117156982421875, -9.5367431640625e-06, -2.0265579223632812e-06, -1.9073468138230965e-06, -0.8656721115112305, -3.3378591979271732e-06], "model_output": {"body": [{"name": "FireElemental", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Fire Elemental", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole0": 2, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.586191595609307}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.660578727722168, -3.814697265625e-06, -0.00015007461479399353, -1.2278556823730469e-05, -7.867813110351562e-06, 0.0, -0.00025107921101152897, -2.50339189733495e-06, -0.14227569103240967, 0.0, -0.002072095638141036, -2.50339189733495e-06, -0.0001068115234375, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00018036362598650157, -4.1723224057932384e-06, -5.7220458984375e-06, -0.003650665283203125, -0.0001201629638671875, -0.0223308727145195, -8.058547973632812e-05, -4.705946922302246, -1.9073486328125e-06, -0.6586421728134155, -0.00014316117449197918, -1.1920928244535389e-07, -0.021880149841308594, -0.000354766845703125, -2.3841855636419496e-06, -0.00020668754586949944, -0.44993340969085693, -7.390703103737906e-05], "model_output": {"body": [{"name": "FireElemental", "body": [{"_type": "Template3", "hole0": "Fire Elemental", "hole4": {"args": [{"hole0": 2, "_type": "Template37"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.669910513413235}, {"choice_history": [55, 124, 221, 63, 103, "Fire", "Elemental", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Fire", " ", "Elemental", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "2", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class FireElemental(MinionCard):\n\n    def __init__(self):\n        super().__init__('Fire Elemental', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(2), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -9.5367431640625e-06, -1.52587890625e-05, -7.62939453125e-06, -0.0005000770906917751, -9.083335316972807e-05, -9.536738616588991e-07, -5.7220458984375e-06, -1.1444091796875e-05, 0.0, -2.503368341422174e-05, -2.1934505639364943e-05, -2.6941299438476562e-05, -1.9073486328125e-05, -0.660578727722168, -3.814697265625e-06, -0.00015007461479399353, -1.2278556823730469e-05, -7.867813110351562e-06, 0.0, -0.00025107921101152897, -2.50339189733495e-06, -0.14227569103240967, 0.0, -0.002072095638141036, -2.50339189733495e-06, -0.0001068115234375, -1.33514404296875e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.00018036362598650157, -4.1723224057932384e-06, -5.7220458984375e-06, -0.003650665283203125, -0.0001201629638671875, -0.0223308727145195, -8.058547973632812e-05, -4.705946922302246, -1.9073486328125e-06, -0.7977651357650757, -0.0001151550022768788, -1.1920928244535389e-07, -0.009008407592773438, -0.0003910064697265625, -4.8875799620873295e-06, -7.581423415103927e-05, -0.444288969039917, -3.218599158572033e-05], "model_output": {"body": [{"name": "FireElemental", "body": [{"_type": "Template3", "hole0": "Fire Elemental", "hole4": {"args": [{"hole0": 2, "_type": "Template37"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.790355435960457}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-8.96453857421875e-05, -4.1961669921875e-05, -21.993898391723633], "model_output": {"body": [], "_type": "Module"}, "score": -21.994029998779297}]}
{"gold_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -0.37539100646972656, -1.9073486328125e-06, -1.537799835205078e-05, -2.264974000354414e-06, -1.2278555004741065e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.4346284606370574}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, deathrattle=Deathrattle(Draw(), PlayerSelector()))\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -1.1720705032348633, -2.47955322265625e-05, -3.576277322281385e-06, -4.279521817807108e-05, -2.157686867576558e-05, -6.9141146923357155e-06, -0.18945527076721191, -2.872907862183638e-05, -0.0008678436279296875, -0.006688117980957031, -1.1444091796875e-05, 0.0, -0.0025714635848999023, -1.0609570381348021e-05, -0.0002460479736328125, -0.001216888427734375, -4.1961669921875e-05, -0.0001352224498987198, -0.00014268679660744965, -9.72747802734375e-05, -1.9073486328125e-06, -0.00023674685508012772, -0.00010132789611816406, 0.0], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.433229210227715}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventorInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -3.276050567626953, -0.002435343572869897, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.748596544843167e-06, -1.8477439880371094e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0070095062255859375, -2.6702880859375e-05, -5.960462772236497e-07, -1.5974044799804688e-05, -0.000278472900390625, -0.00016796588897705078, -0.00409090518951416, 0.0, -0.001594661152921617, 0.0, -0.001295924186706543, -9.536738616588991e-07, -4.00543212890625e-05, -0.0001068115234375, -5.7220458984375e-06, 0.0, -0.00020170211791992188, -3.576278118089249e-07, -1.71661376953125e-05, -0.0032434463500976562, -6.67572021484375e-05, -0.0011080652475357056, -0.0007945928373374045, -7.62939453125e-05, -1.71661376953125e-05, -0.0017621746519580483, -0.00011873245239257812, -1.1920928244535389e-07, -0.4306011199951172, -1.9073486328125e-06, -1.3470649719238281e-05, -2.264974000354414e-06, -1.0490414751984645e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "GnomishInventorInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7323519743963374}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_damage=1)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -1.1720705032348633, -2.47955322265625e-05, -3.576277322281385e-06, -4.279521817807108e-05, -2.157686867576558e-05, -6.9141146923357155e-06, -3.0810353755950928, -8.869171142578125e-05, -0.0016155242919921875, -0.0012149810791015625, -0.0029309357050806284, 0.0], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template10", "hole2": "spell_damage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.31826117571071}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventorInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, deathrattle=Deathrattle(Draw(), PlayerSelector()))\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -3.276050567626953, -0.002435343572869897, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -7.748596544843167e-06, -1.8477439880371094e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -0.0070095062255859375, -2.6702880859375e-05, -5.960462772236497e-07, -1.5974044799804688e-05, -0.000278472900390625, -0.00016796588897705078, -0.00409090518951416, 0.0, -0.001594661152921617, 0.0, -0.001295924186706543, -9.536738616588991e-07, -4.00543212890625e-05, -0.0001068115234375, -5.7220458984375e-06, 0.0, -0.00020170211791992188, -3.576278118089249e-07, -1.71661376953125e-05, -0.0032434463500976562, -6.67572021484375e-05, -0.0011080652475357056, -0.0007945928373374045, -7.62939453125e-05, -1.71661376953125e-05, -0.0017621746519580483, -0.00011873245239257812, -1.1920928244535389e-07, -1.0611019134521484, -2.47955322265625e-05, -3.6954863844584906e-06, -4.446407547220588e-05, -2.1576870494754985e-05, -6.437280717364047e-06, -0.19756639003753662, -2.825225419655908e-05, -0.0009174346923828125, -0.0074291229248046875, -1.1444091796875e-05, 0.0, -0.00253140926361084, -1.07287787614041e-05, -0.000263214111328125, -0.001178741455078125, -4.1961669921875e-05, -0.00013349950313568115, -0.00014673943223897368, -9.918212890625e-05, -1.9073486328125e-06, -0.0002481908304616809, -9.560585021972656e-05, 0.0], "model_output": {"body": [{"name": "GnomishInventorInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.57362930887529}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(Draw(), PlayerSelector()),\n            Deathrattle(Draw(), PlayerSelector())])\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -1.1720705032348633, -2.47955322265625e-05, -3.576277322281385e-06, -4.279521817807108e-05, -2.157686867576558e-05, -6.9141146923357155e-06, -2.428839921951294, -5.6027456594165415e-05, -0.06066703796386719, -3.814697265625e-05, -0.18155193328857422, -7.62939453125e-05, -0.00031280517578125, -0.00037384033203125, 0.0, -0.09407508373260498, -3.933906555175781e-06, -0.000171661376953125, -9.918212890625e-05, -4.1961669921875e-05, -0.05452341586351395, -8.51140430313535e-05, -0.000457763671875, -1.9073486328125e-06, -0.02755279652774334, -0.0005457401275634766, 0.0, -0.0005855560302734375, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -0.5614210367202759, -3.707376163220033e-05, -6.67572021484375e-05, -0.0008831024169921875, -5.7220458984375e-06, -0.018747232854366302, -0.0003468957729637623, -8.392333984375e-05, -1.9073486328125e-06, -0.001114971237257123, -0.0013526678085327148, 0.0], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.665569560598293}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(Draw(), PlayerSelector()),\n            Battlecry(Draw(), PlayerSelector())])\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -1.1720705032348633, -2.47955322265625e-05, -3.576277322281385e-06, -4.279521817807108e-05, -2.157686867576558e-05, -6.9141146923357155e-06, -2.428839921951294, -5.6027456594165415e-05, -0.06066703796386719, -3.814697265625e-05, -0.18155193328857422, -7.62939453125e-05, -0.00031280517578125, -0.00037384033203125, 0.0, -0.09407508373260498, -3.933906555175781e-06, -0.000171661376953125, -9.918212890625e-05, -4.1961669921875e-05, -0.05452341586351395, -8.51140430313535e-05, -0.000457763671875, -1.9073486328125e-06, -0.02755279652774334, -0.0005457401275634766, 0.0, -0.0005855560302734375, -5.14984130859375e-05, -2.09808349609375e-05, 0.0, -0.961983323097229, -1.2636171959456988e-05, -7.43865966796875e-05, -0.000247955322265625, -1.9073486328125e-05, -0.03725700080394745, -0.0003398646949790418, -0.000244140625, -1.9073486328125e-06, -0.0021952688694000244, -0.0010973215103149414, 0.0], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.084981148616485}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, enrage=[Aura(Draw(), PlayerSelector())])\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -1.1720705032348633, -2.47955322265625e-05, -3.576277322281385e-06, -4.279521817807108e-05, -2.157686867576558e-05, -6.9141146923357155e-06, -2.428839921951294, -5.6027456594165415e-05, -0.06066703796386719, -3.814697265625e-05, -1.8026371002197266, -3.814697265625e-06, -0.0001201629638671875, -3.0517578125e-05, 0.0, -0.02320798672735691, -3.4689903259277344e-05, -5.53131103515625e-05, -0.0002956390380859375, -9.918212890625e-05, -0.043919939547777176, -0.00011050333705497906, -0.0001850128173828125, -3.814697265625e-06, -0.07285229116678238, -0.0006104707717895508, 0.0], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.665143240377425}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -5.67129373550415, -1.1920928244535389e-07, -0.00035523471888154745, 0.0, -0.001644134521484375, -8.344646857949556e-07, -4.00543212890625e-05, -9.1552734375e-05, -7.62939453125e-06, 0.0, -0.00015783309936523438, -3.576278118089249e-07, -1.9073486328125e-05, -0.0035772323608398438, -7.2479248046875e-05, -0.001213274896144867, -0.0007649257895536721, -7.82012939453125e-05, -1.52587890625e-05, -0.0018199922051280737, -0.00012254714965820312, -1.1920928244535389e-07, -0.3636016845703125, -1.9073486328125e-06, -1.3470649719238281e-05, -2.50339189733495e-06, -1.0371206371928565e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.090518996956156}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "4", "<EOS>", "spell_targetable", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4, spell_targetable=True)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -1.1720705032348633, -2.47955322265625e-05, -3.576277322281385e-06, -4.279521817807108e-05, -2.157686867576558e-05, -6.9141146923357155e-06, -4.779126167297363, -0.0005945677403360605, -0.3138589859008789, -9.5367431640625e-06, -0.02303314208984375, -4.9591064453125e-05], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "spell_targetable"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.348047658164056}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Draw", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), Draw()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -6.6774444580078125, -0.0036971569061279297, -0.027105331420898438, -3.814697265625e-06, -1.800060272216797e-05, -2.264974000354414e-06, -1.4543529687216505e-05, 0.0], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.765719545851283}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -6.860518455505371, -6.866455078125e-05, -0.0009294748306274414, -2.3841855067985307e-07, -2.288818359375e-05, -9.34600830078125e-05, -7.62939453125e-06, 0.0, -0.0002592802047729492, -3.576278118089249e-07, -1.71661376953125e-05, -0.0024385452270507812, -6.67572021484375e-05, -0.0011310353875160217, -0.0007848211680538952, -7.2479248046875e-05, -1.52587890625e-05, -0.0016739936545491219, -0.00011491775512695312, -1.1920928244535389e-07, -0.39609718322753906, -1.9073486328125e-06, -1.537799835205078e-05, -2.145764938177308e-06, -1.0490414751984645e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "WARRIOR"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.313441247002871}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "Inventor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 180, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class GnomishInventor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -0.0005283161881379783, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -5.197013854980469, -0.000347137451171875, -1.0251998901367188e-05, -2.264974000354414e-06, -4.38690185546875e-05, -7.05718994140625e-05, -1.9073486328125e-06, -0.00014030920283403248, 0.0, -0.0001068115234375, -0.3417186737060547, -2.0023069381713867, -0.0004335902049206197, -0.00011634825932560489, -2.622604142743512e-06, -1.1563301086425781e-05, -0.0006210803985595703, 0.0, -0.022343754768371582, 0.0, -0.05039536952972412, 0.0, -0.008093595504760742, -0.000335693359375, 0.0, -0.00022125244140625, -1.9073486328125e-06, -4.053113570989808e-06, -1.1920928244535389e-07, -9.059905278263614e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "GnomishInventor", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Gnomish Inventor", "hole1": 4, "hole5": "PlayerSelector", "hole3": "Draw", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.664186134694759}, {"choice_history": [55, 124, 221, 63, 103, "Gnomish", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Gnomish", " ", "Inventor", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "4", "<EOS>"], "inferred_code": "class Gnomish<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Gnomish Inventor', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 4)\n", "score_history": [0.0, -1.71661376953125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -0.0005305789527483284, -7.550858020782471, -0.038524895906448364, -1.9073486328125e-06, -5.340576171875e-05, -1.9073486328125e-06, -1.7285317881032825e-05, -2.0980833141948096e-05, -3.933906555175781e-06, -1.9073486328125e-06, -0.0057964324951171875, -2.86102294921875e-05, -4.768370445162873e-07, -1.7881393432617188e-05, -1.52587890625e-05, -3.814697265625e-06, -0.0034841299057006836, 0.0, -0.001490472350269556, 0.0, -0.0015588998794555664, -7.152555099310121e-07, -2.6702880859375e-05, -8.392333984375e-05, -5.7220458984375e-06, 0.0, -0.0002262592315673828, -2.3841855067985307e-07, -1.9073486328125e-05, -0.0028047561645507812, -6.866455078125e-05, -0.0011744052171707153, -0.0007802949985489249, -8.0108642578125e-05, -1.52587890625e-05, -0.0016468374524265528, -0.0001245737075805664, -1.1920928244535389e-07, -0.37539100646972656, -1.9073486328125e-06, -1.537799835205078e-05, -2.264974000354414e-06, -1.2278555004741065e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Gnomish<UNK>", "body": [{"_type": "Template3", "hole0": "Gnomish Inventor", "hole4": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.98495816523139}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -1.71661376953125e-05, -22.593534469604492], "model_output": {"body": [], "_type": "Module"}, "score": -22.593551635742188}]}
{"gold_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(4)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -0.07742023468017578, -0.0029573440551757812, -0.00011702626943588257, -4.768370445162873e-07, -0.0002899169921875, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003490447998046875, 0.0, -0.0004711151123046875, -1.1920928244535389e-07, -0.007865063846111298, -4.291534423828125e-06, -0.12593913078308105, 0.0, -0.0005702972412109375, -0.0037126541137695312, 0.0, -0.05452457815408707, -1.9073486328125e-06], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.48007034048200836}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(3)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -0.07742023468017578, -0.0029573440551757812, -0.00011702626943588257, -4.768370445162873e-07, -0.0002899169921875, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003490447998046875, 0.0, -0.0004711151123046875, -1.1920928244535389e-07, -0.007865063846111298, -4.291534423828125e-06, -0.12593913078308105, 0.0, -0.0005702972412109375, -0.0037126541137695312, 0.0, -2.9525058269500732, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3780496819293617}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.minions.damage(player.effective_spell_damage(2), self\n            )\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -2.859940528869629, -0.0011081695556640625, -1.71661376953125e-05, -7.62939453125e-06, -0.13564682006835938, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.010105133056640625, -3.576278118089249e-07, -0.016634464263916016, 0.0, -0.24758785963058472, 0.0, -0.22463750839233398, 0.0, -3.0517578125e-05, -0.11078834533691406, -0.0005512237548828125, -0.007930397987365723, -3.576278118089249e-07, -0.0001506805419921875, -1.9073486328125e-06, -0.0016394853591918945, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "Template1", "hole2": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7543926788997553}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>", 79, 164, "3", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -2.9930877685546875, -1.33514404296875e-05, -0.0007801055908203125, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -0.00215911865234375, -2.3841855067985307e-07, -0.002752167172729969, -2.384185791015625e-06, -0.19405126571655273, 0.0, -0.00099945068359375, -0.001720428466796875, 0.0, -0.05675129592418671, 0.0, -0.05431556701660156, -0.0007429122924804688, -0.4478742778301239, -3.814697265625e-06], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 3, "_type": "Template29"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.961133711074993}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -3.7255446910858154, 0.0, -0.08658027648925781, 0.0, -8.82148651726311e-06, -1.9073486328125e-06, 0.0, -0.0001850128173828125, -3.814697265625e-06, -1.3947486877441406e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, -0.00016796588897705078, -1.1444091796875e-05, -0.005635261535644531, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.6106834411621094e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -2.1219253540039062e-05, -0.00018000601266976446, -0.07474803924560547, -0.0029592514038085938, -0.00011968053877353668, -4.768370445162873e-07, -0.0002899169921875, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003490447998046875, 0.0, -0.000469207763671875, -1.1920928244535389e-07, -0.007874362170696259, -4.291534423828125e-06, -0.1255643367767334, 0.0, -0.000576019287109375, -0.0037107467651367188, 0.0, -0.05470927804708481, -1.9073486328125e-06], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.16951197854938}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -3.9768552780151367, -0.000339508056640625, -0.00029869386344216764, -0.00011622904276009649, -4.398822784423828e-05, -6.4849853515625e-05, -7.938702765386552e-05, -2.3841855067985307e-07, -0.18255436420440674, -3.576278118089249e-07, -0.0006809234619140625, 0.0, -1.1563301086425781e-05, -1.33514404296875e-05, 0.0, -0.0001373291015625, -1.9073486328125e-06, -1.3947486877441406e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -0.00015652179718017578, -1.1444091796875e-05, -0.00428009033203125, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -3.981590270996094e-05, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -1.9311904907226562e-05, -0.00014531610941048712, -0.07149410247802734, -0.003070831298828125, -0.00012942124158143997, -4.768370445162873e-07, -0.000301361083984375, 0.0, -6.866455078125e-05, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0003204345703125, 0.0, -0.000446319580078125, -1.1920928244535389e-07, -0.007497183512896299, -4.291534423828125e-06, -0.10546839237213135, 0.0, -0.000446319580078125, -0.0030584335327148438, 0.0, -0.0641130730509758, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template5", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.43049219829097}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Heroic", " ", "Strike", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -3.088045120239258, -3.814697265625e-06, -9.179109838441946e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.00010358914005337283, -1.9073486328125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0033931732177734375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.3947389561508317e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000598907470703125, -0.000156402587890625, -3.24249267578125e-05, -6.079655122448457e-06, -1.919269561767578e-05, -2.1338310034479946e-05, -3.24249267578125e-05, -0.0002346038818359375, 0.0, -0.00017343441140837967, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-05, -0.0001087188720703125, 0.0, -0.112030029296875, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000255584716796875, -2.3841855067985307e-07, -0.14763832092285156, 0.0, -4.76837158203125e-05, -0.0008144378662109375, 0.0, -0.011028289794921875, -1.1920928244535389e-07, -0.000247955322265625, -1.9073486328125e-06, -0.00014495849609375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0022678375244140625, -3.814697265625e-06, -7.069110870361328e-05, -5.7220458984375e-06, -0.6414488554000854, -2.288818359375e-05, -0.046352386474609375, -1.71661376953125e-05, -2.6702880859375e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.0048675537109375, 0.0, -3.826618194580078e-05, 0.0, -0.30668461322784424, 0.0, -0.0001583099365234375, -0.0009517669677734375, -5.7220458984375e-06, -0.058209143579006195, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Heroic Strike", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_temp_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 3, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.434539940166772}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>", 79, 164, "2", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(2)\n        player.hero.change_temp_attack(2)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -2.9930877685546875, -1.33514404296875e-05, -0.0007801055908203125, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -6.4849853515625e-05, -3.814697265625e-06, -0.00215911865234375, -2.3841855067985307e-07, -0.002752167172729969, -2.384185791015625e-06, -0.19405126571655273, 0.0, -0.00099945068359375, -0.001720428466796875, 0.0, -0.05675129592418671, 0.0, -0.05431556701660156, -0.0007429122924804688, -1.0328989028930664, -5.7220458984375e-06], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.546160243486568}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.heal(player.effective_heal_power(2), self)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -0.07742023468017578, -0.0029573440551757812, -0.00011702626943588257, -4.768370445162873e-07, -0.0002899169921875, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003490447998046875, 0.0, -0.0004711151123046875, -1.1920928244535389e-07, -0.007865063846111298, -4.291534423828125e-06, -2.392669439315796, -5.3763389587402344e-05, -3.814697265625e-06, -0.000492095947265625, -0.0002231597900390625, -0.0021648406982421875, 0.0, -0.0001659393310546875, 0.0, -0.0018998384475708008, -7.152555099310121e-07, -0.03247591853141785, 0.0, -0.00023651123046875, -1.8955316543579102, 0.0, -0.010483868420124054, 0.0, -0.00527191162109375, -9.5367431640625e-06, -0.00052642822265625, -3.814697265625e-06], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.637535023537659}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "health", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.heal(player.effective_heal_power(player.hero.health()),\n            self)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -0.07742023468017578, -0.0029573440551757812, -0.00011702626943588257, -4.768370445162873e-07, -0.0002899169921875, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003490447998046875, 0.0, -0.0004711151123046875, -1.1920928244535389e-07, -0.007865063846111298, -4.291534423828125e-06, -2.392669439315796, -5.3763389587402344e-05, -3.814697265625e-06, -0.000492095947265625, -0.0002231597900390625, -0.0021648406982421875, 0.0, -0.0001659393310546875, 0.0, -0.0018998384475708008, -7.152555099310121e-07, -0.03247591853141785, 0.0, -0.00023651123046875, -0.16402626037597656, -0.004184722900390625, -3.814697265625e-06, 0.0, -0.0417633056640625, 0.0, -0.001373291015625, -9.5367431640625e-06, -0.4779090881347656, -3.933906555175781e-06, -0.03722593933343887, -1.3470649719238281e-05, -1.3762338161468506, -1.9073486328125e-06, -0.0035724639892578125, -0.0007305145263671875, -0.005448341369628906, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.838208216277145}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.heal(player.effective_heal_power(player.hero.<UNK>()), self\n            )\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -0.05957984924316406, 0.0, -8.82148651726311e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.0001392364501953125, -1.9073486328125e-06, -1.609325408935547e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -0.00016415119171142578, -1.1444091796875e-05, -0.007849693298339844, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.00017797945474740118, -0.07742023468017578, -0.0029573440551757812, -0.00011702626943588257, -4.768370445162873e-07, -0.0002899169921875, 0.0, -5.7220458984375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0003490447998046875, 0.0, -0.0004711151123046875, -1.1920928244535389e-07, -0.007865063846111298, -4.291534423828125e-06, -2.392669439315796, -5.3763389587402344e-05, -3.814697265625e-06, -0.000492095947265625, -0.0002231597900390625, -0.0021648406982421875, 0.0, -0.0001659393310546875, 0.0, -0.0018998384475708008, -7.152555099310121e-07, -0.03247591853141785, 0.0, -0.00023651123046875, -0.16402626037597656, -0.004184722900390625, -3.814697265625e-06, 0.0, -0.0417633056640625, 0.0, -0.001373291015625, -9.5367431640625e-06, -0.4779090881347656, -3.933906555175781e-06, -0.03722593933343887, -1.3470649719238281e-05, -1.5447981357574463, -2.9206275939941406e-05, -0.00499725341796875, -0.000301361083984375, -0.0012617111206054688, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.003608840552353}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 79, 164, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.change_temp_attack(2)\n        player.hero.increase_armor(2)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -4.369841575622559, 0.0, -0.5774602890014648, 0.0, -1.060962586052483e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001659393310546875, -1.9073486328125e-06, -1.2040138244628906e-05, 0.0, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -0.0001544952392578125, -1.1444091796875e-05, -0.019832611083984375, -1.1444091796875e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -2.5987625122070312e-05, 0.0, -1.71661376953125e-05, -1.1920928244535389e-07, -2.6702880859375e-05, -1.9073486328125e-05, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.33514404296875e-05, 0.0, -2.1219253540039062e-05, -0.0001778602454578504, -0.07010173797607422, -0.002941131591796875, -0.00012437254190444946, -4.768370445162873e-07, -0.0002841949462890625, 0.0, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.000347137451171875, 0.0, -0.000476837158203125, -1.1920928244535389e-07, -0.007847539149224758, -4.291534423828125e-06, -0.12588286399841309, 0.0, -0.0005664825439453125, -0.0035734176635742188, 0.0, -0.05433974787592888, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"hole0": 2, "_type": "Template29"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.3139668759307455}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Heroic", " ", "Strike", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "<UNK>", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_temp_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.<UNK>)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_temp_attack(3)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -3.088045120239258, -3.814697265625e-06, -9.179109838441946e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -0.00010358914005337283, -1.9073486328125e-06, -2.86102294921875e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0033931732177734375, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, 0.0, -1.3947389561508317e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.000598907470703125, -0.000156402587890625, -3.24249267578125e-05, -6.079655122448457e-06, -1.919269561767578e-05, -2.1338310034479946e-05, -3.24249267578125e-05, -0.0002346038818359375, 0.0, -0.00017343441140837967, 0.0, -1.9073486328125e-05, -2.86102294921875e-05, -3.814697265625e-06, -3.814697265625e-05, -0.0001087188720703125, 0.0, -0.112030029296875, 0.0, 0.0, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.000255584716796875, -2.3841855067985307e-07, -0.14763832092285156, 0.0, -4.76837158203125e-05, -0.0008144378662109375, 0.0, -0.011028289794921875, -1.1920928244535389e-07, -0.000247955322265625, -1.9073486328125e-06, -0.00014495849609375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0022678375244140625, -3.814697265625e-06, -7.069110870361328e-05, -5.7220458984375e-06, -1.868264079093933, -8.904933201847598e-05, -0.0068607330322265625, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -1.71661376953125e-05, -1.9073486328125e-06, -0.001255035400390625, 0.0, -5.340576171875e-05, 0.0, -0.32142019271850586, 0.0, -0.0001850128173828125, -0.000751495361328125, -5.7220458984375e-06, -0.04014649614691734, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Heroic Strike", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_temp_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 3, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.614816397379812}, {"choice_history": [55, 124, 221, 63, 103, "Heroic", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Heroic", " ", "Strike", "<EOS>", "2", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class HeroicStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Heroic Strike', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -1.52587890625e-05, -4.9591064453125e-05, -9.5367431640625e-06, -4.327203714638017e-05, -0.00620190380141139, -0.0015328358858823776, -3.814697265625e-06, -6.29425048828125e-05, -3.814697265625e-06, -4.434583752299659e-05, -8.344650268554688e-06, 0.0, -1.1444091796875e-05, -0.0708608627319336, -0.0001583099365234375, -0.0004170263418927789, -4.2557716369628906e-05, -5.841255187988281e-06, -1.9073486328125e-06, -6.4372575252491515e-06, 0.0, -0.05809199810028076, -1.1920928244535389e-07, -2.859940528869629, -0.0011081695556640625, -1.71661376953125e-05, -7.62939453125e-06, -0.13564682006835938, -5.7220458984375e-06, -1.33514404296875e-05, -7.62939453125e-06, -0.010105133056640625, -3.576278118089249e-07, -0.016634464263916016, 0.0, -1.7945281267166138, -1.9073486328125e-06, -1.0503275394439697, 0.0, -2.6702880859375e-05, -0.02212047576904297, -0.000453948974609375, -0.007244944106787443, -5.960462772236497e-07, -4.9591064453125e-05, 0.0, -0.0014030933380126953, 0.0], "model_output": {"body": [{"name": "HeroicStrike", "body": [{"hole1": 2, "hole0": "Heroic Strike", "_type": "Template6", "hole2": "DRUID"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.037231321031179}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-5.7220458984375e-06, -9.5367431640625e-06, -21.894092559814453], "model_output": {"body": [], "_type": "Module"}, "score": -21.894107818603516}]}
{"gold_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -0.0026302337646484375, -1.9073486328125e-05, -4.529941634245915e-06, -0.0004472924047149718, -2.385884727118537e-06, -4.7801782784517854e-05, -0.038887619972229004, -5.602820692729438e-06, -0.000316619873046875, -9.34600830078125e-05, -3.62396240234375e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.124022165995477}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -3.23026180267334, -0.00203704833984375, -0.04690822213888168, -5.1975250244140625e-05, -1.561641511216294e-05, -3.814697265625e-06, -1.3721291907131672e-05, -5.853065158589743e-05, -0.007229940965771675, -2.741813204920618e-06, -0.04529762268066406, -2.47955322265625e-05, -4.291523964639055e-06, -0.0002562671434134245, -2.2679523681290448e-06, -3.755022044060752e-05, -0.05089545249938965, -2.9802276912960224e-06, -0.0003795623779296875, -8.96453857421875e-05, -3.814697265625e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template6", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.400917610718345}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, charge=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -0.0026302337646484375, -1.9073486328125e-05, -4.529941634245915e-06, -0.0004472924047149718, -2.385884727118537e-06, -4.7801782784517854e-05, -3.918464183807373, -1.311301275563892e-06, -0.0014495849609375, -0.0003032684326171875, -4.1961669921875e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.004942933794602}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Ironbark<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -4.718387603759766, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -0.0026302337646484375, -1.9073486328125e-05, -4.529941634245915e-06, -0.0004472924047149718, -2.385884727118537e-06, -4.7801782784517854e-05, -0.038887619972229004, -5.602820692729438e-06, -0.000316619873046875, -9.34600830078125e-05, -3.62396240234375e-05, 0.0], "model_output": {"body": [{"name": "Ironbark<UNK>", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.833421375353275}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, divine_shield=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -0.0026302337646484375, -1.9073486328125e-05, -4.529941634245915e-06, -0.0004472924047149718, -2.385884727118537e-06, -4.7801782784517854e-05, -4.861966609954834, -7.152555099310121e-07, -0.00054168701171875, -0.00037384033203125, -2.86102294921875e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "divine_shield"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.947594086406063}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -4.928699970245361, -0.00011479854583740234, -0.003070831298828125, -9.5367431640625e-06, -7.3909477578126825e-06, -0.00030417583184316754, -2.627108187880367e-06, -3.397406908334233e-05, -0.040869951248168945, -4.887569048150908e-06, -0.000377655029296875, -4.57763671875e-05, -3.4332275390625e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "WARRIOR"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.046627399591664}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Protector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.419105529785156, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -0.0026302337646484375, -1.9073486328125e-05, -4.529941634245915e-06, -0.0004472924047149718, -2.385884727118537e-06, -4.7801782784517854e-05, -0.038887619972229004, -5.602820692729438e-06, -0.000316619873046875, -9.34600830078125e-05, -3.62396240234375e-05, 0.0], "model_output": {"body": [{"name": "<UNK>Protector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.53502517168635}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, stealth=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -0.0026302337646484375, -1.9073486328125e-05, -4.529941634245915e-06, -0.0004472924047149718, -2.385884727118537e-06, -4.7801782784517854e-05, -5.815145015716553, -6.198883056640625e-06, -0.000240325927734375, -0.000118255615234375, -3.62396240234375e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.900228659389079}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 73, 146, "8", "<EOS>", "8", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -0.0018973221303895116, -1.2040138244628906e-05, -3.814697265625e-06, -0.00018346309661865234, -0.000551276549231261, -5.84109548071865e-05, -0.008477787487208843, -2.0265579223632812e-06, -6.088334083557129, -5.14984130859375e-05, -4.768390340359474e-07, -9.572047565598041e-05, -4.3655745685100555e-10, -2.7417810997576453e-05], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole0": 8, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.1700405038901}, {"choice_history": [55, 124, 221, 63, 103, "Force", "Tank", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class ForceTankProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -5.760856628417969, -0.24891388416290283, -0.15894238650798798, -2.0265579223632812e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.0728823326644488e-05, -1.7166130419354886e-05, -1.1920928244535389e-07, -1.9073486328125e-05, -0.07716941833496094, -0.0002040863037109375, -0.002981505123898387, -1.2040138244628906e-05, -4.00543212890625e-05, -0.0008833408355712891, -0.0006415291572920978, -5.435806087916717e-05, -0.007787938695400953, -2.0265579223632812e-06, -0.002834320068359375, -2.288818359375e-05, -4.768358849105425e-06, -0.00042965717148035765, -1.7898746591527015e-06, -4.768258077092469e-05, -0.03903770446777344, -5.245195097813848e-06, -0.0003261566162109375, -9.918212890625e-05, -3.62396240234375e-05, 0.0], "model_output": {"body": [{"name": "ForceTankProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.301513644802064}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 73, 146, "8", "<EOS>", "8", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(8, 8)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -3.23026180267334, -0.00203704833984375, -0.04690822213888168, -5.1975250244140625e-05, -1.561641511216294e-05, -3.814697265625e-06, -1.3721291907131672e-05, -5.853065158589743e-05, -0.007229940965771675, -2.741813204920618e-06, -3.1245908737182617, -1.9073486328125e-05, -3.576353151402145e-07, -9.655486064730212e-05, 2.3825850803405046e-07, -1.7642851162236184e-05], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": "Ironbark Protector", "_type": "Template6", "hole2": "ALL"}, {"hole1": 8, "hole0": 8, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.428613292495065}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__(' Protector', 8, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -0.052825927734375, -0.000213623046875, -6.296222686767578, -0.019231555983424187, -0.0014047622680664062, -0.00029699140577577055, -5.6742119340924546e-05, -0.002548817079514265, -2.0265579223632812e-06, -0.0026226043701171875, -1.9073486328125e-05, -4.291523964639055e-06, -0.00043930893298238516, -7.17060174793005e-07, -4.637133679352701e-05, -0.03795886039733887, -4.887569048150908e-06, -0.0002841949462890625, -8.7738037109375e-05, -3.814697265625e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"hole1": 8, "hole0": " Protector", "_type": "Template4", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.431614941560376}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -5.869240760803223, -0.0002613067626953125, -0.0011461363174021244, -2.3603439331054688e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -0.00015734063345007598, -4.172316494077677e-06, -0.01760743372142315, 0.0, -0.00033462027204222977, -1.8954269762616605e-05, -6.4849853515625e-05, 0.0, -1.1444091796875e-05, 0.0, -2.86102294921875e-05, -1.1920928244535389e-07, -0.6699725389480591, -3.576277322281385e-06, -0.0009517669677734375, -5.7220458984375e-06, -5.960489488643361e-07, -7.450303382938728e-05, -2.170108928112313e-05, -4.529942543740617e-06, -0.012744425795972347, -1.9073468138230965e-06, -7.62939453125e-05, -3.814697265625e-05, -5.7220458984375e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"_type": "Template3", "hole0": "Ironbark Protector", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 8, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.590161828664563}, {"choice_history": [55, 124, 221, 63, 103, "Ironbark", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Ironbark", " ", "Protector", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "8", "<EOS>", "8", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class IronbarkProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Ironbark Protector', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(8, 8, taunt=True)\n", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.00810252409428358, -0.008988394401967525, -3.5166307498002425e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -1.2874577805632725e-05, -1.39474832394626e-05, -1.1920928244535389e-07, -2.288818359375e-05, -6.187704086303711, -9.5367431640625e-06, -1.9431114196777344e-05, 0.0, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -0.00013875175500288606, -2.9802317840221804e-06, -6.866455078125e-05, -0.07671451568603516, -1.52587890625e-05, -1.549708758830093e-05, -0.00014233519323170185, -6.19888032815652e-06, -3.62396240234375e-05, -0.0003291794564574957, -4.434510992723517e-05, -0.8841264247894287, -1.9073486328125e-06, -0.0014170390786603093, -1.1801719665527344e-05, -1.9073486328125e-06, -7.62939453125e-06, -7.62939453125e-06, 0.0, -5.340576171875e-05, -7.152555099310121e-07, -0.11226558685302734, -2.0265579223632812e-06, -0.48769378662109375, -5.7220458984375e-06, 3.5762758443524945e-07, -0.0001486429391661659, -6.7999790189787745e-06, -1.0609570381348021e-05, -0.01385259535163641, -3.576272320060525e-06, -6.4849853515625e-05, -4.57763671875e-05, -3.814697265625e-05, 0.0], "model_output": {"body": [{"name": "IronbarkProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Ironbark Protector", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 8, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 8, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.7823417445211405}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-0.000102996826171875, -1.9073486328125e-06, -23.03023910522461], "model_output": {"body": [], "_type": "Module"}, "score": -23.030344009399414}]}
{"gold_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(2)\n        self.target.taunt = True\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 25, 166, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(2)\n        self.target.increase_health(4)\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.9026994705200195, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.0004738543648272753, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000942230224609375, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.39267635345458984, -4.38690185546875e-05, -1.2727766036987305, -0.0002460479736328125, -0.26853954792022705, -3.933906555175781e-06, -0.034728050231933594, -5.7220458984375e-06, -2.288818359375e-05, -4.00543212890625e-05, -7.62939453125e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -0.00089263916015625, -1.9073486328125e-06, -0.0024514198303222656, -1.1920928244535389e-07, -8.869171142578125e-05, -4.0531158447265625e-06, -0.022071361541748047, 0.0, -0.001567840576171875, -5.53131103515625e-05, -1.9073486328125e-06, -0.022566262632608414, -1.9073486328125e-06], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template30"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7020379210079426}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.9026994705200195, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.0004738543648272753, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000942230224609375, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.39267635345458984, -4.38690185546875e-05, -0.3398723602294922, -0.0005950927734375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002536773681640625, 0.0, -0.0009111166000366211, -5.960462772236497e-07, -1.6450858311145566e-05, -2.503394853192731e-06, -0.7298747301101685, -5.364416665543104e-06, -6.67572021484375e-05, -0.010626792907714844, -0.0004329681396484375, -0.0012378692626953125, -3.62396240234375e-05, -0.0002651214599609375, 0.0, -0.0024080276489257812, 0.0, -0.009636280126869678, 0.0, -0.00022125244140625, -0.165130615234375, -0.0046749114990234375, -2.288818359375e-05, -3.814697265625e-06, -0.0002803802490234375, 0.0, -0.031371116638183594, 0.0, -0.00445866584777832, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025528669357299805, -1.537799835205078e-05, -0.011880874633789062, -3.814697265625e-06, -0.0019474029541015625, -1.1920928244535389e-07, -0.0024843215942382812, -3.814697265625e-06, -0.00090789794921875, -1.52587890625e-05, -0.00045013427734375, -0.014357566833496094, 0.0, -0.22074949741363525, -3.814697265625e-06, -0.15189647674560547, 0.0, -0.39951038360595703, 0.0, -0.0843515396118164, -3.576278118089249e-07], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.29254881925219}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = Null\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.9026994705200195, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.0004738543648272753, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000942230224609375, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.39267635345458984, -4.38690185546875e-05, -0.3398723602294922, -0.0005950927734375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002536773681640625, 0.0, -0.0009111166000366211, -5.960462772236497e-07, -1.6450858311145566e-05, -2.503394853192731e-06, -0.7298747301101685, -5.364416665543104e-06, -6.67572021484375e-05, -0.010626792907714844, -0.0004329681396484375, -0.0012378692626953125, -3.62396240234375e-05, -0.0002651214599609375, 0.0, -0.0024080276489257812, 0.0, -0.009636280126869678, 0.0, -0.00022125244140625, -0.165130615234375, -0.0046749114990234375, -2.288818359375e-05, -3.814697265625e-06, -0.0002803802490234375, 0.0, -0.031371116638183594, 0.0, -0.00445866584777832, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025528669357299805, -1.537799835205078e-05, -0.011880874633789062, -3.814697265625e-06, -0.0019474029541015625, -1.1920928244535389e-07, -0.0024843215942382812, -3.814697265625e-06, -0.00090789794921875, -1.52587890625e-05, -0.00045013427734375, -0.014357566833496094, 0.0, -0.22074949741363525, -3.814697265625e-06, -0.15189647674560547, 0.0, -1.1990966796875, -0.00908660888671875, -0.0010892152786254883, 0.0], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.017959042259449}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "player", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n        self.target.<UNK>(player)\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.5980157852172852, -4.1961669921875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001373291015625, 0.0, -0.00016927647811826319, 0.0, -4.780292510986328e-05, 0.0, -2.6702880859375e-05, -0.0008182525634765625, 0.0, -7.2479248046875e-05, -3.576278118089249e-07, -7.62939453125e-06, -3.62396240234375e-05, -1.7642974853515625e-05, -0.00010728710913099349, -0.3028736114501953, -1.9073486328125e-05, -0.03857231140136719, -0.0001087188720703125, -1.9073486328125e-06, -1.52587890625e-05, -0.0002384185791015625, 0.0, -0.0001010894775390625, 0.0, -0.0015081167221069336, -7.152555099310121e-07, -2.6702873583417386e-05, -3.576278118089249e-07, -1.6990777254104614, -2.861022494471399e-06, -7.62939453125e-05, -0.017011642456054688, -0.000247955322265625, -0.00164794921875, -5.14984130859375e-05, -0.000240325927734375, 0.0, -0.003933906555175781, 0.0, -0.009938475675880909, 0.0, -0.0003032684326171875, -0.16538333892822266, -0.007901191711425781, -2.47955322265625e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03295421600341797, 0.0, -0.00501561164855957, -1.1682510375976562e-05, -1.609325408935547e-05, -2.1338462829589844e-05, -0.026105523109436035, -1.537799835205078e-05, -0.013310432434082031, -3.814697265625e-06, -0.0021944046020507812, -1.1920928244535389e-07, -0.0031490325927734375, -3.814697265625e-06, -0.0003376007080078125, -0.000209808349609375, -0.0016040802001953125, -0.006649017333984375, 0.0, -0.2796562910079956, -1.9073486328125e-06, -0.0696488618850708, 0.0, -0.4214954376220703, 0.0, -0.04087555408477783, -7.152555099310121e-07, -0.0017871856689453125, -3.814697265625e-06, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -1.71661376953125e-05, -0.3942890167236328, -4.57763671875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.013168931007385254, -2.0265558760002023e-06, -5.698202585335821e-05, -5.9604644775390625e-06, -0.548363208770752, -1.1920928244535389e-07, -0.000202178955078125, -0.22047901153564453, -1.9073486328125e-06, -0.22848939895629883, 0.0], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.938036368261756}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -2.266960859298706, -6.198883056640625e-06, -4.38690185546875e-05, -5.53131103515625e-05, -0.00315093994140625, -1.9073486328125e-06, -7.95125961303711e-05, -1.1920928244535389e-07, -0.03713428974151611, -3.814697265625e-06, -0.000598907470703125, -0.0005626678466796875, -1.9073486328125e-06, -0.14371716976165771, -3.933906555175781e-06, -0.0011444091796875, -5.14984130859375e-05, -0.0001678466796875, -0.000324249267578125, -4.38690185546875e-05, -3.814697265625e-06, -0.0001049041748046875, -3.814697265625e-06, -7.832050323486328e-05, -2.6702880859375e-05, -0.0007833242416381836, -3.8743019104003906e-05, -0.0009212493896484375, -0.000583648681640625, -4.279613131075166e-05, -5.125998541188892e-06, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -2.312650940439198e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018787384033203125, -2.1457672119140625e-06, -1.71661376953125e-05, -1.442432312614983e-05, -7.390974587906385e-06, -0.8906488418579102, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.00047051647561602294, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000934600830078125, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.3848896026611328, -4.38690185546875e-05, -0.3423757553100586, -0.0005950927734375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002536773681640625, 0.0, -0.0009092092514038086, -5.960462772236497e-07, -1.6450858311145566e-05, -2.503394853192731e-06, -0.7312184572219849, -5.364416665543104e-06, -6.4849853515625e-05, -0.0106201171875, -0.0004329681396484375, -0.001232147216796875, -3.62396240234375e-05, -0.00026702880859375, 0.0, -0.002407073974609375, 0.0, -0.009638187475502491, 0.0, -0.00022125244140625, -0.1649770736694336, -0.004677772521972656, -2.288818359375e-05, -3.814697265625e-06, -0.0002803802490234375, 0.0, -0.031355857849121094, 0.0, -0.00445866584777832, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025530576705932617, -1.537799835205078e-05, -0.011881828308105469, -3.814697265625e-06, -0.0019464492797851562, -1.1920928244535389e-07, -0.0024890899658203125, -3.814697265625e-06, -0.0009059906005859375, -1.52587890625e-05, -0.00045013427734375, -0.014333724975585938, 0.0, -0.2208958864212036, -3.814697265625e-06, -0.15210437774658203, 0.0, -0.3992729187011719, 0.0, -0.0844573974609375, -3.576278118089249e-07], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.03042237344782}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = Null\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -2.266960859298706, -6.198883056640625e-06, -4.38690185546875e-05, -5.53131103515625e-05, -0.00315093994140625, -1.9073486328125e-06, -7.95125961303711e-05, -1.1920928244535389e-07, -0.03713428974151611, -3.814697265625e-06, -0.000598907470703125, -0.0005626678466796875, -1.9073486328125e-06, -0.14371716976165771, -3.933906555175781e-06, -0.0011444091796875, -5.14984130859375e-05, -0.0001678466796875, -0.000324249267578125, -4.38690185546875e-05, -3.814697265625e-06, -0.0001049041748046875, -3.814697265625e-06, -7.832050323486328e-05, -2.6702880859375e-05, -0.0007833242416381836, -3.8743019104003906e-05, -0.0009212493896484375, -0.000583648681640625, -4.279613131075166e-05, -5.125998541188892e-06, -1.52587890625e-05, -3.62396240234375e-05, 0.0, -2.312650940439198e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018787384033203125, -2.1457672119140625e-06, -1.71661376953125e-05, -1.442432312614983e-05, -7.390974587906385e-06, -0.8906488418579102, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.00047051647561602294, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000934600830078125, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.3848896026611328, -4.38690185546875e-05, -0.3423757553100586, -0.0005950927734375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002536773681640625, 0.0, -0.0009092092514038086, -5.960462772236497e-07, -1.6450858311145566e-05, -2.503394853192731e-06, -0.7312184572219849, -5.364416665543104e-06, -6.4849853515625e-05, -0.0106201171875, -0.0004329681396484375, -0.001232147216796875, -3.62396240234375e-05, -0.00026702880859375, 0.0, -0.002407073974609375, 0.0, -0.009638187475502491, 0.0, -0.00022125244140625, -0.1649770736694336, -0.004677772521972656, -2.288818359375e-05, -3.814697265625e-06, -0.0002803802490234375, 0.0, -0.031355857849121094, 0.0, -0.00445866584777832, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025530576705932617, -1.537799835205078e-05, -0.011881828308105469, -3.814697265625e-06, -0.0019464492797851562, -1.1920928244535389e-07, -0.0024890899658203125, -3.814697265625e-06, -0.0009059906005859375, -1.52587890625e-05, -0.00045013427734375, -0.014333724975585938, 0.0, -0.2208958864212036, -3.814697265625e-06, -0.15210437774658203, 0.0, -1.1996879577636719, -0.009093284606933594, -0.0010901689529418945, 0.0], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.756563110981446}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "game", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = game\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.9026994705200195, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.0004738543648272753, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000942230224609375, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.39267635345458984, -4.38690185546875e-05, -0.3398723602294922, -0.0005950927734375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002536773681640625, 0.0, -0.0009111166000366211, -5.960462772236497e-07, -1.6450858311145566e-05, -2.503394853192731e-06, -0.7298747301101685, -5.364416665543104e-06, -6.67572021484375e-05, -0.010626792907714844, -0.0004329681396484375, -0.0012378692626953125, -3.62396240234375e-05, -0.0002651214599609375, 0.0, -0.0024080276489257812, 0.0, -0.009636280126869678, 0.0, -0.00022125244140625, -0.165130615234375, -0.0046749114990234375, -2.288818359375e-05, -3.814697265625e-06, -0.0002803802490234375, 0.0, -0.031371116638183594, 0.0, -0.00445866584777832, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025528669357299805, -1.537799835205078e-05, -0.011880874633789062, -3.814697265625e-06, -0.0019474029541015625, -1.1920928244535389e-07, -0.0024843215942382812, -3.814697265625e-06, -0.00090789794921875, -1.52587890625e-05, -0.00045013427734375, -0.014357566833496094, 0.0, -0.22074949741363525, -3.814697265625e-06, -0.15189647674560547, 0.0, -0.39951038360595703, 0.0, -2.7456960678100586, -1.3470649719238281e-05], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "game", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.953906460472339}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n        self.target.add_buff(Buff(SpellDamage(1)))\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.5980157852172852, -4.1961669921875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001373291015625, 0.0, -0.00016927647811826319, 0.0, -4.780292510986328e-05, 0.0, -2.6702880859375e-05, -0.0008182525634765625, 0.0, -7.2479248046875e-05, -3.576278118089249e-07, -7.62939453125e-06, -3.62396240234375e-05, -1.7642974853515625e-05, -0.00010728710913099349, -0.3028736114501953, -1.9073486328125e-05, -0.03857231140136719, -0.0001087188720703125, -1.9073486328125e-06, -1.52587890625e-05, -0.0002384185791015625, 0.0, -0.0001010894775390625, 0.0, -0.0015081167221069336, -7.152555099310121e-07, -2.6702873583417386e-05, -3.576278118089249e-07, -1.6990777254104614, -2.861022494471399e-06, -7.62939453125e-05, -0.017011642456054688, -0.000247955322265625, -0.00164794921875, -5.14984130859375e-05, -0.000240325927734375, 0.0, -0.003933906555175781, 0.0, -0.009938475675880909, 0.0, -0.0003032684326171875, -0.16538333892822266, -0.007901191711425781, -2.47955322265625e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03295421600341797, 0.0, -0.00501561164855957, -1.1682510375976562e-05, -1.609325408935547e-05, -2.1338462829589844e-05, -0.026105523109436035, -1.537799835205078e-05, -0.013310432434082031, -3.814697265625e-06, -0.0021944046020507812, -1.1920928244535389e-07, -0.0031490325927734375, -3.814697265625e-06, -0.0003376007080078125, -0.000209808349609375, -0.0016040802001953125, -0.006649017333984375, 0.0, -0.2796562910079956, -1.9073486328125e-06, -0.0696488618850708, 0.0, -0.4214954376220703, 0.0, -0.04087555408477783, -7.152555099310121e-07, -0.0017871856689453125, -3.814697265625e-06, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -1.71661376953125e-05, -0.3942890167236328, -4.57763671875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.013168931007385254, -2.0265558760002023e-06, -5.698202585335821e-05, -5.9604644775390625e-06, -1.4831571578979492, -3.933906555175781e-06, -0.0002727508544921875, -0.6629981994628906, -0.008563041687011719, -0.004825592041015625, -0.0002617835998535156, -0.008455038070678711, -0.00815880298614502, -3.814697265625e-06, -0.017460482195019722, 0.0], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"hole1": "SpellDamage", "hole0": "Buff", "_type": "Template32", "hole2": 1}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.134661140884944}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(2), self)\n        self.player = player\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.9026994705200195, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, 0.0, -0.000110626220703125, 0.0, -0.0004738543648272753, 0.0, -2.872943878173828e-05, 0.0, -5.14984130859375e-05, -0.000942230224609375, 0.0, -5.53131103515625e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.47955322265625e-05, -1.1801719665527344e-05, -0.0001175388679257594, -0.39267635345458984, -4.38690185546875e-05, -0.3398723602294922, -0.0005950927734375, -3.814697265625e-06, 0.0, -3.24249267578125e-05, 0.0, -0.0002536773681640625, 0.0, -0.0009111166000366211, -5.960462772236497e-07, -1.6450858311145566e-05, -2.503394853192731e-06, -0.7298747301101685, -5.364416665543104e-06, -6.67572021484375e-05, -0.010626792907714844, -0.0004329681396484375, -0.0012378692626953125, -3.62396240234375e-05, -0.0002651214599609375, 0.0, -0.0024080276489257812, 0.0, -0.009636280126869678, 0.0, -0.00022125244140625, -1.9087352752685547, 0.0, -0.6029598712921143, 0.0, -0.000209808349609375, -4.57763671875e-05, -0.000335693359375, -3.814697265625e-06, -0.012108802795410156, -9.5367431640625e-06, -2.288818359375e-05, -0.008409500122070312, -0.0023317337036132812, -0.01693248748779297, 0.0, -0.0666341781616211, -1.9073486328125e-06, -0.6297397613525391, 0.0, -0.47504138946533203, 0.0, -0.24179744720458984, -1.1920928244535389e-07], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.137770100303882}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "choices", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Cat", "Form", "<EOS>", 32, 101, 19, 125, "Transform", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Transform", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, choices=[Choice(CatForm(), Transform(Taunt()),\n            SelfSelector()), Battlecry(Transform(Taunt()), SelfSelector())])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -1.2659533023834229, -0.000202178955078125, -0.08398818969726562, -0.0004425048828125, -0.002979278564453125, -0.000164031982421875, -0.0007762908935546875, -0.0011539459228515625, 0.0, -0.002152562141418457, -1.9073486328125e-06, -2.86102294921875e-05, -0.024346351623535156, -0.0001068115234375, -0.4815598428249359, -0.001999526284635067, 0.0, -0.000774383544921875, -0.00014495849609375, -1.9073486328125e-06, 0.0, -0.003316521644592285, -1.9073486328125e-06, -2.09808349609375e-05, -0.0001373291015625, 0.0, -0.09491007030010223, -0.014244071207940578, -0.0032520294189453125, -1.9073486328125e-06, -0.014137232676148415, -2.920626684499439e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, -1.1444091796875e-05, 0.0, -1.050105094909668, -5.960462772236497e-07, -0.000118255615234375, -0.26466941833496094, -3.814697265625e-06, -0.0001621246337890625, -1.52587890625e-05, -0.24078965187072754, -5.841255187988281e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.03489774465560913, -0.009210288524627686, -0.004467010498046875, -1.9073486328125e-06, -0.00320792174898088, -8.106231689453125e-06, 0.0, -0.3676033020019531, -0.002117156982421875, -0.0021953582763671875, 0.0, -3.814697265625e-06, -0.0001316070556640625, 0.0, -1.2278553185751662e-05, -1.1920928244535389e-07, 0.0, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -5.14984130859375e-05, -2.0265579223632812e-06, -0.4015655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, 0.0, -0.0003955279244109988, 0.0, -2.86102294921875e-05, 0.0, -4.00543212890625e-05, -0.000965118408203125, 0.0, -4.1961669921875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.6702880859375e-05, -1.1801719665527344e-05, -0.0001156313082901761, -0.5710468292236328, -3.4332275390625e-05, -0.24140357971191406, -0.0005817413330078125, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000240325927734375, 0.0, -0.0009454488754272461, -5.960462772236497e-07, -1.6808484360808507e-05, -2.503394853192731e-06, -0.6197025775909424, -5.7220440794480965e-06, -7.05718994140625e-05, -0.012312889099121094, -0.0004901885986328125, -0.0018463134765625, -4.57763671875e-05, -0.0001659393310546875, 0.0, -0.0023469924926757812, 0.0, -0.009518858976662159, 0.0, -0.000217437744140625, -0.17566680908203125, -0.0043506622314453125, -2.288818359375e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0321197509765625, 0.0, -0.004416704177856445, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025452375411987305, -1.537799835205078e-05, -0.011677742004394531, -3.814697265625e-06, -0.0019483566284179688, -1.1920928244535389e-07, -0.0024633407592773438, -3.814697265625e-06, -0.0011768341064453125, -1.71661376953125e-05, -0.0004138946533203125, -0.017108917236328125, -1.9073486328125e-06, -0.32234299182891846, -3.814697265625e-06, -0.11719799041748047, 0.0, -0.41470909118652344, 0.0, -0.07407855987548828, -3.576278118089249e-07], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"elts": [{"args": [{"hole0": "CatForm", "_type": "Template38"}, {"args": [{"hole0": "Taunt", "_type": "Template38"}], "func": {"id": "Transform", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Taunt", "_type": "Template38"}], "func": {"id": "Transform", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "choices", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.391811169708724}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = Null\n        self.player = Null\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.5980157852172852, -4.1961669921875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001373291015625, 0.0, -0.00016927647811826319, 0.0, -4.780292510986328e-05, 0.0, -2.6702880859375e-05, -0.0008182525634765625, 0.0, -7.2479248046875e-05, -3.576278118089249e-07, -7.62939453125e-06, -3.62396240234375e-05, -1.7642974853515625e-05, -0.00010728710913099349, -0.3028736114501953, -1.9073486328125e-05, -0.03857231140136719, -0.0001087188720703125, -1.9073486328125e-06, -1.52587890625e-05, -0.0002384185791015625, 0.0, -0.0001010894775390625, 0.0, -0.0015081167221069336, -7.152555099310121e-07, -2.6702873583417386e-05, -3.576278118089249e-07, -1.6990777254104614, -2.861022494471399e-06, -7.62939453125e-05, -0.017011642456054688, -0.000247955322265625, -0.00164794921875, -5.14984130859375e-05, -0.000240325927734375, 0.0, -0.003933906555175781, 0.0, -0.009938475675880909, 0.0, -0.0003032684326171875, -0.16538333892822266, -0.007901191711425781, -2.47955322265625e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03295421600341797, 0.0, -0.00501561164855957, -1.1682510375976562e-05, -1.609325408935547e-05, -2.1338462829589844e-05, -0.026105523109436035, -1.537799835205078e-05, -0.013310432434082031, -3.814697265625e-06, -0.0021944046020507812, -1.1920928244535389e-07, -0.0031490325927734375, -3.814697265625e-06, -0.0003376007080078125, -0.000209808349609375, -0.0016040802001953125, -0.006649017333984375, 0.0, -0.2796562910079956, -1.9073486328125e-06, -0.0696488618850708, 0.0, -1.2429065704345703, -0.01425933837890625, -0.001187443733215332, 0.0, -0.22942543029785156, -2.86102294921875e-05, -5.14984130859375e-05, -1.0119781494140625, -0.005406379699707031, -0.007370948791503906, 0.0, -0.42909955978393555, -3.814697265625e-06, -0.19556331634521484, 0.0, -0.26866626739501953, -0.00121307373046875, -0.0007834434509277344, -1.1920928244535389e-07], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.476627276329118}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "choices", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Cat", "Form", "<EOS>", 32, 101, 19, 125, "Transform", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Transform", "<EOS>", 208, 49, 174, "Taunt", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, choices=[Choice(CatForm(), Transform(Taunt()),\n            SelfSelector()), Battlecry(Transform(Taunt()), SelfSelector())])\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = Null\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -1.2659533023834229, -0.000202178955078125, -0.08398818969726562, -0.0004425048828125, -0.002979278564453125, -0.000164031982421875, -0.0007762908935546875, -0.0011539459228515625, 0.0, -0.002152562141418457, -1.9073486328125e-06, -2.86102294921875e-05, -0.024346351623535156, -0.0001068115234375, -0.4815598428249359, -0.001999526284635067, 0.0, -0.000774383544921875, -0.00014495849609375, -1.9073486328125e-06, 0.0, -0.003316521644592285, -1.9073486328125e-06, -2.09808349609375e-05, -0.0001373291015625, 0.0, -0.09491007030010223, -0.014244071207940578, -0.0032520294189453125, -1.9073486328125e-06, -0.014137232676148415, -2.920626684499439e-05, 0.0, -3.4332275390625e-05, -8.7738037109375e-05, -1.1444091796875e-05, 0.0, -1.050105094909668, -5.960462772236497e-07, -0.000118255615234375, -0.26466941833496094, -3.814697265625e-06, -0.0001621246337890625, -1.52587890625e-05, -0.24078965187072754, -5.841255187988281e-06, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -0.03489774465560913, -0.009210288524627686, -0.004467010498046875, -1.9073486328125e-06, -0.00320792174898088, -8.106231689453125e-06, 0.0, -0.3676033020019531, -0.002117156982421875, -0.0021953582763671875, 0.0, -3.814697265625e-06, -0.0001316070556640625, 0.0, -1.2278553185751662e-05, -1.1920928244535389e-07, 0.0, -1.71661376953125e-05, 0.0, -7.62939453125e-06, -5.14984130859375e-05, -2.0265579223632812e-06, -0.4015655517578125, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -7.62939453125e-05, 0.0, -0.0003955279244109988, 0.0, -2.86102294921875e-05, 0.0, -4.00543212890625e-05, -0.000965118408203125, 0.0, -4.1961669921875e-05, -2.3841855067985307e-07, -9.5367431640625e-06, -2.6702880859375e-05, -1.1801719665527344e-05, -0.0001156313082901761, -0.5710468292236328, -3.4332275390625e-05, -0.24140357971191406, -0.0005817413330078125, -3.814697265625e-06, -1.9073486328125e-06, -4.38690185546875e-05, 0.0, -0.000240325927734375, 0.0, -0.0009454488754272461, -5.960462772236497e-07, -1.6808484360808507e-05, -2.503394853192731e-06, -0.6197025775909424, -5.7220440794480965e-06, -7.05718994140625e-05, -0.012312889099121094, -0.0004901885986328125, -0.0018463134765625, -4.57763671875e-05, -0.0001659393310546875, 0.0, -0.0023469924926757812, 0.0, -0.009518858976662159, 0.0, -0.000217437744140625, -0.17566680908203125, -0.0043506622314453125, -2.288818359375e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0321197509765625, 0.0, -0.004416704177856445, -1.1682510375976562e-05, -1.5974044799804688e-05, -2.1338462829589844e-05, -0.025452375411987305, -1.537799835205078e-05, -0.011677742004394531, -3.814697265625e-06, -0.0019483566284179688, -1.1920928244535389e-07, -0.0024633407592773438, -3.814697265625e-06, -0.0011768341064453125, -1.71661376953125e-05, -0.0004138946533203125, -0.017108917236328125, -1.9073486328125e-06, -0.32234299182891846, -3.814697265625e-06, -0.11719799041748047, 0.0, -1.1603565216064453, -0.007569313049316406, -0.000990152359008789, 0.0], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"elts": [{"args": [{"hole0": "CatForm", "_type": "Template38"}, {"args": [{"hole0": "Taunt", "_type": "Template38"}], "func": {"id": "Transform", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Taunt", "_type": "Template38"}], "func": {"id": "Transform", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "choices", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.071939148033671}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        self.player = player\n        self.target.<UNK>(minion)\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.5980157852172852, -4.1961669921875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001373291015625, 0.0, -0.00016927647811826319, 0.0, -4.780292510986328e-05, 0.0, -2.6702880859375e-05, -0.0008182525634765625, 0.0, -7.2479248046875e-05, -3.576278118089249e-07, -7.62939453125e-06, -3.62396240234375e-05, -1.7642974853515625e-05, -0.00010728710913099349, -0.3028736114501953, -1.9073486328125e-05, -0.03857231140136719, -0.0001087188720703125, -1.9073486328125e-06, -1.52587890625e-05, -0.0002384185791015625, 0.0, -0.0001010894775390625, 0.0, -0.0015081167221069336, -7.152555099310121e-07, -2.6702873583417386e-05, -3.576278118089249e-07, -1.6990777254104614, -2.861022494471399e-06, -7.62939453125e-05, -0.017011642456054688, -0.000247955322265625, -0.00164794921875, -5.14984130859375e-05, -0.000240325927734375, 0.0, -0.003933906555175781, 0.0, -0.009938475675880909, 0.0, -0.0003032684326171875, -0.16538333892822266, -0.007901191711425781, -2.47955322265625e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03295421600341797, 0.0, -0.00501561164855957, -1.1682510375976562e-05, -1.609325408935547e-05, -2.1338462829589844e-05, -0.026105523109436035, -1.537799835205078e-05, -0.013310432434082031, -3.814697265625e-06, -0.0021944046020507812, -1.1920928244535389e-07, -0.0031490325927734375, -3.814697265625e-06, -0.0003376007080078125, -0.000209808349609375, -0.0016040802001953125, -0.006649017333984375, 0.0, -0.2796562910079956, -1.9073486328125e-06, -0.0696488618850708, 0.0, -0.4214954376220703, 0.0, -0.04087555408477783, -7.152555099310121e-07, -0.0017871856689453125, -3.814697265625e-06, -3.24249267578125e-05, -2.47955322265625e-05, 0.0, -1.71661376953125e-05, -0.3942890167236328, -4.57763671875e-05, -3.814697265625e-06, -7.62939453125e-06, -0.013168931007385254, -2.0265558760002023e-06, -5.698202585335821e-05, -5.9604644775390625e-06, -0.548363208770752, -1.1920928244535389e-07, -0.000202178955078125, -0.22047901153564453, -1.9073486328125e-06, -2.468480110168457, -4.0531158447265625e-06], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.178031132589759}, {"choice_history": [55, 124, 221, 63, 103, "Mark", "Of", "The", "Wild", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mark", " ", "of", " ", "the", " ", "Wild", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>", 65, 107, 19, 125, "player", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 67, 112, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 6, 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 205, 10, 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Spell", "Damage", "<EOS>", "1", "<EOS>"], "inferred_code": "class MarkOfTheWild(SpellCard):\n\n    def __init__(self):\n        super().__init__('Mark of the Wild', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(SpellDamage(1)))\n        for player in targets:\n            lightwarden.summon(player, game, len(player.minions))\n        if self.target is MINION_TYPE.DEMON:\n            lightwarden.summon(player, game, len(player.minions))\n        elif self.target.health != self.target.calculate_max_health():\n            self.target.add_buff(Buff(SpellDamage(1)))\n", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -0.000232696533203125, -5.53131103515625e-05, -9.918212890625e-05, -0.000328367663314566, -0.00010204313730355352, -0.003842005506157875, -0.0014300926122814417, -0.0009722709655761719, -0.000141143798828125, -2.288818359375e-05, -5.7220458984375e-06, -0.00016868114471435547, -4.589557647705078e-05, -5.7220458984375e-06, -0.02547168731689453, -0.008007049560546875, -3.814697265625e-06, -0.00011336283932905644, -0.0013010501861572266, -4.9591064453125e-05, -0.00014495849609375, -3.0517578125e-05, -7.557638309663162e-05, -0.0005590915679931641, -0.010562896728515625, -0.0001068115234375, -1.33514404296875e-05, -3.814697265625e-06, -0.0019140243530273438, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -8.118146797642112e-05, -7.62939453125e-06, -9.739398956298828e-05, 0.0, -0.0022983551025390625, -9.5367431640625e-05, -0.0002498626708984375, -0.0005864569102413952, -0.0023471114691346884, -0.0030382308177649975, -0.0006467103958129883, -0.0005851748283021152, -0.0012903213500976562, -0.0004043578519485891, -1.1444091796875e-05, -4.00543212890625e-05, -4.00543212890625e-05, -0.006947576068341732, -1.1920928955078125e-05, -3.814697265625e-06, -0.0001201629638671875, -8.58306884765625e-05, 0.0, -0.0004196165828034282, -0.00018143653869628906, -0.17919814586639404, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -0.000301361083984375, 0.0, -9.262561798095703e-05, -1.1920928244535389e-07, -0.08378612995147705, -1.9073486328125e-06, -0.0002422332763671875, -0.00592041015625, -3.814697265625e-06, -0.42885422706604004, -3.814697265625e-06, -0.001068115234375, -3.24249267578125e-05, -0.00016021728515625, -0.00023651123046875, -3.62396240234375e-05, -3.814697265625e-06, -0.000102996826171875, -3.814697265625e-06, -7.641315460205078e-05, -2.6702880859375e-05, -0.0009261369705200195, -3.8743019104003906e-05, -0.0009937286376953125, -0.0005931854248046875, -4.088878267793916e-05, -3.218649908376392e-06, -1.52587890625e-05, -3.814697265625e-05, 0.0, -2.276888699270785e-05, -2.3841855067985307e-07, -2.288818359375e-05, -0.00018978118896484375, -2.1457672119140625e-06, -1.9073486328125e-05, -1.442432312614983e-05, -9.298322765971534e-06, -0.5980157852172852, -4.1961669921875e-05, -3.814697265625e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.0001373291015625, 0.0, -0.00016927647811826319, 0.0, -4.780292510986328e-05, 0.0, -2.6702880859375e-05, -0.0008182525634765625, 0.0, -7.2479248046875e-05, -3.576278118089249e-07, -7.62939453125e-06, -3.62396240234375e-05, -1.7642974853515625e-05, -0.00010728710913099349, -0.3028736114501953, -1.9073486328125e-05, -0.03857231140136719, -0.0001087188720703125, -1.9073486328125e-06, -1.52587890625e-05, -0.0002384185791015625, 0.0, -0.0001010894775390625, 0.0, -0.0015081167221069336, -7.152555099310121e-07, -2.6702873583417386e-05, -3.576278118089249e-07, -0.7801457643508911, -6.079673767089844e-06, -0.0001125335693359375, -1.1760425567626953, -0.00152587890625, -0.0023537874221801758, -0.00012695789337158203, -0.009949684143066406, -0.0051718950271606445, -7.62939453125e-06, -0.005872434936463833, 0.0, -1.029958724975586, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.8891252279281616, 0.0, -0.1423959732055664, 0.0, -0.008962631225585938, 0.0, -0.09346771240234375, -0.0001506805419921875, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -0.07802867889404297, 0.0, -0.46544694900512695, -3.576278118089249e-07, -0.023252487182617188, 0.0, -2.47955322265625e-05, -0.000629425048828125, -9.5367431640625e-06, -0.00026798248291015625, 0.0, -0.3765859603881836, -3.814697265625e-06, -3.62396240234375e-05, -1.1920922133867862e-06, -0.001049041748046875, -0.0003376007080078125, -0.001621246337890625, -9.5367431640625e-06, -0.00990903377532959, -9.775130820344202e-06, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0003662109375, 0.0, -0.0001068115234375, -7.62939453125e-06, -9.942054748535156e-05, -2.6702880859375e-05, -0.1002655029296875, -0.00054931640625, -0.00189971923828125, -6.29425048828125e-05, -0.37429141998291016, 0.0, -0.0004901885986328125, -1.9073486328125e-06, -0.055800437927246094, 0.0, -0.0008187294006347656, -7.62939453125e-06, -2.09808349609375e-05, -0.024702072143554688, -0.0001659393310546875, -0.13125038146972656, -1.9073486328125e-06, -0.000286102294921875, 0.0, -0.13389968872070312, 0.0, -0.034740447998046875, 0.0, -0.005866050720214844, -0.05428886413574219, 0.0, -0.0073757171630859375, -5.7220458984375e-06, -0.0001621246337890625, 0.0, -0.04294300079345703, 0.0, -0.07363927364349365, -2.3841855067985307e-07, -0.13156604766845703, 0.0, -1.71661376953125e-05, -0.0006771087646484375, -3.814697265625e-06, -0.000522613525390625, 0.0, -0.06813621520996094, -3.814697265625e-06, -2.6702880859375e-05, -6.0796710386057384e-06, -0.00040435791015625, -0.0001544952392578125, -0.000904083251953125, -5.7220458984375e-06, -0.009223103523254395, -5.9604562920867465e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.000213623046875, 0.0, -8.0108642578125e-05, -5.7220458984375e-06, -0.00010144710540771484, -3.62396240234375e-05, -0.000640869140625, -0.01583385467529297, -0.000186920166015625, -0.0043926239013671875, -3.62396240234375e-05, -0.010227203369140625, -7.62939453125e-06, -0.0017261505126953125, -3.814697265625e-06, -0.000591278076171875, -9.5367431640625e-06, -0.0072727203369140625, 0.0, -1.990795135498047e-05, -3.528594606905244e-05, -0.10291695594787598, 0.0, -7.62939453125e-05, -0.06234455108642578, -0.0003070831298828125, -0.0014896392822265625, -0.0005817413330078125, -2.6702880859375e-05, -3.814697265625e-06, -0.000335693359375, -3.814697265625e-06, -0.04114723205566406, 0.0, -0.0010071992874145508, -2.503394853192731e-06, -2.4795530407573096e-05, -2.384185791015625e-05, -0.01592695713043213, -5.7220458984375e-06, -0.009172439575195312, -0.0055065155029296875, -1.9073486328125e-06, -1.33514404296875e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.49620532989501953, 0.0, -0.000141143798828125, 0.0, -0.040357232093811035, -4.410743713378906e-06, -0.0012886524200439453, -1.3947486877441406e-05, -0.4383864402770996, -9.655952453613281e-06, -0.0011730194091796875, -0.44094371795654297, -0.0068759918212890625, -0.0045500993728637695, -0.0003718137741088867, -0.00591433048248291, -0.009974837303161621, -1.52587890625e-05, -0.010602611117064953, 0.0], "model_output": {"body": [{"name": "MarkOfTheWild", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mark of the Wild", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole1": "SpellDamage", "hole0": "Buff", "_type": "Template32", "hole2": 1}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "player", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "lightwarden", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "lightwarden", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}], "orelse": [{"test": {"comparators": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "left": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "_type": "Compare", "ops": [{"_type": "NotEq"}]}, "body": [{"value": {"args": [{"hole1": "SpellDamage", "hole0": "Buff", "_type": "Template32", "hole2": 1}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.819309009241344}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.47955322265625e-05, -9.918212890625e-05, -18.47348403930664], "model_output": {"body": [], "_type": "Module"}, "score": -18.473608016967773}]}
{"gold_code": "class MultiShot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            target = game.random_choice(targets)\n            targets.remove(target)\n            target.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 2\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -0.34124279022216797, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -1.7881377516459906e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.6702880859375e-05, -5.340576171875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.01723766326904297, -1.52587890625e-05, -5.7220458984375e-05, 0.0, -1.774658203125, -2.300717096659355e-05, -0.0005016326904296875, -0.0001316070556640625, -0.000370025634765625, 0.0, -0.000125885009765625, 0.0, -0.0010509490966796875, -3.576278118089249e-07, -0.0021064281463623047, 0.0, -0.000102996826171875, -3.24249267578125e-05, 0.0, -0.000225067138671875, -1.1444091796875e-05, -0.0004177093505859375, -1.9073486328125e-06, -0.000774383544921875, -4.172325134277344e-06, -0.0005043745040893555, 0.0, -0.0012194225564599037, 0.0, -0.0001583099365234375, -0.002239227294921875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.00026702880859375, -3.814697265625e-06, -0.003055572509765625, -5.125993993715383e-06, -0.00017952919006347656, 0.0, -1.9073486328125e-06, -0.03986358642578125, -6.866455078125e-05, -0.10733183473348618, -0.00015020370483398438, -4.76837158203125e-05, -7.62939453125e-06, -0.0006237030029296875, 0.0, -0.0035123825073242188, -1.71661376953125e-05, -0.0007791519165039062, 0.0, -2.86102294921875e-05, -9.5367431640625e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -3.0517578125e-05, -0.0003262758255004883, -2.0265579223632812e-06, -0.0008392333984375, -0.0039272308349609375, -0.00017547607421875, -0.0004558563232421875, -8.96453857421875e-05, -0.000461578369140625, -1.1444091796875e-05, -5.91278076171875e-05, -5.7220458984375e-06, -5.3763389587402344e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0021076202392578125, -1.9073486328125e-06, -0.0004940032958984375, -1.9073486328125e-06, -0.00180816650390625, -2.1457672119140625e-06, -0.0005153417587280273, 0.0, -0.0004756962298415601, 0.0, -0.0003681182861328125, -0.007796287536621094, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.023091884329915047, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3350533334095758}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -0.34124279022216797, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -1.7881377516459906e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.6702880859375e-05, -5.340576171875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.01723766326904297, -1.52587890625e-05, -5.7220458984375e-05, 0.0, -0.19803428649902344, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0568389892578125, 0.0, -0.00014972686767578125, -1.1920928244535389e-07, -0.00025177001953125, -2.288818359375e-05, 0.0, -0.00015389890177175403, -1.71661376953125e-05, -0.07791423797607422, -5.7220458984375e-06, -0.023974748328328133, 0.0, -0.1399669647216797, -0.000274658203125, -2.6702880859375e-05, -0.0002117156982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.043066978454589844, -2.09808349609375e-05, -0.0004634857177734375, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017337799072265625, -1.0728830375228426e-06, -0.005598306655883789, -1.9073486328125e-06, -0.00902557373046875, -0.0014553070068359375, 0.0, -0.4455299377441406, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00030994415283203125, 0.0, -0.01738739013671875, 0.0, -0.06136512756347656, 0.0, -0.0008716583251953125, -0.42929649353027344, -5.7220458984375e-06, -0.05123138427734375, 0.0, -0.033049583435058594, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0005369186401367188, 0.0, -0.2966346740722656, -2.0265579223632812e-06, -0.0013161897659301758, 0.0, -3.814697265625e-06, -0.1390228271484375, -0.0001087188720703125, -0.22776709496974945, -0.00021898746490478516, -3.62396240234375e-05, -7.62939453125e-06, -0.0007448196411132812, 0.0, -0.010608673095703125, -1.52587890625e-05, -0.0005884170532226562, 0.0, -2.47955322265625e-05, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -2.288818359375e-05, -0.000347137451171875, -2.0265579223632812e-06, -0.0006885528564453125, -0.0040130615234375, -0.0002079010009765625, -0.000457763671875, -9.1552734375e-05, -0.0004138946533203125, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-06, -4.6133995056152344e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.002132415771484375, -1.9073486328125e-06, -0.0004901885986328125, -1.9073486328125e-06, -0.00182342529296875, -2.1457672119140625e-06, -0.0005191564559936523, 0.0, -0.00047867605462670326, 0.0, -0.0003681182861328125, -0.007719993591308594, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.024006230756640434, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.6714801619258353}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -1.0454728603363037, -2.3841855067985307e-07, -0.000713348388671875, -0.0001811981201171875, -0.00029969215393066406, 0.0, -5.340576171875e-05, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.0531158447265625e-06, -0.24083900451660156, -3.4332275390625e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.9073468138230965e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.47955322265625e-05, -5.14984130859375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.018935203552246094, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -1.8295421600341797, -2.288796349603217e-05, -0.000499725341796875, -0.0001316070556640625, -0.000370025634765625, 0.0, -0.000125885009765625, 0.0, -0.0010623931884765625, -3.576278118089249e-07, -0.002119779586791992, 0.0, -0.000102996826171875, -3.24249267578125e-05, 0.0, -0.000225067138671875, -1.1444091796875e-05, -0.0004177093505859375, -1.9073486328125e-06, -0.0007724761962890625, -4.172325134277344e-06, -0.0005043745040893555, 0.0, -0.0012181127676740289, 0.0, -0.000156402587890625, -0.0022335052490234375, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -2.09808349609375e-05, -3.814697265625e-06, -0.00026702880859375, -3.814697265625e-06, -0.0030584335327148438, -5.125993993715383e-06, -0.00017952919006347656, 0.0, -1.9073486328125e-06, -0.039862632751464844, -6.866455078125e-05, -0.10736258327960968, -0.00015020370483398438, -4.76837158203125e-05, -7.62939453125e-06, -0.0006246566772460938, 0.0, -0.0035114288330078125, -1.71661376953125e-05, -0.0007791519165039062, 0.0, -2.86102294921875e-05, -9.5367431640625e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -3.0517578125e-05, -0.0003243684768676758, -2.0265579223632812e-06, -0.0008392333984375, -0.0039272308349609375, -0.00017547607421875, -0.0004558563232421875, -8.96453857421875e-05, -0.000461578369140625, -1.1444091796875e-05, -5.91278076171875e-05, -5.7220458984375e-06, -5.3763389587402344e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.0021076202392578125, -1.9073486328125e-06, -0.0004940032958984375, -1.9073486328125e-06, -0.00180816650390625, -2.1457672119140625e-06, -0.0005153417587280273, 0.0, -0.0004756962298415601, 0.0, -0.0003681182861328125, -0.007796287536621094, -7.62939453125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.023091884329915047, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7954205302327466}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -1.0454728603363037, -2.3841855067985307e-07, -0.000713348388671875, -0.0001811981201171875, -0.00029969215393066406, 0.0, -5.340576171875e-05, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.0531158447265625e-06, -0.24083900451660156, -3.4332275390625e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.9073468138230965e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.47955322265625e-05, -5.14984130859375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.018935203552246094, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -0.18680477142333984, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.05715465545654297, 0.0, -0.00014781951904296875, -1.1920928244535389e-07, -0.0002498626708984375, -2.288818359375e-05, 0.0, -0.00015199155313894153, -1.71661376953125e-05, -0.07776165008544922, -5.7220458984375e-06, -0.02384991943836212, 0.0, -0.1410837173461914, -0.000274658203125, -2.86102294921875e-05, -0.0002117156982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.0437469482421875, -2.09808349609375e-05, -0.0004634857177734375, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017576217651367188, -1.0728830375228426e-06, -0.00561833381652832, -1.9073486328125e-06, -0.009014129638671875, -0.001453399658203125, 0.0, -0.44568920135498047, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00030994415283203125, 0.0, -0.017564773559570312, 0.0, -0.06142616271972656, 0.0, -0.000873565673828125, -0.430572509765625, -5.7220458984375e-06, -0.05151939392089844, 0.0, -0.033489227294921875, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0005464553833007812, 0.0, -0.29174327850341797, -2.0265579223632812e-06, -0.0012990236282348633, 0.0, -3.814697265625e-06, -0.1349658966064453, -0.00011444091796875, -0.2306218445301056, -0.00021910667419433594, -3.814697265625e-05, -7.62939453125e-06, -0.000782012939453125, 0.0, -0.010921478271484375, -1.52587890625e-05, -0.000579833984375, 0.0, -2.6702880859375e-05, -8.96453857421875e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0001049041748046875, 0.0, -2.288818359375e-05, -0.000347137451171875, -2.0265579223632812e-06, -0.0006866455078125, -0.0040111541748046875, -0.0002079010009765625, -0.000457763671875, -9.1552734375e-05, -0.0004138946533203125, -9.5367431640625e-06, -4.00543212890625e-05, -3.814697265625e-06, -4.8041343688964844e-05, 0.0, -2.86102294921875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.002132415771484375, -1.9073486328125e-06, -0.0004901885986328125, -1.9073486328125e-06, -0.00182342529296875, -2.1457672119140625e-06, -0.0005191564559936523, 0.0, -0.0004787952348124236, 0.0, -0.0003681182861328125, -0.007718086242675781, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.024031270295381546, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.064231173893937}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -2.0651330947875977, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.8146954466355965e-06, 0.0, -2.47955322265625e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -5.91278076171875e-05, -3.24249267578125e-05, -4.00543212890625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -8.702254490344785e-06, -0.006434440612792969, 0.0, -7.82012939453125e-05, -0.0001373291015625, -1.9073486328125e-06, -0.01756763458251953, -3.814697265625e-06, -0.000301361083984375, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.0002689361572265625, 0.0, -0.023855209350585938, -2.622600959512056e-06, -0.005001544952392578, 0.0, -0.000217437744140625, -6.4849853515625e-05, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.00173187255859375, -1.9073486328125e-06, -0.0005207061767578125, -2.2649765014648438e-06, -0.0007541179656982422, 0.0, -0.0014991950010880828, 0.0, -0.0892038345336914, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.006096839904785156, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.0002727508544921875, -7.62939453125e-06, -0.00012409687042236328, 0.0, -8.0108642578125e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00024867034517228603, -3.4332275390625e-05, -0.02271556854248047, -1.9073486328125e-06, -0.028888482600450516, 0.0, -0.044742584228515625, -0.000179290771484375, -4.57763671875e-05, -0.0001659393310546875, -2.09808349609375e-05, -1.9073486328125e-06, -0.02418041229248047, -2.86102294921875e-05, -0.000522613525390625, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -0.003871917724609375, -1.5497195136049413e-06, -0.0059778690338134766, -1.9073486328125e-06, -0.008390426635742188, -0.0005950927734375, 0.0, -0.02112102508544922, -5.7220458984375e-06, -4.9591064453125e-05, -3.0517578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.000362396240234375, 0.0, -0.009667396545410156, -1.9073486328125e-06, -0.050141334533691406, 0.0, -0.0005645751953125, -0.034743309020996094, -9.5367431640625e-06, -0.057254791259765625, 0.0, -0.02076244354248047, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0005311965942382812, 0.0, -0.5929718017578125, -2.1457672119140625e-06, -0.00146484375, 0.0, -3.814697265625e-06, -0.17695999145507812, -0.0001049041748046875, -0.22206124663352966, -0.0002028942108154297, -2.86102294921875e-05, -5.7220458984375e-06, -0.00031948089599609375, 0.0, -0.00643157958984375, -1.33514404296875e-05, -0.0005779266357421875, 0.0, -2.47955322265625e-05, -0.0001010894775390625, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.71661376953125e-05, -0.0003185272216796875, -2.0265579223632812e-06, -0.000743865966796875, -0.004375457763671875, -0.0002231597900390625, -0.0003871917724609375, -8.58306884765625e-05, -0.0004062652587890625, -9.5367431640625e-06, -3.4332275390625e-05, -3.814697265625e-06, -4.2319297790527344e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.002063751220703125, -1.9073486328125e-06, -0.0004940032958984375, -1.9073486328125e-06, -0.0017681121826171875, -2.1457672119140625e-06, -0.0005191564559936523, 0.0, -0.00048451515613123775, 0.0, -0.00035858154296875, -0.007710456848144531, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.024763016030192375, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.594680385617373}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -2.0651330947875977, -1.1444091796875e-05, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.8146954466355965e-06, 0.0, -2.47955322265625e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -5.91278076171875e-05, -3.24249267578125e-05, -4.00543212890625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -8.702254490344785e-06, -0.006434440612792969, 0.0, -7.82012939453125e-05, -0.0001373291015625, -1.9073486328125e-06, -0.01756763458251953, -3.814697265625e-06, -0.000301361083984375, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.0002689361572265625, 0.0, -0.023855209350585938, -2.622600959512056e-06, -0.005001544952392578, 0.0, -0.000217437744140625, -6.4849853515625e-05, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.00173187255859375, -1.9073486328125e-06, -0.0005207061767578125, -2.2649765014648438e-06, -0.0007541179656982422, 0.0, -0.0014991950010880828, 0.0, -0.0892038345336914, -1.33514404296875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.006096839904785156, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.0002727508544921875, -7.62939453125e-06, -0.00012409687042236328, 0.0, -8.0108642578125e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00024867034517228603, -3.4332275390625e-05, -0.02271556854248047, -1.9073486328125e-06, -0.028888482600450516, 0.0, -0.044742584228515625, -0.000179290771484375, -4.57763671875e-05, -0.0001659393310546875, -2.09808349609375e-05, -1.9073486328125e-06, -0.02418041229248047, -2.86102294921875e-05, -0.000522613525390625, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -0.003871917724609375, -1.5497195136049413e-06, -0.0059778690338134766, -1.9073486328125e-06, -0.008390426635742188, -0.0005950927734375, 0.0, -0.02112102508544922, -5.7220458984375e-06, -4.9591064453125e-05, -3.0517578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.000362396240234375, 0.0, -0.009667396545410156, -1.9073486328125e-06, -0.050141334533691406, 0.0, -0.0005645751953125, -0.034743309020996094, -9.5367431640625e-06, -0.057254791259765625, 0.0, -0.02076244354248047, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0005311965942382812, 0.0, -0.9018592834472656, -1.9073486328125e-06, -0.09305000305175781, 0.0, -0.0002841949462890625, -0.03756237030029297, -3.814697265625e-06, -0.027754783630371094, 0.0, -0.0007114410400390625, -2.6702880859375e-05, -0.001491546630859375, 0.0, -1.52587890625e-05, -0.0001087188720703125, 0.0, -1.1444091796875e-05, 0.0, 0.0, -0.000148773193359375, 0.0, -9.5367431640625e-06, -0.0001621246337890625, -2.0265579223632812e-06, -0.000583648681640625, -0.004787445068359375, -0.0002288818359375, -0.0003108978271484375, -4.9591064453125e-05, -0.0004119873046875, -5.7220458984375e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.2782554626464844e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020313262939453125, -1.9073486328125e-06, -0.0004444122314453125, 0.0, -0.001804351806640625, -2.1457672119140625e-06, -0.0005267858505249023, 0.0, -0.00047414778964594007, 0.0, -0.00032806396484375, -0.007672309875488281, -7.62939453125e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.030330922454595566, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.661736477236097}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -1.8153247833251953, -0.09538936614990234, -0.0001983642578125, -0.000177129652001895, -7.152555099310121e-07, -2.515312735340558e-05, -3.6954811548639555e-06, -0.03615868091583252, -1.311301275563892e-06, -0.14184188842773438, -3.814697265625e-06, -1.847742714744527e-05, 0.0, -0.000141143798828125, -4.57763671875e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -7.748603820800781e-06, -4.0531158447265625e-06, -0.38710784912109375, -2.288818359375e-05, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -2.145764938177308e-06, 0.0, -3.0517578125e-05, 0.0, -1.9073486328125e-06, -6.29425048828125e-05, -2.6702880859375e-05, -5.7220458984375e-05, 0.0, -2.288818359375e-05, 0.0, -1.9073486328125e-05, -8.463848644169047e-06, -0.019285202026367188, -1.33514404296875e-05, -5.340576171875e-05, 0.0, -0.21219909191131592, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.052845001220703125, 0.0, -0.00015532970428466797, -1.1920928244535389e-07, -0.00025177001953125, -2.47955322265625e-05, 0.0, -0.00015532942779827863, -1.9073486328125e-05, -0.0801839828491211, -5.7220458984375e-06, -0.024021606892347336, 0.0, -0.14134693145751953, -0.00026702880859375, -2.86102294921875e-05, -0.000213623046875, -6.4849853515625e-05, -1.9073486328125e-06, -0.04345226287841797, -2.09808349609375e-05, -0.0004673004150390625, -5.7220458984375e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017299652099609375, -1.0728830375228426e-06, -0.005585908889770508, -1.9073486328125e-06, -0.009014129638671875, -0.0014591217041015625, 0.0, -0.4449481964111328, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.0003070831298828125, 0.0, -0.0176239013671875, 0.0, -0.06163501739501953, 0.0, -0.0008754730224609375, -0.43410491943359375, -5.7220458984375e-06, -0.05164146423339844, 0.0, -0.034531593322753906, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0005559921264648438, 0.0, -0.28789615631103516, -2.0265579223632812e-06, -0.0012856721878051758, 0.0, -3.814697265625e-06, -0.13134098052978516, -0.0001239776611328125, -0.2337217926979065, -0.00021910667419433594, -3.814697265625e-05, -7.62939453125e-06, -0.0008268356323242188, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template6", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.772564911996703}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 32, 101, 11, 94, 19, 125, "game", "<EOS>", "<UNK>", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "4", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(game.<UNK>(2, 4))\n            minion = game.random_choice(minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -0.34124279022216797, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -1.7881377516459906e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.6702880859375e-05, -5.340576171875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.01723766326904297, -1.52587890625e-05, -5.7220458984375e-05, 0.0, -0.19803428649902344, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0568389892578125, 0.0, -0.00014972686767578125, -1.1920928244535389e-07, -0.00025177001953125, -2.288818359375e-05, 0.0, -0.00015389890177175403, -1.71661376953125e-05, -0.07791423797607422, -5.7220458984375e-06, -0.023974748328328133, 0.0, -0.1399669647216797, -0.000274658203125, -2.6702880859375e-05, -0.0002117156982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.043066978454589844, -2.09808349609375e-05, -0.0004634857177734375, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017337799072265625, -1.0728830375228426e-06, -0.005598306655883789, -1.9073486328125e-06, -0.00902557373046875, -0.0014553070068359375, 0.0, -0.4455299377441406, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00030994415283203125, 0.0, -0.01738739013671875, 0.0, -0.06136512756347656, 0.0, -0.0008716583251953125, -1.1279716491699219, -0.0002536773681640625, -0.3727989196777344, -1.9073486328125e-06, -0.000732421875, 0.0, -0.0021610260009765625, -1.5497195136049413e-06, -0.22672855854034424, -1.9073486328125e-06, -0.0014095306396484375, -0.000751495361328125, -1.71661376953125e-05, -0.1884101778268814, -1.9073486328125e-06, -0.000232696533203125, -3.814697265625e-06, -0.02673184871673584, -2.288818359375e-05, -0.14435863494873047, -3.0517578125e-05, -0.0001220703125, -0.0007381439208984375, -1.9073486328125e-06, -0.18282949924468994, -4.780292510986328e-05, -0.00052642822265625, -6.866455078125e-05, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -0.0005159378051757812, -1.7881377516459906e-06, -0.004306197166442871, -1.9073486328125e-06, -0.008680343627929688, -0.00037384033203125, 0.0, -0.01611042022705078, -5.7220458984375e-06, -0.00121307373046875, -2.86102294921875e-05, -0.0033845901489257812, 0.0, -2.86102294921875e-05, -0.000438690185546875, 0.0, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -5.7220458984375e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00061798095703125, -0.004370689392089844, -0.00022125244140625, -0.0006084442138671875, -0.000110626220703125, -0.0004329681396484375, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.2782554626464844e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020046234130859375, -1.9073486328125e-06, -0.00046539306640625, 0.0, -0.0018157958984375, -2.1457672119140625e-06, -0.0005191564559936523, 0.0, -0.00048725519445724785, 0.0, -0.00034332275390625, -0.007739067077636719, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.02452932298183441, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.792671452857768}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "4", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(4), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -0.34124279022216797, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -1.7881377516459906e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.6702880859375e-05, -5.340576171875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.01723766326904297, -1.52587890625e-05, -5.7220458984375e-05, 0.0, -0.19803428649902344, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0568389892578125, 0.0, -0.00014972686767578125, -1.1920928244535389e-07, -0.00025177001953125, -2.288818359375e-05, 0.0, -0.00015389890177175403, -1.71661376953125e-05, -0.07791423797607422, -5.7220458984375e-06, -0.023974748328328133, 0.0, -0.1399669647216797, -0.000274658203125, -2.6702880859375e-05, -0.0002117156982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.043066978454589844, -2.09808349609375e-05, -0.0004634857177734375, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017337799072265625, -1.0728830375228426e-06, -0.005598306655883789, -1.9073486328125e-06, -0.00902557373046875, -0.0014553070068359375, 0.0, -0.4455299377441406, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00030994415283203125, 0.0, -0.01738739013671875, 0.0, -0.06136512756347656, 0.0, -0.0008716583251953125, -0.42929649353027344, -5.7220458984375e-06, -0.05123138427734375, 0.0, -0.033049583435058594, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0005369186401367188, 0.0, -0.2966346740722656, -2.0265579223632812e-06, -0.0013161897659301758, 0.0, -3.814697265625e-06, -0.1390228271484375, -0.0001087188720703125, -1.5916156768798828, -4.410743713378906e-05, -8.20159912109375e-05, -1.9073486328125e-06, -0.0012664794921875, 0.0, -0.006136894226074219, -2.09808349609375e-05, -0.0006361007690429688, 0.0, -1.9073486328125e-05, -9.1552734375e-05, 0.0, -9.655952453613281e-06, 0.0, -1.9073486328125e-06, -0.000118255615234375, 0.0, -2.47955322265625e-05, -0.0004674196243286133, -2.0265579223632812e-06, -0.000667572021484375, -0.0039157867431640625, -0.0001983642578125, -0.0005035400390625, -9.918212890625e-05, -0.000385284423828125, -9.5367431640625e-06, -3.4332275390625e-05, -3.814697265625e-06, -4.8041343688964844e-05, 0.0, -3.0517578125e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.002170562744140625, -1.9073486328125e-06, -0.000484466552734375, -1.9073486328125e-06, -0.0018520355224609375, -2.1457672119140625e-06, -0.0005229711532592773, 0.0, -0.0004756969283334911, 0.0, -0.0003566741943359375, -0.007653236389160156, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.024852894246578217, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 4, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.032154479095304}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -0.541187047958374, -0.0002994537353515625, -0.00055694580078125, -0.0001220703125, -0.00034737586975097656, 0.0, -4.57763671875e-05, -7.2479248046875e-05, -1.9073486328125e-06, -5.841255187988281e-06, 0.0, -7.62939453125e-06, -5.7220458984375e-06, 0.0, -1.1444091796875e-05, -1.1563301086425781e-05, -4.0531158447265625e-06, -0.34124279022216797, -3.24249267578125e-05, -1.9073486328125e-05, 0.0, -3.814697265625e-06, -1.52587890625e-05, 0.0, -1.33514404296875e-05, -3.814697265625e-06, -1.7881377516459906e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.6702880859375e-05, -5.340576171875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.01723766326904297, -1.52587890625e-05, -5.7220458984375e-05, 0.0, -0.19803428649902344, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.0568389892578125, 0.0, -0.00014972686767578125, -1.1920928244535389e-07, -0.00025177001953125, -2.288818359375e-05, 0.0, -0.00015389890177175403, -1.71661376953125e-05, -0.07791423797607422, -5.7220458984375e-06, -0.023974748328328133, 0.0, -0.1399669647216797, -0.000274658203125, -2.6702880859375e-05, -0.0002117156982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.043066978454589844, -2.09808349609375e-05, -0.0004634857177734375, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017337799072265625, -1.0728830375228426e-06, -0.005598306655883789, -1.9073486328125e-06, -0.00902557373046875, -0.0014553070068359375, 0.0, -0.4455299377441406, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00030994415283203125, 0.0, -0.01738739013671875, 0.0, -0.06136512756347656, 0.0, -0.0008716583251953125, -0.42929649353027344, -5.7220458984375e-06, -0.05123138427734375, 0.0, -0.033049583435058594, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.0005369186401367188, 0.0, -1.7008423805236816, -1.9073486328125e-06, -0.11224651336669922, 0.0, -0.00030517578125, -0.22196292877197266, -3.814697265625e-06, -0.022093772888183594, 0.0, -0.0007915496826171875, -3.4332275390625e-05, -0.0012340545654296875, 0.0, -1.52587890625e-05, -8.58306884765625e-05, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -0.0001983642578125, 0.0, -1.1444091796875e-05, -0.00017750263214111328, -2.0265579223632812e-06, -0.0005512237548828125, -0.004608154296875, -0.0002269744873046875, -0.0003299713134765625, -5.14984130859375e-05, -0.0004177093505859375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.2782554626464844e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020351409912109375, -1.9073486328125e-06, -0.0004482269287109375, 0.0, -0.001804351806640625, -2.1457672119140625e-06, -0.0005267858505249023, 0.0, -0.00047736454871483147, 0.0, -0.00032806396484375, -0.007664680480957031, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.02911091409623623, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0589560471729484}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -1.8153247833251953, -0.09538936614990234, -0.0001983642578125, -0.000177129652001895, -7.152555099310121e-07, -2.515312735340558e-05, -3.6954811548639555e-06, -0.03615868091583252, -1.311301275563892e-06, -0.14184188842773438, -3.814697265625e-06, -1.847742714744527e-05, 0.0, -0.000141143798828125, -4.57763671875e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -7.748603820800781e-06, -4.0531158447265625e-06, -1.547027587890625, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.053113570989808e-06, 0.0, -2.6702880859375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -5.91278076171875e-05, -3.0517578125e-05, -4.00543212890625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -8.583047019783407e-06, -0.006773948669433594, 0.0, -8.0108642578125e-05, -0.00012969970703125, -1.9073486328125e-06, -0.017457962036132812, -3.814697265625e-06, -0.0003070831298828125, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.00025177001953125, 0.0, -0.023993492126464844, -2.622600959512056e-06, -0.005063533782958984, 0.0, -0.0002155303955078125, -6.4849853515625e-05, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.001697540283203125, -1.9073486328125e-06, -0.0005245208740234375, -2.2649765014648438e-06, -0.0007541179656982422, 0.0, -0.0014939573593437672, 0.0, -0.07472038269042969, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.006165504455566406, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.0002689361572265625, -7.62939453125e-06, -0.00012409687042236328, 0.0, -8.0108642578125e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.0002487895544618368, -3.4332275390625e-05, -0.022890090942382812, -1.9073486328125e-06, -0.029787136241793633, 0.0, -0.044564247131347656, -0.000179290771484375, -4.76837158203125e-05, -0.0001678466796875, -1.9073486328125e-05, -1.9073486328125e-06, -0.024458885192871094, -2.86102294921875e-05, -0.0005207061767578125, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -0.004040718078613281, -1.5497195136049413e-06, -0.006067514419555664, -1.9073486328125e-06, -0.00836944580078125, -0.000598907470703125, 0.0, -0.021017074584960938, -7.62939453125e-06, -4.9591064453125e-05, -3.0517578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.000362396240234375, 0.0, -0.009677886962890625, -1.9073486328125e-06, -0.050124168395996094, 0.0, -0.0005645751953125, -0.034676551818847656, -9.5367431640625e-06, -0.057270050048828125, 0.0, -0.020895957946777344, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0005311965942382812, 0.0, -0.5918846130371094, -2.1457672119140625e-06, -0.00146484375, 0.0, -3.814697265625e-06, -0.17732810974121094, -0.0001049041748046875, -0.2221938669681549, -0.0002028942108154297, -2.86102294921875e-05, -5.7220458984375e-06, -0.0003185272216796875, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template6", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.109278314091732}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minions.remove(minion)\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -1.8153247833251953, -0.09538936614990234, -0.0001983642578125, -0.000177129652001895, -7.152555099310121e-07, -2.515312735340558e-05, -3.6954811548639555e-06, -0.03615868091583252, -1.311301275563892e-06, -0.14184188842773438, -3.814697265625e-06, -1.847742714744527e-05, 0.0, -0.000141143798828125, -4.57763671875e-05, -1.9073486328125e-06, -9.655952453613281e-06, 0.0, -7.62939453125e-06, -7.62939453125e-06, 0.0, -1.33514404296875e-05, -7.748603820800781e-06, -4.0531158447265625e-06, -1.547027587890625, -1.52587890625e-05, -3.0517578125e-05, 0.0, -3.4332275390625e-05, -4.1961669921875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -4.053113570989808e-06, 0.0, -2.6702880859375e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -5.91278076171875e-05, -3.0517578125e-05, -4.00543212890625e-05, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -8.583047019783407e-06, -0.006773948669433594, 0.0, -8.0108642578125e-05, -0.00012969970703125, -1.9073486328125e-06, -0.017457962036132812, -3.814697265625e-06, -0.0003070831298828125, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.00025177001953125, 0.0, -0.023993492126464844, -2.622600959512056e-06, -0.005063533782958984, 0.0, -0.0002155303955078125, -6.4849853515625e-05, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.001697540283203125, -1.9073486328125e-06, -0.0005245208740234375, -2.2649765014648438e-06, -0.0007541179656982422, 0.0, -0.0014939573593437672, 0.0, -0.07472038269042969, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.006165504455566406, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.0002689361572265625, -7.62939453125e-06, -0.00012409687042236328, 0.0, -8.0108642578125e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.0002487895544618368, -3.4332275390625e-05, -0.022890090942382812, -1.9073486328125e-06, -0.029787136241793633, 0.0, -0.044564247131347656, -0.000179290771484375, -4.76837158203125e-05, -0.0001678466796875, -1.9073486328125e-05, -1.9073486328125e-06, -0.024458885192871094, -2.86102294921875e-05, -0.0005207061767578125, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -0.004040718078613281, -1.5497195136049413e-06, -0.006067514419555664, -1.9073486328125e-06, -0.00836944580078125, -0.000598907470703125, 0.0, -0.021017074584960938, -7.62939453125e-06, -4.9591064453125e-05, -3.0517578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.000362396240234375, 0.0, -0.009677886962890625, -1.9073486328125e-06, -0.050124168395996094, 0.0, -0.0005645751953125, -0.034676551818847656, -9.5367431640625e-06, -0.057270050048828125, 0.0, -0.020895957946777344, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0005311965942382812, 0.0, -0.9033708572387695, -1.9073486328125e-06, -0.09302616119384766, 0.0, -0.0002841949462890625, -0.037548065185546875, -3.814697265625e-06, -0.027753829956054688, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template6", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.177729092814495}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 32, 101, 11, 94, 19, 125, "game", "<EOS>", "<UNK>", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "4", "<EOS>", 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(game.<UNK>(2, 4))\n            minion = game.random_choice(minions)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -1.0454728603363037, -2.3841855067985307e-07, -0.000713348388671875, -0.0001811981201171875, -0.00029969215393066406, 0.0, -5.340576171875e-05, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.0531158447265625e-06, -0.24083900451660156, -3.4332275390625e-05, -2.09808349609375e-05, 0.0, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -3.814697265625e-06, -1.9073468138230965e-06, 0.0, -2.86102294921875e-05, 0.0, -1.9073486328125e-06, -6.4849853515625e-05, -2.47955322265625e-05, -5.14984130859375e-05, 0.0, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, -7.867804924899247e-06, -0.018935203552246094, -1.33514404296875e-05, -5.7220458984375e-05, 0.0, -0.18680477142333984, 0.0, -1.52587890625e-05, -5.7220458984375e-06, -0.05715465545654297, 0.0, -0.00014781951904296875, -1.1920928244535389e-07, -0.0002498626708984375, -2.288818359375e-05, 0.0, -0.00015199155313894153, -1.71661376953125e-05, -0.07776165008544922, -5.7220458984375e-06, -0.02384991943836212, 0.0, -0.1410837173461914, -0.000274658203125, -2.86102294921875e-05, -0.0002117156982421875, -6.4849853515625e-05, -1.9073486328125e-06, -0.0437469482421875, -2.09808349609375e-05, -0.0004634857177734375, -5.53131103515625e-05, -3.814697265625e-06, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -0.0017576217651367188, -1.0728830375228426e-06, -0.00561833381652832, -1.9073486328125e-06, -0.009014129638671875, -0.001453399658203125, 0.0, -0.44568920135498047, -1.9073486328125e-06, -4.9591064453125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -1.33514404296875e-05, -1.9073486328125e-06, 0.0, -0.00030994415283203125, 0.0, -0.017564773559570312, 0.0, -0.06142616271972656, 0.0, -0.000873565673828125, -1.1255407333374023, -0.0002536773681640625, -0.3723869323730469, -1.9073486328125e-06, -0.000732421875, 0.0, -0.0021581649780273438, -1.5497195136049413e-06, -0.22673523426055908, -1.9073486328125e-06, -0.0014095306396484375, -0.000751495361328125, -1.71661376953125e-05, -0.1884300857782364, -1.9073486328125e-06, -0.000232696533203125, -3.814697265625e-06, -0.026726774871349335, -2.288818359375e-05, -0.14364337921142578, -3.0517578125e-05, -0.0001220703125, -0.000736236572265625, -1.9073486328125e-06, -0.18265974521636963, -4.780292510986328e-05, -0.00052642822265625, -6.866455078125e-05, -5.7220458984375e-06, 0.0, -5.53131103515625e-05, 0.0, -0.0005168914794921875, -1.7881377516459906e-06, -0.004306197166442871, -1.9073486328125e-06, -0.008678436279296875, -0.0003757476806640625, 0.0, -0.01610851287841797, -5.7220458984375e-06, -0.00121307373046875, -2.86102294921875e-05, -0.0033845901489257812, 0.0, -2.86102294921875e-05, -0.000438690185546875, 0.0, -7.748603820800781e-06, 0.0, -5.7220458984375e-06, -7.05718994140625e-05, 0.0, -5.7220458984375e-06, -3.62396240234375e-05, -2.3841855067985307e-07, -0.00061798095703125, -0.004370689392089844, -0.00022125244140625, -0.0006084442138671875, -0.000110626220703125, -0.0004329681396484375, -9.5367431640625e-06, -2.09808349609375e-05, -1.9073486328125e-06, -3.2782554626464844e-05, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0020046234130859375, -1.9073486328125e-06, -0.00046539306640625, 0.0, -0.0018157958984375, -2.1457672119140625e-06, -0.0005191564559936523, 0.0, -0.00048725519445724785, 0.0, -0.00034332275390625, -0.007739067077636719, -7.62939453125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.024528369307518005, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"n": 2, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.185430692158597}, {"choice_history": [55, 124, 221, 63, 103, "Multi-Shot", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 83, 176, "Multi-Shot", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "minions", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 223, 60, 93, 208, 37, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "game", "<EOS>", "random_choice", "<EOS>", 208, 37, 125, "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minions", "<EOS>", "remove", "<EOS>", 208, 37, 125, "minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Multi-Shot(SpellCard):\n\n    def __init__(self):\n        super().__init__('Multi-Shot', 4, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n\n    def use(self, player, game):\n        super().use(player, game)\n        minions = copy.copy(game.other_player.minions)\n        for i in range(0, 2):\n            minion = game.random_choice(minions)\n            minions.remove(minion)\n            minion.damage(player.effective_spell_damage(3), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(game.other_player.minions\n            ) >= 1\n", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -9.918212890625e-05, -3.24249267578125e-05, -1.3112959095451515e-05, -0.000624417036306113, -2.6702880859375e-05, -1.9073486328125e-05, -3.814697265625e-06, -3.445148468017578e-05, -1.2874602361989673e-05, -1.9073486328125e-06, -0.18074417114257812, -0.26757049560546875, -6.103515625e-05, -1.0490362910786644e-05, -2.622604142743512e-06, -0.00011228926450712606, -0.00011646694474620745, -1.0454728603363037, -2.3841855067985307e-07, -0.000713348388671875, -0.0001811981201171875, -0.00029969215393066406, 0.0, -5.340576171875e-05, -6.4849853515625e-05, 0.0, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, -9.655952453613281e-06, -4.0531158447265625e-06, -2.577059745788574, -1.52587890625e-05, -4.1961669921875e-05, 0.0, -3.24249267578125e-05, -3.4332275390625e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-06, -3.8146954466355965e-06, 0.0, -2.47955322265625e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -5.91278076171875e-05, -3.24249267578125e-05, -3.814697265625e-05, 0.0, -2.47955322265625e-05, 0.0, -2.47955322265625e-05, -8.583047019783407e-06, -0.006217002868652344, 0.0, -7.62939453125e-05, -0.0001392364501953125, -1.9073486328125e-06, -0.017167091369628906, -3.814697265625e-06, -0.0002994537353515625, -3.0517578125e-05, -2.86102294921875e-05, 0.0, -0.0002689361572265625, 0.0, -0.024230003356933594, -2.622600959512056e-06, -0.004955768585205078, 0.0, -0.0002155303955078125, -6.4849853515625e-05, 0.0, -0.000270843505859375, -9.5367431640625e-06, -0.0017032623291015625, -1.9073486328125e-06, -0.000518798828125, -2.2649765014648438e-06, -0.0007541179656982422, 0.0, -0.0014990759082138538, 0.0, -0.082855224609375, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.006099700927734375, 0.0, -5.7220458984375e-05, -7.62939453125e-06, -0.000278472900390625, -7.62939453125e-06, -0.00012409687042236328, 0.0, -8.0108642578125e-05, -5.340576171875e-05, -1.9073486328125e-06, -0.00024855113588273525, -3.4332275390625e-05, -0.022749900817871094, -1.9073486328125e-06, -0.028044626116752625, 0.0, -0.044548988342285156, -0.000179290771484375, -4.57763671875e-05, -0.0001659393310546875, -2.09808349609375e-05, -1.9073486328125e-06, -0.024003982543945312, -2.86102294921875e-05, -0.0005207061767578125, -5.14984130859375e-05, -3.814697265625e-06, 0.0, -4.57763671875e-05, 0.0, -0.0039119720458984375, -1.5497195136049413e-06, -0.006001710891723633, -1.9073486328125e-06, -0.008388519287109375, -0.0005970001220703125, 0.0, -0.021101951599121094, -5.7220458984375e-06, -4.9591064453125e-05, -3.0517578125e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, 0.0, -0.000362396240234375, 0.0, -0.009670257568359375, -1.9073486328125e-06, -0.050139427185058594, 0.0, -0.0005645751953125, -0.034847259521484375, -9.5367431640625e-06, -0.057288169860839844, 0.0, -0.020900726318359375, -1.9073486328125e-06, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0005311965942382812, 0.0, -0.5921964645385742, -2.1457672119140625e-06, -0.00146484375, 0.0, -3.814697265625e-06, -0.17725753784179688, -0.0001049041748046875, -0.22201719880104065, -0.0002028942108154297, -2.86102294921875e-05, -5.7220458984375e-06, -0.00031948089599609375, 0.0, -0.00643157958984375, -1.33514404296875e-05, -0.0005779266357421875, 0.0, -2.47955322265625e-05, -0.0001010894775390625, 0.0, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, -8.96453857421875e-05, 0.0, -1.71661376953125e-05, -0.0003185272216796875, -2.0265579223632812e-06, -0.000743865966796875, -0.004375457763671875, -0.0002231597900390625, -0.0003871917724609375, -8.58306884765625e-05, -0.0004062652587890625, -9.5367431640625e-06, -3.4332275390625e-05, -3.814697265625e-06, -4.2319297790527344e-05, 0.0, -3.0517578125e-05, -7.62939453125e-06, -3.814697265625e-06, -0.002063751220703125, -1.9073486328125e-06, -0.0004940032958984375, -1.9073486328125e-06, -0.0017681121826171875, -2.1457672119140625e-06, -0.0005191564559936523, 0.0, -0.00048451515613123775, 0.0, -0.00035858154296875, -0.007710456848144531, -7.62939453125e-06, -2.09808349609375e-05, -1.9073486328125e-06, -0.024763016030192375, 0.0], "model_output": {"body": [{"name": "Multi-Shot", "body": [{"hole1": 4, "hole0": "Multi-Shot", "_type": "Template4", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "minions", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "minion", "_type": "Name"}], "value": {"args": [{"id": "minions", "_type": "Name"}], "func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "random_choice"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "minion", "_type": "Name"}], "func": {"value": {"id": "minions", "_type": "Name"}, "_type": "Attribute", "attr": "remove"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.602704329487629}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-5.7220458984375e-06, -1.9073486328125e-06, -23.010936737060547], "model_output": {"body": [], "_type": "Module"}, "score": -23.010944366455078}]}
{"gold_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word: Shield', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(2)\n        player.draw()\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "card", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(Draw()), Buff(\n            card())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -0.42754435539245605, -4.529942543740617e-06, -0.02686309814453125, -1.52587890625e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0013581514358520508, 0.0, -0.0021820068359375, -0.20682907104492188, -3.814697265625e-06, -2.86102294921875e-05, -2.288818359375e-05, -0.040341831743717194, -1.5497207641601562e-05, 0.0, -0.1288003921508789, -5.7220458984375e-06, -0.005802154541015625, -0.0734109878540039, -0.0006570816040039062, -1.71661376953125e-05, 0.0, -0.03801167011260986, -6.222691445145756e-05, -0.0001201629638671875, -0.0068721771240234375, -5.7220458984375e-06, -0.3757740259170532, -0.06768764555454254, -0.00026702880859375, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -0.22084951400756836, -1.5258699932019226e-05, -2.09808349609375e-05, -0.0003108978271484375, -3.814697265625e-06, -0.7236524820327759, -0.08402551710605621, -0.00080108642578125, -1.1444091796875e-05, -0.14925946295261383, -5.9127800341229886e-05, -4.768370445162873e-07, -0.22857189178466797, -9.5367431640625e-06, -7.283651211764663e-05, 0.0, -0.06170761585235596, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "card", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9349811719897048}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        player.draw()\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -0.4809194803237915, -2.9802317840221804e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000579833984375, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001277923583984375, -1.1920928244535389e-07, -3.647804260253906e-05, -1.9073486328125e-06, -0.0574038028717041, -3.30209695675876e-05, -0.0050601959228515625, -0.0003032684326171875, -0.00010371208190917969, -7.152555099310121e-07, -6.29425048828125e-05, -5.340576171875e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.733966827392578e-05, -2.1457672119140625e-06, -0.4103403091430664, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, 0.0, -9.560583566781133e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.00087738037109375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.8862068322487175e-05, -0.0039043426513671875, -0.0001697540283203125, -0.1641979217529297, -0.0001201629638671875, -7.62939453125e-06, 0.0, -0.00096893310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018367767333984375, -5.960462772236497e-07, -6.31808916295995e-06, -1.1920928244535389e-07, -0.2951468229293823, -2.0384708477649838e-05, -3.814697265625e-06, -0.006988525390625, -0.000171661376953125, -0.0008602142333984375, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.0002288818359375, -2.9802276912960224e-06, -0.10539744794368744, -1.1920928244535389e-07, -1.71661376953125e-05, -0.21050739288330078, 0.0, -0.007637467700988054, 0.0, -0.000339508056640625, -0.000316619873046875, -0.0001735687255859375, -2.2649765014648438e-06, -0.9572715759277344, -7.62939453125e-06, -0.0007762908935546875, -0.0076808929443359375, -3.62396240234375e-05, -1.9073486328125e-06, -0.008089065551757812, 0.0, -0.0006532669067382812, -1.1324837942083832e-05, -0.0011508448515087366, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.19741391412694}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give(Draw()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -0.42754435539245605, -4.529942543740617e-06, -0.02686309814453125, -1.52587890625e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0013581514358520508, 0.0, -0.0021820068359375, -0.20682907104492188, -3.814697265625e-06, -2.86102294921875e-05, -2.288818359375e-05, -0.040341831743717194, -1.5497207641601562e-05, 0.0, -2.1479482650756836, 0.0, -0.12350035458803177, -0.027764836326241493, -0.0024394989013671875, 0.0, -0.002238738350570202, -6.914137884450611e-06, -1.4305104514278355e-06, -0.09056854248046875, -5.7220458984375e-06, -9.083565237233415e-05, 0.0, -0.07631754875183105, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"args": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.238929086279597}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(Draw()), Buff(\n            Draw())]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -0.42754435539245605, -4.529942543740617e-06, -0.02686309814453125, -1.52587890625e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0013581514358520508, 0.0, -0.0021820068359375, -0.20682907104492188, -3.814697265625e-06, -2.86102294921875e-05, -2.288818359375e-05, -0.040341831743717194, -1.5497207641601562e-05, 0.0, -0.1288003921508789, -5.7220458984375e-06, -0.005802154541015625, -0.0734109878540039, -0.0006570816040039062, -1.71661376953125e-05, 0.0, -0.03801167011260986, -6.222691445145756e-05, -0.0001201629638671875, -0.0068721771240234375, -5.7220458984375e-06, -0.3757740259170532, -0.06768764555454254, -0.00026702880859375, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -0.22084951400756836, -1.5258699932019226e-05, -2.09808349609375e-05, -0.0003108978271484375, -3.814697265625e-06, -0.7964693307876587, -0.1735481470823288, -2.47955322265625e-05, 0.0, -0.7243819832801819, -1.6450881958007812e-05, -8.344646857949556e-07, -0.058506011962890625, -5.7220458984375e-06, -9.679644426796585e-05, 0.0, -0.06310832500457764, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.502968091337664}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "card", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "card", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(card()), Buff(\n            card())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -0.42754435539245605, -4.529942543740617e-06, -0.02686309814453125, -1.52587890625e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0013581514358520508, 0.0, -0.0021820068359375, -0.20682907104492188, -3.814697265625e-06, -2.86102294921875e-05, -2.288818359375e-05, -0.040341831743717194, -1.5497207641601562e-05, 0.0, -0.1288003921508789, -5.7220458984375e-06, -0.005802154541015625, -0.0734109878540039, -0.0006570816040039062, -1.71661376953125e-05, 0.0, -0.03801167011260986, -6.222691445145756e-05, -0.0001201629638671875, -0.0068721771240234375, -5.7220458984375e-06, -1.3243614435195923, -0.027264781296253204, -0.00035858154296875, -0.0001544952392578125, -3.814697265625e-06, 0.0, -0.12737739086151123, -1.0490381100680679e-05, -0.0001239776611328125, -0.000396728515625, -1.9073486328125e-06, -0.8427331447601318, -0.08541446924209595, -0.000820159912109375, -1.33514404296875e-05, -0.15133267641067505, -5.4478641686728224e-05, -3.576278118089249e-07, -0.1999797821044922, -7.62939453125e-06, -7.128682773327455e-05, 0.0, -0.06415092945098877, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "card", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "card", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.846443739829169}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        player.draw()\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -1.469719648361206, -2.384185791015625e-06, -9.72747802734375e-05, -1.9073486328125e-06, -0.00098419189453125, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.0001697540283203125, -1.1920928244535389e-07, -2.682209014892578e-05, -3.814697265625e-06, -0.03465461730957031, -3.707408541231416e-05, -0.003932952880859375, -0.0002422332763671875, -9.59634780883789e-05, -7.152555099310121e-07, -5.340576171875e-05, -5.14984130859375e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.924701690673828e-05, -2.2649765014648438e-06, -0.5763177871704102, -4.9591064453125e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-05, -1.71661376953125e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001496076292824, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.0006732940673828125, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -3.8027581467758864e-05, -0.00389862060546875, -0.0001659393310546875, -0.16130447387695312, -0.0001220703125, -7.62939453125e-06, 0.0, -0.0010776519775390625, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018329620361328125, -5.960462772236497e-07, -6.19888032815652e-06, -1.1920928244535389e-07, -0.2822129726409912, -2.0742329070344567e-05, -3.814697265625e-06, -0.007105827331542969, -0.0001735687255859375, -0.000888824462890625, -1.9073486328125e-06, -0.00016021728515625, 0.0, -0.00022792816162109375, -2.9802276912960224e-06, -0.10544811189174652, -1.1920928244535389e-07, -1.71661376953125e-05, -0.2049407958984375, 0.0, -0.007634131703525782, 0.0, -0.000339508056640625, -0.0003185272216796875, -0.0001735687255859375, -2.2649765014648438e-06, -0.9571504592895508, -7.62939453125e-06, -0.0007610321044921875, -0.007664680480957031, -3.62396240234375e-05, -1.9073486328125e-06, -0.008172988891601562, 0.0, -0.0006561279296875, -1.1444046322139911e-05, -0.0011556132230907679, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.903987044646129}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -0.4809194803237915, -2.9802317840221804e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000579833984375, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001277923583984375, -1.1920928244535389e-07, -3.647804260253906e-05, -1.9073486328125e-06, -0.0574038028717041, -3.30209695675876e-05, -0.0050601959228515625, -0.0003032684326171875, -0.00010371208190917969, -7.152555099310121e-07, -6.29425048828125e-05, -5.340576171875e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.733966827392578e-05, -2.1457672119140625e-06, -0.4103403091430664, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, 0.0, -9.560583566781133e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.00087738037109375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.8862068322487175e-05, -0.0039043426513671875, -0.0001697540283203125, -0.1641979217529297, -0.0001201629638671875, -7.62939453125e-06, 0.0, -0.00096893310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018367767333984375, -5.960462772236497e-07, -6.31808916295995e-06, -1.1920928244535389e-07, -2.153019666671753, 0.0, -0.000850677490234375, -0.013742446899414062, 0.0, -0.0042247772216796875, -3.576278118089249e-07, -0.06099987030029297, -9.5367431640625e-06, -0.0011749267578125, -0.028398513793945312, -1.9073486328125e-06, 0.0, -0.08141899108886719, 0.0, -0.0009517669677734375, -1.1324817933200393e-05, -0.003000493859872222, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.941559353197853}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "card", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Draw()), Buff(\n            card())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -1.1837602853775024, -4.529942543740617e-06, -0.08336067199707031, -4.38690185546875e-05, -0.0001392364501953125, -1.33514404296875e-05, -0.0028592348098754883, 0.0, -0.01678466796875, -0.09554767608642578, -5.7220458984375e-06, -3.4332275390625e-05, -4.57763671875e-05, -0.015716074034571648, -5.9604644775390625e-06, 0.0, -0.22594928741455078, -7.62939453125e-06, -0.0055217742919921875, -0.08019828796386719, -0.00063323974609375, -2.47955322265625e-05, 0.0, -0.02968871220946312, -6.067727372283116e-05, -9.5367431640625e-05, -0.0037326812744140625, -5.7220458984375e-06, -0.3103426694869995, -0.059702351689338684, -0.0002841949462890625, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -0.22641420364379883, -2.6821779101737775e-05, -3.0517578125e-05, -0.000415802001953125, -3.814697265625e-06, -0.7570322751998901, -0.054508060216903687, -0.0009632110595703125, -1.1444091796875e-05, -0.16270916163921356, -5.364417302189395e-05, -4.768370445162873e-07, -0.21715259552001953, -9.5367431640625e-06, -7.605512655572966e-05, 0.0, -0.05850529670715332, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "card", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.058586246172467}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(Draw()), Buff(\n            Draw())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -0.42754435539245605, -4.529942543740617e-06, -0.02686309814453125, -1.52587890625e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0013581514358520508, 0.0, -0.0021820068359375, -0.20682907104492188, -3.814697265625e-06, -2.86102294921875e-05, -2.288818359375e-05, -0.040341831743717194, -1.5497207641601562e-05, 0.0, -0.1288003921508789, -5.7220458984375e-06, -0.005802154541015625, -0.0734109878540039, -0.0006570816040039062, -1.71661376953125e-05, 0.0, -0.03801167011260986, -6.222691445145756e-05, -0.0001201629638671875, -0.0068721771240234375, -5.7220458984375e-06, -0.3757740259170532, -0.06768764555454254, -0.00026702880859375, -6.29425048828125e-05, -5.7220458984375e-06, 0.0, -0.22084951400756836, -1.5258699932019226e-05, -2.09808349609375e-05, -0.0003108978271484375, -3.814697265625e-06, -0.7964693307876587, -0.1735481470823288, -2.47955322265625e-05, 0.0, -0.9181323647499084, -1.1801716937043238e-05, -3.576278118089249e-07, -0.4414091110229492, -1.52587890625e-05, -7.104846008587629e-05, 0.0, -0.06424891948699951, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.080740829106958}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "card", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, battlecry=Battlecry(Give([Buff(card()), Buff(\n            Draw())]), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.5155048370361328, -3.576278118089249e-07, -0.029993057250976562, -0.08436965942382812, 0.0, -0.42754435539245605, -4.529942543740617e-06, -0.02686309814453125, -1.52587890625e-05, -0.0001316070556640625, -5.7220458984375e-06, -0.0013581514358520508, 0.0, -0.0021820068359375, -0.20682907104492188, -3.814697265625e-06, -2.86102294921875e-05, -2.288818359375e-05, -0.040341831743717194, -1.5497207641601562e-05, 0.0, -0.1288003921508789, -5.7220458984375e-06, -0.005802154541015625, -0.0734109878540039, -0.0006570816040039062, -1.71661376953125e-05, 0.0, -0.03801167011260986, -6.222691445145756e-05, -0.0001201629638671875, -0.0068721771240234375, -5.7220458984375e-06, -1.3243614435195923, -0.027264781296253204, -0.00035858154296875, -0.0001544952392578125, -3.814697265625e-06, 0.0, -0.12737739086151123, -1.0490381100680679e-05, -0.0001239776611328125, -0.000396728515625, -1.9073486328125e-06, -0.6993920803070068, -0.12610284984111786, -1.33514404296875e-05, 0.0, -0.7054956555366516, -1.609325408935547e-05, -5.960462772236497e-07, -0.05413532257080078, -5.7220458984375e-06, -9.65581348282285e-05, 0.0, -0.06582486629486084, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "card", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.152948569488444}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "target", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        target.taunt = True\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -0.4809194803237915, -2.9802317840221804e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000579833984375, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001277923583984375, -1.1920928244535389e-07, -3.647804260253906e-05, -1.9073486328125e-06, -0.0574038028717041, -3.30209695675876e-05, -0.0050601959228515625, -0.0003032684326171875, -0.00010371208190917969, -7.152555099310121e-07, -6.29425048828125e-05, -5.340576171875e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.733966827392578e-05, -2.1457672119140625e-06, -0.4103403091430664, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, 0.0, -9.560583566781133e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.00087738037109375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.8862068322487175e-05, -0.0039043426513671875, -0.0001697540283203125, -0.1641979217529297, -0.0001201629638671875, -7.62939453125e-06, 0.0, -0.00096893310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018367767333984375, -5.960462772236497e-07, -6.31808916295995e-06, -1.1920928244535389e-07, -0.2951468229293823, -2.0384708477649838e-05, -3.814697265625e-06, -0.006988525390625, -0.000171661376953125, -0.0008602142333984375, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.0002288818359375, -2.9802276912960224e-06, -0.10539744794368744, -1.1920928244535389e-07, -1.71661376953125e-05, -0.21050739288330078, 0.0, -0.007637467700988054, 0.0, -0.000339508056640625, -0.000316619873046875, -0.0001735687255859375, -2.2649765014648438e-06, -1.323868751525879, -1.9073486328125e-06, -2.09808349609375e-05, -0.004673004150390625, -0.0001430511474609375, -0.0064449310302734375, 0.0, -0.7027449607849121, -6.83045873302035e-05, -0.042461514472961426, -1.1920922133867862e-06, -0.005007743835449219, -0.000743865966796875, -2.1219253540039062e-05, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "taunt"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.307936302876982}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        if len(player.minions) < 7:\n            player.draw()\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -0.4809194803237915, -2.9802317840221804e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000579833984375, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001277923583984375, -1.1920928244535389e-07, -3.647804260253906e-05, -1.9073486328125e-06, -0.0574038028717041, -3.30209695675876e-05, -0.0050601959228515625, -0.0003032684326171875, -0.00010371208190917969, -7.152555099310121e-07, -6.29425048828125e-05, -5.340576171875e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.733966827392578e-05, -2.1457672119140625e-06, -0.4103403091430664, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, 0.0, -9.560583566781133e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.00087738037109375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.8862068322487175e-05, -0.0039043426513671875, -0.0001697540283203125, -0.1641979217529297, -0.0001201629638671875, -7.62939453125e-06, 0.0, -0.00096893310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018367767333984375, -5.960462772236497e-07, -6.31808916295995e-06, -1.1920928244535389e-07, -0.2951468229293823, -2.0384708477649838e-05, -3.814697265625e-06, -0.006988525390625, -0.000171661376953125, -0.0008602142333984375, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.0002288818359375, -2.9802276912960224e-06, -0.10539744794368744, -1.1920928244535389e-07, -1.71661376953125e-05, -0.21050739288330078, 0.0, -0.007637467700988054, 0.0, -0.000339508056640625, -0.000316619873046875, -0.0001735687255859375, -2.2649765014648438e-06, -1.6730413436889648, -0.0016384124755859375, -0.008984565734863281, -0.00016021728515625, -0.044464111328125, -0.04852104187011719, -2.09808349609375e-05, -1.9073486328125e-06, -0.11242818832397461, -5.960462772236497e-07, -1.52587890625e-05, -0.014206886291503906, -5.7220458984375e-06, -0.0002002716064453125, 0.0, -0.000152587890625, -1.7881377516459906e-06, -0.041565682739019394, -1.9073486328125e-06, -3.814697265625e-06, -0.0017871856689453125, 0.0, -1.52587890625e-05, 0.0, -0.11966947466135025, -1.9073486328125e-06, -0.0017452239990234375, -0.06451988220214844, -3.814697265625e-06, -0.001644134521484375, -0.45484447479248047, -1.9073486328125e-06, -1.9073486328125e-06, -0.0014400482177734375, 0.0, -0.00023365020751953125, -8.344639354618266e-06, -0.0013132088351994753, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.81438058360655}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 21, 130, "0", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(1), self)\n        player.<UNK> = 0\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -0.4809194803237915, -2.9802317840221804e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000579833984375, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001277923583984375, -1.1920928244535389e-07, -3.647804260253906e-05, -1.9073486328125e-06, -0.0574038028717041, -3.30209695675876e-05, -0.0050601959228515625, -0.0003032684326171875, -0.00010371208190917969, -7.152555099310121e-07, -6.29425048828125e-05, -5.340576171875e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.733966827392578e-05, -2.1457672119140625e-06, -0.4103403091430664, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, 0.0, -9.560583566781133e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.00087738037109375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.8862068322487175e-05, -0.0039043426513671875, -0.0001697540283203125, -0.1641979217529297, -0.0001201629638671875, -7.62939453125e-06, 0.0, -0.00096893310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018367767333984375, -5.960462772236497e-07, -6.31808916295995e-06, -1.1920928244535389e-07, -0.2951468229293823, -2.0384708477649838e-05, -3.814697265625e-06, -0.006988525390625, -0.000171661376953125, -0.0008602142333984375, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.0002288818359375, -2.9802276912960224e-06, -0.10539744794368744, -1.1920928244535389e-07, -1.71661376953125e-05, -0.21050739288330078, 0.0, -0.007637467700988054, 0.0, -0.000339508056640625, -0.000316619873046875, -0.0001735687255859375, -2.2649765014648438e-06, -1.323868751525879, -1.9073486328125e-06, -2.09808349609375e-05, -0.004673004150390625, -0.0001430511474609375, -0.0064449310302734375, 0.0, -1.251772403717041, -4.6491513785440475e-06, -0.01988363265991211, -3.4570680327306036e-06, -0.036185264587402344, -0.0002307891845703125, -0.04243840277194977, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}], "value": {"n": 0, "_type": "Num"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.9074061010240655}, {"choice_history": [55, 124, 221, 63, 103, "Power", "Word", "Shield", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Power", " ", "Word", " ", "Shield", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "heal", "<EOS>", 209, 32, 101, 11, 94, 19, 125, "player", "<EOS>", "effective_heal_power", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_max_health", "<EOS>", 37, 125, "self", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 21, 130, "0", "<EOS>"], "inferred_code": "class PowerWordShield(SpellCard):\n\n    def __init__(self):\n        super().__init__('Power Word Shield', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.heal(player.effective_heal_power(self.target.\n            calculate_max_health()), self)\n        player.<UNK> = 0\n", "score_history": [-0.000102996826171875, -0.0001163482666015625, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06, -3.9695980376563966e-05, -0.10604555159807205, -0.002990236971527338, -0.0004698179545812309, -1.9073486328125e-06, -4.38690185546875e-05, -7.62939453125e-06, -0.007906675338745117, -0.00033295154571533203, -5.7220458984375e-06, -0.0001735687255859375, -0.0047607421875, -7.62939453125e-06, -3.981590270996094e-05, -3.027914499398321e-05, -4.00543212890625e-05, -4.1961669921875e-05, -3.0517578125e-05, -3.838527118205093e-05, -8.58306884765625e-05, -0.000244140625, -0.0001468658447265625, -0.000133514404296875, -1.9073486328125e-06, -0.004778861999511719, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.3589840818895027e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -0.0005950927734375, -5.7220458984375e-06, -3.814697265625e-05, -0.0018736477941274643, -2.872943878173828e-05, -0.27692562341690063, -0.000301361083984375, -0.0005637375870719552, -1.9073486328125e-05, -0.000133514404296875, -9.5367431640625e-06, -1.3099052011966705e-06, -3.337860107421875e-05, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0001571178436279297, -2.384185791015625e-06, -0.02244579792022705, 0.0, 0.0, -1.52587890625e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.0008987188339233398, -1.9073486328125e-06, -0.9811134338378906, -1.2159347534179688e-05, -0.0015869140625, -0.050487518310546875, -3.814697265625e-06, -0.4809194803237915, -2.9802317840221804e-06, -0.000133514404296875, -1.9073486328125e-06, -0.000579833984375, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001277923583984375, -1.1920928244535389e-07, -3.647804260253906e-05, -1.9073486328125e-06, -0.0574038028717041, -3.30209695675876e-05, -0.0050601959228515625, -0.0003032684326171875, -0.00010371208190917969, -7.152555099310121e-07, -6.29425048828125e-05, -5.340576171875e-05, 0.0, -2.396101081103552e-05, 0.0, 0.0, -7.62939453125e-06, -5.960462772236497e-07, -1.1444091796875e-05, -5.733966827392578e-05, -2.1457672119140625e-06, -0.4103403091430664, -5.7220458984375e-05, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -9.5367431640625e-06, 0.0, -9.560583566781133e-05, 0.0, -7.748603820800781e-06, 0.0, -7.62939453125e-06, -0.00087738037109375, 0.0, -5.7220458984375e-06, -1.1920928244535389e-07, -1.33514404296875e-05, -1.9073486328125e-06, -4.1961669921875e-05, -3.8862068322487175e-05, -0.0039043426513671875, -0.0001697540283203125, -0.1641979217529297, -0.0001201629638671875, -7.62939453125e-06, 0.0, -0.00096893310546875, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0018367767333984375, -5.960462772236497e-07, -6.31808916295995e-06, -1.1920928244535389e-07, -0.2951468229293823, -2.0384708477649838e-05, -3.814697265625e-06, -0.006988525390625, -0.000171661376953125, -0.0008602142333984375, -1.9073486328125e-06, -0.000164031982421875, 0.0, -0.0002288818359375, -2.9802276912960224e-06, -0.10539744794368744, -1.1920928244535389e-07, -1.71661376953125e-05, -1.674757957458496, -0.00023651123046875, -2.09808349609375e-05, -1.9073486328125e-06, -0.0018405914306640625, -1.9073486328125e-06, -0.032253265380859375, 0.0, -0.06799697875976562, -2.384185791015625e-06, -1.6808508007670753e-05, -5.841255187988281e-06, -0.11656761169433594, -2.1457672119140625e-06, -0.000865936279296875, 0.0, -0.00011730194091796875, -1.1920928244535389e-07, -0.027765274047851562, -7.62939453125e-06, -7.62939453125e-06, -2.09808349609375e-05, -0.0001544952392578125, -0.016864776611328125, 0.0, -0.8378772735595703, -2.3841830625315197e-06, -0.06239449977874756, -2.384185791015625e-06, -0.055754661560058594, -0.0001468658447265625, -0.01725742779672146, 0.0], "model_output": {"body": [{"name": "PowerWordShield", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Power Word Shield", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_max_health"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "effective_heal_power"}, "_type": "Call"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "heal"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}], "value": {"n": 0, "_type": "Num"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.9157025846937685}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-0.000102996826171875, -0.0001163482666015625, -21.215328216552734], "model_output": {"body": [], "_type": "Module"}, "score": -21.215547561645508}]}
{"gold_code": "class SenjinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -0.2225189208984375, -0.0021572113037109375, -0.0022166266571730375, -2.884864079533145e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -0.00033640858600847423, -2.0265579223632812e-06, -0.0019445419311523438, 0.0, -0.00241851806640625, -4.57763671875e-05, -1.668914956098888e-05, -9.65590606938349e-06, -0.00017284009663853794, -5.8412379075889476e-06, -0.00048553943634033203, -8.4638240878121e-06, -0.0002765655517578125, -9.1552734375e-05, -0.0001621246337890625, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.24264086616040004}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -1.9660367965698242, -0.000156402587890625, -0.00014506718434859067, -1.0013580322265625e-05, -4.9591064453125e-05, -1.919269561767578e-05, -0.0014432665193453431, -5.006789251638111e-06, -7.748595817247406e-05, -1.9073486328125e-06, -0.0006351470947265625, -3.62396240234375e-05, -6.5564840951992664e-06, -4.255681051290594e-05, -7.23581833881326e-05, -6.794906312279636e-06, -0.0004279613494873047, -9.059865078597795e-06, -0.000423431396484375, -7.05718994140625e-05, -0.0001659393310546875, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template4", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.9795705911737969}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -3.232729911804199, -0.0007343292236328125, -0.0007443041540682316, -1.251697449333733e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.00025022029876708984, -1.9073486328125e-06, -0.00036168083897791803, 0.0, -0.1992473602294922, 0.0, -0.000640869140625, -0.000213623046875, -2.980224508064566e-06, -3.576272320060525e-06, -0.00022611695749219507, -5.483612312673358e-06, -0.000594019889831543, -1.5139465176616795e-05, -0.000453948974609375, -0.0002918243408203125, -0.000335693359375, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole3": "LEGENDARY", "hole0": "Sen'jin Shieldmasta", "_type": "Template7", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.446627175014328}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -4.821123123168945, -0.003025054931640625, -0.0009566736407577991, -1.263618378288811e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0002046823501586914, -2.0265579223632812e-06, -0.00037789344787597656, 0.0, -0.0059337615966796875, -3.4332275390625e-05, -3.421245492063463e-05, -4.887569048150908e-06, -0.00019906189118046314, -7.867782187531702e-06, -0.0008747577667236328, -5.483612312673358e-06, -0.0003795623779296875, -0.0001277923583984375, -0.0002002716064453125, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template5", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.843267657779052}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.minion_type)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -3.232729911804199, -0.0007343292236328125, -0.0007443041540682316, -1.251697449333733e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.00025022029876708984, -1.9073486328125e-06, -0.00036168083897791803, 0.0, -2.303412437438965, -2.1457672119140625e-06, -0.009304046630859375, -0.0001926422119140625, -4.649145466828486e-06, -3.814689989667386e-06, -0.00021431769710034132, -6.079665126890177e-06, -0.0008848905563354492, -1.5735502529423684e-05, -0.0004119873046875, -0.000217437744140625, -0.0003108978271484375, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole3": "minion_type", "hole0": "Sen'jin Shieldmasta", "_type": "Template7", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.559577621682365}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmastaShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -5.439433574676514, -2.944431616924703e-05, 0.0, -1.52587890625e-05, 0.0, -4.0531158447265625e-06, -7.271766662597656e-05, 0.0, -1.9073486328125e-05, -0.21396541595458984, -0.002101898193359375, -0.0021738053765147924, -2.4676315661054105e-05, -3.445148468017578e-05, -2.288818359375e-05, -0.0003129243559669703, -2.0265579223632812e-06, -0.0018911361694335938, 0.0, -0.0023708343505859375, -4.76837158203125e-05, -1.704677015368361e-05, -9.179073458653875e-06, -0.00018225604435428977, -5.483612312673358e-06, -0.00048744678497314453, -8.4638240878121e-06, -0.0002803802490234375, -8.96453857421875e-05, -0.00016021728515625, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmastaShieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.6690153387357896}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(' Shieldmasta', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -0.2225189208984375, -0.0021572113037109375, -6.116734504699707, -0.0025783777236938477, -0.0026646852493286133, -0.0005459784879349172, -2.0265579223632812e-06, -0.002959012985229492, 0.0, -0.00478363037109375, -4.1961669921875e-05, -1.9669321773108095e-05, -8.22540732769994e-06, -0.00018988408555742353, -5.8412379075889476e-06, -0.0004950761795043945, -8.22540732769994e-06, -0.0002803802490234375, -9.34600830078125e-05, -0.0001678466796875, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole0": " Shieldmasta", "_type": "Template6", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.3659841625294575}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "<UNK>", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.<UNK>)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -3.232729911804199, -0.0007343292236328125, -0.0007443041540682316, -1.251697449333733e-05, -3.0517578125e-05, -1.9073486328125e-06, -0.00025022029876708984, -1.9073486328125e-06, -0.00036168083897791803, 0.0, -3.1334962844848633, -3.576278118089249e-07, -0.0004787445068359375, -1.33514404296875e-05, -4.76836112284218e-06, -2.50339189733495e-06, -0.0001926254335558042, -2.9802276912960224e-06, -0.0007641315460205078, -9.775113539944869e-06, -0.000339508056640625, -0.000194549560546875, -0.0003490447998046875, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole3": "<UNK>", "hole0": "Sen'jin Shieldmasta", "_type": "Template7", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.38044516405165}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jin<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -6.249875545501709, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -0.2225189208984375, -0.0021572113037109375, -0.0022166266571730375, -2.884864079533145e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -0.00033640858600847423, -2.0265579223632812e-06, -0.0019445419311523438, 0.0, -0.00241851806640625, -4.57763671875e-05, -1.668914956098888e-05, -9.65590606938349e-06, -0.00017284009663853794, -5.8412379075889476e-06, -0.00048553943634033203, -8.4638240878121e-06, -0.0002765655517578125, -9.1552734375e-05, -0.0001621246337890625, 0.0], "model_output": {"body": [{"name": "Sen'jin<UNK>", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.490582800314769}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -0.2225189208984375, -0.0021572113037109375, -0.0022166266571730375, -2.884864079533145e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -0.00033640858600847423, -2.0265579223632812e-06, -0.0019445419311523438, 0.0, -6.274885177612305, -7.05718994140625e-05, -1.0251944331685081e-05, -1.6331539882230572e-05, -3.17096128128469e-05, -3.7789170164614916e-05], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "ALL"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.51399913093519}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Shieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -6.286688327789307, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -0.2225189208984375, -0.0021572113037109375, -0.0022166266571730375, -2.884864079533145e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -0.00033640858600847423, -2.0265579223632812e-06, -0.0019445419311523438, 0.0, -0.00241851806640625, -4.57763671875e-05, -1.668914956098888e-05, -9.65590606938349e-06, -0.00017284009663853794, -5.8412379075889476e-06, -0.00048553943634033203, -8.4638240878121e-06, -0.0002765655517578125, -9.1552734375e-05, -0.0001621246337890625, 0.0], "model_output": {"body": [{"name": "<UNK>Shieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "ALL"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.526057132015012}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -5.793415546417236, -1.52587890625e-05, -3.2782554626464844e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.6941230316879228e-05, -7.152551916078664e-06, -5.14984130859375e-05, -0.047471046447753906, -2.288818359375e-05, -1.4662635294371285e-05, -3.468987051746808e-05, -3.218649908376392e-06, -3.24249267578125e-05, -0.00010299681161995977, 0.0, -0.3631172180175781, -5.7220458984375e-06, -2.5987625122070312e-05, -2.503394853192731e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1920928244535389e-07, -0.648932695388794, -1.9311904907226562e-05, -0.002620697021484375, -4.57763671875e-05, -1.2040034562232904e-05, -7.510157047363464e-06, -7.366927457042038e-05, -2.861018856492592e-06, -0.0014705657958984375, -3.099436753473128e-06, -0.0001621246337890625, -0.000278472900390625, -0.000186920166015625, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Sen'jin Shieldmasta", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 4, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.8679830781256825}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -0.2225189208984375, -0.0021572113037109375, -0.0022166266571730375, -2.884864079533145e-05, -1.1563301086425781e-05, -1.9073486328125e-06, -0.00033640858600847423, -2.0265579223632812e-06, -6.911149978637695, -3.576278118089249e-07, -0.00325775146484375, -3.814697265625e-05, -1.2516875358414836e-05, -5.960446742392378e-06, -0.000265684153418988, -5.960446742392378e-06, -0.0005453824996948242, -3.2186455882765586e-06, -0.0003070831298828125, -0.0001087188720703125, -0.0001430511474609375, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"hole1": 4, "hole0": "Sen'jin Shieldmasta", "_type": "Template6", "hole2": "PALADIN"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.152846568145094}, {"choice_history": [55, 124, 221, 63, 103, "Sen'jin", "Shieldmasta", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Sen'jin", " ", "Shieldmasta", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Sen'jinShieldmasta(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sen'jin Shieldmasta\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -9.5367431640625e-06, -3.814697265625e-06, -5.7220458984375e-06, -0.003272061934694648, -0.0019336113473400474, -0.004370625130832195, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -2.0265579223632812e-06, -6.699562072753906e-05, 0.0, -1.71661376953125e-05, -5.793415546417236, -1.52587890625e-05, -3.2782554626464844e-05, -2.0265579223632812e-06, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -2.6941230316879228e-05, -7.152551916078664e-06, -5.14984130859375e-05, -0.047471046447753906, -2.288818359375e-05, -1.4662635294371285e-05, -3.468987051746808e-05, -3.218649908376392e-06, -3.24249267578125e-05, -0.00010299681161995977, 0.0, -0.3631172180175781, -5.7220458984375e-06, -2.5987625122070312e-05, -2.503394853192731e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -1.1444091796875e-05, -1.1920928244535389e-07, -1.3640854358673096, -0.00021755695343017578, -0.00356292724609375, -4.00543212890625e-05, -5.602592500508763e-05, -7.629365427419543e-06, -9.774771751835942e-05, -2.9802276912960224e-06, -0.0010222196578979492, -2.50339189733495e-06, -0.000202178955078125, -0.00031280517578125, -0.0001926422119140625, 0.0], "model_output": {"body": [{"name": "Sen'jinShieldmasta", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Sen'jin Shieldmasta", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 4, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.583970041041759}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-3.814697265625e-06, -2.47955322265625e-05, -21.567628860473633], "model_output": {"body": [], "_type": "Module"}, "score": -21.567657470703125}]}
{"gold_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -0.3927806615829468, 0.0, -0.10895824432373047, -1.9073486328125e-06, -2.4676293833181262e-05, 0.0, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, 0.0, -2.6702880859375e-05, -2.503394853192731e-06, -0.1810741424560547, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.0001735687255859375, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -6.318092346191406e-06, -0.008193016052246094, -0.00042724609375, -0.022360801696777344, -0.00089263916015625, -0.09921729564666748, -0.0016924247611314058, -0.001567840576171875, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, 0.0, -0.0012865066528320312, -1.1444091796875e-05, -0.019906997680664062, -3.814697265625e-06, -0.0001468658447265625, -6.67572021484375e-05, -0.010158538818359375, -5.7220458984375e-06, -0.009452223777770996, -3.814697265625e-06, -0.0021209283731877804, -1.9073486328125e-06, -0.0026868581771850586, -2.47955322265625e-05, -1.71661376953125e-05, -0.0004367828369140625, -0.00022125244140625, -0.030957462266087532, -6.341934204101562e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.9917309400113936}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -1.999738097190857, -7.390948667307384e-06, -0.02816009521484375, -0.0009784698486328125, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001220703125, -5.7220458984375e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.001514434814453125, 0.0, -0.002810835838317871, 0.0, -0.0018225361127406359, 0.0, -0.0014468429144471884, -3.814697265625e-06, -9.5367431640625e-06, -0.0013380050659179688, -0.0002155303955078125, -0.0937800407409668, -2.503394853192731e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.2284177417839146}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -0.3927806615829468, 0.0, -2.3623199462890625, -0.0029821395874023438, -3.814697265625e-06, -1.1444091796875e-05, -0.0005645751953125, -1.1444091796875e-05, -0.000102996826171875, -3.24249267578125e-05, -0.0020580291748046875, -1.9073486328125e-06, -0.0012314319610595703, 0.0, -0.002177119255065918, 0.0, -0.0011839866638183594, -7.62939453125e-06, -5.7220458984375e-06, -0.0011358261108398438, -0.0002155303955078125, -0.0939096212387085, -2.503394853192731e-06, -1.9073486328125e-05, 0.0, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PALADIN"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.9570708700700834}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -2.5496246814727783, -4.887569048150908e-06, -0.4977579116821289, -0.0010128021240234375, -3.814697265625e-06, -3.4332275390625e-05, -4.1961669921875e-05, -5.7220458984375e-06, -9.1552734375e-05, -9.5367431640625e-06, -0.001758575439453125, 0.0, -0.0022928714752197266, 0.0, -0.0024649794213473797, 0.0, -0.0012451409129425883, -5.7220458984375e-06, -7.62939453125e-06, -0.0012884140014648438, -0.00020599365234375, -0.10004556179046631, -2.622604142743512e-06, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "DRUID"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.254242551595553}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "1", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -0.3927806615829468, 0.0, -0.10895824432373047, -1.9073486328125e-06, -2.4676293833181262e-05, 0.0, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, 0.0, -2.6702880859375e-05, -2.503394853192731e-06, -0.1810741424560547, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.0001735687255859375, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -6.318092346191406e-06, -0.008193016052246094, -0.00042724609375, -0.022360801696777344, -0.00089263916015625, -2.3598194122314453, -0.004084459971636534, -0.004029273986816406, -6.103515625e-05, -1.52587890625e-05, -0.00023651123046875, -1.71661376953125e-05, 0.0, -0.0020570755004882812, -3.4332275390625e-05, -0.10467529296875, -1.9073486328125e-06, -0.0001087188720703125, -4.38690185546875e-05, -0.009860992431640625, -5.7220458984375e-06, -0.009508609771728516, -3.814697265625e-06, -0.00196856283582747, -1.9073486328125e-06, -0.0026427507400512695, -3.0517578125e-05, -2.09808349609375e-05, -0.0004901885986328125, -0.0002117156982421875, -0.029578328132629395, -6.723403930664062e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 1, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.341181372706842}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -2.5496246814727783, -4.887569048150908e-06, -0.942108154296875, -1.9073486328125e-06, -2.7894950108020566e-05, 0.0, -6.866455078125e-05, -2.47955322265625e-05, 0.0, -9.775161743164062e-06, 0.0, -1.9073486328125e-06, -7.62939453125e-06, 0.0, 0.0, -2.86102294921875e-05, -2.503394853192731e-06, -0.18433284759521484, -7.62939453125e-06, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -6.103515625e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -0.00017547607421875, -2.09808349609375e-05, -1.1444091796875e-05, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -6.318092346191406e-06, -0.007701873779296875, -0.0004425048828125, -0.02223682403564453, -0.000888824462890625, -0.09854590892791748, -0.00168207089882344, -0.001506805419921875, -3.814697265625e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, 0.0, -0.0012941360473632812, -1.1444091796875e-05, -0.019182205200195312, -3.814697265625e-06, -0.000148773193359375, -6.67572021484375e-05, -0.010219573974609375, -5.7220458984375e-06, -0.009476065635681152, -3.814697265625e-06, -0.0021279621869325638, -1.9073486328125e-06, -0.0026944875717163086, -2.47955322265625e-05, -1.71661376953125e-05, -0.000438690185546875, -0.00022125244140625, -0.030961275100708008, -6.341934204101562e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.983050493116707}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -3.610466241836548, 0.0, -0.2805013656616211, -0.0009670257568359375, -1.9073486328125e-06, -8.0108642578125e-05, -2.288818359375e-05, -3.814697265625e-06, -0.0001277923583984375, -5.7220458984375e-06, -0.0017414093017578125, 0.0, -0.0025675296783447266, 0.0, -0.0016442975029349327, 0.0, -0.0012563462369143963, -5.7220458984375e-06, -7.62939453125e-06, -0.0010576248168945312, -0.0002231597900390625, -0.07809782028198242, -2.503394853192731e-06, -2.09808349609375e-05, 0.0, -1.9073486328125e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.075116839470638}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "SHAMAN", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -3.865429162979126, 0.0, -0.060982704162597656, -0.0029859542846679688, -1.9073486328125e-06, -3.4332275390625e-05, -0.000186920166015625, -7.62939453125e-06, -0.0001354217529296875, -1.33514404296875e-05, -0.0024662017822265625, 0.0, -0.00198972225189209, 0.0, -0.002732781693339348, 0.0, -0.0011556148529052734, -5.7220458984375e-06, -9.5367431640625e-06, -0.0011796951293945312, -0.0002117156982421875, -0.09357213973999023, -2.384185791015625e-06, -1.9073486328125e-05, 0.0, -1.9073486328125e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "SHAMAN"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.129436921073648}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -3.6493380069732666, 0.0, -0.34682655334472656, -0.00107574462890625, -1.9073486328125e-06, -1.71661376953125e-05, -2.6702880859375e-05, -5.7220458984375e-06, -0.0001201629638671875, -7.62939453125e-06, -0.00189971923828125, 0.0, -0.0026782751083374023, 0.0, -0.002384000923484564, 0.0, -0.0012273784959688783, -5.7220458984375e-06, -9.5367431640625e-06, -0.0014200210571289062, -0.00020599365234375, -0.09586858749389648, -2.622604142743512e-06, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "HUNTER"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.199463105622044}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -3.643078088760376, 0.0, -0.4038419723510742, -0.0017185211181640625, -1.9073486328125e-06, -1.1444091796875e-05, -0.00063323974609375, -9.5367431640625e-06, -0.000133514404296875, -7.62939453125e-06, -0.0020809173583984375, 0.0, -0.0026029348373413086, 0.0, -0.0020624888129532337, 0.0, -0.0014989374903962016, -3.814697265625e-06, -5.7220458984375e-06, -0.0014820098876953125, -0.0001983642578125, -0.10272359848022461, -2.503394853192731e-06, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "WARLOCK"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.258438797761983}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Sinister", " ", "Strike", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n        game.other_player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -2.6070775985717773, -1.9073486328125e-06, -8.344650268554688e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444084520917386e-05, -1.9073486328125e-06, -3.4332275390625e-05, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001888275146484375, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -0.0002231597900390625, -8.58306884765625e-05, -3.62396240234375e-05, -3.4570680327306036e-06, -3.445148468017578e-05, -1.025196434056852e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011074542999267578, -3.576278118089249e-07, -1.9073486328125e-06, -0.0001773834228515625, -0.0004711151123046875, -3.814697265625e-06, -2.6702880859375e-05, -2.86102294921875e-05, -0.043923377990722656, 0.0, 0.0, -2.288818359375e-05, -3.62396240234375e-05, -0.0001811981201171875, -0.000370025634765625, -4.172325134277344e-06, -0.0056934356689453125, 0.0, -0.0001983642578125, -7.62939453125e-05, 0.0, -0.0011644363403320312, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.000156402587890625, -5.7220458984375e-06, -0.0003833770751953125, -2.288818359375e-05, -0.6536992788314819, -4.57763671875e-05, -0.5508270263671875, -2.6702880859375e-05, -6.937980651855469e-05, 0.0, -0.000293731689453125, -3.0517578125e-05, 0.0, -7.987022399902344e-06, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-05, -9.655922440288123e-06, -0.33276844024658203, -9.5367431640625e-06, -5.91278076171875e-05, -1.9073486328125e-06, -3.814697265625e-06, -4.38690185546875e-05, 0.0, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -2.6702880859375e-05, 0.0, -3.814697265625e-06, -0.0001735687255859375, -2.288818359375e-05, -1.1444091796875e-05, 0.0, -3.0517578125e-05, 0.0, -2.47955322265625e-05, -8.225440979003906e-06, -0.0060443878173828125, -0.000392913818359375, -0.014944076538085938, -0.0008220672607421875, -0.09225893020629883, -0.001558528165332973, -0.001163482666015625, -3.62396240234375e-05, -3.814697265625e-06, -1.9073486328125e-05, -1.52587890625e-05, 0.0, -0.0011472702026367188, -9.5367431640625e-06, -0.012866973876953125, -3.814697265625e-06, -0.0001430511474609375, -3.814697265625e-05, -0.010931015014648438, -5.7220458984375e-06, -0.009385466575622559, -3.814697265625e-06, -0.002172674285247922, -1.9073486328125e-06, -0.0028107166290283203, -2.47955322265625e-05, -1.71661376953125e-05, -0.0004405975341796875, -0.0002193450927734375, -0.03120720386505127, -6.341934204101562e-05, -7.62939453125e-06, -1.9073486328125e-06, -2.47955322265625e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Sinister Strike", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 3, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.392889577223684}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Sinister", " ", "Strike", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -2.6070775985717773, -1.9073486328125e-06, -8.344650268554688e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.1444084520917386e-05, -1.9073486328125e-06, -3.4332275390625e-05, -6.103515625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0001888275146484375, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, 0.0, -7.62939453125e-06, 0.0, -0.0002231597900390625, -8.58306884765625e-05, -3.62396240234375e-05, -3.4570680327306036e-06, -3.445148468017578e-05, -1.025196434056852e-05, 0.0, -1.9073486328125e-05, 0.0, -0.00011074542999267578, -3.576278118089249e-07, -1.9073486328125e-06, -0.0001773834228515625, -0.0004711151123046875, -3.814697265625e-06, -2.6702880859375e-05, -2.86102294921875e-05, -0.043923377990722656, 0.0, 0.0, -2.288818359375e-05, -3.62396240234375e-05, -0.0001811981201171875, -0.000370025634765625, -4.172325134277344e-06, -0.0056934356689453125, 0.0, -0.0001983642578125, -7.62939453125e-05, 0.0, -0.0011644363403320312, 0.0, -0.0001049041748046875, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.000156402587890625, -5.7220458984375e-06, -0.0003833770751953125, -2.288818359375e-05, -0.9349473714828491, -3.62396240234375e-05, -0.0788726806640625, -0.002651214599609375, 0.0, 0.0, -0.08638381958007812, 0.0, -0.06719398498535156, 0.0, -1.33514404296875e-05, 0.0, -0.581548810005188, -3.0517578125e-05, -3.814697265625e-06, -0.001316070556640625, -0.00012969970703125, -0.05623579025268555, -2.1457672119140625e-06, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Sinister Strike", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.475219137208512}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(1), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -1.999738097190857, -7.390948667307384e-06, -0.02816009521484375, -0.0009784698486328125, -1.9073486328125e-06, -3.24249267578125e-05, -0.0001220703125, -5.7220458984375e-06, -8.7738037109375e-05, -3.814697265625e-06, -0.001514434814453125, 0.0, -0.002810835838317871, 0.0, -0.0018225361127406359, 0.0, -0.0014468429144471884, -3.814697265625e-06, -9.5367431640625e-06, -0.0013380050659179688, -0.0002155303955078125, -2.414320468902588, -2.0265579223632812e-06, -1.52587890625e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.548955785759972}, {"choice_history": [55, 124, 221, 63, 103, "Sinister", "Strike", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Sinister", " ", "Strike", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "player", "<EOS>", "cards_played", "<EOS>", 205, 3, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "player", "<EOS>", "cards_played", "<EOS>", 205, 3, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "3", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class SinisterStrike(SpellCard):\n\n    def __init__(self):\n        super().__init__('Sinister Strike', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.damage(player.effective_spell_damage(3), self)\n        if player.cards_played > 0:\n            player.hero.damage(player.effective_spell_damage(3), self)\n        if player.cards_played > 0:\n            player.hero.damage(player.effective_spell_damage(3), self)\n", "score_history": [0.0, -7.62939453125e-06, -3.814697265625e-06, -2.288818359375e-05, -5.7220458984375e-06, -2.706014311115723e-05, -0.004304548725485802, -0.00016938301268965006, -3.24249267578125e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.00014781951904296875, -3.647804260253906e-05, -5.7220458984375e-06, -2.288818359375e-05, -0.0866231918334961, -0.003055572509765625, -0.0017414451576769352, -4.4226646423339844e-05, -1.0132789611816406e-05, 0.0, -1.20401346066501e-05, -1.9073468138230965e-06, -0.3927806615829468, 0.0, -0.10895824432373047, -1.9073486328125e-06, -2.4676293833181262e-05, 0.0, -5.14984130859375e-05, -3.24249267578125e-05, 0.0, -7.867813110351562e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, 0.0, -2.6702880859375e-05, -2.503394853192731e-06, -2.2514820098876953, -5.7220458984375e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001373291015625, 0.0, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, 0.0, -5.7220458984375e-06, -0.0001277923583984375, -9.5367431640625e-06, -1.52587890625e-05, 0.0, -1.71661376953125e-05, 0.0, -3.0517578125e-05, -6.318092346191406e-06, -0.010637283325195312, -5.340576171875e-05, -0.8353471755981445, -3.814697265625e-06, -2.6702880859375e-05, 0.0, -0.0004482269287109375, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-06, -0.034763336181640625, -1.9073486328125e-06, -0.03330230712890625, 0.0, -0.07226181030273438, 0.0, -2.09808349609375e-05, -0.005591392517089844, -0.00014495849609375, -0.044048428535461426, -4.792213439941406e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.013109207153320312, -0.0003108978271484375, -0.0005130767822265625, -0.000476837158203125, -1.52587890625e-05, 0.0, -0.00299072265625, 0.0, -0.35111427307128906, 0.0, -0.23963499069213867, -4.971027374267578e-05, -5.340576171875e-05, -0.0034637451171875, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001225456944666803, -1.9073486328125e-06, -0.07779216766357422, -0.034806251525878906, -3.814697265625e-06, -0.0019474029541015625, -9.5367431640625e-06, -3.24249267578125e-05, -0.0003223419189453125, -0.0013980865478515625, -1.71661376953125e-05, -0.07156562805175781, 0.0, -0.4499483108520508, -1.9073486328125e-06, -0.02148592472076416, -2.0265579223632812e-06, -0.1335822343826294, -1.1444091796875e-05, -7.62939453125e-06, -0.0014820098876953125, -0.000301361083984375, -0.025588147342205048, -7.557868957519531e-05, -2.6702880859375e-05, 0.0, -3.0517578125e-05, 0.0, -0.012799263000488281, -0.000274658203125, -0.000606536865234375, -0.0002994537353515625, -2.09808349609375e-05, 0.0, -0.0005359649658203125, 0.0, -0.4548683166503906, -1.9073486328125e-06, -0.06877553462982178, -4.780292510986328e-05, -2.86102294921875e-05, -0.004075050354003906, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.000203484611120075, -3.814697265625e-06, -0.08305549621582031, -0.021894454956054688, -3.814697265625e-06, -0.0009708404541015625, -3.814697265625e-06, -4.1961669921875e-05, -0.0002231597900390625, -0.0019712448120117188, -1.52587890625e-05, -0.08987236022949219, 0.0, -0.5464859008789062, 0.0, -0.018283605575561523, -1.9073486328125e-06, -0.18462705612182617, -1.52587890625e-05, -9.5367431640625e-06, -0.0025091171264648438, -0.000301361083984375, -0.02604377083480358, -8.320808410644531e-05, -2.86102294921875e-05, 0.0, -5.054473876953125e-05, 0.0], "model_output": {"body": [{"name": "SinisterStrike", "body": [{"hole1": 1, "hole0": "Sinister Strike", "_type": "Template6", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "cards_played"}, "_type": "Compare", "ops": [{"_type": "Gt"}]}, "body": [{"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "cards_played"}, "_type": "Compare", "ops": [{"_type": "Gt"}]}, "body": [{"value": {"args": [{"hole0": 3, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.838246610080887}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -7.62939453125e-06, -23.035839080810547], "model_output": {"body": [], "_type": "Module"}, "score": -23.035846710205078}]}
{"gold_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.FREE, minion_type=MINION_TYPE.DEMON, battlecry=\n            Battlecry(Discard(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Succubus", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(<UNK>Succubus(),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -1.1750545501708984, -0.0002956390380859375, -0.45183151960372925, -0.7994307279586792, -0.037763677537441254, -0.03621101379394531, -2.86102294921875e-05, -0.0034645795822143555, -1.3589828085969202e-05, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"hole0": "<UNK>Succubus", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.114606214377034}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, spell_damage=1)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -2.773681163787842, -9.751319885253906e-05, -0.00086212158203125, -5.91278076171875e-05, -0.022059878334403038, -9.5367431640625e-06], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"n": 1, "_type": "Num"}, "hole0": 4, "_type": "Template10", "hole2": "spell_damage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.152456890535575}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, taunt=True)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -3.090167999267578, -2.503394853192731e-06, -0.0012149810791015625, -5.91278076171875e-05, -0.002017974853515625, -1.33514404296875e-05], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.4491634869247605}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(<UNK>(), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -1.1750545501708984, -0.0002956390380859375, -0.45183151960372925, -0.7434032559394836, -0.4614124298095703, -2.288818359375e-05, -0.02101588249206543, -1.8596589143271558e-05, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"hole0": "<UNK>", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.463567068461032}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Succubus", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(<UNK>Succubus(),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -1.3898192644119263, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -5.3644151194021106e-05, -0.0007574558258056641, -6.496906280517578e-05, -0.13057899475097656, -0.0009632110595703125, 0.0, -0.21382737159729004, -3.814697265625e-06, -3.814697265625e-05, 0.0, -0.00012969970703125, 0.0, -8.7738037109375e-05, 0.0, -0.09151458740234375, -1.9073486328125e-06, -0.019384384155273438, -6.4849853515625e-05, -8.511431224178523e-05, -2.3841830625315197e-06, -0.0002814020263031125, -4.768370445162873e-07, -0.2655130624771118, -3.6954863844584906e-06, -0.0002880096435546875, -5.7220458984375e-05, -4.76837158203125e-05, 0.0, -0.00308990478515625, -8.344629350176547e-06, -2.47955322265625e-05, -1.1121101379394531, -0.000286102294921875, -0.4521959125995636, -0.7860239744186401, -0.03764381632208824, -0.03724861145019531, -2.86102294921875e-05, -0.0035467147827148438, -1.3828244846081361e-05, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"hole0": "<UNK>Succubus", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.551102046836718}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Equip", "<EOS>", 208, 49, 174, "<UNK>", "Succubus", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Equip(<UNK>Succubus()),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -0.7236126661300659, -2.968310218420811e-05, -9.5367431640625e-06, -0.014410018920898438, 0.0, -0.23179000616073608, -1.6826730966567993, -0.02034994587302208, -0.000408172607421875, -1.9073486328125e-06, -0.00018525123596191406, -7.152551916078664e-06, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"hole0": "<UNK>Succubus", "_type": "Template38"}], "func": {"id": "Equip", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.655816869514581}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Equip", "<EOS>", 208, 49, 174, "<UNK>", "Player", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Equip(<UNK>Player()),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -0.7236126661300659, -2.968310218420811e-05, -9.5367431640625e-06, -0.014410018920898438, 0.0, -0.23179000616073608, -1.7775616645812988, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.001972675323486328, -3.445147740421817e-05, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"hole0": "<UNK>Player", "_type": "Template38"}], "func": {"id": "Equip", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.73178302280661}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Equip", "<EOS>", 208, 49, 174, "<UNK>", "Succubus", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Equip(<UNK>Succubus()),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -1.3898192644119263, -9.5367431640625e-06, 0.0, -3.814697265625e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-05, -5.3644151194021106e-05, -0.0007574558258056641, -6.496906280517578e-05, -0.13057899475097656, -0.0009632110595703125, 0.0, -0.21382737159729004, -3.814697265625e-06, -3.814697265625e-05, 0.0, -0.00012969970703125, 0.0, -8.7738037109375e-05, 0.0, -0.09151458740234375, -1.9073486328125e-06, -0.019384384155273438, -6.4849853515625e-05, -8.511431224178523e-05, -2.3841830625315197e-06, -0.0002814020263031125, -4.768370445162873e-07, -0.2655130624771118, -3.6954863844584906e-06, -0.0002880096435546875, -5.7220458984375e-05, -4.76837158203125e-05, 0.0, -0.00308990478515625, -8.344629350176547e-06, -2.47955322265625e-05, -0.39937496185302734, -0.0019283294677734375, -7.62939453125e-05, -2.86102294921875e-05, -0.7122961282730103, -2.968310218420811e-05, -9.5367431640625e-06, -0.01721954345703125, 0.0, -0.21290959417819977, -1.6336214542388916, -0.02277507074177265, -0.0004177093505859375, -1.9073486328125e-06, -0.00019288063049316406, -7.5101784204889555e-06, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"hole0": "<UNK>Succubus", "_type": "Template38"}], "func": {"id": "Equip", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.122893552292794}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Equip", "<EOS>", 208, 49, 174, "<UNK>", "Windfury", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Equip(<UNK>Windfury()),\n            PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -0.7236126661300659, -2.968310218420811e-05, -9.5367431640625e-06, -0.014410018920898438, 0.0, -0.23179000616073608, -2.2371344566345215, -1.0728830375228426e-06, -0.0001506805419921875, -3.814697265625e-06, -0.00027692317962646484, -8.225440979003906e-06, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"hole0": "<UNK>Windfury", "_type": "Template38"}], "func": {"id": "Equip", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.189766516618249}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Damage", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Discard", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Damage(Buff(\n            DiscardAttack())), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -1.9138725996017456, -4.744523539557122e-05, -3.814697265625e-06, -0.010436058044433594, -0.01727008819580078, -3.814697265625e-06, 0.0, -1.7976710796356201, -7.259827543748543e-05, -8.96453857421875e-05, -0.01192474365234375, -2.09808349609375e-05, -0.1240568459033966, -0.4511912763118744, -7.62939453125e-06, -4.1961669921875e-05, -7.62939453125e-06, -0.245658278465271, -4.172325134277344e-06, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"args": [{"hole0": "DiscardAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Damage", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.55472009390445}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Damage", "<EOS>", 208, 32, 101, 19, 125, "Random", "Amount", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Damage(RandomAmount(1, \n            4)), SelfSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -1.9138725996017456, -4.744523539557122e-05, -3.814697265625e-06, -0.010436058044433594, -0.01727008819580078, -3.814697265625e-06, 0.0, -1.3400037288665771, -0.00821137335151434, -5.841255187988281e-06, -0.0012454986572265625, -0.024658203125, 0.0, -0.5172644257545471, -5.7220458984375e-05, -0.015363693237304688, 0.0, -0.1730872094631195, -4.470348358154297e-05, -0.6791791915893555, 0.0, -0.1269397735595703, -3.325939178466797e-05, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "RandomAmount", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Damage", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.810067374849439}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Damage", "<EOS>", 208, 32, 101, 19, 125, "Random", "Amount", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(Damage(RandomAmount(1, \n            4)), CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -1.9138725996017456, -4.744523539557122e-05, -3.814697265625e-06, -0.010436058044433594, -0.01727008819580078, -3.814697265625e-06, 0.0, -1.3400037288665771, -0.00821137335151434, -5.841255187988281e-06, -0.0012454986572265625, -0.024658203125, 0.0, -0.5172644257545471, -5.7220458984375e-05, -0.015363693237304688, 0.0, -0.1730872094631195, -4.470348358154297e-05, -0.7100629806518555, -0.001735687255859375, -4.00543212890625e-05, 0.0, -0.14203155040740967, -0.0001782147737685591, -9.5367431640625e-06, -0.015695571899414062, -0.0001087188720703125, -0.00041961669921875, -0.0001850128173828125, -7.62939453125e-06, -6.4849853515625e-05, 0.0, -0.016574978828430176, -1.71661376953125e-05, 0.0, -9.918212890625e-05, -1.9073486328125e-05, -0.0010442733764648438, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -0.002245187759399414, -7.462501525878906e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "func": {"id": "RandomAmount", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Damage", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.894628242859596}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "mana", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(<UNK>(Give(Buff(\n            ChangeAttack(Attribute('mana', SelfSelector()))))), SelfSelector())\n            )\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -1.2416132688522339, -0.18004851043224335, -9.34600830078125e-05, -0.14816665649414062, -0.0094451904296875, -7.62939453125e-06, 0.0, -1.685442328453064, -0.004649639129638672, -5.7220458984375e-06, -0.27611446380615234, -0.000186920166015625, -2.09808349609375e-05, 0.0, -0.1778406798839569, -0.03604781627655029, -4.38690185546875e-05, -0.3596353530883789, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.10043234378099442, -0.05232524871826172, -1.1444091796875e-05, -0.000759124755859375, -0.0003604888916015625, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.08111631870269775, -1.9073486328125e-06, -9.5367431640625e-06, -0.001209259033203125, -4.57763671875e-05, -0.8423240780830383, -8.20159912109375e-05, -0.0021419525146484375, -1.52587890625e-05, -0.027570009231567383, -1.33514404296875e-05, 0.0, -0.05418968200683594, -3.814697265625e-06, -0.07415688037872314, -0.00025093555450439453, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"args": [{"args": [{"args": [{"args": [{"s": "mana", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.33879001224426}, {"choice_history": [55, 124, 221, 63, 103, "Succubus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Succubus", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "4", "<EOS>", "3", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Discard", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Succubus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Succubus', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(4, 3, deathrattle=Deathrattle(<UNK>(Give(Buff(\n            DiscardAttack()))), PlayerSelector()))\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -0.0008950994815677404, -8.070407784543931e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0001426934904884547, -3.123283022432588e-05, -3.814697265625e-06, -1.33514404296875e-05, -0.0001773834228515625, -7.62939453125e-06, -4.768371127283899e-06, -1.9073486328125e-06, 0.0, -7.43865966796875e-05, -1.9073486328125e-06, -3.5762335755862296e-05, -2.503394853192731e-06, -0.0007543563842773438, -0.001605987548828125, -1.71661376953125e-05, 0.0, -0.000171661376953125, -6.67572021484375e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -8.702266313775908e-06, -3.814697265625e-06, 0.0, 0.0, -5.53131103515625e-05, -1.1444091796875e-05, -1.33514404296875e-05, -2.0265558760002023e-06, -5.14984130859375e-05, -5.7220458984375e-06, 0.0, -0.00038735722773708403, 0.0, -1.9073486328125e-06, 0.0, -3.4332275390625e-05, 0.0, -0.0003668069839477539, -0.0001549710868857801, -0.9488917589187622, -6.437291176553117e-06, -3.814697265625e-06, -1.52587890625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.00012218952178955078, -3.4213022445328534e-05, -0.004288434982299805, -4.017353057861328e-05, -0.15105247497558594, -0.000732421875, 0.0, -0.1488792896270752, -3.814697265625e-06, -2.09808349609375e-05, 0.0, -0.000141143798828125, 0.0, -0.0001373291015625, 0.0, -0.06305694580078125, -1.9073486328125e-06, -0.03251075744628906, -5.53131103515625e-05, -0.0001121737077482976, -1.9073468138230965e-06, -0.00031392931123264134, -3.576278118089249e-07, -0.25129759311676025, -3.4570680327306036e-06, -0.00025177001953125, -5.7220458984375e-05, -5.14984130859375e-05, 0.0, -0.003131866455078125, -8.463837730232626e-06, -2.288818359375e-05, -0.3698873519897461, -0.001834869384765625, -7.62939453125e-05, -2.86102294921875e-05, -1.2416132688522339, -0.18004851043224335, -9.34600830078125e-05, -0.14816665649414062, -0.0094451904296875, -7.62939453125e-06, 0.0, -1.685442328453064, -0.004649639129638672, -5.7220458984375e-06, -0.27611446380615234, -0.000186920166015625, -2.09808349609375e-05, 0.0, -0.1778406798839569, -0.03604781627655029, -4.38690185546875e-05, -1.2033214569091797, -4.38690185546875e-05, -0.24150225520133972, -0.36614856123924255, -5.14984130859375e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.32923972606658936, -7.987022399902344e-06, 0.0], "model_output": {"body": [{"name": "Succubus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Succubus", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"args": [{"args": [{"args": [{"args": [{"hole0": "DiscardAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 4, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.882402902189767}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -22.233036041259766], "model_output": {"body": [], "_type": "Module"}, "score": -22.233043670654297}]}
{"gold_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "7", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=True)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.5502042770385742, -0.0001430511474609375, -0.00016974026220850646, -1.3470649719238281e-05, -3.6597251892089844e-05, -5.340576171875e-05, -0.0005519256228581071, -0.0005635065026581287, -0.0008257625158876181, -1.33514404296875e-05, -0.26749706268310547, -0.0009412765502929688, -6.377496174536645e-05, -5.721893103327602e-05, -0.0002636591379996389, -1.5377907402580604e-05, -0.3901784420013428, -9.536738616588991e-07, -0.01964855194091797, -0.0008068084716796875, -0.000156402587890625, -7.62939453125e-06], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 7, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.2569794951446056}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.890167236328125, -0.000133514404296875, -8.940656698541716e-06, -2.1338462829589844e-05, -3.0517578125e-05, 0.0, -0.00013518694322556257, -2.3841855067985307e-07, -6.127357482910156e-05, -1.9073486328125e-06, -0.0015964506892487407, -0.00012731552124023438, -8.392333984375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -0.4719829559326172, -0.0031054019927978516, -0.00074005126953125, -2.288818359375e-05, -4.279532004147768e-05, -5.722038622479886e-06, -4.136486313655041e-05, -1.3947486877441406e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"_type": "Template3", "hole0": "War Golem", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 7, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.3931322999414633}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.890167236328125, -0.000133514404296875, -8.940656698541716e-06, -2.1338462829589844e-05, -3.0517578125e-05, 0.0, -0.00013518694322556257, -2.3841855067985307e-07, -6.127357482910156e-05, -1.9073486328125e-06, -0.0015964506892487407, -0.00012731552124023438, -8.392333984375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -1.0915184020996094, -0.00022029876708984375, -0.0016193389892578125, -3.0517578125e-05, -4.0291961340699345e-05, -2.7418097943154862e-06, -6.377510726451874e-05, -9.894371032714844e-06], "model_output": {"body": [{"name": "WarGolem", "body": [{"_type": "Template3", "hole0": "War Golem", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 7, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.0106824335377596}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.5502042770385742, -0.0001430511474609375, -0.00016974026220850646, -1.3470649719238281e-05, -3.6597251892089844e-05, -5.340576171875e-05, -0.0005519256228581071, -0.0005635065026581287, -0.0008257625158876181, -1.33514404296875e-05, -1.4995555877685547, -3.814697265625e-05, -9.572059207130224e-05, -4.768367489305092e-06, -0.0001686668547336012, -3.1113624572753906e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.0772363410828802}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "7", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, taunt=True)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.5502042770385742, -0.0001430511474609375, -0.00016974026220850646, -1.3470649719238281e-05, -3.6597251892089844e-05, -5.340576171875e-05, -0.0005519256228581071, -0.0005635065026581287, -0.0008257625158876181, -1.33514404296875e-05, -0.26749706268310547, -0.0009412765502929688, -6.377496174536645e-05, -5.721893103327602e-05, -0.0002636591379996389, -1.5377907402580604e-05, -1.4437644481658936, -4.41074053014745e-06, -0.0015239715576171875, -0.000492095947265625, -0.000217437744140625, -3.814697265625e-06], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 7, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.2921868859270944}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "7", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, divine_shield=True)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.5502042770385742, -0.0001430511474609375, -0.00016974026220850646, -1.3470649719238281e-05, -3.6597251892089844e-05, -5.340576171875e-05, -0.0005519256228581071, -0.0005635065026581287, -0.0008257625158876181, -1.33514404296875e-05, -0.26749706268310547, -0.0009412765502929688, -6.377496174536645e-05, -5.721893103327602e-05, -0.0002636591379996389, -1.5377907402580604e-05, -3.596870183944702, -1.4305104514278355e-06, -0.0007877349853515625, -0.0024232864379882812, -9.1552734375e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 7, "_type": "Template10", "hole2": "divine_shield"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.446358710384516}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.890167236328125, -0.000133514404296875, -8.940656698541716e-06, -2.1338462829589844e-05, -3.0517578125e-05, 0.0, -0.00013518694322556257, -2.3841855067985307e-07, -6.127357482910156e-05, -1.9073486328125e-06, -0.0015964506892487407, -0.00012731552124023438, -8.392333984375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -3.996973991394043, -0.0026105642318725586, -0.0009746551513671875, -5.7220458984375e-06, -3.6835033824900165e-05, -4.41074053014745e-06, -3.778871177928522e-05, -1.1682510375976562e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"_type": "Template3", "hole0": "War Golem", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 7, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.917832822673937}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "7", "<EOS>", "7", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, stealth=True)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.5502042770385742, -0.0001430511474609375, -0.00016974026220850646, -1.3470649719238281e-05, -3.6597251892089844e-05, -5.340576171875e-05, -0.0005519256228581071, -0.0005635065026581287, -0.0008257625158876181, -1.33514404296875e-05, -0.26749706268310547, -0.0009412765502929688, -6.377496174536645e-05, -5.721893103327602e-05, -0.0002636591379996389, -1.5377907402580604e-05, -4.271676540374756, -7.2479248046875e-05, -0.00052642822265625, -0.0021333694458007812, -9.72747802734375e-05, -1.1444091796875e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 7, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.120698243237712}, {"choice_history": [55, 124, 221, 63, 103, "Force", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class ForceGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.925185203552246, -0.20695830881595612, -0.0016624215058982372, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -2.002716064453125e-05, -0.00021004676818847656, -0.0001163482666015625, -7.62939453125e-06, -0.5574808120727539, -0.000118255615234375, -8.821448318485636e-06, -2.1338462829589844e-05, -3.0517578125e-05, 0.0, -0.00017595190729480237, -2.3841855067985307e-07, -6.699562072753906e-05, -1.9073486328125e-06, -0.0014445780543610454, -0.0001080036090570502, -7.05718994140625e-05, 0.0, -3.814697265625e-06, 0.0, -3.62396240234375e-05, -1.1920928244535389e-07, -0.4713362455368042, -0.003133058547973633, -0.0007190704345703125, -2.47955322265625e-05, -4.2556916014291346e-05, -5.841247457283316e-06, -4.1960876842495054e-05, -1.5854835510253906e-05], "model_output": {"body": [{"name": "ForceGolem", "body": [{"_type": "Template3", "hole0": "War Golem", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 7, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.169100940719055}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.890167236328125, -0.000133514404296875, -8.940656698541716e-06, -2.1338462829589844e-05, -3.0517578125e-05, 0.0, -0.00013518694322556257, -2.3841855067985307e-07, -6.127357482910156e-05, -1.9073486328125e-06, -0.0015964506892487407, -0.00012731552124023438, -8.392333984375e-05, 0.0, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -4.433833122253418, -5.0067901611328125e-05, -0.001720428466796875, -3.814697265625e-05, -3.707347059389576e-05, -2.0265558760002023e-06, -5.2689152653329074e-05, -1.5735626220703125e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"_type": "Template3", "hole0": "War Golem", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.352926463254072}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "7", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=True)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -4.9011383056640625, -0.0028581619262695312, -0.0002234936982858926, -6.937980651855469e-05, -6.79492904964718e-06, -1.9073486328125e-06, -0.00042950373608618975, -0.00010883781942538917, -0.00024664399097673595, -1.9073486328125e-06, -0.29785919189453125, -0.000598907470703125, -2.4199256586143747e-05, -2.2649508537142538e-05, -0.0001915527245728299, -9.298280929215252e-06, -0.3109548091888428, -2.3841855067985307e-07, -0.02025604248046875, -0.000446319580078125, -0.000102996826171875, -1.52587890625e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 7, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.5603336493963695}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -4.9011383056640625, -0.0028581619262695312, -0.0002234936982858926, -6.937980651855469e-05, -6.79492904964718e-06, -1.9073486328125e-06, -0.00042950373608618975, -0.00010883781942538917, -0.00024664399097673595, -1.9073486328125e-06, -1.3640146255493164, -2.86102294921875e-05, -5.674206477124244e-05, -2.622600959512056e-06, -6.532461702590808e-05, -1.7762184143066406e-05], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.2940378722230435}, {"choice_history": [55, 124, 221, 63, 103, "War", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "7", "<EOS>", "7", "<EOS>", "charge", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 210, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Thaddius", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "In", "Graveyard", "<EOS>", 208, 49, 174, "Feugen", "<EOS>"], "inferred_code": "class WarGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7, charge=Deathrattle(Summon(Thaddius()),\n            PlayerSelector(), InGraveyard(Feugen())))\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.024240585044026375, -6.806619057897478e-05, -3.635817120084539e-05, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.9550323486328125e-05, -0.00011277198791503906, -0.00020599365234375, -7.62939453125e-06, -0.5502042770385742, -0.0001430511474609375, -0.00016974026220850646, -1.3470649719238281e-05, -3.6597251892089844e-05, -5.340576171875e-05, -0.0005519256228581071, -0.0005635065026581287, -0.0008257625158876181, -1.33514404296875e-05, -0.26749706268310547, -0.0009412765502929688, -6.377496174536645e-05, -5.721893103327602e-05, -0.0002636591379996389, -1.5377907402580604e-05, -0.3901784420013428, -9.536738616588991e-07, -3.991408348083496, -2.6702880859375e-05, -0.0001010894775390625, -3.814697265625e-06, -0.040032386779785156, -3.4570680327306036e-06, -0.008205413818359375, -0.000457763671875, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.03387188911437988, -5.364418029785156e-05, -0.0636434555053711, -0.000537872314453125, -5.7220458984375e-06, -0.02892478182911873, -0.0002384185791015625, -0.0023174285888671875, -1.9073486328125e-06, -0.002979278564453125, -1.9073486328125e-06, 0.0, -0.0005741119384765625, -0.014659881591796875, -3.814697265625e-06, 0.0, -0.007351875305175781, -0.013518929481506348, -4.38690185546875e-05, -0.0001621246337890625, -0.0021619796752929688, -1.9073486328125e-06, -1.0434725284576416, -0.0026384592056274414], "model_output": {"body": [{"name": "WarGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"args": [{"args": [{"hole0": "Thaddius", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}, {"args": [{"hole0": "Feugen", "_type": "Template38"}], "func": {"id": "InGraveyard", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 7, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.493810642366952}, {"choice_history": [55, 124, 221, 63, 103, "Force", "Golem", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "War", " ", "Golem", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class ForceGolem(MinionCard):\n\n    def __init__(self):\n        super().__init__('War Golem', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [0.0, -5.7220458984375e-06, -3.814697265625e-06, -1.1444091796875e-05, -1.9073486328125e-06, -3.925185203552246, -0.20695830881595612, -0.0016624215058982372, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -2.002716064453125e-05, -0.00021004676818847656, -0.0001163482666015625, -7.62939453125e-06, -0.875880241394043, -0.0001392364501953125, -0.0001579404342919588, -1.3470649719238281e-05, -3.6597251892089844e-05, -4.1961669921875e-05, -0.0006561761256307364, -0.0006399971316568553, -0.0008409020374529064, -1.52587890625e-05, -1.8470182418823242, -4.76837158203125e-05, -0.00010525620018597692, -5.125993993715383e-06, -0.00015650961722712964, -3.123283386230469e-05], "model_output": {"body": [{"name": "ForceGolem", "body": [{"hole1": 7, "hole0": "War Golem", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.859999223403065}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -5.7220458984375e-06, -22.472688674926758], "model_output": {"body": [], "_type": "Module"}, "score": -22.472694396972656}]}
{"gold_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(\n            MinionIsNotTarget(), BothPlayer()), [ActionTag(Kill(),\n            TargetSelector())])])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "4", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>4())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -0.15801334381103516, -0.06447029113769531, -0.0001404283248120919, -7.378782902378589e-05, -3.600085619837046e-05, -2.8609820219571702e-05, -0.014925521798431873, -0.0006803821888752282, -0.004436492919921875, -6.556510470545618e-06, -5.7220458984375e-06, -0.08169364929199219, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0020505189895629883, -0.0003570312983356416, -0.0016040802001953125, -1.33514404296875e-05, -6.103515625e-05, -0.018051667138934135, -1.4466826915740967, -1.1920928244535389e-07, -0.11211717128753662, -2.3841855067985307e-07, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>4", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0696668595798755}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "damage", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>damage())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -0.15801334381103516, -0.06447029113769531, -0.0001404283248120919, -7.378782902378589e-05, -3.600085619837046e-05, -2.8609820219571702e-05, -0.014925521798431873, -0.0006803821888752282, -0.004436492919921875, -6.556510470545618e-06, -5.7220458984375e-06, -0.08169364929199219, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0020505189895629883, -0.0003570312983356416, -0.0016040802001953125, -1.33514404296875e-05, -6.103515625e-05, -0.018051667138934135, -1.4617809057235718, -3.3378591979271732e-06, -0.17241883277893066, -1.1920928244535389e-07, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>damage", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.145069834661392}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Windfury", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Windfury())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -0.15801334381103516, -0.06447029113769531, -0.0001404283248120919, -7.378782902378589e-05, -3.600085619837046e-05, -2.8609820219571702e-05, -0.014925521798431873, -0.0006803821888752282, -0.004436492919921875, -6.556510470545618e-06, -5.7220458984375e-06, -0.08169364929199219, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0020505189895629883, -0.0003570312983356416, -0.0016040802001953125, -1.33514404296875e-05, -6.103515625e-05, -0.018051667138934135, -1.8716883659362793, -1.1920928244535389e-07, -0.10853540897369385, -1.1920928244535389e-07, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Windfury", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.491090652418947}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Acidmaw", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Acidmaw())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -0.15801334381103516, -0.06447029113769531, -0.0001404283248120919, -7.378782902378589e-05, -3.600085619837046e-05, -2.8609820219571702e-05, -0.014925521798431873, -0.0006803821888752282, -0.004436492919921875, -6.556510470545618e-06, -5.7220458984375e-06, -0.08169364929199219, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0020505189895629883, -0.0003570312983356416, -0.0016040802001953125, -1.33514404296875e-05, -6.103515625e-05, -0.018051667138934135, -1.617044448852539, -0.012230779975652695, -0.7471054792404175, 0.0, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Acidmaw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8872473471590183}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Acidmaw", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Acidmaw())), PlayerSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -0.15801334381103516, -0.06447029113769531, -0.0001404283248120919, -7.378782902378589e-05, -3.600085619837046e-05, -2.8609820219571702e-05, -0.014925521798431873, -0.0006803821888752282, -0.004436492919921875, -6.556510470545618e-06, -5.7220458984375e-06, -0.08169364929199219, -1.71661376953125e-05, -7.62939453125e-06, 0.0, -0.0020505189895629883, -0.0003570312983356416, -0.0016040802001953125, -1.33514404296875e-05, -6.103515625e-05, -0.018051667138934135, -1.617044448852539, -0.012230779975652695, -0.7888849973678589, -3.814697265625e-06, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Acidmaw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "PlayerSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.929030799193008}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "4", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>4())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -1.255975365638733, -7.152555099310121e-07, -0.0003662109375, -7.82012939453125e-05, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00025177001953125, 0.0, -0.05683135986328125, -1.9073486328125e-06, -0.22612762451171875, -0.0682058334350586, -0.00014972666394896805, -8.320462075062096e-05, -3.3020660339388996e-05, -2.9682672902708873e-05, -0.013644319027662277, -0.0007302981102839112, -0.00438237190246582, -6.675719760096399e-06, -3.814697265625e-06, -0.07904720306396484, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0020258426666259766, -0.00035595838562585413, -0.001514434814453125, -1.33514404296875e-05, -6.103515625e-05, -0.018042966723442078, -1.4403852224349976, -1.1920928244535389e-07, -0.11327111721038818, -2.3841855067985307e-07, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>4", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9813841822401557}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "damage", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>damage())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -1.255975365638733, -7.152555099310121e-07, -0.0003662109375, -7.82012939453125e-05, 0.0, -5.543231964111328e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -2.09808349609375e-05, 0.0, -0.00025177001953125, 0.0, -0.05683135986328125, -1.9073486328125e-06, -0.22612762451171875, -0.0682058334350586, -0.00014972666394896805, -8.320462075062096e-05, -3.3020660339388996e-05, -2.9682672902708873e-05, -0.013644319027662277, -0.0007302981102839112, -0.00438237190246582, -6.675719760096399e-06, -3.814697265625e-06, -0.07904720306396484, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0020258426666259766, -0.00035595838562585413, -0.001514434814453125, -1.33514404296875e-05, -6.103515625e-05, -0.018042966723442078, -1.4868723154067993, -3.3378591979271732e-06, -0.17538857460021973, -1.1920928244535389e-07, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>damage", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.089991832042436}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Acidmaw", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Windfury", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Windfury())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -1.5864763259887695, -0.0021209716796875, -1.156323378381785e-05, -2.2172915123519488e-05, -0.003262758255004883, -4.410734163684538e-06, -0.4332249164581299, -4.768370445162873e-07, -0.0027255467139184475, -1.4543509678333066e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -8.96453857421875e-05, 0.0, -0.10466957092285156, -1.1920928244535389e-07, -0.08232879638671875, -0.16546249389648438, -9.512844553682953e-05, -0.0002493547508493066, -3.468953582341783e-05, -4.0649541915627196e-05, -0.014094378799200058, -0.00012814464571420103, -0.04609847068786621, -9.894371032714844e-06, -1.9073486328125e-06, -0.22126293182373047, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0017760992050170898, -0.0006397959077730775, -0.0009288787841796875, -1.52587890625e-05, -0.0001125335693359375, -0.007192547898739576, -1.5446339845657349, -2.3841855067985307e-07, -0.17428994178771973, -2.0265579223632812e-06, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Acidmaw", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole3": "minion_type", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Windfury", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.44480017071313}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Acidmaw", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Attack())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -1.5864763259887695, -0.0021209716796875, -1.156323378381785e-05, -2.2172915123519488e-05, -0.003262758255004883, -4.410734163684538e-06, -0.4332249164581299, -4.768370445162873e-07, -0.0027255467139184475, -1.4543509678333066e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -8.96453857421875e-05, 0.0, -0.10466957092285156, -1.1920928244535389e-07, -0.08232879638671875, -0.16546249389648438, -9.512844553682953e-05, -0.0002493547508493066, -3.468953582341783e-05, -4.0649541915627196e-05, -0.014094378799200058, -0.00012814464571420103, -0.04609847068786621, -9.894371032714844e-06, -1.9073486328125e-06, -0.22126293182373047, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0017760992050170898, -0.0006397959077730775, -0.0009288787841796875, -1.52587890625e-05, -0.0001125335693359375, -0.007192547898739576, -1.7623378038406372, 0.0, -0.03149282932281494, -2.0265579223632812e-06, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Acidmaw", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole3": "minion_type", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.519706639104577}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Acidmaw", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "4", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>4())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -1.5864763259887695, -0.0021209716796875, -1.156323378381785e-05, -2.2172915123519488e-05, -0.003262758255004883, -4.410734163684538e-06, -0.4332249164581299, -4.768370445162873e-07, -0.0027255467139184475, -1.4543509678333066e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -8.96453857421875e-05, 0.0, -0.10466957092285156, -1.1920928244535389e-07, -0.08232879638671875, -0.16546249389648438, -9.512844553682953e-05, -0.0002493547508493066, -3.468953582341783e-05, -4.0649541915627196e-05, -0.014094378799200058, -0.00012814464571420103, -0.04609847068786621, -9.894371032714844e-06, -1.9073486328125e-06, -0.22126293182373047, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0017760992050170898, -0.0006397959077730775, -0.0009288787841796875, -1.52587890625e-05, -0.0001125335693359375, -0.007192547898739576, -1.7420527935028076, -1.1920928244535389e-07, -0.25458860397338867, -2.0265579223632812e-06, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Acidmaw", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole3": "minion_type", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>4", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.722517522626603}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Acidmaw", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Acidmaw", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Acidmaw())), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -1.5864763259887695, -0.0021209716796875, -1.156323378381785e-05, -2.2172915123519488e-05, -0.003262758255004883, -4.410734163684538e-06, -0.4332249164581299, -4.768370445162873e-07, -0.0027255467139184475, -1.4543509678333066e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -8.96453857421875e-05, 0.0, -0.10466957092285156, -1.1920928244535389e-07, -0.08232879638671875, -0.16546249389648438, -9.512844553682953e-05, -0.0002493547508493066, -3.468953582341783e-05, -4.0649541915627196e-05, -0.014094378799200058, -0.00012814464571420103, -0.04609847068786621, -9.894371032714844e-06, -1.9073486328125e-06, -0.22126293182373047, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0017760992050170898, -0.0006397959077730775, -0.0009288787841796875, -1.52587890625e-05, -0.0001125335693359375, -0.007192547898739576, -1.3322768211364746, -0.00622200034558773, -0.6917694807052612, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Acidmaw", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole3": "minion_type", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Acidmaw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.7561441889191585}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -0.15801334381103516, -0.06447029113769531, -0.0001404283248120919, -7.378782902378589e-05, -3.600085619837046e-05, -2.8609820219571702e-05, -0.014925521798431873, -0.0006803821888752282, -0.004436492919921875, -6.556510470545618e-06, -5.7220458984375e-06, -3.3526315689086914, -0.000812530517578125, -0.06050825119018555, 0.0, -0.19427108764648438, -1.1920928244535389e-07, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0152340675147045}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Acidmaw", "<EOS>", "7", "<EOS>", "EPIC", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 70, 140, "4", "<EOS>", "2", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Acidmaw", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.ALL, CARD_RARITY.\n            EPIC, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            <UNK>Acidmaw())), PlayerSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -1.5864763259887695, -0.0021209716796875, -1.156323378381785e-05, -2.2172915123519488e-05, -0.003262758255004883, -4.410734163684538e-06, -0.4332249164581299, -4.768370445162873e-07, -0.0027255467139184475, -1.4543509678333066e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-05, 0.0, -8.96453857421875e-05, 0.0, -0.10466957092285156, -1.1920928244535389e-07, -0.08232879638671875, -0.16546249389648438, -9.512844553682953e-05, -0.0002493547508493066, -3.468953582341783e-05, -4.0649541915627196e-05, -0.014094378799200058, -0.00012814464571420103, -0.04609847068786621, -9.894371032714844e-06, -1.9073486328125e-06, -0.22126293182373047, -3.24249267578125e-05, -1.33514404296875e-05, 0.0, -0.0017760992050170898, -0.0006397959077730775, -0.0009288787841796875, -1.52587890625e-05, -0.0001125335693359375, -0.007192547898739576, -1.3322768211364746, -0.00622200034558773, -1.130252718925476, -7.62939453125e-06, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Acidmaw", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 7, "hole3": "minion_type", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 4, "hole4": [{"args": [{"hole0": "<UNK>Acidmaw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "PlayerSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.194633268394554}, {"choice_history": [55, 124, 221, 63, 103, "Acidmaw", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Acidmaw", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "Damaged", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Acidmaw(MinionCard):\n\n    def __init__(self):\n        super().__init__('Acidmaw', 7, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, effects=[Effect(CharacterDamaged(player=\n            BothPlayer()), ActionTag(Give(ChangeAttack(2)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.82012939453125e-05, -1.9073486328125e-06, -0.05198530852794647, -0.0001775018172338605, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -4.52994936495088e-06, -0.00019049644470214844, -5.841255187988281e-06, -7.62939453125e-06, -0.00011444091796875, 0.0, -6.079673767089844e-06, 0.0, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -1.2755388524965383e-05, -1.6689286894688848e-06, -3.814697265625e-06, -0.2300577163696289, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001239776611328125, -4.76837158203125e-05, 0.0, -7.62939453125e-06, -1.9073486328125e-06, 0.0, -3.62396240234375e-05, -4.29153169534402e-06, -2.3841855067985307e-07, -0.0008373260498046875, -1.52587890625e-05, -5.7220458984375e-06, -5.960462772236497e-07, -2.682209014892578e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.0021749110892415047, -1.5616398741258308e-05, -3.814697265625e-06, 0.0, -1.9073486328125e-05, -2.288818359375e-05, -7.867813110351562e-06, -5.841230449732393e-05, -0.4134817123413086, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, -2.2411135432776064e-05, -0.351662278175354, -2.3841855067985307e-07, -0.03125953674316406, -0.004230499267578125, 0.0, -4.398822784423828e-05, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001621246337890625, 0.0, -0.07714653015136719, 0.0, -2.3934688568115234, -3.0517578125e-05, -8.249255188275129e-05, -1.1920928244535389e-07, -0.00035088974982500076, -1.4305104514278355e-06, -0.30763864517211914, -2.622604142743512e-06, -0.0017414093017578125, -0.0004253387451171875, -0.04194831848144531, -9.5367431640625e-06, -0.0001125335693359375, -2.288818359375e-05, -5.7220458984375e-06, -0.002815007930621505, -8.463855920126662e-06, -1.9073486328125e-05, -0.06815433502197266, -0.01558685302734375, -0.0007038116455078125, -1.9073486328125e-06, -0.010652899742126465, -0.11148285865783691, -9.655950634623878e-06, -0.0009517669677734375, -0.000377655029296875, -3.62396240234375e-05, -0.021626830101013184, 0.0, -1.9073486328125e-06, -4.1961669921875e-05, -0.0016194581985473633, -1.9073486328125e-06, 0.0, -5.7220458984375e-05, -9.5367431640625e-06, -3.814697265625e-06, -7.62939453125e-06, -0.0006854534149169922, -0.000217437744140625, -2.0265579223632812e-06, -7.62939453125e-06, -0.9306392669677734, -0.0003566741943359375, -0.0001354217529296875, -1.9073486328125e-06, -0.0007650852203369141, -0.07290005683898926, 0.0, -0.1890641450881958, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.00013375282287597656, -1.3470649719238281e-05, 0.0], "model_output": {"body": [{"name": "Acidmaw", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Acidmaw", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "CharacterDamaged", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 2}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.339141167742007}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -22.873308181762695], "model_output": {"body": [], "_type": "Module"}, "score": -22.873315811157227}]}
{"gold_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -0.18158721923828125, -5.7220458984375e-06, -5.7220458984375e-06, -0.02519989013671875, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.5616407836205326e-05, -1.9073486328125e-06, -1.537799835205078e-05, -1.1920928244535389e-07, -0.0001087188720703125, -9.34600830078125e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.006789251638111e-06, -7.62939453125e-06, 0.0, -0.0005010152235627174, -8.82148651726311e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, -2.50339189733495e-06, -0.02007615566253662, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -0.00010823617776622996, -0.1459428071975708, -7.867813110351562e-06, -0.0001430511474609375, -2.86102294921875e-05, -2.586840491858311e-05, -4.172325134277344e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -4.38690185546875e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.3842860460281372, -7.867813110351562e-05, -0.3414897918701172, -0.00011444091796875, -0.13440656661987305, -7.366890349658206e-05, -0.0003092288679908961, -3.576278118089249e-07], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.2396729878683317}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -0.18158721923828125, -5.7220458984375e-06, -5.7220458984375e-06, -0.02519989013671875, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.5616407836205326e-05, -1.9073486328125e-06, -1.537799835205078e-05, -1.1920928244535389e-07, -0.0001087188720703125, -9.34600830078125e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.006789251638111e-06, -7.62939453125e-06, 0.0, -0.0005010152235627174, -8.82148651726311e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, -2.50339189733495e-06, -0.02007615566253662, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -0.00010823617776622996, -0.1459428071975708, -7.867813110351562e-06, -0.0001430511474609375, -2.86102294921875e-05, -2.586840491858311e-05, -4.172325134277344e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -4.38690185546875e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -0.3842860460281372, -7.867813110351562e-05, -1.2459716796875, -2.47955322265625e-05, -0.0006812810897827148, -9.536738616588991e-07, -4.565714334603399e-05, -3.576278118089249e-07, -0.00552976131439209, -3.576277322281385e-06, -0.000701904296875, -1.1444091796875e-05, -0.000377655029296875, -5.7220458984375e-06], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.0166337208711838}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -0.18158721923828125, -5.7220458984375e-06, -5.7220458984375e-06, -0.02519989013671875, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.5616407836205326e-05, -1.9073486328125e-06, -1.537799835205078e-05, -1.1920928244535389e-07, -0.0001087188720703125, -9.34600830078125e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.006789251638111e-06, -7.62939453125e-06, 0.0, -0.0005010152235627174, -8.82148651726311e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, -2.50339189733495e-06, -0.02007615566253662, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -0.00010823617776622996, -0.1459428071975708, -7.867813110351562e-06, -0.0001430511474609375, -2.86102294921875e-05, -2.586840491858311e-05, -4.172325134277344e-06, -4.1961669921875e-05, -5.7220458984375e-06, 0.0, -2.47955322265625e-05, -4.38690185546875e-05, -1.52587890625e-05, 0.0, -3.814697265625e-06, 0.0, -1.33514404296875e-05, 0.0, -1.2410184144973755, -0.0006066560745239258, -0.3207387924194336, -0.0001068115234375, -0.0953974723815918, -0.00011586515029193833, -0.00038444995880126953, -7.152555099310121e-07], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.037283386162798}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -0.2681245803833008, -2.2649765014648438e-06, -0.0060231685638427734, -6.079673767089844e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.576278118089249e-07, -0.5825214385986328, -9.739398956298828e-05, -0.2308664321899414, -0.0001888275146484375, -0.10190916061401367, -0.0001283804012928158, -0.0006711483001708984, -1.4305104514278355e-06], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 3, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.004023062692255}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Boar", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -0.18158721923828125, -5.7220458984375e-06, -5.7220458984375e-06, -0.02519989013671875, -5.14984130859375e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.5616407836205326e-05, -1.9073486328125e-06, -1.537799835205078e-05, -1.1920928244535389e-07, -0.0001087188720703125, -9.34600830078125e-05, -1.9073486328125e-06, -1.1920928244535389e-07, -5.006789251638111e-06, -7.62939453125e-06, 0.0, -0.0005010152235627174, -8.82148651726311e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, -2.50339189733495e-06, -0.02007615566253662, 0.0, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -2.288818359375e-05, -0.00010823617776622996, -2.0492095947265625, -9.059892363438848e-06, -2.86102294921875e-05, -1.52587890625e-05, -1.823901038733311e-05, -4.0531158447265625e-06, -4.1961669921875e-05, -3.814697265625e-06, 0.0, -6.103515625e-05, -3.62396240234375e-05, -4.38690185546875e-05, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.41305744647979736, -9.965896606445312e-05, -0.1839466094970703, -0.000110626220703125, -0.12497663497924805, -6.162952922750264e-05, -0.0003015994734596461, -3.576278118089249e-07], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Boar", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0046546160829593}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -0.2681245803833008, -2.2649765014648438e-06, -0.0060231685638427734, -6.079673767089844e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.576278118089249e-07, -0.9842510223388672, -8.106231689453125e-06, -0.026389122009277344, -1.52587890625e-05, -0.0008147954940795898, -3.2186455882765586e-06, -0.0006556510925292969, -7.152555099310121e-07, -0.023947954177856445, -6.318072337307967e-06, -0.00028228759765625, -4.57763671875e-05, -0.000598907470703125, -3.814697265625e-06], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 3, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.1246617988131504}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -1.477457046508789, -2.0265579223632812e-06, -0.0005683888448402286, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -4.768370445162873e-07, -0.38114070892333984, -0.00014317035675048828, -0.23779582977294922, -0.0002002716064453125, -0.11473965644836426, -0.00011634171823970973, -0.0006806850433349609, -1.4305104514278355e-06], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.026311385548382}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -0.2681245803833008, -2.2649765014648438e-06, -0.0060231685638427734, -6.079673767089844e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.576278118089249e-07, -0.5825214385986328, -9.739398956298828e-05, -1.6079769134521484, -1.1444091796875e-05, -0.0007377862930297852, -1.07287787614041e-05, -0.0003743171691894531, -1.311301275563892e-06, -0.028856152668595314, -1.3351351299206726e-05, -0.000453948974609375, -5.91278076171875e-05, -0.0006084442138671875, -3.814697265625e-06], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 3, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.309365023961192}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -1.477457046508789, -2.0265579223632812e-06, -0.0005683888448402286, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -4.768370445162873e-07, -1.3897705078125, -1.1920928955078125e-05, -0.02858257293701172, -1.52587890625e-05, -0.0007860660552978516, -3.576272320060525e-06, -0.0007395744323730469, -7.152555099310121e-07, -0.026047706604003906, -6.198863957251888e-06, -0.000286102294921875, -4.38690185546875e-05, -0.00061798095703125, -3.814697265625e-06], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.738409156087272}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -0.2681245803833008, -2.2649765014648438e-06, -0.0060231685638427734, -6.079673767089844e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.576278118089249e-07, -3.0665388107299805, -0.00030934810638427734, -0.031536102294921875, -5.91278076171875e-05, -0.08840322494506836, -6.770870822947472e-05, -0.0006406307220458984, -7.152555099310121e-07], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 3, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.275194519143298}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "Boar", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(0, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -0.2681245803833008, -2.2649765014648438e-06, -0.0060231685638427734, -6.079673767089844e-06, -3.814697265625e-06, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -3.62396240234375e-05, -3.576278118089249e-07, -0.5825214385986328, -9.739398956298828e-05, -0.2308664321899414, -0.0001888275146484375, -2.835357189178467, -0.0018917479319497943, -0.0017216205596923828, -4.768370445162873e-07], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 3, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 0, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.74028397737348}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Boar", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -0.004169464111328125, -3.814697265625e-06, -1.3709068298339844e-05, -1.9073486328125e-06, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -4.374934724182822e-05, -1.5497195136049413e-06, -4.00543212890625e-05, -1.8021163940429688, -0.0017108917236328125, -8.40390202938579e-05, -0.004760861396789551, -1.2636124665732495e-05, -2.3841855067985307e-07, -1.477457046508789, -2.0265579223632812e-06, -0.0005683888448402286, -3.933906555175781e-06, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -4.768370445162873e-07, -3.094792366027832, -0.0006049871444702148, -0.032779693603515625, -6.29425048828125e-05, -0.1005547046661377, -6.35366523056291e-05, -0.0006577968597412109, -7.152555099310121e-07], "model_output": {"body": [{"name": "Boar", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.521010033882902}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "2", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 2, charge=True)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -6.492609024047852, -0.001522064208984375, -0.0015237637562677264, -0.00022745132446289062, -1.7166108591482043e-05, -1.2993750715395436e-05, -2.944469451904297e-05, -2.3841855067985307e-07, -0.48665428161621094, -5.7220458984375e-06, -0.007353662978857756, -9.536738616588991e-07, -0.00016713063814677298, 0.0, -0.004554629325866699, -1.1920928244535389e-07, -0.00030517578125, -5.7220458984375e-06, -9.1552734375e-05, -1.9073486328125e-05], "model_output": {"body": [{"name": "Boar", "body": [{"hole1": 3, "hole0": "Boar", "_type": "Template6", "hole2": "ALL"}, {"hole1": 2, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.995539336513922}, {"choice_history": [55, 124, 221, 63, 103, "Boar", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Boar", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "4", "<EOS>", "2", "<EOS>"], "inferred_code": "class Boar(MinionCard):\n\n    def __init__(self):\n        super().__init__('Boar', 3, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(4, 2)\n", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -7.2479248046875e-05, -3.62396240234375e-05, -1.1444091796875e-05, -2.6225699912174605e-05, -5.614756446448155e-05, -7.62939453125e-06, -0.0001277923583984375, 0.0, -3.814697265625e-06, -7.450580596923828e-05, -1.9073486328125e-06, -1.1444091796875e-05, -6.021685600280762, -4.38690185546875e-05, -5.006777428206988e-06, -0.00021374225616455078, -2.6702564355218783e-05, 0.0, -1.1920928955078125e-05, -1.9073486328125e-06, -2.0742354536196217e-05, -2.777575355139561e-05, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.311301275563892e-06, -0.2057880163192749, -0.00024831295013427734, -0.6463785171508789, -0.0003662109375, -0.1900482177734375, -8.320478082168847e-05, -0.0005279779434204102, -1.4305104514278355e-06], "model_output": {"body": [{"name": "Boar", "body": [{"_type": "Template3", "hole0": "Boar", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 2, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.06594252180173}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -7.62939453125e-06, -20.13277244567871], "model_output": {"body": [], "_type": "Module"}, "score": -20.132781982421875}]}
{"gold_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, choices=[\n            Choice(AttackMode(), Give([Buff(ChangeAttack(1))]),\n            SelfSelector()), Choice(TankMode(), Give([Buff(ChangeHealth(1))\n            ]), SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(2, 2, taunt=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Mech", "Robo", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MechRobo())), PlayerSelector()])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.9231023788452148, -0.0002269744873046875, -1.71661376953125e-05, -5.7220458984375e-06, -0.0014007091522216797, -3.8743019104003906e-05, -1.9073486328125e-06, -0.0062084197998046875, -0.03508472442626953, -3.814697265625e-06, -0.011918202973902225, -1.3980052471160889, -0.032102979719638824, -0.7329511642456055, -3.814697265625e-06, -0.06397771835327148, -8.51140430313535e-05, -4.768360213347478e-06], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"hole0": "MechRobo", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.729675581975641}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Give(Attack()), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.5086898803710938, -1.9073486328125e-06, -0.3554343581199646, -2.9802242352161556e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5078351497650146, -0.00015866756439208984, -0.09580230712890625, -0.000339508056640625, -2.09808349609375e-05, -0.008228691294789314, -0.02829575352370739, -0.034743309020996094, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -0.42560768127441406, -0.0026743412017822266, -5.7220458984375e-06, -0.23291015625, -7.62939453125e-06, -0.20619165897369385, -0.12096120417118073, -0.00022125244140625, -1.9073486328125e-06, -0.7462427020072937, -0.0010703300358727574, -1.1920922133867862e-06], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.8003536396301385}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Mech", "Robo", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MechRobo())), PlayerSelector()])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.7206283807754517, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -7.152555099310121e-07, -0.00023317337036132812, -2.0265579223632812e-06, -1.9073486328125e-06, -0.02796173095703125, -0.00058746337890625, -0.0002786730183288455, -7.450579869328067e-05, -0.0011005401611328125, -0.00010693073272705078, -3.075599670410156e-05, -5.841255187988281e-06, -0.0014289619866758585, 0.0, -0.4798107147216797, 0.0, -0.03392684459686279, -1.4424267646973021e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.5060338973999023, -2.1457672119140625e-06, -0.042934417724609375, -7.62939453125e-06, -4.947063644067384e-05, -5.006777428206988e-06, -0.00022911050473339856, -8.344646857949556e-07, -0.015592455863952637, -1.204010459332494e-05, -0.0025997161865234375, -4.1961669921875e-05, -0.06944465637207031, -3.814697265625e-06, -3.814697265625e-06, -0.0004730224609375, -3.814697265625e-06, -0.013409852981567383, -5.960462772236497e-07, -0.0001735687255859375, -0.034415245056152344, -0.000698089599609375, -0.047124624252319336, -5.2928924560546875e-05, -0.9400472640991211, -0.000225067138671875, -1.9073486328125e-05, -5.7220458984375e-06, -0.0013359785079956055, -3.8743019104003906e-05, -1.9073486328125e-06, -0.0059680938720703125, -0.03658866882324219, -3.814697265625e-06, -0.011862427927553654, -1.3953087329864502, -0.03223925828933716, -0.7530393600463867, -5.7220458984375e-06, -0.06478726863861084, -8.5471649072133e-05, -4.6491513785440475e-06], "model_output": {"body": [{"name": "Anodized<UNK>Cub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"hole0": "MechRobo", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.8752011709859175}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Give(Attack()), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.7206283807754517, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -7.152555099310121e-07, -0.00023317337036132812, -2.0265579223632812e-06, -1.9073486328125e-06, -0.02796173095703125, -0.00058746337890625, -0.0002786730183288455, -7.450579869328067e-05, -0.0011005401611328125, -0.00010693073272705078, -3.075599670410156e-05, -5.841255187988281e-06, -0.0014289619866758585, 0.0, -0.4798107147216797, 0.0, -0.03392684459686279, -1.4424267646973021e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.5060338973999023, -2.1457672119140625e-06, -0.042934417724609375, -7.62939453125e-06, -4.947063644067384e-05, -5.006777428206988e-06, -0.00022911050473339856, -8.344646857949556e-07, -0.015592455863952637, -1.204010459332494e-05, -0.0025997161865234375, -4.1961669921875e-05, -0.06944465637207031, -3.814697265625e-06, -3.814697265625e-06, -0.0004730224609375, -3.814697265625e-06, -0.013409852981567383, -5.960462772236497e-07, -0.0001735687255859375, -0.034415245056152344, -0.000698089599609375, -0.047124624252319336, -5.2928924560546875e-05, -0.49764442443847656, -1.9073486328125e-06, -0.3649212121963501, -3.1590381695423275e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5140044689178467, -0.00015676021575927734, -0.0960235595703125, -0.0003414154052734375, -2.09808349609375e-05, -0.008211172185838223, -0.028397439047694206, -0.034908294677734375, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -0.40364372730255127, -0.0025599002838134766, -5.7220458984375e-06, -0.23791885375976562, -7.62939453125e-06, -0.20633602142333984, -0.12109393626451492, -0.000225067138671875, -1.9073486328125e-06, -0.7464227676391602, -0.0010796188144013286, -1.1920922133867862e-06], "model_output": {"body": [{"name": "Anodized<UNK>Cub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.897935050555525}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "Robo", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Mech", "Robo", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class AnodizedRoboCubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MechRobo())), PlayerSelector()])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.7822037935256958, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.9231023788452148, -0.0002269744873046875, -1.71661376953125e-05, -5.7220458984375e-06, -0.0014007091522216797, -3.8743019104003906e-05, -1.9073486328125e-06, -0.0062084197998046875, -0.03508472442626953, -3.814697265625e-06, -0.011918202973902225, -1.3980052471160889, -0.032102979719638824, -0.7329511642456055, -3.814697265625e-06, -0.06397771835327148, -8.51140430313535e-05, -4.768360213347478e-06], "model_output": {"body": [{"name": "AnodizedRoboCubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"hole0": "MechRobo", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.898282101674738}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "Robo", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AnodizedRoboCubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Give(Attack()), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.7822037935256958, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.5086898803710938, -1.9073486328125e-06, -0.3554343581199646, -2.9802242352161556e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5078351497650146, -0.00015866756439208984, -0.09580230712890625, -0.000339508056640625, -2.09808349609375e-05, -0.008228691294789314, -0.02829575352370739, -0.034743309020996094, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -0.42560768127441406, -0.0026743412017822266, -5.7220458984375e-06, -0.23291015625, -7.62939453125e-06, -0.20619165897369385, -0.12096120417118073, -0.00022125244140625, -1.9073486328125e-06, -0.7462427020072937, -0.0010703300358727574, -1.1920922133867862e-06], "model_output": {"body": [{"name": "AnodizedRoboCubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.968960159329235}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "Robo", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AnodizedRoboCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Give(Attack()), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.7822037935256958, -0.010688869282603264, -0.7206283807754517, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -7.152555099310121e-07, -0.00023317337036132812, -2.0265579223632812e-06, -1.9073486328125e-06, -0.02796173095703125, -0.00058746337890625, -0.0002786730183288455, -7.450579869328067e-05, -0.0011005401611328125, -0.00010693073272705078, -3.075599670410156e-05, -5.841255187988281e-06, -0.0014289619866758585, 0.0, -0.4798107147216797, 0.0, -0.03392684459686279, -1.4424267646973021e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.5060338973999023, -2.1457672119140625e-06, -0.042934417724609375, -7.62939453125e-06, -4.947063644067384e-05, -5.006777428206988e-06, -0.00022911050473339856, -8.344646857949556e-07, -0.015592455863952637, -1.204010459332494e-05, -0.0025997161865234375, -4.1961669921875e-05, -0.06944465637207031, -3.814697265625e-06, -3.814697265625e-06, -0.0004730224609375, -3.814697265625e-06, -0.013409852981567383, -5.960462772236497e-07, -0.0001735687255859375, -0.034415245056152344, -0.000698089599609375, -0.047124624252319336, -5.2928924560546875e-05, -0.49764442443847656, -1.9073486328125e-06, -0.3649212121963501, -3.1590381695423275e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5140044689178467, -0.00015676021575927734, -0.0960235595703125, -0.0003414154052734375, -2.09808349609375e-05, -0.008211172185838223, -0.028397439047694206, -0.034908294677734375, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -0.40364372730255127, -0.0025599002838134766, -5.7220458984375e-06, -0.23791885375976562, -7.62939453125e-06, -0.20633602142333984, -0.12109393626451492, -0.000225067138671875, -1.9073486328125e-06, -0.7464227676391602, -0.0010796188144013286, -1.1920922133867862e-06], "model_output": {"body": [{"name": "AnodizedRoboCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.066541570254621}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 208, 43, 163, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Give([Buff(ChangeAttack(2))]), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.5086898803710938, -1.9073486328125e-06, -0.3554343581199646, -2.9802242352161556e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5078351497650146, -0.00015866756439208984, -0.09580230712890625, -0.000339508056640625, -2.09808349609375e-05, -0.008228691294789314, -0.02829575352370739, -0.034743309020996094, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -0.42560768127441406, -0.0026743412017822266, -5.7220458984375e-06, -1.6286754608154297, -0.0004367828369140625, -0.23753070831298828, -0.036754608154296875, -0.0003261566162109375, -0.001346725970506668, -6.318092346191406e-06, -0.002056121826171875, -1.1444091796875e-05, -0.08986493200063705, -0.0003403420269023627, 0.0], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"elts": [{"hole0": 2, "_type": "Template28"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.490095207659515}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Heal(2), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.5086898803710938, -1.9073486328125e-06, -0.3554343581199646, -2.9802242352161556e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5078351497650146, -0.00015866756439208984, -0.09580230712890625, -0.000339508056640625, -2.09808349609375e-05, -0.008228691294789314, -0.02829575352370739, -0.034743309020996094, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -1.5535316467285156, -0.001566477818414569, -7.62939453125e-06, -0.0064258575439453125, -0.00138092041015625, -0.11919152736663818, -0.00024545189808122814, -3.814697265625e-06, -3.814697265625e-06, -0.9339694976806641, -0.0008553266525268555, 0.0], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.681639827281224}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>Cub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Heal(2), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.7206283807754517, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -7.152555099310121e-07, -0.00023317337036132812, -2.0265579223632812e-06, -1.9073486328125e-06, -0.02796173095703125, -0.00058746337890625, -0.0002786730183288455, -7.450579869328067e-05, -0.0011005401611328125, -0.00010693073272705078, -3.075599670410156e-05, -5.841255187988281e-06, -0.0014289619866758585, 0.0, -0.4798107147216797, 0.0, -0.03392684459686279, -1.4424267646973021e-05, -1.71661376953125e-05, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.5060338973999023, -2.1457672119140625e-06, -0.042934417724609375, -7.62939453125e-06, -4.947063644067384e-05, -5.006777428206988e-06, -0.00022911050473339856, -8.344646857949556e-07, -0.015592455863952637, -1.204010459332494e-05, -0.0025997161865234375, -4.1961669921875e-05, -0.06944465637207031, -3.814697265625e-06, -3.814697265625e-06, -0.0004730224609375, -3.814697265625e-06, -0.013409852981567383, -5.960462772236497e-07, -0.0001735687255859375, -0.034415245056152344, -0.000698089599609375, -0.047124624252319336, -5.2928924560546875e-05, -0.49764442443847656, -1.9073486328125e-06, -0.3649212121963501, -3.1590381695423275e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5140044689178467, -0.00015676021575927734, -0.0960235595703125, -0.0003414154052734375, -2.09808349609375e-05, -0.008211172185838223, -0.028397439047694206, -0.034908294677734375, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -1.5790654420852661, -0.0015722004463896155, -7.62939453125e-06, -0.006397247314453125, -0.0014362335205078125, -0.1200266033411026, -0.000247716874582693, -3.814697265625e-06, -3.814697265625e-06, -0.9279513359069824, -0.0008704662322998047, 0.0], "model_output": {"body": [{"name": "Anodized<UNK>Cub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.816221211558677}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "Robo", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AnodizedRoboCubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Heal(2), SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.7822037935256958, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.5086898803710938, -1.9073486328125e-06, -0.3554343581199646, -2.9802242352161556e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5078351497650146, -0.00015866756439208984, -0.09580230712890625, -0.000339508056640625, -2.09808349609375e-05, -0.008228691294789314, -0.02829575352370739, -0.034743309020996094, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -1.5535316467285156, -0.001566477818414569, -7.62939453125e-06, -0.0064258575439453125, -0.00138092041015625, -0.11919152736663818, -0.00024545189808122814, -3.814697265625e-06, -3.814697265625e-06, -0.9339694976806641, -0.0008553266525268555, 0.0], "model_output": {"body": [{"name": "AnodizedRoboCubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.85024634698032}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Mech", "Robo", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 208, 43, 163, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MechRobo())), Choice(Attack(), Give([Buff(ChangeAttack(2))]),\n            SelfSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.9231023788452148, -0.0002269744873046875, -1.71661376953125e-05, -5.7220458984375e-06, -0.0014007091522216797, -3.8743019104003906e-05, -1.9073486328125e-06, -0.0062084197998046875, -0.03508472442626953, -3.814697265625e-06, -0.011918202973902225, -1.3980052471160889, -0.032102979719638824, -0.6557102203369141, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -0.02568840980529785, -0.00017178058624267578, -0.00205230712890625, -0.0019960403442382812, -0.0013484954833984375, -0.0146619388833642, -0.016154048964381218, -0.6590576171875, -0.0002193450927734375, -1.52587890625e-05, 0.0, -0.04329323768615723, -0.0024585723876953125, -3.814697265625e-06, -0.5311641693115234, -0.0003147125244140625, -0.1172952651977539, -0.028923988342285156, -0.0002422332763671875, -0.00046994350850582123, -1.0132789611816406e-05, -0.0015087127685546875, -1.33514404296875e-05, -0.14518988132476807, -0.0004974600742571056, 0.0], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"hole0": "MechRobo", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"elts": [{"hole0": 2, "_type": "Template28"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.181209307639563}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 49, 174, "Mech", "Robo", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), SelfSelector()),\n            Choice(Attack(), Give(Attack()), MechRobo())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.5086898803710938, -1.9073486328125e-06, -0.3554343581199646, -2.9802242352161556e-05, -1.1920928244535389e-07, -7.62939453125e-06, -1.1444091796875e-05, -7.62939453125e-06, 0.0, -0.5078351497650146, -0.00015866756439208984, -0.09580230712890625, -0.000339508056640625, -2.09808349609375e-05, -0.008228691294789314, -0.02829575352370739, -0.034743309020996094, -0.0003032684326171875, -1.1444091796875e-05, 0.0, -0.42560768127441406, -0.0026743412017822266, -5.7220458984375e-06, -0.23291015625, -7.62939453125e-06, -0.20619165897369385, -0.12096120417118073, -0.00022125244140625, -1.9073486328125e-06, -0.8711262345314026, -1.4528659582138062, -0.4858012795448303], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "MechRobo", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.862832887784798}, {"choice_history": [55, 124, 221, 63, 103, "Anodized", "<UNK>", "Cub", "Cub", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Anodized", " ", "Robo", " ", "Cub", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "2", "<EOS>", "2", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Mech", "Robo", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 208, 43, 163, "2", "<EOS>", 49, 174, "Target", "Selector", "<EOS>"], "inferred_code": "class Anodized<UNK>CubCub(MinionCard):\n\n    def __init__(self):\n        super().__init__('Anodized Robo Cub', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 2, auras=[Aura(ChangeAttack(1), MinionSelector(\n            MechRobo())), Choice(Attack(), Give([Buff(ChangeAttack(2))]),\n            TargetSelector())])\n", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.009658393450081348, -0.6135972738265991, -0.010688869282603264, -0.6666113138198853, -0.03173309192061424, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.536738616588991e-07, -0.00019681453704833984, -2.0265579223632812e-06, -1.9073486328125e-06, -0.030527114868164062, -0.00080108642578125, -0.00038104093982838094, -4.374980926513672e-05, -0.0014171600341796875, -3.62396240234375e-05, -0.0006315708160400391, -0.001922607421875, -0.0013570787850767374, 0.0, -0.46998560428619385, 0.0, -0.04162406921386719, -1.561634780955501e-05, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -1.1444091796875e-05, 0.0, -0.4008808135986328, -2.1457672119140625e-06, -0.05648040771484375, -9.5367431640625e-06, -4.696736141340807e-05, -4.887569048150908e-06, -0.00023244813201017678, -8.344646857949556e-07, -0.015986084938049316, -1.1801687833212782e-05, -0.00262451171875, -4.1961669921875e-05, -0.07015037536621094, -3.814697265625e-06, -3.814697265625e-06, -0.00051116943359375, -3.814697265625e-06, -0.013410806655883789, -5.960462772236497e-07, -0.0001735687255859375, -0.03440380096435547, -0.00070953369140625, -0.04738032817840576, -5.2928924560546875e-05, -0.9231023788452148, -0.0002269744873046875, -1.71661376953125e-05, -5.7220458984375e-06, -0.0014007091522216797, -3.8743019104003906e-05, -1.9073486328125e-06, -0.0062084197998046875, -0.03508472442626953, -3.814697265625e-06, -0.011918202973902225, -1.3980052471160889, -0.032102979719638824, -0.6557102203369141, -8.0108642578125e-05, -1.52587890625e-05, 0.0, -0.02568840980529785, -0.00017178058624267578, -0.00205230712890625, -0.0019960403442382812, -0.0013484954833984375, -0.0146619388833642, -0.016154048964381218, -0.6590576171875, -0.0002193450927734375, -1.52587890625e-05, 0.0, -0.04329323768615723, -0.0024585723876953125, -3.814697265625e-06, -0.5311641693115234, -0.0003147125244140625, -0.1172952651977539, -0.028923988342285156, -0.0002422332763671875, -0.00046994350850582123, -1.0132789611816406e-05, -0.0015087127685546875, -1.33514404296875e-05, -2.5226778984069824, -0.0029955944046378136, 0.0], "model_output": {"body": [{"name": "Anodized<UNK>CubCub", "body": [{"_type": "Template3", "hole0": "Anodized Robo Cub", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 2, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 2, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"hole0": "MechRobo", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"elts": [{"hole0": 2, "_type": "Template28"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "TargetSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.561195459052158}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -3.0517578125e-05, -20.920413970947266], "model_output": {"body": [], "_type": "Module"}, "score": -20.920446395874023}]}
{"gold_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, False, effects=[Effect(Drawn(), ActionTag(\n            Damage(10), HeroSelector())), Effect(Drawn(), ActionTag(Discard\n            (query=CardQuery(source=CARD_SOURCE.LAST_DRAWN)),\n            PlayerSelector())), Effect(Drawn(), ActionTag(Draw(),\n            PlayerSelector()))])\n\n    def use(self, player, game):\n        super().use(player, game)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.5887784957885742, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -9.536738616588991e-07, -0.09362411499023438, -1.9073486328125e-06, -0.0001010894775390625, -4.9591064453125e-05, 0.0, -0.0004024505615234375, -2.0265579223632812e-06, -0.000301361083984375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.71661376953125e-05, -7.62939453125e-05, 0.0, -0.5670309066772461, -3.4332275390625e-05, -0.0063953399658203125, -3.814697265625e-06, -1.919269561767578e-05, 0.0, -0.000415802001953125, -2.6702880859375e-05, -3.814697265625e-06, -1.0848039892152883e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.537799835205078e-05, -6.079673767089844e-06, -0.017256736755371094, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.27027034759521484, -5.7220458984375e-06, -0.009914398193359375, -0.004009246826171875, -3.814697265625e-06, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00042724609375, 0.0, -0.0013905763626098633, -1.1920928244535389e-07, -1.2993798009119928e-05, -1.9073486328125e-06, -0.05623340606689453, 0.0, -0.0005855560302734375, -0.021872520446777344, 0.0, -0.009306907653808594, 0.0, -0.02136993408203125, -3.814697265625e-06, -0.015951156616210938, -0.06291961669921875, -8.392333984375e-05, -1.52587890625e-05, -0.5334024429321289, 0.0, -0.16837024688720703, 0.0, -0.023493170738220215, -5.7220458984375e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.5993863507393797}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.9873027801513672, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.576278118089249e-07, -0.029839515686035156, -1.9073486328125e-06, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -0.000438690185546875, 0.0, -0.000274658203125, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-05, -6.866455078125e-05, 0.0, -0.5351829528808594, -3.24249267578125e-05, -0.00647735595703125, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.00041961669921875, -2.6702880859375e-05, -3.814697265625e-06, -1.0848039892152883e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.537799835205078e-05, -6.079673767089844e-06, -0.017525672912597656, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.27056026458740234, -5.7220458984375e-06, -0.009901046752929688, -0.0040073394775390625, -3.814697265625e-06, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00042724609375, 0.0, -0.0013867616653442383, -1.1920928244535389e-07, -1.2993798009119928e-05, -1.9073486328125e-06, -0.056186676025390625, 0.0, -0.0005855560302734375, -0.021900177001953125, 0.0, -0.009305000305175781, 0.0, -0.021409034729003906, -3.814697265625e-06, -0.01600360870361328, -0.06285476684570312, -8.392333984375e-05, -1.52587890625e-05, -0.5323829650878906, 0.0, -0.168487548828125, 0.0, -0.023490309715270996, -5.7220458984375e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.901938812363923}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.5887784957885742, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -9.536738616588991e-07, -0.09362411499023438, -1.9073486328125e-06, -0.0001010894775390625, -4.9591064453125e-05, 0.0, -0.0004024505615234375, -2.0265579223632812e-06, -0.000301361083984375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.71661376953125e-05, -7.62939453125e-05, 0.0, -1.3285579681396484, -2.682209014892578e-05, -0.004425048828125, -3.814697265625e-06, -1.919269561767578e-05, 0.0, -0.00012969970703125, -4.00543212890625e-05, -1.9073486328125e-06, -6.43729799776338e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -6.079673767089844e-06, -0.018007278442382812, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.208087921142578e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.25737953186035156, -5.7220458984375e-06, -0.009850502014160156, -0.003971099853515625, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.0004253387451171875, 0.0, -0.0013695955276489258, -1.1920928244535389e-07, -1.3351424058782868e-05, -1.9073486328125e-06, -0.055800437927246094, 0.0, -0.0005855560302734375, -0.02213764190673828, 0.0, -0.009316444396972656, 0.0, -0.0213623046875, -3.814697265625e-06, -0.016229629516601562, -0.06148719787597656, -8.58306884765625e-05, -1.52587890625e-05, -0.5186328887939453, 0.0, -0.1718597412109375, 0.0, -0.02342355251312256, -5.7220458984375e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.333716289627951}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.5887784957885742, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -9.536738616588991e-07, -0.09362411499023438, -1.9073486328125e-06, -0.0001010894775390625, -4.9591064453125e-05, 0.0, -0.0004024505615234375, -2.0265579223632812e-06, -0.000301361083984375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.71661376953125e-05, -7.62939453125e-05, 0.0, -0.5670309066772461, -3.4332275390625e-05, -0.0063953399658203125, -3.814697265625e-06, -1.919269561767578e-05, 0.0, -0.000415802001953125, -2.6702880859375e-05, -3.814697265625e-06, -1.0848039892152883e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.537799835205078e-05, -6.079673767089844e-06, -0.017256736755371094, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.27027034759521484, -5.7220458984375e-06, -0.009914398193359375, -0.004009246826171875, -3.814697265625e-06, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00042724609375, 0.0, -0.0013905763626098633, -1.1920928244535389e-07, -1.2993798009119928e-05, -1.9073486328125e-06, -0.05623340606689453, 0.0, -0.0005855560302734375, -0.021872520446777344, 0.0, -0.009306907653808594, 0.0, -0.02136993408203125, -3.814697265625e-06, -0.015951156616210938, -0.06291961669921875, -8.392333984375e-05, -1.52587890625e-05, -0.9636735916137695, 0.0, -0.000278472900390625, -1.9073486328125e-06, -0.2694225311279297, -2.3841855067985307e-07, -2.706041414057836e-05, -1.9073486328125e-06, -0.31542086601257324, -7.867813110351562e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.4229492111336555}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.9873027801513672, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.576278118089249e-07, -0.029839515686035156, -1.9073486328125e-06, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -0.000438690185546875, 0.0, -0.000274658203125, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-05, -6.866455078125e-05, 0.0, -1.3776607513427734, -2.872943878173828e-05, -0.0038623809814453125, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0001392364501953125, -4.00543212890625e-05, -1.9073486328125e-06, -6.43729799776338e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -6.079673767089844e-06, -0.018413543701171875, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.017353057861328e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.2584505081176758, -5.7220458984375e-06, -0.009819984436035156, -0.00396728515625, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.0004253387451171875, 0.0, -0.0013638734817504883, -1.1920928244535389e-07, -1.3351424058782868e-05, -1.9073486328125e-06, -0.05574226379394531, 0.0, -0.0005855560302734375, -0.02219104766845703, 0.0, -0.009312629699707031, 0.0, -0.02145862579345703, -3.814697265625e-06, -0.016284942626953125, -0.06131935119628906, -8.58306884765625e-05, -1.52587890625e-05, -0.5171098709106445, 0.0, -0.17226219177246094, 0.0, -0.023424506187438965, -5.7220458984375e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.717238561738334}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.9873027801513672, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.576278118089249e-07, -0.029839515686035156, -1.9073486328125e-06, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -0.000438690185546875, 0.0, -0.000274658203125, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-05, -6.866455078125e-05, 0.0, -0.5351829528808594, -3.24249267578125e-05, -0.00647735595703125, -1.9073486328125e-06, -1.728534698486328e-05, 0.0, -0.00041961669921875, -2.6702880859375e-05, -3.814697265625e-06, -1.0848039892152883e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.537799835205078e-05, -6.079673767089844e-06, -0.017525672912597656, -2.288818359375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.27056026458740234, -5.7220458984375e-06, -0.009901046752929688, -0.0040073394775390625, -3.814697265625e-06, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00042724609375, 0.0, -0.0013867616653442383, -1.1920928244535389e-07, -1.2993798009119928e-05, -1.9073486328125e-06, -0.056186676025390625, 0.0, -0.0005855560302734375, -0.021900177001953125, 0.0, -0.009305000305175781, 0.0, -0.021409034729003906, -3.814697265625e-06, -0.01600360870361328, -0.06285476684570312, -8.392333984375e-05, -1.52587890625e-05, -0.9652671813964844, 0.0, -0.0002765655517578125, -1.9073486328125e-06, -0.2698488235473633, -2.3841855067985307e-07, -2.706041414057836e-05, -1.9073486328125e-06, -0.31534361839294434, -7.867813110351562e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.728347436918355}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.5887784957885742, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -9.536738616588991e-07, -0.09362411499023438, -1.9073486328125e-06, -0.0001010894775390625, -4.9591064453125e-05, 0.0, -0.0004024505615234375, -2.0265579223632812e-06, -0.000301361083984375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.71661376953125e-05, -7.62939453125e-05, 0.0, -1.3285579681396484, -2.682209014892578e-05, -0.004425048828125, -3.814697265625e-06, -1.919269561767578e-05, 0.0, -0.00012969970703125, -4.00543212890625e-05, -1.9073486328125e-06, -6.43729799776338e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -6.079673767089844e-06, -0.018007278442382812, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.208087921142578e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.25737953186035156, -5.7220458984375e-06, -0.009850502014160156, -0.003971099853515625, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.0004253387451171875, 0.0, -0.0013695955276489258, -1.1920928244535389e-07, -1.3351424058782868e-05, -1.9073486328125e-06, -0.055800437927246094, 0.0, -0.0005855560302734375, -0.02213764190673828, 0.0, -0.009316444396972656, 0.0, -0.0213623046875, -3.814697265625e-06, -0.016229629516601562, -0.06148719787597656, -8.58306884765625e-05, -1.52587890625e-05, -0.9881429672241211, 0.0, -0.0002651214599609375, -3.814697265625e-06, -0.2738456726074219, -2.3841855067985307e-07, -2.717962343012914e-05, -1.9073486328125e-06, -0.31497931480407715, -7.867813110351562e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.197068469060618}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        player.draw()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.5887784957885742, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -3.814697265625e-06, -9.536738616588991e-07, -0.09362411499023438, -1.9073486328125e-06, -0.0001010894775390625, -4.9591064453125e-05, 0.0, -0.0004024505615234375, -2.0265579223632812e-06, -0.000301361083984375, -7.62939453125e-06, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -5.7220458984375e-05, -1.71661376953125e-05, -7.62939453125e-05, 0.0, -0.5670309066772461, -3.4332275390625e-05, -0.0063953399658203125, -3.814697265625e-06, -1.919269561767578e-05, 0.0, -0.000415802001953125, -2.6702880859375e-05, -3.814697265625e-06, -1.0848039892152883e-05, -2.3841855067985307e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.537799835205078e-05, -6.079673767089844e-06, -0.017256736755371094, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.398822784423828e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.27027034759521484, -5.7220458984375e-06, -0.009914398193359375, -0.004009246826171875, -3.814697265625e-06, -1.9073486328125e-06, -7.43865966796875e-05, 0.0, -0.00042724609375, 0.0, -0.0013905763626098633, -1.1920928244535389e-07, -1.2993798009119928e-05, -1.9073486328125e-06, -0.05623340606689453, 0.0, -0.0005855560302734375, -0.021872520446777344, 0.0, -0.009306907653808594, 0.0, -0.02136993408203125, -3.814697265625e-06, -0.015951156616210938, -0.06291961669921875, -8.392333984375e-05, -1.52587890625e-05, -0.5334024429321289, 0.0, -1.9591093063354492, -2.3841855067985307e-07, -0.00933813862502575, -9.5367431640625e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.375974431190244}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Burrowing", " ", "Mine", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_friendly_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_friendly_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.<UNK>()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -0.11781787872314453, -1.9073486328125e-06, -8.463837730232626e-06, -2.1457672119140625e-06, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -4.005379742011428e-05, -1.9073486328125e-06, -0.0002117156982421875, -3.814697265625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.002429962158203125, -3.814697265625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.218649908376392e-06, -7.62939453125e-06, -3.826618194580078e-05, 0.0, -0.0015239715576171875, -2.86102294921875e-05, -4.76837158203125e-05, -2.622600959512056e-06, -2.872943878173828e-05, -4.12456392950844e-05, -5.7220458984375e-06, -6.866455078125e-05, 0.0, -1.3112934539094567e-05, -2.3841855067985307e-07, -7.62939453125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -2.1457672119140625e-06, -0.00022518634796142578, -0.9873027801513672, 0.0, 0.0, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -1.33514404296875e-05, -3.576278118089249e-07, -0.029839515686035156, -1.9073486328125e-06, -2.288818359375e-05, -7.82012939453125e-05, 0.0, -0.000438690185546875, 0.0, -0.000274658203125, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -4.76837158203125e-05, -1.9073486328125e-05, -6.866455078125e-05, 0.0, -1.3776607513427734, -2.872943878173828e-05, -0.0038623809814453125, -1.9073486328125e-06, -1.919269561767578e-05, 0.0, -0.0001392364501953125, -4.00543212890625e-05, -1.9073486328125e-06, -6.43729799776338e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-06, -1.3470649719238281e-05, -6.079673767089844e-06, -0.018413543701171875, -2.09808349609375e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -7.62939453125e-06, 0.0, -3.933906555175781e-06, 0.0, -4.017353057861328e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0002040863037109375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.47955322265625e-05, 0.0, -5.7220458984375e-06, -6.79492904964718e-06, -0.2584505081176758, -5.7220458984375e-06, -0.009819984436035156, -0.00396728515625, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-05, 0.0, -0.0004253387451171875, 0.0, -0.0013638734817504883, -1.1920928244535389e-07, -1.3351424058782868e-05, -1.9073486328125e-06, -0.05574226379394531, 0.0, -0.0005855560302734375, -0.02219104766845703, 0.0, -0.009312629699707031, 0.0, -0.02145862579345703, -3.814697265625e-06, -0.016284942626953125, -0.06131935119628906, -8.58306884765625e-05, -1.52587890625e-05, -0.9906406402587891, 0.0, -0.0002651214599609375, -3.814697265625e-06, -0.2747020721435547, -2.3841855067985307e-07, -2.717962343012914e-05, -1.9073486328125e-06, -0.3149287700653076, -7.867813110351562e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Burrowing Mine", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_friendly_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.585013882650493}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        game.check_delayed()\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -3.2464675903320312, -0.0001735687255859375, -3.159012703690678e-05, -5.340576171875e-05, -1.1444091796875e-05, -9.5367431640625e-06, -4.1723224057932384e-06, -1.6689286894688848e-06, -0.5014464855194092, -3.814697265625e-06, -0.00030517578125, 0.0, -1.1324880688334815e-05, 0.0, -9.5367431640625e-06, -0.0001659393310546875, -9.5367431640625e-06, -2.586840491858311e-05, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, 0.0, 0.0, -2.491474151611328e-05, -2.0265579223632812e-06, -0.029211044311523438, -4.76837158203125e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -2.110004425048828e-05, -1.9073486328125e-06, -1.71661376953125e-05, -0.000240325927734375, 0.0, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -5.7220458984375e-06, -6.675719760096399e-06, -0.3022727966308594, -5.7220458984375e-06, -0.008849143981933594, -0.0041408538818359375, -3.814697265625e-06, -1.9073486328125e-06, -6.866455078125e-05, 0.0, -0.0004138946533203125, 0.0, -0.0014516115188598633, -1.1920928244535389e-07, -1.2993798009119928e-05, -1.9073486328125e-06, -0.0574040412902832, 0.0, -0.0005645751953125, -0.020603179931640625, 0.0, -0.0093994140625, 0.0, -0.018815994262695312, -3.814697265625e-06, -0.014672279357910156, -0.04870033264160156, -8.20159912109375e-05, -1.52587890625e-05, -0.49816417694091797, 0.0, -0.1809825897216797, 0.0, -0.024269461631774902, -5.7220458984375e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.9712581808389515}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "draw", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(0), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -2.754971504211426, -0.00103759765625, -0.0001941730733960867, -3.1113624572753906e-05, -9.655952453613281e-06, -1.9073486328125e-06, -3.4570680327306036e-06, 0.0, -1.0091333389282227, 0.0, -0.7516803741455078, -0.011608123779296875, 0.0, -0.0001049041748046875, -2.47955322265625e-05, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.6366662979125977, -3.576278118089249e-07, -0.0021805218420922756, 0.0, -0.14596322178840637, 0.0, -0.015713518485426903, 0.0, -9.5367431640625e-06, -0.011178970336914062, -0.0010547637939453125, -0.7045360207557678, -0.006001870613545179, -0.0001068115234375, 0.0, -0.0008230209350585938, -7.152555099310121e-07], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 0, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.055033465671102}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "draw", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(0), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -2.754971504211426, -0.00103759765625, -0.0001941730733960867, -3.1113624572753906e-05, -9.655952453613281e-06, -1.9073486328125e-06, -3.4570680327306036e-06, 0.0, -1.6321630477905273, -1.7881377516459906e-06, -0.3542051315307617, -0.006327629089355469, -1.9073486328125e-06, -4.1961669921875e-05, -7.43865966796875e-05, 0.0, -7.05718994140625e-05, -1.33514404296875e-05, -0.7149953842163086, -4.768370445162873e-07, -0.0020796512253582478, 0.0, -0.20090466737747192, 0.0, -0.020665368065238, 0.0, -5.7220458984375e-06, -0.010700225830078125, -0.0010585784912109375, -0.7021523714065552, -0.004885525442659855, -0.000102996826171875, 0.0, -0.0007619857788085938, -5.960462772236497e-07], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template6", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 0, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.40939096203914}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "take", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(0), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -2.754971504211426, -0.00103759765625, -0.0001941730733960867, -3.1113624572753906e-05, -9.655952453613281e-06, -1.9073486328125e-06, -3.4570680327306036e-06, 0.0, -1.0091333389282227, 0.0, -0.7516803741455078, -0.011608123779296875, 0.0, -0.0001049041748046875, -2.47955322265625e-05, 0.0, -6.29425048828125e-05, -5.7220458984375e-06, -0.6366662979125977, -3.576278118089249e-07, -0.0021805218420922756, 0.0, -0.14596322178840637, 0.0, -0.015713518485426903, 0.0, -9.5367431640625e-06, -0.011178970336914062, -0.0010547637939453125, -1.1844360828399658, -0.0002668739762157202, -0.0005779266357421875, 0.0, -0.0005017518997192383, -1.9073468138230965e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template6", "hole2": "ROGUE"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 0, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.529349569286239}, {"choice_history": [55, 124, 221, 63, 103, "Burrowing", "Mine", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 85, 178, "Burrowing", " ", "Mine", "<EOS>", "0", "<EOS>", "PRIEST", "<EOS>", 71, 144, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "take", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class BurrowingMine(SpellCard):\n\n    def __init__(self):\n        super().__init__('Burrowing Mine', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.FREE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        game.other_player.hero.damage(player.effective_spell_damage(0), self)\n", "score_history": [0.0, 0.0, -1.9073486328125e-06, -5.91278076171875e-05, -3.814697265625e-06, -9.297892393078655e-05, -0.0015279296785593033, -6.71127054374665e-05, -7.62939453125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.00011980532144661993, -4.0531158447265625e-06, 0.0, -2.86102294921875e-05, -2.754971504211426, -0.00103759765625, -0.0001941730733960867, -3.1113624572753906e-05, -9.655952453613281e-06, -1.9073486328125e-06, -3.4570680327306036e-06, 0.0, -1.6321630477905273, -1.7881377516459906e-06, -0.3542051315307617, -0.006327629089355469, -1.9073486328125e-06, -4.1961669921875e-05, -7.43865966796875e-05, 0.0, -7.05718994140625e-05, -1.33514404296875e-05, -0.7149953842163086, -4.768370445162873e-07, -0.0020796512253582478, 0.0, -0.20090466737747192, 0.0, -0.020665368065238, 0.0, -5.7220458984375e-06, -0.010700225830078125, -0.0010585784912109375, -1.1809295415878296, -0.00023064337437972426, -0.000579833984375, 0.0, -0.0005017518997192383, -1.9073468138230965e-06], "model_output": {"body": [{"name": "BurrowingMine", "body": [{"hole1": 0, "hole0": "Burrowing Mine", "_type": "Template6", "hole2": "PRIEST"}, {"hole1": "damage", "hole0": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Template1", "hole2": [{"hole0": 0, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.883731164731785}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, 0.0, -23.614683151245117], "model_output": {"body": [], "_type": "Module"}, "score": -23.614683151245117}]}
{"gold_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(game.random_amount\n            (3, 6)), self)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -0.013940811157226562, -2.86102294921875e-05, -3.7073656130814925e-05, 0.0, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0001628398895263672, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -0.000331878662109375, -0.0002288818359375, -3.814697265625e-06, -0.00012624263763427734, -0.0005588531494140625, -1.1444091796875e-05, -5.7220458984375e-06, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.006146430969238281, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01160430908203125, -1.5020368664409034e-05, -0.00026702880859375, -0.019819259643554688, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -8.96453857421875e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0002498626708984375, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.0037882328033447266, -4.57763671875e-05, -0.02190399169921875, -0.0023717880249023438, -0.001059484900906682, -1.764288026606664e-05, -0.000701904296875, -0.00012969970703125, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.38690185546875e-05, 0.0, -0.0012576580047607422, -3.814697265625e-06, -1.9073486328125e-06, -0.0002651214599609375, -2.47955322265625e-05, -0.7057090401649475, -3.147124880342744e-05, -1.9073486328125e-05, 0.0, -2.47955322265625e-05, 0.0], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.8292837259379837}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -0.013940811157226562, -2.86102294921875e-05, -3.7073656130814925e-05, 0.0, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0001628398895263672, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -0.000331878662109375, -0.0002288818359375, -3.814697265625e-06, -0.00012624263763427734, -0.0005588531494140625, -1.1444091796875e-05, -5.7220458984375e-06, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.006146430969238281, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01160430908203125, -1.5020368664409034e-05, -0.00026702880859375, -0.019819259643554688, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -8.96453857421875e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0002498626708984375, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.0037882328033447266, -4.57763671875e-05, -0.02190399169921875, -0.0023717880249023438, -0.001059484900906682, -1.764288026606664e-05, -0.000701904296875, -0.00012969970703125, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.38690185546875e-05, 0.0, -0.0012576580047607422, -3.814697265625e-06, -1.9073486328125e-06, -0.0002651214599609375, -2.47955322265625e-05, -0.790836751461029, -7.271765298355604e-06, -3.814697265625e-06, 0.0, -7.534027099609375e-05, 0.0], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.9144225237002672}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -0.013940811157226562, -2.86102294921875e-05, -3.7073656130814925e-05, 0.0, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0001628398895263672, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -0.000331878662109375, -0.0002288818359375, -3.814697265625e-06, -0.00012624263763427734, -0.0005588531494140625, -1.1444091796875e-05, -5.7220458984375e-06, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.006146430969238281, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01160430908203125, -1.5020368664409034e-05, -0.00026702880859375, -0.019819259643554688, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -8.96453857421875e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.0002498626708984375, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.0037882328033447266, -4.57763671875e-05, -0.02190399169921875, -0.0023717880249023438, -0.001059484900906682, -1.764288026606664e-05, -0.000701904296875, -0.00012969970703125, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -4.38690185546875e-05, 0.0, -0.0012576580047607422, -3.814697265625e-06, -1.9073486328125e-06, -0.0002651214599609375, -2.47955322265625e-05, -2.9486818313598633, -4.41074053014745e-06, -1.9073486328125e-06, 0.0, -4.1961669921875e-05, 0.0], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.072229456624626}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 53, 175, "1", "<EOS>", 53, 175, "2", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=1, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(6), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -0.013940811157226562, -2.86102294921875e-05, -3.7073656130814925e-05, 0.0, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0001628398895263672, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -0.000331878662109375, -0.0002288818359375, -3.814697265625e-06, -0.00012624263763427734, -0.0005588531494140625, -1.1444091796875e-05, -5.7220458984375e-06, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.006146430969238281, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01160430908203125, -1.5020368664409034e-05, -0.00026702880859375, -3.985104560852051, -0.010952949523925781, -0.007520400919020176, -1.1324854312988464e-05, -1.2823162078857422, -0.0007944107055664062, -0.2300320863723755, -0.0018497311975806952, -0.07368946075439453, -0.0006961822509765625, -1.9073486328125e-05, -3.814697265625e-06, -1.33514404296875e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -0.0012180805206298828, -3.814697265625e-06, -5.7220458984375e-06, -0.0002956390380859375, -4.9591064453125e-05, -0.26218947768211365, -2.8610222216229886e-05, -2.09808349609375e-05, 0.0, -2.09808349609375e-05, 0.0], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"hole0": 1, "_type": "Template39"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.928317202319903}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 130, "1", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -4.408014297485352, -0.0001316070556640625, -9.345687431050465e-05, 0.0, -3.682993701659143e-05, 0.0, -0.07753658294677734, 0.0, -0.004164338111877441, 0.0, -0.001373291015625, -5.14984130859375e-05, -0.02847832441329956, 0.0, -0.018949508666992188, -5.7220458984375e-06, -0.0018349885940551758, 0.0, -5.7220458984375e-06, -0.0001163482666015625, -1.1444091796875e-05, -0.000102996826171875, 0.0, 0.0, -0.0037870407104492188, 0.0, -3.0517578125e-05, -7.426737283822149e-05, -2.0265579223632812e-06, -0.10300731658935547, -1.52587890625e-05, 0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.0001659393310546875, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, -1.4543520592269488e-05, -0.7248620986938477, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.15378665924072266, -2.384169420110993e-05, -0.016099929809570312, -9.1552734375e-05, -0.043880462646484375, 0.0, -0.00011444091796875, 0.0, -0.0007982254028320312, -1.1920928244535389e-07, -0.0007184743881225586, 0.0, -0.0004367828369140625, -0.0001316070556640625, 0.0, -0.0041961669921875, 0.0, -0.000949859619140625, 0.0, -0.0735921859741211, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.0004922119551338255, -3.814697265625e-06, -0.0004425048828125, -0.034515380859375, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0002727508544921875, 0.0, -0.000827789306640625, -2.0265579223632812e-06, -0.0009633302688598633, 0.0, -1.9073486328125e-06, -0.026363372802734375, -2.288818359375e-05, -0.5698192119598389, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0], "model_output": {"body": [{"name": "Crackle", "body": [{"_type": "Template3", "hole0": "Crackle", "hole4": {"n": 1, "_type": "Num"}, "hole1": 2, "hole3": "overload", "hole2": "SHAMAN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.341526674636036}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Crackle", "<EOS>", "2", "<EOS>", "SHAMAN", "<EOS>", "overload", "<EOS>", 21, 130, "1", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -4.408014297485352, -0.0001316070556640625, -9.345687431050465e-05, 0.0, -3.682993701659143e-05, 0.0, -0.07753658294677734, 0.0, -0.004164338111877441, 0.0, -0.001373291015625, -5.14984130859375e-05, -0.02847832441329956, 0.0, -0.018949508666992188, -5.7220458984375e-06, -0.0018349885940551758, 0.0, -5.7220458984375e-06, -0.0001163482666015625, -1.1444091796875e-05, -0.000102996826171875, 0.0, 0.0, -0.0037870407104492188, 0.0, -3.0517578125e-05, -7.426737283822149e-05, -2.0265579223632812e-06, -0.10300731658935547, -1.52587890625e-05, 0.0, 0.0, -9.5367431640625e-06, -1.1444091796875e-05, 0.0, -0.0001659393310546875, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -1.52587890625e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.288818359375e-05, -1.4543520592269488e-05, -0.7248620986938477, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.15378665924072266, -2.384169420110993e-05, -0.016099929809570312, -9.1552734375e-05, -0.043880462646484375, 0.0, -0.00011444091796875, 0.0, -0.0007982254028320312, -1.1920928244535389e-07, -0.0007184743881225586, 0.0, -0.0004367828369140625, -0.0001316070556640625, 0.0, -0.0041961669921875, 0.0, -0.000949859619140625, 0.0, -0.0735921859741211, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.0004922119551338255, -3.814697265625e-06, -0.0004425048828125, -0.034515380859375, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0002727508544921875, 0.0, -0.000827789306640625, -2.0265579223632812e-06, -0.0009633302688598633, 0.0, -1.9073486328125e-06, -0.026363372802734375, -2.288818359375e-05, -0.8524051904678345, -9.226798283634707e-05, -9.918212890625e-05, -5.7220458984375e-06, -0.0029706954956054688, -1.9073486328125e-06], "model_output": {"body": [{"name": "Crackle", "body": [{"_type": "Template3", "hole0": "Crackle", "hole4": {"n": 1, "_type": "Num"}, "hole1": 2, "hole3": "overload", "hole2": "SHAMAN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.626599835768495}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "1", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            RARE, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -0.013940811157226562, -2.86102294921875e-05, -3.7073656130814925e-05, 0.0, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0001628398895263672, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -0.000331878662109375, -0.0002288818359375, -3.814697265625e-06, -0.00012624263763427734, -0.0005588531494140625, -1.1444091796875e-05, -5.7220458984375e-06, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.006146430969238281, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -4.599804878234863, -1.9073486328125e-06, -0.05553245544433594, -0.04352760314941406, -0.0004863739013671875, -0.22168175876140594, -2.157675589842256e-05, -0.17508411407470703, -5.7220458984375e-06, -0.0002785921096801758, 0.0, -1.52587890625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.0001049041748046875, 0.0, 0.0, -0.0019750595092773438, 0.0, -1.71661376953125e-05, -0.0005452632904052734, -2.1457672119140625e-06, -0.07201290130615234, -2.6702880859375e-05, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00035858154296875, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -9.918212890625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -1.6450869225081988e-05, -0.7810649871826172, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.15731585025787354, -2.1934378310106695e-05, -0.01544189453125, -9.72747802734375e-05, -0.04205322265625, 0.0, -0.0001125335693359375, 0.0, -0.0007877349853515625, -1.1920928244535389e-07, -0.0007137060165405273, 0.0, -0.000431060791015625, -0.00012969970703125, 0.0, -0.004150390625, 0.0, -0.00096893310546875, 0.0, -0.07358360290527344, -2.2649765014648438e-06, -0.001543283462524414, 0.0, -0.0004917351179756224, -3.814697265625e-06, -0.0004425048828125, -0.033832550048828125, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0002765655517578125, 0.0, -0.0008220672607421875, -2.0265579223632812e-06, -0.0009557008743286133, 0.0, -1.9073486328125e-06, -0.02602100372314453, -2.288818359375e-05, -0.5683900117874146, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 1, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.9418565441084965}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "1", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            RARE, overload=1)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -0.0350494384765625, -0.013940811157226562, -2.86102294921875e-05, -3.7073656130814925e-05, 0.0, 0.0, -1.71661376953125e-05, -7.62939453125e-06, -0.0001628398895263672, -1.9073486328125e-06, -4.9591064453125e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -7.43865966796875e-05, -5.53131103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, -1.9073486328125e-06, -4.017353057861328e-05, 0.0, -0.000331878662109375, -0.0002288818359375, -3.814697265625e-06, -0.00012624263763427734, -0.0005588531494140625, -1.1444091796875e-05, -5.7220458984375e-06, -2.622600959512056e-06, 0.0, -7.62939453125e-06, -2.09808349609375e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.006146430969238281, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -4.599804878234863, -1.9073486328125e-06, -0.05553245544433594, -0.04352760314941406, -0.0004863739013671875, -0.22168175876140594, -2.157675589842256e-05, -0.17508411407470703, -5.7220458984375e-06, -0.0002785921096801758, 0.0, -1.52587890625e-05, -0.0001583099365234375, -1.9073486328125e-05, -0.0001049041748046875, 0.0, 0.0, -0.0019750595092773438, 0.0, -1.71661376953125e-05, -0.0005452632904052734, -2.1457672119140625e-06, -0.07201290130615234, -2.6702880859375e-05, 0.0, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00035858154296875, -3.814697265625e-06, -2.1457672119140625e-06, 0.0, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -9.918212890625e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -1.9073486328125e-05, -1.6450869225081988e-05, -0.7810649871826172, -5.7220458984375e-06, -3.4332275390625e-05, 0.0, -0.15731585025787354, -2.1934378310106695e-05, -0.01544189453125, -9.72747802734375e-05, -0.04205322265625, 0.0, -0.0001125335693359375, 0.0, -0.0007877349853515625, -1.1920928244535389e-07, -0.0007137060165405273, 0.0, -0.000431060791015625, -0.00012969970703125, 0.0, -0.004150390625, 0.0, -0.00096893310546875, 0.0, -0.07358360290527344, -2.2649765014648438e-06, -0.001543283462524414, 0.0, -0.0004917351179756224, -3.814697265625e-06, -0.0004425048828125, -0.033832550048828125, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0002765655517578125, 0.0, -0.0008220672607421875, -2.0265579223632812e-06, -0.0009557008743286133, 0.0, -1.9073486328125e-06, -0.02602100372314453, -2.288818359375e-05, -0.8542739152908325, -9.226798283634707e-05, -0.0001010894775390625, -5.7220458984375e-06, -0.0029811859130859375, -1.9073486328125e-06], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 1, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.230240028002491}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        super().use(player, game)\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -3.377017021179199, -0.2721443176269531, -7.2479248046875e-05, -3.933904736186378e-06, 0.0, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001933574676513672, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -8.392333984375e-05, -6.103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -0.0003337860107421875, -0.000225067138671875, -3.814697265625e-06, -0.00012254714965820312, -0.0004730224609375, -1.1444091796875e-05, -3.814697265625e-06, -3.099436753473128e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.005850791931152344, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01146697998046875, -1.5020368664409034e-05, -0.00026702880859375, -0.019750595092773438, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.003828287124633789, -4.57763671875e-05, -0.022006988525390625, -0.0023717880249023438, -0.001059365808032453, -1.764288026606664e-05, -0.15868091583251953, -0.00121307373046875, -0.011988639831542969, 0.0, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -7.05718994140625e-05, 0.0, 0.0, -0.0007619857788085938, 0.0, -3.814697265625e-05, -0.0002913475036621094, -2.0265579223632812e-06, -0.20848655700683594, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.4662729881820269e-05, -0.9318227767944336, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.1570643186569214, -2.3484071789425798e-05, -0.015859603881835938, -8.96453857421875e-05, -0.04612922668457031, 0.0, -0.000110626220703125, 0.0, -0.0007791519165039062, -1.1920928244535389e-07, -0.0007156133651733398, 0.0, -0.0004367828369140625, -0.00012969970703125, 0.0, -0.0041961669921875, 0.0, -0.000942230224609375, 0.0, -0.0740194320678711, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.000492569524794817, -3.814697265625e-06, -0.0004119873046875, -0.03369331359863281, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0008068084716796875, -2.0265579223632812e-06, -0.0009671449661254883, 0.0, -1.9073486328125e-06, -0.026317596435546875, -2.288818359375e-05, -0.5691728591918945, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0, -0.011658668518066406, -1.1444091796875e-05, -0.0018787384033203125, 0.0, -4.00543212890625e-05, -0.000133514404296875, 0.0, -0.0001361370086669922, 0.0, 0.0, -0.0107957124710083, 0.0, -2.47955322265625e-05, -0.00548553466796875, -2.2649765014648438e-06, -0.0028772354125976562, -2.177821159362793, 0.0, 0.0, -9.5367431640625e-06, -3.62396240234375e-05, 0.0, -0.0006046295166015625, -1.9073486328125e-06, -2.622604142743512e-06, 0.0, -4.76837158203125e-05, 0.0, -3.814697265625e-06, -0.000102996826171875, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.5377991076093167e-05], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.181686231293916}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 12, 96, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 57, 21, 130, "1", "<EOS>", 205, 4, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) - 1 >= 1\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -3.377017021179199, -0.2721443176269531, -7.2479248046875e-05, -3.933904736186378e-06, 0.0, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001933574676513672, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -8.392333984375e-05, -6.103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -0.0003337860107421875, -0.000225067138671875, -3.814697265625e-06, -0.00012254714965820312, -0.0004730224609375, -1.1444091796875e-05, -3.814697265625e-06, -3.099436753473128e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.005850791931152344, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01146697998046875, -1.5020368664409034e-05, -0.00026702880859375, -0.019750595092773438, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.003828287124633789, -4.57763671875e-05, -0.022006988525390625, -0.0023717880249023438, -0.001059365808032453, -1.764288026606664e-05, -0.15868091583251953, -0.00121307373046875, -0.011988639831542969, 0.0, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -7.05718994140625e-05, 0.0, 0.0, -0.0007619857788085938, 0.0, -3.814697265625e-05, -0.0002913475036621094, -2.0265579223632812e-06, -0.20848655700683594, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.4662729881820269e-05, -0.9318227767944336, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.1570643186569214, -2.3484071789425798e-05, -0.015859603881835938, -8.96453857421875e-05, -0.04612922668457031, 0.0, -0.000110626220703125, 0.0, -0.0007791519165039062, -1.1920928244535389e-07, -0.0007156133651733398, 0.0, -0.0004367828369140625, -0.00012969970703125, 0.0, -0.0041961669921875, 0.0, -0.000942230224609375, 0.0, -0.0740194320678711, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.000492569524794817, -3.814697265625e-06, -0.0004119873046875, -0.03369331359863281, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0008068084716796875, -2.0265579223632812e-06, -0.0009671449661254883, 0.0, -1.9073486328125e-06, -0.026317596435546875, -2.288818359375e-05, -0.5691728591918945, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0, -0.011658668518066406, -1.1444091796875e-05, -0.0018787384033203125, 0.0, -4.00543212890625e-05, -0.000133514404296875, 0.0, -0.0001361370086669922, 0.0, 0.0, -0.0107957124710083, 0.0, -2.47955322265625e-05, -0.00548553466796875, -2.2649765014648438e-06, -0.0028772354125976562, -0.12941837310791016, -0.0001811981201171875, -0.0010852813720703125, -4.9591064453125e-05, -0.2440185546875, -0.0016489028930664062, -0.0050868988037109375, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.72747802734375e-05, 0.0, -0.005657196044921875, -6.67572021484375e-05, 0.0, -0.09375190734863281, 0.0, -0.0002002716064453125, 0.0, -0.0005135536193847656, -0.000141143798828125, -1.306687355041504, -0.19892597198486328, -7.62939453125e-06, -7.588416337966919e-05, -1.9073486328125e-05, -0.029806137084960938, -0.32102298736572266, -3.62396240234375e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.0002054525539278984, -1.9073486328125e-06], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "GtE"}], "hole0": {"op": {"_type": "Sub"}, "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "right": {"n": 1, "_type": "Num"}, "_type": "BinOp"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.341804933169179}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 12, 96, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 56, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) + len(\n            player.minions) < 7\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -3.377017021179199, -0.2721443176269531, -7.2479248046875e-05, -3.933904736186378e-06, 0.0, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001933574676513672, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -8.392333984375e-05, -6.103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -0.0003337860107421875, -0.000225067138671875, -3.814697265625e-06, -0.00012254714965820312, -0.0004730224609375, -1.1444091796875e-05, -3.814697265625e-06, -3.099436753473128e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.005850791931152344, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01146697998046875, -1.5020368664409034e-05, -0.00026702880859375, -0.019750595092773438, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.003828287124633789, -4.57763671875e-05, -0.022006988525390625, -0.0023717880249023438, -0.001059365808032453, -1.764288026606664e-05, -0.15868091583251953, -0.00121307373046875, -0.011988639831542969, 0.0, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -7.05718994140625e-05, 0.0, 0.0, -0.0007619857788085938, 0.0, -3.814697265625e-05, -0.0002913475036621094, -2.0265579223632812e-06, -0.20848655700683594, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.4662729881820269e-05, -0.9318227767944336, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.1570643186569214, -2.3484071789425798e-05, -0.015859603881835938, -8.96453857421875e-05, -0.04612922668457031, 0.0, -0.000110626220703125, 0.0, -0.0007791519165039062, -1.1920928244535389e-07, -0.0007156133651733398, 0.0, -0.0004367828369140625, -0.00012969970703125, 0.0, -0.0041961669921875, 0.0, -0.000942230224609375, 0.0, -0.0740194320678711, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.000492569524794817, -3.814697265625e-06, -0.0004119873046875, -0.03369331359863281, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0008068084716796875, -2.0265579223632812e-06, -0.0009671449661254883, 0.0, -1.9073486328125e-06, -0.026317596435546875, -2.288818359375e-05, -0.5691728591918945, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0, -0.011658668518066406, -1.1444091796875e-05, -0.0018787384033203125, 0.0, -4.00543212890625e-05, -0.000133514404296875, 0.0, -0.0001361370086669922, 0.0, 0.0, -0.0107957124710083, 0.0, -2.47955322265625e-05, -0.00548553466796875, -2.2649765014648438e-06, -0.0028772354125976562, -0.12941837310791016, -0.0001811981201171875, -0.0010852813720703125, -4.9591064453125e-05, -0.2440185546875, -0.0016489028930664062, -0.0050868988037109375, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.72747802734375e-05, 0.0, -0.005657196044921875, -6.67572021484375e-05, 0.0, -0.09375190734863281, 0.0, -0.0002002716064453125, 0.0, -0.0005135536193847656, -0.000141143798828125, -0.32466983795166016, -0.2082958221435547, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.8926753997802734, 0.0, -0.0005950927734375, -1.9073486328125e-05, 0.0, -0.5557804107666016, 0.0, -0.002651214599609375, 0.0, -0.00038552284240722656, -0.000133514404296875, -3.4332275390625e-05, -0.00763702392578125, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -0.03384232521057129, -1.5497195136049413e-06], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "Lt"}], "hole0": {"op": {"_type": "Add"}, "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "right": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "BinOp"}, "_type": "Template21", "hole2": [{"n": 7, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.511752673789793}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) < 7\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -3.377017021179199, -0.2721443176269531, -7.2479248046875e-05, -3.933904736186378e-06, 0.0, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001933574676513672, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -8.392333984375e-05, -6.103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -0.0003337860107421875, -0.000225067138671875, -3.814697265625e-06, -0.00012254714965820312, -0.0004730224609375, -1.1444091796875e-05, -3.814697265625e-06, -3.099436753473128e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.005850791931152344, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01146697998046875, -1.5020368664409034e-05, -0.00026702880859375, -0.019750595092773438, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.003828287124633789, -4.57763671875e-05, -0.022006988525390625, -0.0023717880249023438, -0.001059365808032453, -1.764288026606664e-05, -0.15868091583251953, -0.00121307373046875, -0.011988639831542969, 0.0, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -7.05718994140625e-05, 0.0, 0.0, -0.0007619857788085938, 0.0, -3.814697265625e-05, -0.0002913475036621094, -2.0265579223632812e-06, -0.20848655700683594, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.4662729881820269e-05, -0.9318227767944336, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.1570643186569214, -2.3484071789425798e-05, -0.015859603881835938, -8.96453857421875e-05, -0.04612922668457031, 0.0, -0.000110626220703125, 0.0, -0.0007791519165039062, -1.1920928244535389e-07, -0.0007156133651733398, 0.0, -0.0004367828369140625, -0.00012969970703125, 0.0, -0.0041961669921875, 0.0, -0.000942230224609375, 0.0, -0.0740194320678711, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.000492569524794817, -3.814697265625e-06, -0.0004119873046875, -0.03369331359863281, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0008068084716796875, -2.0265579223632812e-06, -0.0009671449661254883, 0.0, -1.9073486328125e-06, -0.026317596435546875, -2.288818359375e-05, -0.5691728591918945, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0, -0.011658668518066406, -1.1444091796875e-05, -0.0018787384033203125, 0.0, -4.00543212890625e-05, -0.000133514404296875, 0.0, -0.0001361370086669922, 0.0, 0.0, -0.0107957124710083, 0.0, -2.47955322265625e-05, -0.00548553466796875, -2.2649765014648438e-06, -0.0028772354125976562, -0.12941837310791016, -0.0001811981201171875, -0.0010852813720703125, -4.9591064453125e-05, -1.6226387023925781, -5.340576171875e-05, -1.9073486328125e-05, -2.09808349609375e-05, -0.0005359649658203125, 0.0, -8.20159912109375e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.7908859252929688, 0.0, -0.0001125335693359375, 0.0, -0.00029206275939941406, -3.62396240234375e-05, -2.86102294921875e-05, -0.005321502685546875, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, -0.03488051891326904, -1.1920922133867862e-06], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "Lt"}], "hole0": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Template21", "hole2": [{"n": 7, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.588706323311236}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 12, 96, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 56, 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 37, 125, "self", "<EOS>", 205, 3, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) + range(\n            0, self) > 1\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -3.377017021179199, -0.2721443176269531, -7.2479248046875e-05, -3.933904736186378e-06, 0.0, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001933574676513672, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -8.392333984375e-05, -6.103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -0.0003337860107421875, -0.000225067138671875, -3.814697265625e-06, -0.00012254714965820312, -0.0004730224609375, -1.1444091796875e-05, -3.814697265625e-06, -3.099436753473128e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.005850791931152344, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01146697998046875, -1.5020368664409034e-05, -0.00026702880859375, -0.019750595092773438, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.003828287124633789, -4.57763671875e-05, -0.022006988525390625, -0.0023717880249023438, -0.001059365808032453, -1.764288026606664e-05, -0.15868091583251953, -0.00121307373046875, -0.011988639831542969, 0.0, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -7.05718994140625e-05, 0.0, 0.0, -0.0007619857788085938, 0.0, -3.814697265625e-05, -0.0002913475036621094, -2.0265579223632812e-06, -0.20848655700683594, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.4662729881820269e-05, -0.9318227767944336, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.1570643186569214, -2.3484071789425798e-05, -0.015859603881835938, -8.96453857421875e-05, -0.04612922668457031, 0.0, -0.000110626220703125, 0.0, -0.0007791519165039062, -1.1920928244535389e-07, -0.0007156133651733398, 0.0, -0.0004367828369140625, -0.00012969970703125, 0.0, -0.0041961669921875, 0.0, -0.000942230224609375, 0.0, -0.0740194320678711, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.000492569524794817, -3.814697265625e-06, -0.0004119873046875, -0.03369331359863281, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0008068084716796875, -2.0265579223632812e-06, -0.0009671449661254883, 0.0, -1.9073486328125e-06, -0.026317596435546875, -2.288818359375e-05, -0.5691728591918945, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0, -0.011658668518066406, -1.1444091796875e-05, -0.0018787384033203125, 0.0, -4.00543212890625e-05, -0.000133514404296875, 0.0, -0.0001361370086669922, 0.0, 0.0, -0.0107957124710083, 0.0, -2.47955322265625e-05, -0.00548553466796875, -2.2649765014648438e-06, -0.0028772354125976562, -0.12941837310791016, -0.0001811981201171875, -0.0010852813720703125, -4.9591064453125e-05, -0.2440185546875, -0.0016489028930664062, -0.0050868988037109375, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.72747802734375e-05, 0.0, -0.005657196044921875, -6.67572021484375e-05, 0.0, -0.09375190734863281, 0.0, -0.0002002716064453125, 0.0, -0.0005135536193847656, -0.000141143798828125, -0.32466983795166016, -0.2082958221435547, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.6665945053100586, 0.0, -5.340576171875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.027803804725408554, -2.1457672119140625e-06, -0.6872596740722656, -3.24249267578125e-05, -0.35105276107788086, -1.9073486328125e-06, -0.9161319732666016, -1.3607831001281738, -1.71661376953125e-05, 0.0, -1.9073486328125e-05, -0.24982480704784393, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "Gt"}], "hole0": {"op": {"_type": "Add"}, "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "right": {"args": [{"n": 0, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "BinOp"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.277854581729734}, {"choice_history": [55, 124, 221, 63, 103, "Crackle", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 223, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Crackle", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_spell_target", "<EOS>", 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "6", "<EOS>", 37, 125, "self", "<EOS>", 66, 108, "can_use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 69, 132, 23, 159, 12, 96, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 56, 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 37, 125, "self", "<EOS>", 205, 7, 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Crackle(SpellCard):\n\n    def __init__(self):\n        super().__init__('Crackle', 2, CHARACTER_CLASS.SHAMAN, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.find_spell_target,\n            overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(6), self)\n\n    def can_use(self, player, game):\n        return super().can_use(player, game) and len(player.minions) + range(\n            0, self) is not 1\n", "score_history": [0.0, -1.1444091796875e-05, -1.71661376953125e-05, -9.5367431640625e-06, -0.001468658447265625, -1.7523612768854946e-05, -0.00010132788884220645, -1.52587890625e-05, -4.00543212890625e-05, -2.288818359375e-05, -0.0007480382919311523, -0.00012791156768798828, -1.9073486328125e-06, -3.377017021179199, -0.2721443176269531, -7.2479248046875e-05, -3.933904736186378e-06, 0.0, 0.0, -9.918212890625e-05, -7.62939453125e-06, -0.0001933574676513672, -1.9073486328125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -8.392333984375e-05, -6.103515625e-05, 0.0, 0.0, -7.62939453125e-06, -2.3841855067985307e-07, 0.0, -3.4332275390625e-05, 0.0, -0.0003337860107421875, -0.000225067138671875, -3.814697265625e-06, -0.00012254714965820312, -0.0004730224609375, -1.1444091796875e-05, -3.814697265625e-06, -3.099436753473128e-06, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -0.005850791931152344, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.01146697998046875, -1.5020368664409034e-05, -0.00026702880859375, -0.019750595092773438, -1.9073486328125e-06, -8.0108642578125e-05, 0.0, -9.1552734375e-05, -2.288818359375e-05, -2.86102294921875e-05, -1.1444091796875e-05, -3.814697265625e-06, -3.814697265625e-06, -0.000244140625, -7.62939453125e-06, -6.4849853515625e-05, -1.9073486328125e-06, -0.003828287124633789, -4.57763671875e-05, -0.022006988525390625, -0.0023717880249023438, -0.001059365808032453, -1.764288026606664e-05, -0.15868091583251953, -0.00121307373046875, -0.011988639831542969, 0.0, -2.6702880859375e-05, -0.0002040863037109375, -3.814697265625e-06, -7.05718994140625e-05, 0.0, 0.0, -0.0007619857788085938, 0.0, -3.814697265625e-05, -0.0002913475036621094, -2.0265579223632812e-06, -0.20848655700683594, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0003070831298828125, -1.9073486328125e-06, -2.1457672119140625e-06, 0.0, -1.71661376953125e-05, 0.0, -5.7220458984375e-06, -8.96453857421875e-05, -3.814697265625e-06, -7.62939453125e-06, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, -1.4662729881820269e-05, -0.9318227767944336, -5.7220458984375e-06, -3.62396240234375e-05, 0.0, -0.1570643186569214, -2.3484071789425798e-05, -0.015859603881835938, -8.96453857421875e-05, -0.04612922668457031, 0.0, -0.000110626220703125, 0.0, -0.0007791519165039062, -1.1920928244535389e-07, -0.0007156133651733398, 0.0, -0.0004367828369140625, -0.00012969970703125, 0.0, -0.0041961669921875, 0.0, -0.000942230224609375, 0.0, -0.0740194320678711, -2.2649765014648438e-06, -0.0015451908111572266, 0.0, -0.000492569524794817, -3.814697265625e-06, -0.0004119873046875, -0.03369331359863281, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.000274658203125, 0.0, -0.0008068084716796875, -2.0265579223632812e-06, -0.0009671449661254883, 0.0, -1.9073486328125e-06, -0.026317596435546875, -2.288818359375e-05, -0.5691728591918945, -0.00017607210611458868, -3.4332275390625e-05, -1.52587890625e-05, -0.00045692920684814453, 0.0, -0.011658668518066406, -1.1444091796875e-05, -0.0018787384033203125, 0.0, -4.00543212890625e-05, -0.000133514404296875, 0.0, -0.0001361370086669922, 0.0, 0.0, -0.0107957124710083, 0.0, -2.47955322265625e-05, -0.00548553466796875, -2.2649765014648438e-06, -0.0028772354125976562, -0.12941837310791016, -0.0001811981201171875, -0.0010852813720703125, -4.9591064453125e-05, -0.2440185546875, -0.0016489028930664062, -0.0050868988037109375, -1.71661376953125e-05, -2.6702880859375e-05, -1.9073486328125e-06, -9.72747802734375e-05, 0.0, -0.005657196044921875, -6.67572021484375e-05, 0.0, -0.09375190734863281, 0.0, -0.0002002716064453125, 0.0, -0.0005135536193847656, -0.000141143798828125, -0.32466983795166016, -0.2082958221435547, -2.86102294921875e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.6665945053100586, 0.0, -5.340576171875e-05, -0.0002899169921875, -1.9073486328125e-06, -0.027803804725408554, -2.1457672119140625e-06, -0.6872596740722656, -3.24249267578125e-05, -0.35105276107788086, -1.9073486328125e-06, -0.9161319732666016, -1.2578930854797363, -7.62939453125e-06, -0.6449651718139648, -1.71661376953125e-05, -0.0768648162484169, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Crackle", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Crackle", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_spell_target"}, "arg": "target_func", "_type": "keyword"}, {"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 6, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}, {"name": "can_use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"hole1": [{"_type": "IsNot"}], "hole0": {"op": {"_type": "Add"}, "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "right": {"args": [{"n": 0, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "BinOp"}, "_type": "Template21", "hole2": [{"n": 1, "_type": "Num"}]}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.64695818479477}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -1.1444091796875e-05, -21.461532592773438], "model_output": {"body": [], "_type": "Module"}, "score": -21.461544036865234}]}
{"gold_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, False, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "1", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(1()))\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -0.9279741048812866, -1.1920928244535389e-07, -1.9073486328125e-05, -0.00533294677734375, -0.0001201629638671875, -3.814697265625e-05, 0.0, -0.002181410789489746, -0.0006957054138183594, -0.00055694580078125, -4.76837158203125e-05, 0.0, -0.29528695344924927, -4.2676241719163954e-05], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"args": [{"hole0": "1", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.2886326063098394}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.6945985555648804, 0.0, -1.1444091796875e-05, -0.08644294738769531, -3.0517578125e-05, -0.005817413330078125, 0.0, -0.1105642318725586, 0.0, -0.0009241104125976562, 0.0], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.954725896845929}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.3295358419418335, 0.0, -2.288818359375e-05, -0.8032875061035156, -1.1444091796875e-05, -0.1932401806116104, 0.0], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 1, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.382434537540547}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -3.015083074569702, -1.9073486328125e-06, -1.52587890625e-05, -0.11872482299804688, -3.4332275390625e-05, -0.055043742060661316, -1.9073486328125e-06], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 1, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.245241721998326}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "1", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1 - self.target.calculate_attack())\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.3295358419418335, 0.0, -2.288818359375e-05, -1.0350713729858398, -0.00118255615234375, -0.000186920166015625, -2.288818359375e-05, -0.0004506409168243408, 0.0, -0.17415618896484375, -0.02520465850830078, -0.000335693359375, -3.814697265625e-06, -3.814697265625e-06, -6.866455078125e-05, 0.0, -6.103515625e-05, 0.0, -0.01282501220703125, -1.0728830375228426e-06, -9.655950634623878e-06, -8.106231689453125e-06, -0.6137908697128296, -2.3841855067985307e-07], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"op": {"_type": "Sub"}, "left": {"n": 1, "_type": "Num"}, "right": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "BinOp"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.2492786104760967}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.3295358419418335, 0.0, -2.288818359375e-05, -1.6814422607421875, 0.0, -0.4085958003997803, -1.1920928244535389e-07], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.4759335870848744}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Emergency", "Attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(EmergencyAttack()))\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -0.9279741048812866, -1.1920928244535389e-07, -1.9073486328125e-05, -0.00533294677734375, -0.0001201629638671875, -3.814697265625e-05, 0.0, -0.002181410789489746, -0.0006957054138183594, -0.00055694580078125, -4.76837158203125e-05, 0.0, -1.5497819185256958, -1.0133565664291382, 0.0], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"args": [{"hole0": "EmergencyAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.556441461573705}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.3295358419418335, 0.0, -2.288818359375e-05, -0.8032875061035156, -1.1444091796875e-05, -1.7912201881408691, 0.0], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 3, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.980414545069806}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -3.8926095962524414, -0.001377105712890625, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.340576171875e-05, -3.576278118089249e-07, -2.7179718017578125e-05, -7.152555099310121e-07, -0.3557168245315552, 0.0], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "bounce", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.28332475377232}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.6945985555648804, 0.0, -1.1444091796875e-05, -3.1291961669921875, 0.0, -0.014674782752990723, -1.1920928244535389e-07], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.894817745219335}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "temp_attack", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(temp_attack)\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -0.022481918334960938, -1.9073486328125e-06, -3.814697265625e-06, -0.00020599365234375, 0.0, -0.0001163482666015625, -2.3841855067985307e-07, -1.430511474609375e-05, -1.1920922133867862e-06, -1.3295358419418335, 0.0, -2.288818359375e-05, -1.6814422607421875, 0.0, -2.0775787830352783, -4.410743713378906e-06], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "temp_attack", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.144920861254803}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -3.8926095962524414, -0.001377105712890625, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.340576171875e-05, -3.576278118089249e-07, -2.7179718017578125e-05, -7.152555099310121e-07, -2.2668590545654297, -1.5139465176616795e-05], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "<UNK>", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.194482123271371}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff()\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -0.0045299530029296875, -5.7220458984375e-06, 0.0, -3.814697265625e-06, 0.0, -9.417505680175964e-06, -2.0265579223632812e-06, -1.9073486328125e-06, 0.0, -0.0048465728759765625, -0.0003337860107421875, -0.004160881042480469, -0.00017462669347878546, -2.491474151611328e-05, -8.344639354618266e-06, 0.0, -5.91278076171875e-05, 0.0, -1.954946492332965e-05, 0.0, 0.0, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -7.62939453125e-06, -0.00878596305847168, 0.0, -3.0517578125e-05, -1.52587890625e-05, -1.52587890625e-05, -2.09808349609375e-05, -0.00015461444854736328, -4.887569048150908e-06, -0.00042724609375, -3.814697265625e-06, -5.53131103515625e-05, -0.0012416839599609375, -0.0005269050598144531, -7.62939453125e-06, -5.340576171875e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.0005664825439453125, 0.0, -6.4849853515625e-05, -5.7220458984375e-06, -2.288818359375e-05, 0.0, -9.5367431640625e-05, -1.9073486328125e-06, -4.76837158203125e-05, -1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.0014516115188598633, -4.00543212890625e-05, -5.53131103515625e-05, -3.8926095962524414, -0.001377105712890625, -1.9073486328125e-06, -2.6702880859375e-05, 0.0, -5.340576171875e-05, -3.576278118089249e-07, -2.7179718017578125e-05, -7.152555099310121e-07, -2.48170804977417, -1.1444062693044543e-05], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.409327423077627}, {"choice_history": [55, 124, 221, 63, 103, "Emergency", "Coolant", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Emergency", " ", "Coolant", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class EmergencyCoolant(SpellCard):\n\n    def __init__(self):\n        super().__init__('Emergency Coolant', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -4.76837158203125e-05, -2.288818359375e-05, -7.62939453125e-06, -4.541770613286644e-05, -0.0028217521030455828, -0.0011073199566453695, -5.7220458984375e-06, -2.09808349609375e-05, 0.0, -2.5868377633742057e-05, -2.2530541173182428e-05, 0.0, -7.82012939453125e-05, -0.0006771087646484375, -0.0001049041748046875, -6.031976590747945e-05, -2.622604142743512e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -4.23185556428507e-05, 0.0, -8.96453857421875e-05, -0.0001926422119140625, -4.76837158203125e-05, -3.814697265625e-06, -6.989328384399414, -2.288818359375e-05, -3.0517578125e-05, -2.6702880859375e-05, 0.0, -8.106169116217643e-05, -2.0265579223632812e-06, -7.62939453125e-06, 0.0, -0.1197957992553711, -4.38690185546875e-05, -0.0004291534423828125, -3.313985507702455e-05, -2.491474151611328e-05, -1.978873842745088e-05, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -4.7085177357075736e-05, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.007597088813781738, 0.0, -5.53131103515625e-05, -1.33514404296875e-05, -1.52587890625e-05, -2.47955322265625e-05, -0.0001506805419921875, -4.6491513785440475e-06, -0.000362396240234375, -3.814697265625e-06, -4.9591064453125e-05, -0.0006504058837890625, -0.0007443428039550781, -3.814697265625e-06, -0.1495351791381836, -0.03184223175048828, -0.07440757751464844, 0.0, -0.0007610321044921875, 0.0, -5.53131103515625e-05, 0.0, -9.5367431640625e-06, -1.1920928244535389e-07, -0.24537193775177002, -1.1920928244535389e-07], "model_output": {"body": [{"name": "EmergencyCoolant", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Emergency Coolant", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "bounce", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.627154040315631}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.86102294921875e-05, -8.392333984375e-05, -20.39585304260254], "model_output": {"body": [], "_type": "Module"}, "score": -20.395965576171875}]}
{"gold_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -0.24040985107421875, -1.1444091796875e-05, -3.457056436673156e-06, -2.3841855067985307e-07, -7.593615737278014e-05, 0.0, -0.08997321128845215, -1.311301275563892e-06, -0.0004215240478515625, -2.47955322265625e-05, -4.76837158203125e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "windfury"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.35271335744593557}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, windfury=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -1.9204626083374023, -1.9073486328125e-06, -0.0003006458282470703, 0.0, -1.9073486328125e-06, -0.0002956390380859375, -1.9073486328125e-06, -8.845329284667969e-05, -3.349725011503324e-05, -0.0001392364501953125, -0.36406898498535156, -2.3841855067985307e-07, -0.0002384185791015625, -0.011282920837402344, -0.002735137939453125, -6.532639963552356e-05, -0.00035998597741127014, -0.00037575908936560154, -1.1920928244535389e-07, -0.12552618980407715, -1.0609570381348021e-05, -0.000263214111328125, -8.20159912109375e-05, -2.86102294921875e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template31", "hole2": "windfury"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.4481072381467683}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -0.24040985107421875, -1.1444091796875e-05, -3.457056436673156e-06, -2.3841855067985307e-07, -7.593615737278014e-05, 0.0, -3.1207845211029053, -3.576278118089249e-07, -5.340576171875e-05, -4.00543212890625e-05, -3.4332275390625e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "divine_shield"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.383157502649425}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, taunt=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -1.9204626083374023, -1.9073486328125e-06, -0.0003006458282470703, 0.0, -1.9073486328125e-06, -0.0002956390380859375, -1.9073486328125e-06, -8.845329284667969e-05, -3.349725011503324e-05, -0.0001392364501953125, -1.2153024673461914, -2.2053474822314456e-05, -0.007183074951171875, -0.0011730194091796875, -0.000171661376953125, -2.6702880859375e-05, -0.0006084442138671875, -9.1552734375e-05, 0.0, -9.548664093017578e-05, -0.000255584716796875, -2.47955322265625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.8477219782653265e-05, 0.0, 0.0, 0.0, -0.015400290489196777, -1.1920928244535389e-07, -0.04149341583251953, -0.000244140625, -2.09808349609375e-05, -0.03281128406524658, -3.814697265625e-06, -6.103515625e-05, -0.00019073486328125, -1.52587890625e-05, -9.5367431640625e-06, -0.054291725158691406, -4.1961669921875e-05, -0.5862588882446289, 0.0, -0.000148773193359375, -1.9073486328125e-05, -3.4332275390625e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.89912844715672}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "1", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True, charge=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -1.9204626083374023, -1.9073486328125e-06, -0.0003006458282470703, 0.0, -1.9073486328125e-06, -0.0002956390380859375, -1.9073486328125e-06, -8.845329284667969e-05, -3.349725011503324e-05, -0.0001392364501953125, -1.2153024673461914, -2.2053474822314456e-05, -0.007183074951171875, -0.0011730194091796875, -0.000171661376953125, -2.6702880859375e-05, -0.0006084442138671875, -9.1552734375e-05, 0.0, -9.548664093017578e-05, -0.000255584716796875, -2.47955322265625e-05, -2.47955322265625e-05, -1.52587890625e-05, -1.8477219782653265e-05, 0.0, 0.0, 0.0, -0.015400290489196777, -1.1920928244535389e-07, -0.04149341583251953, -0.000244140625, -2.09808349609375e-05, -0.03281128406524658, -3.814697265625e-06, -6.103515625e-05, -0.00019073486328125, -1.52587890625e-05, -9.5367431640625e-06, -0.054291725158691406, -4.1961669921875e-05, -1.0619564056396484, 0.0, -9.34600830078125e-05, -0.000102996826171875, -7.82012939453125e-05, 0.0], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.374896536451153}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 4, windfury=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -4.366937637329102, 0.0, -0.009840011596679688, -7.62939453125e-06, -1.549718376736564e-06, -1.1920928244535389e-07, -7.37901427783072e-05, 0.0, -0.11485350131988525, -1.0728830375228426e-06, -0.000518798828125, -2.6702880859375e-05, -4.9591064453125e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "windfury"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.494085084201053}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -0.24040985107421875, -1.1444091796875e-05, -3.457056436673156e-06, -2.3841855067985307e-07, -7.593615737278014e-05, 0.0, -4.530413627624512, -6.198883056640625e-06, -0.0001468658447265625, -7.62939453125e-06, -4.00543212890625e-05, -5.7220458984375e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.79286302232569}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Did", "Damage", "<EOS>", "Give", "<EOS>", 208, 49, 174, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -3.0119447708129883, -0.044185638427734375, -3.814697265625e-06, -5.07818695041351e-05, -8.487700688419864e-05, -3.6954863844584906e-06, -0.8948522210121155, -0.0757361650466919, -1.0728823326644488e-05, -0.28838181495666504, -0.001156449317932129, 0.0, -0.30323028564453125, -3.814697265625e-06, -0.4886697232723236, -0.0007304957252927125, -0.09622704982757568, -1.7762184143066406e-05, 0.0], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"_type": "Template0", "hole0": 1, "hole4": [{"hole0": "Frozen", "_type": "Template38"}], "hole1": 4, "hole5": "TargetSelector", "hole3": "Give", "hole2": "DidDamage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.227032086221925}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "1", "<EOS>", "4", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, taunt=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -1.9204626083374023, -1.9073486328125e-06, -0.0003006458282470703, 0.0, -1.9073486328125e-06, -0.0002956390380859375, -1.9073486328125e-06, -8.845329284667969e-05, -3.349725011503324e-05, -0.0001392364501953125, -0.36406898498535156, -2.3841855067985307e-07, -0.0002384185791015625, -0.011282920837402344, -0.002735137939453125, -6.532639963552356e-05, -0.00035998597741127014, -0.00037575908936560154, -1.1920928244535389e-07, -3.038264036178589, -4.768370445162873e-07, -7.2479248046875e-05, -7.62939453125e-05, -2.86102294921875e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template31", "hole2": "taunt"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.3606384948787635}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -0.24040985107421875, -1.1444091796875e-05, -3.457056436673156e-06, -2.3841855067985307e-07, -7.593615737278014e-05, 0.0, -5.149117946624756, -3.099436753473128e-06, -0.000125885009765625, -2.86102294921875e-05, -4.9591064453125e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.41156996392553}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_damage=1)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -0.24040985107421875, -1.1444091796875e-05, -3.457056436673156e-06, -2.3841855067985307e-07, -7.593615737278014e-05, 0.0, -5.361372470855713, -7.629387255292386e-06, -0.00434112548828125, -0.0011577606201171875, -0.02055133506655693, 0.0], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template10", "hole2": "spell_damage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.6496732456296}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Attack", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Attack(), ActionTag(Damage(1),\n            HeroSelector()))])\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -3.0119447708129883, -0.044185638427734375, -3.814697265625e-06, -5.07818695041351e-05, -8.487700688419864e-05, -3.6954863844584906e-06, -1.1179872751235962, -0.0034999847412109375, -0.6265368461608887, -2.431869324936997e-05, -1.9073486328125e-06, -0.17920589447021484, 0.0, -0.3073282241821289, 0.0, -0.3479574918746948, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "HeroSelector", "hole3": "Damage", "hole2": "Attack"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.660561333005944}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, p):\n        return Minion(1, 4, stealth=True)\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -1.9204626083374023, -1.9073486328125e-06, -0.0003006458282470703, 0.0, -1.9073486328125e-06, -0.0002956390380859375, -1.9073486328125e-06, -8.845329284667969e-05, -3.349725011503324e-05, -0.0001392364501953125, -0.36406898498535156, -2.3841855067985307e-07, -0.0002384185791015625, -0.011282920837402344, -0.002735137939453125, -6.532639963552356e-05, -0.00035998597741127014, -0.00037575908936560154, -1.1920928244535389e-07, -3.498967409133911, -4.291534423828125e-06, -0.0007476806640625, -0.0006542205810546875, -3.62396240234375e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template31", "hole2": "stealth"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.822606439977754}, {"choice_history": [55, 124, 221, 63, 103, "Flying", "Machine", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Flying", " ", "Machine", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class FlyingMachine(MinionCard):\n\n    def __init__(self):\n        super().__init__('Flying Machine', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            SelfSelector()))])\n", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.71661376953125e-05, -7.62939453125e-06, -7.354942499659956e-05, -2.3483953555114567e-05, -0.00045944712474010885, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -2.0265579223632812e-06, -4.4226646423339844e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.0005016326904296875, -0.0001087188720703125, -2.7894584491150454e-05, -1.442432312614983e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0003361701965332031, 0.0, -5.924701690673828e-05, 0.0, -1.1324880688334815e-05, -9.536735888104886e-06, -5.7220458984375e-06, 0.0, -5.7220458984375e-06, 0.0, -9.5367431640625e-06, 0.0, -0.019957542419433594, -1.1682508556987159e-05, -3.0119447708129883, -0.044185638427734375, -3.814697265625e-06, -5.07818695041351e-05, -8.487700688419864e-05, -3.6954863844584906e-06, -2.3418259620666504, -0.07074928283691406, 0.0, -0.09101712703704834, -0.0001608053280506283, 0.0, -0.38905906677246094, 0.0, -0.0708867684006691, -1.9073486328125e-06, -0.5362425446510315, -2.0265579223632812e-06, 0.0], "model_output": {"body": [{"name": "FlyingMachine", "body": [{"_type": "Template3", "hole0": "Flying Machine", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "ALL"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.577961066713442}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.09808349609375e-05, -1.9073486328125e-06, -22.309473037719727], "model_output": {"body": [], "_type": "Module"}, "score": -22.30949592590332}]}
{"gold_code": "class GoblinAutoBarber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(IncreaseWeaponAttack(1), WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Goblin", " ", "Auto-Barber", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeHealth(1)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.09894943237304688, -6.866455078125e-05, -2.872943878173828e-05, -9.536738616588991e-07, -1.1444091796875e-05, -0.000453948974609375, -1.9073486328125e-06, -0.00017189979553222656, -1.9073486328125e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000377655029296875, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.561634780955501e-05, -1.3470649719238281e-05, -4.0531158447265625e-06, 0.0, -0.0003185272216796875, -8.7738037109375e-05, -5.7220458984375e-06, -2.9682672902708873e-05, -0.00015044177416712046, -0.00010466572712175548, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0021677399054169655, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -6.175041198730469e-05, -1.0847986231965479e-05, -0.521338939666748, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.8848648071289062e-05, -0.0002349343558307737, -0.6772719621658325, -1.9431114196777344e-05, -0.005565643310546875, -0.000316619873046875, -1.9073486328125e-06, -0.0001125335693359375, -4.768312646774575e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.24206161499023438, -9.536738616588991e-07, -1.9073486328125e-05, 0.0, -0.00041961669921875, -1.1920928244535389e-07, -1.9073486328125e-05, -4.9591064453125e-05, -2.86102294921875e-05, 0.0, -0.0015527009963989258, -4.2676016164477915e-05, -7.62939453125e-06, -0.04339885711669922, -0.000621795654296875, -0.0002082562423311174, -0.00022327899932861328, -0.004921555519104004, -0.35021793842315674, -1.9073486328125e-06, -0.055833131074905396, -7.62939453125e-06, -0.6319084167480469, 0.0, -0.19552600383758545, -0.0007165668648667634, 0.0, -0.04466438293457031, -2.6702880859375e-05, -5.960428097750992e-07, -2.0265579223632812e-06, -1.1920858014491387e-05, -5.960462772236497e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.881390302101501}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Goblin", " ", "Auto-Barber", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeHealth(1)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.09894943237304688, -6.866455078125e-05, -2.872943878173828e-05, -9.536738616588991e-07, -1.1444091796875e-05, -0.000453948974609375, -1.9073486328125e-06, -0.00017189979553222656, -1.9073486328125e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000377655029296875, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.561634780955501e-05, -1.3470649719238281e-05, -4.0531158447265625e-06, 0.0, -0.0003185272216796875, -8.7738037109375e-05, -5.7220458984375e-06, -2.9682672902708873e-05, -0.00015044177416712046, -0.00010466572712175548, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0021677399054169655, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -6.175041198730469e-05, -1.0847986231965479e-05, -0.521338939666748, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.8848648071289062e-05, -0.0002349343558307737, -0.7122584581375122, -2.169605613744352e-05, -0.0008144378662109375, -0.000370025634765625, 0.0, -4.38690185546875e-05, -2.205364035035018e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.2770814895629883, -8.344646857949556e-07, -1.1444091796875e-05, 0.0, -0.0003337860107421875, -1.1920928244535389e-07, -1.71661376953125e-05, -4.1961669921875e-05, -2.6702880859375e-05, 0.0, -0.0015488862991333008, -3.516612196108326e-05, -7.62939453125e-06, -0.049541473388671875, -0.00061798095703125, -0.00020634876273106784, -0.00024044513702392578, -0.005298018455505371, -0.36013567447662354, -1.9073486328125e-06, -0.05401240661740303, -5.7220458984375e-06, -0.6086502075195312, 0.0, -0.1956978589296341, -0.0005503891734406352, 0.0, -0.020531654357910156, -1.71661376953125e-05, -4.768339749716688e-07, -2.0265579223632812e-06, -1.2636104656849056e-05, -4.768370445162873e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.913717988293037}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Goblin", " ", "Auto-Barber", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeHealth(1)), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.09894943237304688, -6.866455078125e-05, -2.872943878173828e-05, -9.536738616588991e-07, -1.1444091796875e-05, -0.000453948974609375, -1.9073486328125e-06, -0.00017189979553222656, -1.9073486328125e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000377655029296875, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.561634780955501e-05, -1.3470649719238281e-05, -4.0531158447265625e-06, 0.0, -0.0003185272216796875, -8.7738037109375e-05, -5.7220458984375e-06, -2.9682672902708873e-05, -0.00015044177416712046, -0.00010466572712175548, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0021677399054169655, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -6.175041198730469e-05, -1.0847986231965479e-05, -1.12880277633667, 0.0, 0.0, 0.0, -1.1444091796875e-05, 0.0, -3.635883331298828e-05, -0.0002893988275900483, -0.44740116596221924, -3.2782554626464844e-05, -0.005627632141113281, -0.00028228759765625, -1.9073486328125e-06, -0.000102996826171875, -4.9709680752130225e-05, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.23234951496124268, -8.344646857949556e-07, -1.9073486328125e-05, 0.0, -0.000423431396484375, -1.1920928244535389e-07, -1.9073486328125e-05, -4.76837158203125e-05, -2.86102294921875e-05, 0.0, -0.0015736818313598633, -4.160317621426657e-05, -7.62939453125e-06, -0.04427909851074219, -0.0006256103515625, -0.00020885225967504084, -0.00022327899932861328, -0.004916071891784668, -0.3524336814880371, -1.9073486328125e-06, -0.055761054158210754, -7.62939453125e-06, -0.6432304382324219, 0.0, -0.19327078759670258, -0.0007396934670396149, 0.0, -0.04929065704345703, -2.86102294921875e-05, -5.960428097750992e-07, -2.0265579223632812e-06, -1.1801649634435307e-05, -5.960462772236497e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.26612542516407}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(1)),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -0.2518383264541626, 0.0, -0.0015430399216711521, -4.768360213347478e-06, -2.6702880859375e-05, -0.000244140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0003107786178588867, -3.421248038648628e-05, -1.9073486328125e-05, -0.07077598571777344, -0.000762939453125, -0.0003125600051134825, -0.0001850128173828125, -0.0035563705023378134, -0.36823344230651855, 0.0, -0.08464191854000092, -5.7220458984375e-06, -0.1614971160888672, 0.0, -0.22544458508491516, -5.6505199609091505e-05, 0.0, -0.001277923583984375, -7.62939453125e-06, -2.3841585061745718e-07, -2.0265579223632812e-06, -1.4185804502631072e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "PALADIN"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.5355730641960292}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Goblin", " ", "Auto-Barber", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeHealth(1)), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.09894943237304688, -6.866455078125e-05, -2.872943878173828e-05, -9.536738616588991e-07, -1.1444091796875e-05, -0.000453948974609375, -1.9073486328125e-06, -0.00017189979553222656, -1.9073486328125e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000377655029296875, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.561634780955501e-05, -1.3470649719238281e-05, -4.0531158447265625e-06, 0.0, -0.0003185272216796875, -8.7738037109375e-05, -5.7220458984375e-06, -2.9682672902708873e-05, -0.00015044177416712046, -0.00010466572712175548, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0021677399054169655, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -6.175041198730469e-05, -1.0847986231965479e-05, -0.521338939666748, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.8848648071289062e-05, -0.0002349343558307737, -0.6772719621658325, -1.9431114196777344e-05, -0.005565643310546875, -0.000316619873046875, -1.9073486328125e-06, -0.0001125335693359375, -4.768312646774575e-05, -5.7220458984375e-06, 0.0, -1.52587890625e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.24206161499023438, -9.536738616588991e-07, -1.9073486328125e-05, 0.0, -0.00041961669921875, -1.1920928244535389e-07, -1.9073486328125e-05, -4.9591064453125e-05, -2.86102294921875e-05, 0.0, -0.0015527009963989258, -4.2676016164477915e-05, -7.62939453125e-06, -0.04339885711669922, -0.000621795654296875, -0.0002082562423311174, -0.00022327899932861328, -0.004921555519104004, -0.35021793842315674, -1.9073486328125e-06, -0.055833131074905396, -7.62939453125e-06, -0.7587862014770508, -0.45782470703125, -5.7220458984375e-06, 0.0, -0.0009148120880126953, -5.7220458984375e-05, 0.0, -0.0088958740234375, -0.007233619689941406, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.5795731544494629, -0.001828908920288086, -3.2067273423308507e-05, -8.58306884765625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00012409687042236328, -2.3841855067985307e-07, -0.4994090795516968, -2.0265579223632812e-06, -0.0002593994140625, -0.0001697540283203125, -0.00029134011128917336, -0.00040137767791748047, 0.0, -0.00800323486328125, -3.814697265625e-06, -1.1920883480343036e-07, -2.3841855067985307e-07, -6.198863957251888e-06, -3.576278118089249e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.33249207485111}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Goblin", " ", "Auto-Barber", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(ChangeHealth(1)), MinionSelector(IsType(\n            MINION_TYPE.MURLOC), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.09894943237304688, -6.866455078125e-05, -2.872943878173828e-05, -9.536738616588991e-07, -1.1444091796875e-05, -0.000453948974609375, -1.9073486328125e-06, -0.00017189979553222656, -1.9073486328125e-06, -1.52587890625e-05, -2.09808349609375e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.000377655029296875, -3.4332275390625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.561634780955501e-05, -1.3470649719238281e-05, -4.0531158447265625e-06, 0.0, -0.0003185272216796875, -8.7738037109375e-05, -5.7220458984375e-06, -2.9682672902708873e-05, -0.00015044177416712046, -0.00010466572712175548, -1.52587890625e-05, -1.71661376953125e-05, 0.0, -0.0021677399054169655, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -6.175041198730469e-05, -1.0847986231965479e-05, -0.521338939666748, 0.0, 0.0, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -2.8848648071289062e-05, -0.0002349343558307737, -0.7122584581375122, -2.169605613744352e-05, -0.0008144378662109375, -0.000370025634765625, 0.0, -4.38690185546875e-05, -2.205364035035018e-05, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, 0.0, -2.288818359375e-05, -1.1920928244535389e-07, -0.2770814895629883, -8.344646857949556e-07, -1.1444091796875e-05, 0.0, -0.0003337860107421875, -1.1920928244535389e-07, -1.71661376953125e-05, -4.1961669921875e-05, -2.6702880859375e-05, 0.0, -0.0015488862991333008, -3.516612196108326e-05, -7.62939453125e-06, -0.049541473388671875, -0.00061798095703125, -0.00020634876273106784, -0.00024044513702392578, -0.005298018455505371, -0.36013567447662354, -1.9073486328125e-06, -0.05401240661740303, -5.7220458984375e-06, -0.7858505249023438, -0.46507930755615234, -5.7220458984375e-06, 0.0, -0.0009506940841674805, -4.76837158203125e-05, 0.0, -0.011445999145507812, -0.0064487457275390625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.5449676513671875, -0.001813650131225586, -3.1948064133757725e-05, -8.20159912109375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.00012218952178955078, -2.3841855067985307e-07, -0.4996227025985718, -2.0265579223632812e-06, -0.0002651214599609375, -0.0001735687255859375, -0.00028907519299536943, -0.00039565563201904297, 0.0, -0.008047103881835938, -3.814697265625e-06, -1.1920883480343036e-07, -2.3841855067985307e-07, -6.198863957251888e-06, -3.576278118089249e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Goblin Auto-Barber", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.413957040442519}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeAttack(1)),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -0.2518383264541626, 0.0, -0.0015430399216711521, -4.768360213347478e-06, -2.6702880859375e-05, -0.000244140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0003107786178588867, -3.421248038648628e-05, -1.9073486328125e-05, -0.07077598571777344, -0.000762939453125, -0.0003125600051134825, -0.0001850128173828125, -0.0035563705023378134, -1.1849136352539062, -1.9073486328125e-05, -0.05221346765756607, -1.9073486328125e-05, -0.719635009765625, -5.7220458984375e-06, -0.021513940766453743, -6.628033588640392e-05, 0.0, -0.001598358154296875, -7.62939453125e-06, -1.1920838005607948e-07, -1.1920928244535389e-07, -1.4901076610840391e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "PALADIN"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.674399101014522}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Weapon", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(1)),\n            WeaponSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -0.2518383264541626, 0.0, -0.0015430399216711521, -4.768360213347478e-06, -2.6702880859375e-05, -0.000244140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0003107786178588867, -3.421248038648628e-05, -1.9073486328125e-05, -0.07077598571777344, -0.000762939453125, -0.0003125600051134825, -0.0001850128173828125, -0.0035563705023378134, -0.36823344230651855, 0.0, -0.08464191854000092, -5.7220458984375e-06, -0.1614971160888672, 0.0, -1.8184716701507568, -0.00014507770538330078, 0.0, -0.000606536865234375, -1.9073486328125e-06, -2.3841585061745718e-07, -2.0265579223632812e-06, -1.8238888515043072e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "WeaponSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "PALADIN"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.128015666087009}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(1)),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -2.037985324859619, 0.0, -0.02686154656112194, -1.3351351299206726e-05, -1.71661376953125e-05, -0.000213623046875, -2.09808349609375e-05, 0.0, -0.0002917051315307617, -4.362964682513848e-05, -1.71661376953125e-05, -0.05547904968261719, -0.0005168914794921875, -0.0002772754232864827, -0.0001964569091796875, -0.0031234025955200195, -0.3674410581588745, 0.0, -0.0816563069820404, -7.62939453125e-06, -0.11909103393554688, 0.0, -0.23771169781684875, -5.8293338952353224e-05, 0.0, -0.0013217926025390625, -7.62939453125e-06, -2.3841676011215895e-07, -2.0265579223632812e-06, -1.4185804502631072e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.297112989776593}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 38, 127, "Null", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeAttack(1)),\n            MinionSelector(Null, picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -0.2518383264541626, 0.0, -0.0015430399216711521, -4.768360213347478e-06, -2.6702880859375e-05, -0.000244140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0003107786178588867, -3.421248038648628e-05, -1.9073486328125e-05, -0.07077598571777344, -0.000762939453125, -0.0003125600051134825, -0.0001850128173828125, -0.0035563705023378134, -1.1849136352539062, -1.9073486328125e-05, -0.05221346765756607, -1.9073486328125e-05, -0.6675434112548828, -0.4192209243774414, -0.0001049041748046875, 0.0, -0.00025713443756103516, -0.000579833984375, 0.0, -3.62396240234375e-05, -0.20594310760498047, -0.000980377197265625, -2.0503992345766164e-05, -3.933906555175781e-06, -6.29425048828125e-05, -0.0002040863037109375, -3.814697265625e-06, -0.5620980262756348, 0.0, -0.000148773193359375, -1.9073486328125e-06, -0.0008943035500124097, -0.00012123581109335646, 0.0, -0.0011577606201171875, -3.814697265625e-06, -5.960391717962921e-07, -1.9073486328125e-06, -1.3708998267247807e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "PALADIN"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.790960149790571}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "HUNTER", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(1)),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -2.5954365730285645, 0.0, -0.019660234451293945, -2.1576648578047752e-05, -1.9073486328125e-05, -0.000133514404296875, -2.09808349609375e-05, -1.9073486328125e-06, -0.00043201446533203125, -4.8636207793606445e-05, -1.9073486328125e-05, -0.07582855224609375, -0.0006694793701171875, -0.0002925340086221695, -0.00019848346710205078, -0.0035037994384765625, -0.35089659690856934, 0.0, -0.08149631321430206, -7.62939453125e-06, -0.12903785705566406, 0.0, -0.24564388394355774, -5.853175753145479e-05, 0.0, -0.0013141632080078125, -7.62939453125e-06, -2.3841585061745718e-07, -2.0265579223632812e-06, -1.4185804502631072e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "HUNTER"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.869509016123317}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(3)),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -0.2518383264541626, 0.0, -0.0015430399216711521, -4.768360213347478e-06, -2.6702880859375e-05, -0.000244140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0003107786178588867, -3.421248038648628e-05, -1.9073486328125e-05, -0.07077598571777344, -0.000762939453125, -0.0003125600051134825, -0.0001850128173828125, -0.0035563705023378134, -0.36823344230651855, 0.0, -2.618847370147705, -7.82012939453125e-05, -0.23792457580566406, -1.9073486328125e-06, -0.0486881360411644, -5.3524952818406746e-05, 0.0, -0.00128173828125, -7.62939453125e-06, -2.3841585061745718e-07, -1.1920928244535389e-07, -1.4185804502631072e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 3}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "PALADIN"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.969522840175294}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeAttack(1)),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -2.037985324859619, 0.0, -0.02686154656112194, -1.3351351299206726e-05, -1.71661376953125e-05, -0.000213623046875, -2.09808349609375e-05, 0.0, -0.0002917051315307617, -4.362964682513848e-05, -1.71661376953125e-05, -0.05547904968261719, -0.0005168914794921875, -0.0002772754232864827, -0.0001964569091796875, -0.0031234025955200195, -1.187172532081604, -2.09808349609375e-05, -0.049221470952034, -1.9073486328125e-05, -0.5642833709716797, -5.7220458984375e-06, -0.022415002807974815, -6.794927321607247e-05, 0.0, -0.0016880035400390625, -7.62939453125e-06, -1.1920838005607948e-07, -2.0265579223632812e-06, -1.4901076610840391e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.3147198796047235}, {"choice_history": [55, 124, 221, 63, 103, "Goblin", "Auto-Barber", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Goblin", " ", "Auto-Barber", "<EOS>", "2", "<EOS>", "PALADIN", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "2", "<EOS>"], "inferred_code": "class GoblinAuto-Barber(MinionCard):\n\n    def __init__(self):\n        super().__init__('Goblin Auto-Barber', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(ChangeHealth(1)),\n            MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 2)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -4.76837158203125e-05, 0.0, -0.0001991788885788992, -9.298280929215252e-06, -0.0003121621848549694, -3.814697265625e-06, -0.0001049041748046875, 0.0, -5.960462772236497e-07, -2.4557111828471534e-05, -7.62939453125e-06, -9.5367431640625e-06, -2.3638105392456055, -2.47955322265625e-05, -4.768370445162873e-07, -2.6583627914078534e-05, -3.457069396972656e-05, -7.62939453125e-06, -0.0001097958447644487, 0.0, -0.2518383264541626, 0.0, -0.0015430399216711521, -4.768360213347478e-06, -2.6702880859375e-05, -0.000244140625, -3.24249267578125e-05, -1.9073486328125e-06, -0.0003107786178588867, -3.421248038648628e-05, -1.9073486328125e-05, -0.07077598571777344, -0.000762939453125, -0.0003125600051134825, -0.0001850128173828125, -0.0035563705023378134, -0.36823344230651855, 0.0, -0.08464191854000092, -5.7220458984375e-06, -0.1614971160888672, 0.0, -3.3087518215179443, -0.00011456012725830078, 0.0, -0.0034637451171875, -1.9073486328125e-06, -3.576224116841331e-07, -1.9073486328125e-06, -1.9907789464923553e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "GoblinAuto-Barber", "body": [{"_type": "Template3", "hole0": "Goblin Auto-Barber", "hole4": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 2, "hole3": "battlecry", "hole2": "PALADIN"}, {"hole1": 2, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.621124177026246}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.74485969543457], "model_output": {"body": [], "_type": "Module"}, "score": -22.74486541748047}]}
{"gold_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), MinionSelector(\n            IsType(MINION_TYPE.MECH), picker=RandomPicker())))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Iron", " ", "Sensei", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.5082511901855469, -7.62939453125e-06, 0.0, -0.00048828125, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.2649765014648438e-06, -3.0517578125e-05, -4.792213439941406e-05, 0.0, -8.96453857421875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.1682462172757369e-05, -4.684855593950488e-05, -2.5510777049930766e-05, -4.208087921142578e-05, -1.9073486328125e-06, 0.0, -9.691187005955726e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -6.711483001708984e-05, -0.03057420253753662, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.986990567587782e-06, -0.003561258316040039, -1.1920928244535389e-07, -4.1961669921875e-05, -0.0001468658447265625, 0.0, -0.0001081228256225586, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -0.0005054473876953125, 0.0, -9.918212890625e-05, 0.0, -0.07178020477294922, -3.933906555175781e-06, -0.5561304092407227, -0.178863525390625, -3.373519939486869e-05, -1.1324817933200393e-05, -3.659556750790216e-05, -1.2755313036905136e-05, -0.29590392112731934, -0.09756743907928467, -1.9073486328125e-06, -0.002460350515320897, -7.176397775765508e-05, -0.0014848709106445312, -0.5153226852416992, -0.003936767578125, -0.004038095474243164, 0.0, -0.030320286750793457, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Iron Sensei", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.376228941794487}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -0.5035443305969238, -0.03429818153381348, -1.9073486328125e-06, -0.002160426462069154, -3.135204315185547e-05, -0.0003223419189453125, -0.4575815200805664, -0.002460479736328125, -0.009464144706726074, 0.0, -0.020432591438293457, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.757829412885201}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "2", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(2(), ActionTag(Give(Buff(\n            <UNK>Attack())), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -1.1385501623153687, -0.004155633971095085, -0.0008836981141939759, -3.4928321838378906e-05, -0.00019073486328125, -0.39048099517822266, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.002596259117126465, -0.0013829469680786133, -0.0016193389892578125, -0.0001049041748046875, -1.1444091796875e-05, -0.1761951893568039, -0.6406750679016113, 0.0, -0.02988588809967041, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"args": [{"hole0": "<UNK>Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "2"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.114308865226064}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "2", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(2(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -1.1385501623153687, -0.004155633971095085, -0.0008836981141939759, -3.4928321838378906e-05, -0.00019073486328125, -1.3285064697265625, -0.004815101623535156, -0.004160046577453613, 0.0, -0.020806431770324707, -7.62939453125e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "2"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.229639159000669}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Iron", " ", "Sensei", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 77, 157, "2", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(2))]), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.5082511901855469, -7.62939453125e-06, 0.0, -0.00048828125, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.2649765014648438e-06, -3.0517578125e-05, -4.792213439941406e-05, 0.0, -8.96453857421875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.1682462172757369e-05, -4.684855593950488e-05, -2.5510777049930766e-05, -4.208087921142578e-05, -1.9073486328125e-06, 0.0, -9.691187005955726e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -6.711483001708984e-05, -0.03057420253753662, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.986990567587782e-06, -0.003561258316040039, -1.1920928244535389e-07, -4.1961669921875e-05, -0.0001468658447265625, 0.0, -0.0001081228256225586, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -0.0005054473876953125, 0.0, -9.918212890625e-05, 0.0, -0.07178020477294922, -3.933906555175781e-06, -0.8608894348144531, -0.0010471343994140625, -5.245195097813848e-06, -1.7881377516459906e-06, -0.00024280429352074862, -9.536738616588991e-07, -0.37718188762664795, -0.3376713991165161, -0.000329494068864733, -0.0017242431640625, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.8302257061004639, -0.0005830526351928711, -2.1576881408691406e-05, -0.03954792022705078, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.0003261566162109375, 0.0, -0.02470111846923828, -1.9073486328125e-06, -0.0001049041748046875, -0.000102996826171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0017094609793275595, -2.09808349609375e-05, -4.768370445162873e-07, -3.0517578125e-05, -0.12219810485839844, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0012648015981540084, -7.855892181396484e-05, -7.43865966796875e-05, -0.3068361282348633, -0.0001354217529296875, -0.14205455780029297, -0.7032194137573242, -0.00020599365234375, -0.0005011563189327717, -1.9073486328125e-06, -0.0040645599365234375, -0.000637054443359375, -0.0006160736083984375, -1.9073486328125e-06, -0.0019388198852539062, -9.918212890625e-05, -0.0028432265389710665, -7.486343383789062e-05, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Iron Sensei", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template2", "hole0": 2, "hole4": [{"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.453427987718463}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Iron", " ", "Sensei", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 77, 157, "2", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give([Buff(ChangeHealth(2)), Buff(\n            ChangeAttack(2))]), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.5082511901855469, -7.62939453125e-06, 0.0, -0.00048828125, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.2649765014648438e-06, -3.0517578125e-05, -4.792213439941406e-05, 0.0, -8.96453857421875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.1682462172757369e-05, -4.684855593950488e-05, -2.5510777049930766e-05, -4.208087921142578e-05, -1.9073486328125e-06, 0.0, -9.691187005955726e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -6.711483001708984e-05, -0.03057420253753662, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.986990567587782e-06, -0.003561258316040039, -1.1920928244535389e-07, -4.1961669921875e-05, -0.0001468658447265625, 0.0, -0.0001081228256225586, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -0.0005054473876953125, 0.0, -9.918212890625e-05, 0.0, -0.07178020477294922, -3.933906555175781e-06, -0.8608894348144531, -0.0010471343994140625, -5.245195097813848e-06, -1.7881377516459906e-06, -0.00024280429352074862, -9.536738616588991e-07, -0.37718188762664795, -0.3376713991165161, -0.000329494068864733, -0.0017242431640625, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.8302257061004639, -0.0005830526351928711, -2.1576881408691406e-05, -0.03954792022705078, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.0003261566162109375, 0.0, -0.02470111846923828, -1.9073486328125e-06, -0.0001049041748046875, -0.000102996826171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0017094609793275595, -2.09808349609375e-05, -4.768370445162873e-07, -3.0517578125e-05, -0.12219810485839844, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0012648015981540084, -7.855892181396484e-05, -7.43865966796875e-05, -0.3068361282348633, -0.0001354217529296875, -0.14205455780029297, -0.6861591339111328, -0.023421287536621094, -0.0023033798206597567, -7.390960945485858e-06, -0.0025501251220703125, -7.05718994140625e-05, -0.0002460479736328125, -9.5367431640625e-06, -0.0001239776611328125, -6.29425048828125e-05, -0.03939591720700264, -3.2901763916015625e-05, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Iron Sensei", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template2", "hole0": 2, "hole4": [{"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template27"}, {"hole0": 2, "_type": "Template28"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.493607042421921}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            Buff(<UNK>Attack())), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -0.5035443305969238, -0.03429818153381348, -1.9073486328125e-06, -0.002160426462069154, -3.135204315185547e-05, -0.0003223419189453125, -2.036646842956543, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -0.01267993450164795, -0.005404829978942871, -0.0022068023681640625, -2.47955322265625e-05, -1.33514404296875e-05, -0.15861602127552032, -0.36137810349464417, 0.0, -0.028252840042114258, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"args": [{"hole0": "<UNK>Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.873137086697113}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "2", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(1)), Buff(ChangeHealth(2))]), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -0.5035443305969238, -0.03429818153381348, -1.9073486328125e-06, -0.002160426462069154, -3.135204315185547e-05, -0.0003223419189453125, -1.9492759704589844, -8.20159912109375e-05, -0.04358482360839844, -0.011104583740234375, -0.0024871826171875, -0.4767845869064331, 0.0, -0.029717445373535156, -0.0017414093017578125, -0.3510555028915405, 0.0, -0.0015022741863504052, -2.9087066650390625e-05, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.135251744368304}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -0.5035443305969238, -0.03429818153381348, -1.9073486328125e-06, -0.002160426462069154, -3.135204315185547e-05, -0.0003223419189453125, -1.9492759704589844, -8.20159912109375e-05, -0.04358482360839844, -0.011104583740234375, -0.0024871826171875, -0.9756866693496704, 0.0, -0.006591796875, -0.0006504058837890625, -0.005018115043640137, 0.0, -0.001957654720172286, -4.792213439941406e-05, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.264374002648708}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give([\n            Buff(ChangeAttack(1)), Buff(ChangeHealth(1))]), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -3.160400390625, -0.0005970001220703125, -0.00013577067875303328, -1.883505319710821e-05, -0.000102996826171875, -1.1682510375976562e-05, -0.00014936091611161828, -1.1920928244535389e-07, -0.18737053871154785, 0.0, -0.2744617462158203, -0.3913125991821289, -8.117820834740996e-05, -4.768360213347478e-06, -0.00012133671407354996, -8.344646857949556e-07, -0.0830092802643776, -0.005825161933898926, -1.9073486328125e-06, -0.02538442611694336, -1.728534698486328e-05, -1.1444091796875e-05, -0.9585275650024414, -0.0001068115234375, -0.038196563720703125, -0.008523941040039062, -0.0033063888549804688, -0.003711697645485401, 0.0, -0.02938365936279297, -0.0009670257568359375, -0.22174465656280518, 0.0, -0.0004227157623972744, -8.225440979003906e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template0", "hole0": 2, "hole4": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 1, "_type": "Template27"}], "_type": "List"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.4165916718385105}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -3.160400390625, -0.0005970001220703125, -0.00013577067875303328, -1.883505319710821e-05, -0.000102996826171875, -1.1682510375976562e-05, -0.00014936091611161828, -1.1920928244535389e-07, -0.18737053871154785, 0.0, -0.2744617462158203, -0.3913125991821289, -8.117820834740996e-05, -4.768360213347478e-06, -0.00012133671407354996, -8.344646857949556e-07, -0.0830092802643776, -0.005825161933898926, -1.9073486328125e-06, -0.02538442611694336, -1.728534698486328e-05, -1.1444091796875e-05, -1.4024276733398438, -0.004299163818359375, -0.008078336715698242, -1.9073486328125e-06, -0.012712836265563965, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template0", "hole0": 2, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.579216153350977}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "2", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(2(), ActionTag(Give(Buff(<UNK>(\n            ))), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.9367637634277344, -0.0002002716064453125, -0.0007460909546352923, -9.441266593057662e-05, -2.098078948620241e-05, -1.9073486328125e-06, -2.7418038371251896e-05, 0.0, -0.005614280700683594, -8.225440979003906e-06, -0.00022280204575508833, -5.602834789897315e-06, -1.52587890625e-05, -1.1444091796875e-05, -5.91278076171875e-05, 0.0, -1.52587890625e-05, 0.0, -0.014088630676269531, -2.3841855067985307e-07, -0.6351633071899414, -0.06052875518798828, -4.184138379059732e-05, -1.0847986231965479e-05, -3.755002762773074e-05, -1.7165990357170813e-05, -1.1385501623153687, -0.004155633971095085, -0.0008836981141939759, -3.4928321838378906e-05, -0.00019073486328125, -0.39048099517822266, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.002596259117126465, -0.0013829469680786133, -0.0016193389892578125, -0.0001049041748046875, -1.1444091796875e-05, -0.1761951893568039, -1.792463779449463, -0.7086890935897827, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Iron Sensei", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"args": [{"hole0": "<UNK>", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "SelfSelector", "hole3": "Give", "hole2": "2"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.944900782264028}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Iron", " ", "Sensei", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 77, 157, "2", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "give", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .MECH)), ActionTag(Give(give()), SelfSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -0.051100730895996094, 0.0, -8.82148651726311e-06, 0.0, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -1.3589859008789062e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.5082511901855469, -7.62939453125e-06, 0.0, -0.00048828125, -1.9073486328125e-05, 0.0, -5.7220458984375e-06, 0.0, -2.2649765014648438e-06, -3.0517578125e-05, -4.792213439941406e-05, 0.0, -8.96453857421875e-05, -1.52587890625e-05, -1.33514404296875e-05, -1.1682462172757369e-05, -4.684855593950488e-05, -2.5510777049930766e-05, -4.208087921142578e-05, -1.9073486328125e-06, 0.0, -9.691187005955726e-05, -3.576278118089249e-07, -1.9073486328125e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -6.711483001708984e-05, -0.03057420253753662, 0.0, -3.814697265625e-06, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -3.814697265625e-06, -7.986990567587782e-06, -0.003561258316040039, -1.1920928244535389e-07, -4.1961669921875e-05, -0.0001468658447265625, 0.0, -0.0001081228256225586, -1.9073486328125e-05, -2.47955322265625e-05, 0.0, -0.0005054473876953125, 0.0, -9.918212890625e-05, 0.0, -0.07178020477294922, -3.933906555175781e-06, -0.8608894348144531, -0.0010471343994140625, -5.245195097813848e-06, -1.7881377516459906e-06, -0.00024280429352074862, -9.536738616588991e-07, -0.37718188762664795, -0.3376713991165161, -0.000329494068864733, -0.0017242431640625, -3.814697265625e-06, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.8302257061004639, -0.0005830526351928711, -2.1576881408691406e-05, -0.03954792022705078, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -0.0003261566162109375, 0.0, -0.02470111846923828, -1.9073486328125e-06, -0.0001049041748046875, -0.000102996826171875, -3.814697265625e-06, -1.9073486328125e-06, 0.0, -0.0017094609793275595, -2.09808349609375e-05, -4.768370445162873e-07, -3.0517578125e-05, -0.12219810485839844, -1.9073486328125e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0012648015981540084, -7.855892181396484e-05, -7.43865966796875e-05, -1.3447685241699219, -4.57763671875e-05, -0.5448406934738159, -0.22064530849456787, -0.0001659393310546875, 0.0, -0.6806125640869141, -2.0265579223632812e-06, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Iron Sensei", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template2", "hole0": 2, "hole4": [{"args": [{"args": [{"hole0": "give", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.081278554010645}, {"choice_history": [55, 124, 221, 63, 103, "Iron", "Sensei", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Iron", " ", "Sensei", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 70, 140, "2", "<EOS>", "2", "<EOS>", "Turn", "Ended", "<EOS>", "Give", "<EOS>", 208, 49, 174, "Frozen", "<EOS>", "Target", "Selector", "<EOS>"], "inferred_code": "class IronSensei(MinionCard):\n\n    def __init__(self):\n        super().__init__('Iron Sensei', 3, CHARACTER_CLASS.ALL, CARD_RARITY\n            .RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 2, effects=[Effect(TurnEnded(), ActionTag(Give(\n            Frozen()), TargetSelector()))])\n", "score_history": [0.0, -5.7220458984375e-06, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.008251858875155449, -2.8729025871143676e-05, -0.014299352653324604, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -2.3841855067985307e-07, -3.445148468017578e-05, 0.0, -7.62939453125e-06, -3.160400390625, -0.0005970001220703125, -0.00013577067875303328, -1.883505319710821e-05, -0.000102996826171875, -1.1682510375976562e-05, -0.00014936091611161828, -1.1920928244535389e-07, -0.18737053871154785, 0.0, -0.2744617462158203, -0.3913125991821289, -8.117820834740996e-05, -4.768360213347478e-06, -0.00012133671407354996, -8.344646857949556e-07, -0.0830092802643776, -0.005825161933898926, -1.9073486328125e-06, -0.02538442611694336, -1.728534698486328e-05, -1.1444091796875e-05, -1.702519416809082, -0.0027923583984375, -0.16656607389450073, -0.0022522760555148125, -0.2528475522994995, -0.00021207332611083984, 0.0], "model_output": {"body": [{"name": "IronSensei", "body": [{"hole1": 3, "hole0": "Iron Sensei", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template0", "hole0": 2, "hole4": [{"hole0": "Frozen", "_type": "Template38"}], "hole1": 2, "hole5": "TargetSelector", "hole3": "Give", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.278882171948759}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -5.7220458984375e-06, -22.39211082458496], "model_output": {"body": [], "_type": "Module"}, "score": -22.39211654663086}]}
{"gold_code": "class MalGanis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(ChangeHealth(2), MinionSelector(\n            IsType(MINION_TYPE.DEMON))), Aura(ChangeAttack(2),\n            MinionSelector(IsType(MINION_TYPE.DEMON))), Aura(Immune(),\n            HeroSelector())])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, spell_damage=1)\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -2.2266695499420166, -1.9073484509135596e-05, -0.008707046508789062, -0.0033359527587890625, -0.09464382380247116, -1.9073486328125e-06], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"n": 1, "_type": "Num"}, "hole0": 9, "_type": "Template10", "hole2": "spell_damage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.5164126579310633}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, taunt=True)\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -2.5229222774505615, -1.6689286894688848e-06, -0.002216339111328125, -1.33514404296875e-05, -0.0001506805419921875, 0.0], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 9, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7083396215588564}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, taunt=True)\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.9254485368728638, 0.0, -0.00655364990234375, -0.008815765380859375, 0.0, -4.9591064453125e-05, -7.867813110351562e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, -0.1025247573852539, -5.7220458984375e-06, -0.18202495574951172, -1.71661376953125e-05, -2.062320345430635e-05, -6.9141146923357155e-06, -0.05962264537811279, -2.3841574147809297e-05, -2.185462474822998, -1.5497195136049413e-06, -0.00206756591796875, -1.33514404296875e-05, -0.00016021728515625, 0.0], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 9, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7727163334376215}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, spell_damage=1)\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.9254485368728638, 0.0, -0.00655364990234375, -0.008815765380859375, 0.0, -4.9591064453125e-05, -7.867813110351562e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, -0.1025247573852539, -5.7220458984375e-06, -0.18202495574951172, -1.71661376953125e-05, -2.062320345430635e-05, -6.9141146923357155e-06, -0.05962264537811279, -2.3841574147809297e-05, -2.1275596618652344, -1.7166135876323096e-05, -0.0068912506103515625, -0.0034704208374023438, -0.11709523946046829, -1.9073486328125e-06], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"n": 1, "_type": "Num"}, "hole0": 9, "_type": "Template10", "hole2": "spell_damage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.840046820509521}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, divine_shield=True)\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -3.279696226119995, -1.5497195136049413e-06, -0.0002460479736328125, -1.33514404296875e-05, -0.0001068115234375, 0.0], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 9, "_type": "Template10", "hole2": "divine_shield"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.463099290862864}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Immune", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsType(\n            MINION_TYPE.BEAST))), Effect(Attack(), MinionSelector(IsType(\n            MINION_TYPE.BEAST)))])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -0.49024081230163574, -2.384185791015625e-06, -0.00502777099609375, -9.918212890625e-05, -0.37975406646728516, 0.0, -7.43865966796875e-05, -0.0027561187744140625, 0.0, -0.07620358467102051, -1.2397744285408407e-05, -7.2479248046875e-05, -0.07558822631835938, -7.62939453125e-06, -0.3662070333957672, -0.00027990262606181204, -0.12508010864257812, -0.13770675659179688, -3.814697265625e-06, 0.0, -0.0011985301971435547, -0.000576019287109375, 0.0, -0.0033512115478515625, -0.5546903610229492, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.012706518173217773, -0.0005518197431229055, -1.7881377516459906e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, 0.0, -0.0012111663818359375, -2.741813204920618e-06, -0.01863574981689453, -3.445148468017578e-05, -0.02834320068359375, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -0.45700228214263916, -1.5854802768444642e-05, -0.00096893310546875, -0.0027713775634765625, -9.918212890625e-05, -0.07372606545686722, -0.05786550045013428, -0.00695037841796875, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.25919175148010254, -5.7220458984375e-06, 0.0, -0.043895721435546875, -0.5204200744628906, 0.0, -1.1444091796875e-05, 0.0, -0.008544325828552246, -0.00022649765014648438, -4.768370445162873e-07, -0.0001468658447265625, -1.9073486328125e-06, 0.0, -2.86102294921875e-05, 0.0, -0.000308990478515625, -5.960462772236497e-07, -0.03416919708251953, -3.063678741455078e-05], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Immune", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.930064883360821}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Immune", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Immune", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(Adjacent()\n            )), Buff(Immune())])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -0.49024081230163574, -2.384185791015625e-06, -0.00502777099609375, -9.918212890625e-05, -0.37975406646728516, 0.0, -7.43865966796875e-05, -0.0027561187744140625, 0.0, -0.07620358467102051, -1.2397744285408407e-05, -7.2479248046875e-05, -0.07558822631835938, -7.62939453125e-06, -0.3662070333957672, -0.00027990262606181204, -0.12508010864257812, -0.13770675659179688, -3.814697265625e-06, 0.0, -0.0011985301971435547, -0.000576019287109375, 0.0, -0.0033512115478515625, -0.8554697036743164, 0.0, -0.9382708668708801, -0.0006056929705664515, -0.014434814453125, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.1829293966293335, -8.964433800429106e-05, -0.00030517578125, -0.020639419555664062, -1.9073486328125e-06, -0.059473149478435516, -0.038284387439489365], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Immune", "_type": "Template38"}, {"args": [{"hole0": "Adjacent", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Immune", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.95779141518134}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Immune", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Immune", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(Adjacent()\n            )), Buff(Immune())])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.9254485368728638, 0.0, -0.00655364990234375, -0.008815765380859375, 0.0, -4.9591064453125e-05, -7.867813110351562e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, -0.1025247573852539, -5.7220458984375e-06, -0.18202495574951172, -1.71661376953125e-05, -2.062320345430635e-05, -6.9141146923357155e-06, -0.05962264537811279, -2.3841574147809297e-05, -0.6249128580093384, -2.384185791015625e-06, -0.0057849884033203125, -9.34600830078125e-05, -0.34000396728515625, 0.0, -9.1552734375e-05, -0.0036344528198242188, 0.0, -0.06958889961242676, -1.2874577805632725e-05, -7.05718994140625e-05, -0.07470512390136719, -7.62939453125e-06, -0.36424577236175537, -0.00027692236471921206, -0.12727737426757812, -0.12452983856201172, -3.814697265625e-06, 0.0, -0.0012214183807373047, -0.0006084442138671875, 0.0, -0.00324249267578125, -0.7752323150634766, 0.0, -0.9456392526626587, -0.0005946066812612116, -0.013788223266601562, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.18501698970794678, -9.012115333462134e-05, -0.0003070831298828125, -0.0197601318359375, -1.9073486328125e-06, -0.058989930897951126, -0.03842191398143768], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Immune", "_type": "Template38"}, {"args": [{"hole0": "Adjacent", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Immune", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.363178027153914}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Character", "<UNK>", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Immune", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Effect(Character<UNK>(player=BothPlayer(\n            )), ActionTag(Give(Immune()), SelfSelector()))])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -0.49024081230163574, -2.384185791015625e-06, -0.00502777099609375, -9.918212890625e-05, -1.169926643371582, -1.9073486328125e-06, -1.9073486328125e-05, -2.6702880859375e-05, 0.0, -1.4243580102920532, -4.970938971382566e-05, -1.52587890625e-05, -0.044269561767578125, -0.09113407135009766, -0.000118255615234375, -1.9073486328125e-06, -0.12412917613983154, -0.04097457975149155, -0.004250645637512207, -0.013062477111816406, -0.0001201629638671875, -1.1444091796875e-05, -0.001047372817993164, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -0.030882954597473145, -1.9073486328125e-06, 0.0, -0.0061359405517578125, -2.47955322265625e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.007101178169250488, -4.017353057861328e-05, -5.6028297876764555e-06, -3.814697265625e-06, -0.6653861999511719, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.01620788499712944, -0.0004923343076370656, -1.9073486328125e-06, -0.021802902221679688, -5.7220458984375e-06, -0.009132180362939835, -0.036132436245679855, -3.0517578125e-05, -1.9073486328125e-06, -0.008890549652278423, -1.5735626220703125e-05, 0.0], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "Character<UNK>", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Immune", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.394280093951615}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Immune", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Immune", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsType(\n            MINION_TYPE.BEAST))), Buff(Immune())])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -0.49024081230163574, -2.384185791015625e-06, -0.00502777099609375, -9.918212890625e-05, -0.37975406646728516, 0.0, -7.43865966796875e-05, -0.0027561187744140625, 0.0, -0.07620358467102051, -1.2397744285408407e-05, -7.2479248046875e-05, -0.07558822631835938, -7.62939453125e-06, -0.3662070333957672, -0.00027990262606181204, -0.12508010864257812, -0.13770675659179688, -3.814697265625e-06, 0.0, -0.0011985301971435547, -0.000576019287109375, 0.0, -0.0033512115478515625, -0.5546903610229492, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.012706518173217773, -0.0005518197431229055, -1.7881377516459906e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, 0.0, -0.0012111663818359375, -2.741813204920618e-06, -0.01863574981689453, -3.445148468017578e-05, -0.02834320068359375, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -1.5202127695083618, -6.616022437810898e-05, -0.00017547607421875, -0.008298873901367188, -3.814697265625e-06, -0.37569886445999146, -0.10483399033546448], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Immune", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Immune", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.47293047917416}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Immune", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Immune", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsType(\n            MINION_TYPE.BEAST))), Buff(Immune())])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.9254485368728638, 0.0, -0.00655364990234375, -0.008815765380859375, 0.0, -4.9591064453125e-05, -7.867813110351562e-06, -3.814697265625e-06, 0.0, -7.62939453125e-06, 0.0, -6.4849853515625e-05, -1.1920928244535389e-07, -0.1025247573852539, -5.7220458984375e-06, -0.18202495574951172, -1.71661376953125e-05, -2.062320345430635e-05, -6.9141146923357155e-06, -0.05962264537811279, -2.3841574147809297e-05, -0.6249128580093384, -2.384185791015625e-06, -0.0057849884033203125, -9.34600830078125e-05, -0.34000396728515625, 0.0, -9.1552734375e-05, -0.0036344528198242188, 0.0, -0.06958889961242676, -1.2874577805632725e-05, -7.05718994140625e-05, -0.07470512390136719, -7.62939453125e-06, -0.36424577236175537, -0.00027692236471921206, -0.12727737426757812, -0.12452983856201172, -3.814697265625e-06, 0.0, -0.0012214183807373047, -0.0006084442138671875, 0.0, -0.00324249267578125, -0.6185464859008789, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.012819051742553711, -0.0005614756955765188, -1.7881377516459906e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, 0.0, -0.0012111663818359375, -2.741813204920618e-06, -0.01861286163330078, -3.445148468017578e-05, -0.027215957641601562, -4.57763671875e-05, -1.1444091796875e-05, 0.0, -1.527438759803772, -6.663703243248165e-05, -0.0001773834228515625, -0.008329391479492188, -3.814697265625e-06, -0.3728639483451843, -0.10550232976675034], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Immune", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Immune", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.0188973651295115}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "<UNK>", "Spell", "Target", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Adjacent", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Immune", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            Adjacent())), Buff(Immune())])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -0.49024081230163574, -2.384185791015625e-06, -0.00502777099609375, -9.918212890625e-05, -0.37975406646728516, 0.0, -7.43865966796875e-05, -0.0027561187744140625, 0.0, -0.07620358467102051, -1.2397744285408407e-05, -7.2479248046875e-05, -0.07558822631835938, -7.62939453125e-06, -1.3751651048660278, -0.510981559753418, -0.040560364723205566, -4.768370445162873e-07, -0.13039207458496094, -0.000110626220703125, -1.1444091796875e-05, 0.0, -0.003479480743408203, -3.814697265625e-06, 0.0, -0.3163928985595703, -0.277191162109375, 0.0, -0.9199151396751404, -0.00032375575392507017, -0.04083061218261719, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.09763383865356445, -0.00011646681377897039, -0.000423431396484375, -0.05891609191894531, -1.9073486328125e-06, -0.05133916810154915, -0.04426511004567146], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "<UNK>SpellTarget", "_type": "Template38"}, {"args": [{"hole0": "Adjacent", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Immune", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.080938408733154}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "9", "<EOS>", 39, 130, "7", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 52, 158, "1", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, charge=True, enrage=[Aura(ChangeAttack(1),\n            SelfSelector())])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -3.0966415405273438, 0.0, -0.0018739700317382812, -9.65590606938349e-06, 0.0, -0.000946044921875, -1.9073486328125e-06, -0.00021851029305253178, -5.209310256759636e-05, -5.7220458984375e-06, -0.21697866916656494, -4.541770613286644e-05, -0.0029449462890625, -0.0002765655517578125, -5.7220458984375e-05, -0.0003376007080078125, -0.0015735626220703125, -5.7220458984375e-06, 0.0, -0.0006603002548217773, -0.00014519687101710588, -3.0517578125e-05, -5.7220458984375e-06, 0.0, -0.0004154450143687427, -5.960462772236497e-07, -1.9073486328125e-06, 0.0, -0.14523088932037354, -3.576277322281385e-06, -0.08026409149169922, -4.38690185546875e-05, -1.9073486328125e-06, -0.058147549629211426, -1.9073486328125e-06, -0.0001125335693359375, -5.7220458984375e-06, -8.58306884765625e-05, -4.00543212890625e-05, -0.9941959381103516, -0.12643909454345703, -0.8435549139976501, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 9, "_type": "Num"}, {"n": 7, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"hole0": 1, "_type": "Template20"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.501556980702112}, {"choice_history": [55, 124, 221, 63, 103, "Mal'Ganis", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mal'Ganis", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "9", "<EOS>", "7", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Immune", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Is", "Hero", "<EOS>"], "inferred_code": "class Mal'Ganis(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mal'Ganis\", 9, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(9, 7, auras=[Aura(Immune(), MinionSelector(IsType(\n            MINION_TYPE.BEAST))), Effect(Attack(), MinionSelector(IsHero()))])\n", "score_history": [0.0, 0.0, -9.5367431640625e-06, -2.09808349609375e-05, -5.7220458984375e-06, -0.00030048430198803544, -0.012969952076673508, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -2.205366217822302e-05, -1.6927657270571217e-05, -3.814697265625e-06, -5.7220458984375e-06, -0.0007266998291015625, -1.9073486328125e-06, -3.8146954466355965e-06, -1.1920928244535389e-07, 0.0, -3.814697265625e-06, 0.0, -0.0004364508204162121, -9.059865078597795e-06, -2.09808349609375e-05, -0.001178741455078125, -3.814697265625e-06, -2.09808349609375e-05, -0.041545867919921875, -1.71661376953125e-05, 0.0, 0.0, 0.0, -1.4305104514278355e-06, -1.1444091796875e-05, -2.741813204920618e-06, 0.0, -0.001628875732421875, -9.72747802734375e-05, -7.62939453125e-06, -1.1920928244535389e-07, -8.225440979003906e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.0039691925048828125, -8.344646857949556e-07, 0.0, 0.0, -1.71661376953125e-05, 0.0, -5.841253368998878e-06, -5.149829667061567e-05, -0.23606407642364502, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -2.1457672119140625e-06, -0.000554766389541328, -0.5475360155105591, -3.576278118089249e-07, -0.000102996826171875, -0.000232696533203125, 0.0, -3.24249267578125e-05, -1.3709068298339844e-05, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -4.57763671875e-05, -1.1920928244535389e-07, -0.08240604400634766, -7.62939453125e-06, -0.18377399444580078, -1.1444091796875e-05, -2.086162203340791e-05, -8.22540732769994e-06, -0.06899595260620117, -2.47952248173533e-05, -0.49024081230163574, -2.384185791015625e-06, -0.00502777099609375, -9.918212890625e-05, -0.37975406646728516, 0.0, -7.43865966796875e-05, -0.0027561187744140625, 0.0, -0.07620358467102051, -1.2397744285408407e-05, -7.2479248046875e-05, -0.07558822631835938, -7.62939453125e-06, -0.3662070333957672, -0.00027990262606181204, -0.12508010864257812, -0.13770675659179688, -3.814697265625e-06, 0.0, -0.0011985301971435547, -0.000576019287109375, 0.0, -0.0033512115478515625, -0.5546903610229492, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.012706518173217773, -0.0005518197431229055, -1.7881377516459906e-06, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -5.91278076171875e-05, 0.0, -0.0012111663818359375, -2.741813204920618e-06, -0.01863574981689453, -3.445148468017578e-05, -0.02834320068359375, -4.57763671875e-05, -1.33514404296875e-05, 0.0, -0.45700228214263916, -1.5854802768444642e-05, -0.00096893310546875, -0.0027713775634765625, -9.918212890625e-05, -0.07372606545686722, -0.05786550045013428, -0.00695037841796875, -1.1444091796875e-05, -3.0517578125e-05, 0.0, -0.25919175148010254, -5.7220458984375e-06, 0.0, -0.043895721435546875, -0.9068927764892578, 0.0, -0.6745477914810181, -0.7671846747398376, -5.841255187988281e-06], "model_output": {"body": [{"name": "Mal'Ganis", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mal'Ganis", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"hole0": "Immune", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "IsHero", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 9, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.714806344638113}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, 0.0, -22.740577697753906], "model_output": {"body": [], "_type": "Module"}, "score": -22.740577697753906}]}
{"gold_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(DidDamage(), ActionTag(Heal(\n            EventValue()), HeroSelector()))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            HeroSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -0.3306262493133545, -0.00037139473715797067, -2.09808349609375e-05, -0.4536314010620117, -1.1444091796875e-05, -0.16582739353179932, -1.1920928244535389e-07, -0.15302300453186035, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "HeroSelector", "hole3": "Heal", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.346666276623857}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            HeroSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -1.1684800386428833, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.4809112548828125e-05, -1.0728830375228426e-06, -0.0025407075881958008, -7.62939453125e-05, -5.14984130859375e-05, -0.004984855651855469, 0.0, -0.0685720443725586, -2.0265579223632812e-06, -4.57763671875e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03891181945800781, 0.0, -0.2892484664916992, 0.0, -0.017746925354003906, -0.01900768280029297, -0.00010573276085779071, -7.152531907195225e-06, -0.00037944273208267987, -9.894321920000948e-06, -0.04002891480922699, -0.0032758712768554688, -0.34444963932037354, -0.00037508824607357383, -2.288818359375e-05, -0.4626932144165039, -1.1444091796875e-05, -0.1656927466392517, -1.1920928244535389e-07, -0.1516125202178955, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "HeroSelector", "hole3": "Heal", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.877751706838687}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PRIEST", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            HeroSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -2.189887046813965, -3.612041473388672e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.1444091796875e-05, -3.814697265625e-06, -2.7060508728027344e-05, -1.1920922133867862e-06, -0.0012284517288208008, -0.0001049041748046875, -0.00012969970703125, -0.0071849822998046875, 0.0, -0.08170795440673828, -2.1457672119140625e-06, -5.14984130859375e-05, -5.7220458984375e-06, -0.000240325927734375, 0.0, -0.0306549072265625, 0.0, -0.3469667434692383, 0.0, -0.01819896697998047, -0.01880645751953125, -0.00011657924915198237, -7.271740287251305e-06, -0.000375270436052233, -1.07287787614041e-05, -0.04095540940761566, -0.0033266544342041016, -0.33043527603149414, -0.00036352965980768204, -1.9073486328125e-05, -0.4491291046142578, -1.1444091796875e-05, -0.16611117124557495, -1.1920928244535389e-07, -0.15068161487579346, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PRIEST"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "HeroSelector", "hole3": "Heal", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.935887696344473}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Hero", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            HeroSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -1.8194160461425781, 0.0, -0.0073986053466796875, -0.02316761016845703, -6.782773562008515e-05, -1.6093124941107817e-05, -0.0002582072629593313, -8.22540732769994e-06, -0.037628866732120514, -0.0072858333587646484, -0.6907716989517212, -0.0009667047997936606, -0.000102996826171875, -0.38949108123779297, -1.1444091796875e-05, -0.22013430297374725, -1.1920928244535389e-07, -0.13691473007202148, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "HeroSelector", "hole3": "Heal", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.194081863628746}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(1),\n            SelfSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -0.3306262493133545, -0.00037139473715797067, -2.09808349609375e-05, -0.4536314010620117, -1.1444091796875e-05, -0.16582739353179932, -1.1920928244535389e-07, -2.110846757888794, -2.384185791015625e-06, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.304475248028886}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            hero<UNK>())), PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -1.6306960582733154, -2.0980833141948096e-05, -1.52587890625e-05, -0.0004177093505859375, -2.288818359375e-05, -0.000171661376953125, 0.0, -0.005807995330542326, -0.0003960131434723735, -0.000202178955078125, -0.2996692657470703, -5.14984130859375e-05, -0.22425442934036255, -0.510581374168396, -0.2981144189834595, -0.18322885036468506, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "hero<UNK>", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "PlayerSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.396791519124008}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            heroAttack())), SelfSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -1.6306960582733154, -2.0980833141948096e-05, -1.52587890625e-05, -0.0004177093505859375, -2.288818359375e-05, -0.000171661376953125, 0.0, -0.005807995330542326, -0.0003960131434723735, -0.000202178955078125, -0.2996692657470703, -5.14984130859375e-05, -0.22425442934036255, -1.0039666891098022, -5.7220458984375e-06, -0.07702195644378662, -1.9073486328125e-06, -1.1920928244535389e-07], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "heroAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.4858594550676045}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            hero<UNK>())), PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -1.1684800386428833, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.4809112548828125e-05, -1.0728830375228426e-06, -0.0025407075881958008, -7.62939453125e-05, -5.14984130859375e-05, -0.004984855651855469, 0.0, -0.0685720443725586, -2.0265579223632812e-06, -4.57763671875e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03891181945800781, 0.0, -0.2892484664916992, 0.0, -0.017746925354003906, -0.01900768280029297, -0.00010573276085779071, -7.152531907195225e-06, -0.00037944273208267987, -9.894321920000948e-06, -0.04002891480922699, -0.0032758712768554688, -1.5895906686782837, -2.0980833141948096e-05, -1.52587890625e-05, -0.0003986358642578125, -2.288818359375e-05, -0.00016021728515625, 0.0, -0.0056213135831058025, -0.00038278091233223677, -0.00020599365234375, -0.30562305450439453, -4.76837158203125e-05, -0.22423890233039856, -0.5060840845108032, -0.30177563428878784, -0.18187665939331055, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "hero<UNK>", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "PlayerSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.868945451598279}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            heroAttack())), SelfSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -1.1684800386428833, -2.288818359375e-05, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -3.4809112548828125e-05, -1.0728830375228426e-06, -0.0025407075881958008, -7.62939453125e-05, -5.14984130859375e-05, -0.004984855651855469, 0.0, -0.0685720443725586, -2.0265579223632812e-06, -4.57763671875e-05, -3.814697265625e-06, -0.0002593994140625, 0.0, -0.03891181945800781, 0.0, -0.2892484664916992, 0.0, -0.017746925354003906, -0.01900768280029297, -0.00010573276085779071, -7.152531907195225e-06, -0.00037944273208267987, -9.894321920000948e-06, -0.04002891480922699, -0.0032758712768554688, -1.5895906686782837, -2.0980833141948096e-05, -1.52587890625e-05, -0.0003986358642578125, -2.288818359375e-05, -0.00016021728515625, 0.0, -0.0056213135831058025, -0.00038278091233223677, -0.00020599365234375, -0.30562305450439453, -4.76837158203125e-05, -0.22423890233039856, -1.0115619897842407, -5.7220458984375e-06, -0.07728147506713867, -1.9073486328125e-06, -1.1920928244535389e-07], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "heroAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.968056472163305}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            heroAttack())), SelfSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -1.8194160461425781, 0.0, -0.0073986053466796875, -0.02316761016845703, -6.782773562008515e-05, -1.6093124941107817e-05, -0.0002582072629593313, -8.22540732769994e-06, -0.037628866732120514, -0.0072858333587646484, -0.8241039514541626, -3.3736214390955865e-05, -6.103515625e-05, -0.000415802001953125, -1.9073486328125e-05, -0.0001621246337890625, 0.0, -0.009289979934692383, -0.00037407869240269065, -0.00023651123046875, -0.2878379821777344, -4.57763671875e-05, -0.24349920451641083, -0.9677693843841553, -5.7220458984375e-06, -0.0914994478225708, -2.0265579223632812e-06, -1.1920928244535389e-07], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "heroAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.181027575214323}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "TOTEM", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.TOTEM)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            hero<UNK>())), PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -1.8194160461425781, 0.0, -0.0073986053466796875, -0.02316761016845703, -6.782773562008515e-05, -1.6093124941107817e-05, -0.0002582072629593313, -8.22540732769994e-06, -0.037628866732120514, -0.0072858333587646484, -0.8241039514541626, -3.3736214390955865e-05, -6.103515625e-05, -0.000415802001953125, -1.9073486328125e-05, -0.0001621246337890625, 0.0, -0.009289979934692383, -0.00037407869240269065, -0.00023651123046875, -0.2878379821777344, -4.57763671875e-05, -0.24349920451641083, -0.5281274318695068, -0.3040808141231537, -0.2282625436782837, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "TOTEM"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "hero<UNK>", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "PlayerSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.182225479562703}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "hero", "<UNK>", "Pain", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            hero<UNK>Pain())), PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -1.6306960582733154, -2.0980833141948096e-05, -1.52587890625e-05, -0.0004177093505859375, -2.288818359375e-05, -0.000171661376953125, 0.0, -0.005807995330542326, -0.0003960131434723735, -0.000202178955078125, -0.2996692657470703, -5.14984130859375e-05, -0.22425442934036255, -0.510581374168396, -1.600026249885559, -3.814697265625e-05, -0.548447847366333, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "hero<UNK>Pain", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "PlayerSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.063958586651779}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Heal", "<EOS>", 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "hero", "<UNK>", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Heal(Aura(\n            hero<UNK>(), HeroSelector())), PlayerSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -0.3306262493133545, -0.00037139473715797067, -2.09808349609375e-05, -1.0461301803588867, -3.814697265625e-06, -5.7220458984375e-05, 0.0, -0.08217906951904297, -0.15031731128692627, -0.9398632049560547, -0.1746654510498047, -0.000240325927734375, -0.7716988325119019, -0.3158576488494873, -0.0013842539628967643, -0.00130462646484375, -1.9073486328125e-06, -0.40117692947387695, -9.72747802734375e-05, 0.0, -0.7886086702346802, -3.814697265625e-06, -1.1920928244535389e-07], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"hole0": "hero<UNK>", "_type": "Template38"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "PlayerSelector", "hole3": "Heal", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.247746403847252}, {"choice_history": [55, 124, 221, 63, 103, "Mistress", "Of", "Pain", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Mistress", " ", "of", " ", "Pain", "<EOS>", 39, 130, "2", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "1", "<EOS>", "4", "<EOS>", "Damaged", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class MistressOfPain(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mistress of Pain', 2, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, effects=[Effect(Damaged(), ActionTag(Give(Buff(\n            ChangeAttack(Attribute('attack', HeroSelector())))),\n            SelfSelector()))])\n", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -2.47955322265625e-05, -7.05718994140625e-05, -7.62939453125e-05, -0.00020966715237591416, -0.00048648176016286016, -0.06820546090602875, -0.014715551398694515, -1.9073486328125e-06, -1.71661376953125e-05, -7.62939453125e-05, -0.00018835066293831915, -0.0015604496002197266, -3.814697265625e-06, -9.72747802734375e-05, -0.00089263916015625, -1.9073486328125e-06, -7.521864608861506e-05, -0.00020039081573486328, 0.0, -0.00019073486328125, -9.5367431640625e-06, -5.793463424197398e-05, -2.539156957936939e-05, -0.000186920166015625, -3.24249267578125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0073986053466796875, -9.5367431640625e-06, 0.0, -1.9073486328125e-06, 0.0, -3.8385387597372755e-05, -1.9073486328125e-06, -7.867813110351562e-06, 0.0, -0.000865936279296875, -8.7738037109375e-05, -2.09808349609375e-05, -1.3470558769768104e-05, -4.315376281738281e-05, -9.632048022467643e-05, -0.0003597736358642578, -0.001700282096862793, -1.9073486328125e-06, -1.9073486328125e-06, -4.00543212890625e-05, -0.0007525263354182243, 0.0, -1.9073486328125e-06, -0.000102996826171875, -2.288818359375e-05, 0.0, -1.8596643712953664e-05, -3.814697265625e-05, -0.6452857255935669, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.800060272216797e-05, -1.1920922133867862e-06, -0.0019265413284301758, -9.918212890625e-05, -4.1961669921875e-05, -0.00214385986328125, 0.0, -0.07457351684570312, -2.1457672119140625e-06, -6.4849853515625e-05, -5.7220458984375e-06, -0.0003566741943359375, 0.0, -0.036808013916015625, 0.0, -0.3019418716430664, 0.0, -0.01686382293701172, -0.01891613006591797, -0.0001093083992600441, -6.9141146923357155e-06, -0.0003712173202075064, -1.07287787614041e-05, -0.041096314787864685, -0.0033965110778808594, -1.6306960582733154, -2.0980833141948096e-05, -1.52587890625e-05, -0.0004177093505859375, -2.288818359375e-05, -0.000171661376953125, 0.0, -0.005807995330542326, -0.0003960131434723735, -0.000202178955078125, -1.3569345474243164, -1.33514404296875e-05, -0.000179290771484375, 0.0, -0.0313030369579792, -0.019730085507035255, -7.62939453125e-06, -0.00041961669921875, -0.1717090606689453, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.04771006107330322, -2.0265579223632812e-06, -4.9591064453125e-05, -4.76837158203125e-05, -1.33514404296875e-05, -0.5963568687438965, -3.099441164522432e-05, -0.002246856689453125, -2.86102294921875e-05, -0.8977774381637573, -6.866455078125e-05, 0.0, -0.40100109577178955, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "MistressOfPain", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Mistress of Pain", "_type": "Str"}, {"n": 2, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Give", "hole2": "Damaged"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.406540616869961}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.71661376953125e-05, -7.62939453125e-06, -20.097190856933594], "model_output": {"body": [], "_type": "Module"}, "score": -20.09721565246582}]}
{"gold_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2, deathrattle=Deathrattle(Give([Buff(ChangeHealth\n            (2)), Buff(ChangeAttack(2))]), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=RandomPicker())))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -0.9187853336334229, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.024619102478027344, 0.0, -4.9591064453125e-05, -0.0024576187133789062, -1.9073486328125e-06, -3.457069396972656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -4.57763671875e-05, -0.000537872314453125, -6.103515625e-05, -0.000270843505859375, -0.00287628173828125, -2.288818359375e-05, 0.0, -0.00014829615247435868, -0.0007753372192382812, -4.38690185546875e-05, -0.000408172607421875, -5.7220458984375e-06, -0.014597322791814804, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -0.01537312101572752, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "HUNTER"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.3534870744053293}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -1.2027599811553955, -0.000293731689453125, -0.010309219360351562, 0.0, -0.01241302490234375, 0.0, -1.71661376953125e-05, -0.0017690658569335938, 0.0, -3.254413604736328e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -9.536738616588991e-07, -4.38690185546875e-05, -0.0004711151123046875, -6.29425048828125e-05, -0.0001926422119140625, -0.0048618316650390625, -2.09808349609375e-05, 0.0, -0.0001754757686285302, -0.00057220458984375, -5.91278076171875e-05, -0.0004024505615234375, -5.7220458984375e-06, -0.014833430759608746, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -0.015843590721488, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "WARRIOR"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.6373959425122209}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "ROGUE", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -1.3352453708648682, 0.0, -0.007080078125, 0.0, -0.015248298645019531, 0.0, -3.62396240234375e-05, -0.0035905838012695312, 0.0, -4.017353057861328e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.311301275563892e-06, -4.57763671875e-05, -0.0005588531494140625, -7.05718994140625e-05, -0.0001983642578125, -0.002506256103515625, -2.288818359375e-05, 0.0, -0.00015461423026863486, -0.000888824462890625, -4.1961669921875e-05, -0.0003757476806640625, -5.7220458984375e-06, -0.012938988395035267, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -0.01512488815933466, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "ROGUE"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.7664284771462277}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Powermace", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "combo", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 38, 127, "Null", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, combo=Battlecry(Give(ChangeAttack(1)), MinionSelector(\n            Null, picker=RandomPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.3190193176269531, -1.9073486328125e-06, -2.503394853192731e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.400153168011457e-05, -9.5367431640625e-06, -0.000171661376953125, -0.0008449554443359375, -1.9073486328125e-06, -1.71661376953125e-05, -0.118865966796875, -4.57763671875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000576019287109375, -8.20159912109375e-05, -3.814697265625e-06, -1.9669434550451115e-05, -0.0011539459228515625, -1.9073486328125e-06, 0.0, -0.0004776572750415653, -7.748603820800781e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -4.100799560546875e-05, -0.09443187713623047, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -7.152555099310121e-07, -0.0026264190673828125, -1.9073486328125e-06, -0.0002040863037109375, -0.06343555450439453, 0.0, -0.207061767578125, 0.0, -0.006366729736328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00034332275390625, 0.0, -0.00038909912109375, -0.3228797912597656, -0.0002727508544921875, -0.000110626220703125, -5.340576171875e-05, -0.03333699703216553, -0.6031633615493774, 0.0, -0.18662196397781372, -3.814697265625e-06, -0.0004024505615234375, -0.049991607666015625, -0.0012111663818359375, 0.0, -2.3126602172851562e-05, -0.0020885467529296875, 0.0, -5.53131103515625e-05, -0.007373809814453125, -5.7220458984375e-05, -1.072883515007561e-05, 0.0, -4.57763671875e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.005220770835876465, 0.0, -2.288818359375e-05, -7.2479248046875e-05, -0.01730358600616455, -0.0003745555877685547, -1.9073486328125e-06, -0.0002307891845703125, 0.0, -0.007115364074707031, 0.0, -3.62396240234375e-05, -0.000125885009765625, -3.814697265625e-06, -0.00010335445404052734, -1.1920928244535389e-07, -1.9073486328125e-06, -9.1552734375e-05, -7.152555099310121e-07, -0.0001049041748046875, -0.000732421875, -0.0001621246337890625, -9.1552734375e-05, -0.014791488647460938, -9.5367431640625e-06, 0.0, -9.942032193066552e-05, -0.0010461807250976562, -3.0517578125e-05, -0.000209808349609375, -7.62939453125e-06, -0.07041943073272705, -2.0265579223632812e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018453793600201607, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "combo", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.184191465328908}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Powermace", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "combo", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "3", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, combo=Battlecry(Give(ChangeHealth(3)), MinionSelector(\n            picker=RandomPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.3190193176269531, -1.9073486328125e-06, -2.503394853192731e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.400153168011457e-05, -9.5367431640625e-06, -0.000171661376953125, -0.0008449554443359375, -1.9073486328125e-06, -1.71661376953125e-05, -0.118865966796875, -4.57763671875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000576019287109375, -8.20159912109375e-05, -3.814697265625e-06, -1.9669434550451115e-05, -0.0011539459228515625, -1.9073486328125e-06, 0.0, -0.0004776572750415653, -7.748603820800781e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -4.100799560546875e-05, -0.09443187713623047, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -7.152555099310121e-07, -0.0026264190673828125, -1.9073486328125e-06, -0.0002040863037109375, -0.06343555450439453, 0.0, -0.207061767578125, 0.0, -0.006366729736328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00034332275390625, 0.0, -0.00038909912109375, -0.3228797912597656, -0.0002727508544921875, -0.000110626220703125, -5.340576171875e-05, -0.03333699703216553, -0.7984100580215454, -1.9073486328125e-06, -0.41475629806518555, -4.38690185546875e-05, -0.00025177001953125, -0.11106300354003906, -0.0009250640869140625, -1.9073486328125e-06, -0.00010454654693603516, -0.0051059722900390625, 0.0, -0.0002765655517578125, -4.00543212890625e-05, -1.9073486328125e-06, -0.000804901123046875, 0.0, -3.814697265625e-06, -1.1444091796875e-05, -0.03410911560058594, -5.412101745605469e-05, 0.0, -0.005793571472167969, -1.9073486328125e-06, -0.01802825927734375, 0.0, -0.0001201629638671875, -8.96453857421875e-05, -1.1444091796875e-05, -7.653236389160156e-05, -1.1920928244535389e-07, 0.0, -2.47955322265625e-05, -4.768370445162873e-07, -4.57763671875e-05, -0.00040435791015625, -7.82012939453125e-05, -8.58306884765625e-05, -0.0039081573486328125, -9.5367431640625e-06, 0.0, -8.726109081180766e-05, -0.000583648681640625, -2.288818359375e-05, -0.0002231597900390625, -7.62939453125e-06, -0.06776487082242966, -2.0265579223632812e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.01843937486410141, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 3}, {"keywords": [{"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "combo", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.677998362177604}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Powermace", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, True)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.3190193176269531, -1.9073486328125e-06, -2.503394853192731e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.400153168011457e-05, -9.5367431640625e-06, -0.000171661376953125, -0.0008449554443359375, -1.9073486328125e-06, -1.71661376953125e-05, -2.204014778137207, -3.24249267578125e-05, 0.0, -5.53131103515625e-05, 0.0, -6.318092346191406e-06, -3.62396240234375e-05, -3.814697265625e-06, 0.0, -0.061285972595214844, -6.29425048828125e-05, 0.0, -0.0003308775485493243, -0.012342453002929688, 0.0, 0.0, -0.00010087416740134358, -2.0265579223632812e-06, -4.00543212890625e-05, 0.0, 0.0, 0.0, -1.33514404296875e-05, -1.1563301086425781e-05, -0.4073467254638672, 0.0, -0.0001068115234375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.62939453125e-06, -4.768370445162873e-07, -0.0035533905029296875, -5.7220458984375e-06, -0.0005245208740234375, -0.0005474090576171875, -2.181529998779297e-05, -9.5367431640625e-06, -0.16399574279785156, 0.0, -0.011696815490722656, 0.0, -0.0001068115234375, -6.4849853515625e-05, -5.7220458984375e-06, -5.352497100830078e-05, 0.0, 0.0, -4.00543212890625e-05, -3.576278118089249e-07, -5.7220458984375e-05, -0.00042724609375, -6.67572021484375e-05, -7.05718994140625e-05, -0.001224517822265625, -9.5367431640625e-06, 0.0, -0.00012326227442827076, -0.0003681182861328125, -1.9073486328125e-05, -0.0001964569091796875, -5.7220458984375e-06, -0.022570880129933357, -1.1920928244535389e-07, -3.814697265625e-06, 0.0, -0.014585975557565689, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.249452480522045}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Powermace", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "combo", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 38, 127, "Null", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, combo=Battlecry(Give(ChangeHealth(1)), MinionSelector(\n            Null, picker=RandomPicker())))\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.3190193176269531, -1.9073486328125e-06, -2.503394853192731e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.400153168011457e-05, -9.5367431640625e-06, -0.000171661376953125, -0.0008449554443359375, -1.9073486328125e-06, -1.71661376953125e-05, -0.118865966796875, -4.57763671875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000576019287109375, -8.20159912109375e-05, -3.814697265625e-06, -1.9669434550451115e-05, -0.0011539459228515625, -1.9073486328125e-06, 0.0, -0.0004776572750415653, -7.748603820800781e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -4.100799560546875e-05, -0.09443187713623047, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -7.152555099310121e-07, -0.0026264190673828125, -1.9073486328125e-06, -0.0002040863037109375, -0.06343555450439453, 0.0, -0.207061767578125, 0.0, -0.006366729736328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00034332275390625, 0.0, -0.00038909912109375, -0.3228797912597656, -0.0002727508544921875, -0.000110626220703125, -5.340576171875e-05, -0.03333699703216553, -0.7984100580215454, -1.9073486328125e-06, -1.3064188957214355, -3.814697265625e-06, -0.0001811981201171875, -0.08313369750976562, -0.0003814697265625, 0.0, -3.635883331298828e-05, -0.0018768310546875, 0.0, -6.866455078125e-05, -0.008829116821289062, -6.4849853515625e-05, -1.049041748046875e-05, 0.0, -4.9591064453125e-05, -4.57763671875e-05, -1.9073486328125e-06, -0.004640936851501465, 0.0, -2.47955322265625e-05, -8.0108642578125e-05, -0.017574429512023926, -0.00037407875061035156, -1.9073486328125e-06, -0.0002269744873046875, 0.0, -0.0070781707763671875, 0.0, -3.62396240234375e-05, -0.0001277923583984375, -3.814697265625e-06, -0.00010526180267333984, -1.1920928244535389e-07, -1.9073486328125e-06, -9.34600830078125e-05, -7.152555099310121e-07, -0.0001049041748046875, -0.0007266998291015625, -0.0001621246337890625, -9.1552734375e-05, -0.01537322998046875, -9.5367431640625e-06, 0.0, -9.942032193066552e-05, -0.00106048583984375, -3.0517578125e-05, -0.000209808349609375, -7.62939453125e-06, -0.0679452195763588, -2.0265579223632812e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.018311498686671257, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "combo", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.5302424020585335}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 85, 178, "Powermace", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.FREE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -4.319453239440918, -0.000751495361328125, -0.0021288369316607714, -2.53915750363376e-05, -4.866817835136317e-05, -3.576278118089249e-07, -0.1609973907470703, -2.47955322265625e-05, -0.00360870361328125, 0.0, -0.009435653686523438, 0.0, -4.57763671875e-05, -0.0025634765625, -1.9073486328125e-06, -3.826618194580078e-05, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -1.0728830375228426e-06, -3.4332275390625e-05, -0.0003414154052734375, -9.34600830078125e-05, -0.00019073486328125, -0.014497756958007812, -2.288818359375e-05, 0.0, -0.0001621243281988427, -0.0009431838989257812, -3.62396240234375e-05, -0.000392913818359375, -9.5367431640625e-06, -0.015137137845158577, -2.1457672119140625e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.014703899621963501, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template6", "hole2": "WARRIOR"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.568866131804782}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE\n            )\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -4.20428466796875, 0.0, -0.02803802490234375, 0.0, -0.020580291748046875, 0.0, -2.09808349609375e-05, -0.0020227432250976562, 0.0, -3.254413604736328e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -9.536738616588991e-07, -3.62396240234375e-05, -0.000354766845703125, -6.103515625e-05, -0.000179290771484375, -0.004547119140625, -1.9073486328125e-05, 0.0, -0.00017058826051652431, -0.00047397613525390625, -5.7220458984375e-05, -0.0004291534423828125, -5.7220458984375e-06, -0.01583319902420044, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -0.01621539145708084, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "MAGE"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.665614039638449}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "PALADIN", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -4.522632598876953, 0.0, -0.000713348388671875, 0.0, -0.01801776885986328, 0.0, -3.0517578125e-05, -0.0023164749145507812, 0.0, -3.457069396972656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -9.536738616588991e-07, -3.0517578125e-05, -0.00038909912109375, -5.91278076171875e-05, -0.000202178955078125, -0.00597381591796875, -2.09808349609375e-05, 0.0, -0.00014996503887232393, -0.0007162094116210938, -4.1961669921875e-05, -0.0004329681396484375, -7.62939453125e-06, -0.013161895796656609, -3.576278118089249e-07, -5.7220458984375e-06, -1.9073486328125e-06, -0.014681549742817879, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "PALADIN"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.9518670970441505}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -0.9187853336334229, -1.9073486328125e-06, -0.000118255615234375, 0.0, -3.913890838623047, 0.0, -1.1444091796875e-05, -0.0014867782592773438, -1.9073486328125e-06, -2.3245811462402344e-05, 0.0, -1.9073486328125e-06, -1.52587890625e-05, -1.1920922133867862e-06, -4.38690185546875e-05, -0.000545501708984375, -7.2479248046875e-05, -0.0001773834228515625, -0.002788543701171875, -2.288818359375e-05, 0.0, -0.00014924975403118879, -0.000804901123046875, -4.38690185546875e-05, -0.00041961669921875, -5.7220458984375e-06, -0.012071589007973671, -3.576278118089249e-07, -3.814697265625e-06, 0.0, -0.014355766586959362, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "HUNTER"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.238075246991848}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "HUNTER", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class <UNK>(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -3.9259707927703857, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -0.9187853336334229, -1.9073486328125e-06, -0.000118255615234375, 0.0, -0.024619102478027344, 0.0, -4.9591064453125e-05, -0.0024576187133789062, -1.9073486328125e-06, -3.457069396972656e-05, 0.0, -1.9073486328125e-06, -1.1444091796875e-05, -1.1920922133867862e-06, -4.57763671875e-05, -0.000537872314453125, -6.103515625e-05, -0.000270843505859375, -0.00287628173828125, -2.288818359375e-05, 0.0, -0.00014829615247435868, -0.0007753372192382812, -4.38690185546875e-05, -0.000408172607421875, -5.7220458984375e-06, -0.014597322791814804, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -0.01537312101572752, 0.0], "model_output": {"body": [{"name": "<UNK>", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "HUNTER"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.2594634909484554}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 84, 177, "Powermace", "<EOS>", "3", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class <UNK>(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -3.9259707927703857, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -0.3454160690307617, -0.000213623046875, -0.0033758780919015408, -4.982948303222656e-05, -2.5665156499599107e-05, -1.1920928244535389e-07, -1.2027599811553955, -0.000293731689453125, -0.010309219360351562, 0.0, -0.01241302490234375, 0.0, -1.71661376953125e-05, -0.0017690658569335938, 0.0, -3.254413604736328e-05, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -9.536738616588991e-07, -4.38690185546875e-05, -0.0004711151123046875, -6.29425048828125e-05, -0.0001926422119140625, -0.0048618316650390625, -2.09808349609375e-05, 0.0, -0.0001754757686285302, -0.00057220458984375, -5.91278076171875e-05, -0.0004024505615234375, -5.7220458984375e-06, -0.014833430759608746, -3.576278118089249e-07, -5.7220458984375e-06, 0.0, -0.015843590721488, 0.0], "model_output": {"body": [{"name": "<UNK>", "body": [{"hole1": 3, "hole0": "Powermace", "_type": "Template5", "hole2": "WARRIOR"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.543372359055347}, {"choice_history": [55, 124, 221, 63, 103, "Powermace", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Powermace", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "combo", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "3", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Powermace(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Powermace', 3, CHARACTER_CLASS.ROGUE, CARD_RARITY\n            .RARE, combo=Battlecry(Give([Buff(ChangeAttack(2)), Buff(\n            ChangeHealth(2))]), MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_weapon(self, player):\n        return Weapon(3, 2)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-06, -8.7738037109375e-05, -5.7220458984375e-06, -0.019994376227259636, -0.002410292625427246, -5.7220458984375e-06, -3.814697265625e-05, -3.814697265625e-06, -0.0005130767822265625, -2.09808349609375e-05, -9.5367431640625e-06, -4.76837158203125e-05, -1.3190193176269531, -1.9073486328125e-06, -2.503394853192731e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.400153168011457e-05, -9.5367431640625e-06, -0.000171661376953125, -0.0008449554443359375, -1.9073486328125e-06, -1.71661376953125e-05, -0.118865966796875, -4.57763671875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -1.9073486328125e-06, 0.0, -0.000576019287109375, -8.20159912109375e-05, -3.814697265625e-06, -1.9669434550451115e-05, -0.0011539459228515625, -1.9073486328125e-06, 0.0, -0.0004776572750415653, -7.748603820800781e-06, -2.6702880859375e-05, 0.0, -1.9073486328125e-06, 0.0, -1.71661376953125e-05, -4.100799560546875e-05, -0.09443187713623047, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -2.86102294921875e-05, -7.152555099310121e-07, -0.0026264190673828125, -1.9073486328125e-06, -0.0002040863037109375, -0.06343555450439453, 0.0, -0.207061767578125, 0.0, -0.006366729736328125, -3.814697265625e-06, -7.62939453125e-06, -5.7220458984375e-06, -0.00034332275390625, 0.0, -0.00038909912109375, -1.4646282196044922, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -0.0012259483337402344, -0.002736210823059082, -1.9073486328125e-05, -0.007871627807617188, -1.52587890625e-05, -0.1401500701904297, -0.07282829284667969, -0.00029754638671875, -0.0005932518397457898, -1.9073486328125e-06, -0.0054874420166015625, -0.000335693359375, -0.002222971059381962, 0.0, -0.21963882446289062, -0.004474639892578125, -5.7220458984375e-06, 0.0, -0.008759140968322754, -0.0011386871337890625, 0.0, -0.007936477661132812, -0.33136844635009766, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.3899421691894531, -0.0020619630813598633, -4.398822784423828e-05, -3.0517578125e-05, -1.9073486328125e-06, -1.52587890625e-05, -0.0003299713134765625, 0.0, -0.016127586364746094, -2.09808349609375e-05, -0.047423362731933594, 0.0, -0.8546781539916992, 0.0, -0.1447765827178955, 0.0, -5.7220458984375e-05, -0.0002307891845703125, -3.814697265625e-06, -6.985664367675781e-05, 0.0, 0.0, -0.000293731689453125, -4.768370445162873e-07, -0.0001316070556640625, -0.000331878662109375, -0.0001201629638671875, -4.38690185546875e-05, -0.0058765411376953125, -5.7220458984375e-06, 0.0, -0.0001130100354203023, -0.0010862350463867188, -2.86102294921875e-05, -0.0002288818359375, -7.62939453125e-06, -0.03602779284119606, -2.1457672119140625e-06, -1.9073486328125e-06, 0.0, -0.018271954730153084, 0.0], "model_output": {"body": [{"name": "Powermace", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Powermace", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "combo", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 3, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.6297039204322274}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -21.979516983032227], "model_output": {"body": [], "_type": "Module"}, "score": -21.979524612426758}]}
{"gold_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -1.0314664840698242, -0.0005016326904296875, -0.00011134146916447207, -0.000209808349609375, -0.001395583152770996, -0.022159457206726074, -5.91278076171875e-05, -0.4913862943649292, -0.000209808349609375, -5.14984130859375e-05, -0.07948875427246094, -0.004664421081542969, 0.0, -3.4809112548828125e-05, -0.013845443725585938, 0.0, -2.86102294921875e-05, -0.04535388946533203, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.013870954513549805, -0.0013540983200073242, -0.00032126903533935547, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0004906654357910156, -1.33514404296875e-05, -0.03431129455566406, -1.9073486328125e-06, -0.000522613525390625, -4.76837158203125e-05, -1.9073486328125e-06, -0.0016820430755615234, -1.9073486328125e-06, -0.0030422210693359375, -0.0001049041748046875, -0.001912832260131836, -0.00013840198516845703, -1.1920928244535389e-07, -0.00315093994140625, -3.4332275390625e-05, -9.536738616588991e-07, -2.3841855067985307e-07, -0.00024079160357359797, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 4}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.7142180557302282}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), MinionSelector(IsType(MINION_TYPE.MECH), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -0.4452838897705078, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00038945613778196275, -0.0009508132934570312, -6.103515625e-05, -0.028341293334960938, -3.62396240234375e-05, -0.3347797393798828, -0.27412986755371094, -0.021256446838378906, -0.00082780746743083, -2.19344328797888e-05, -0.0051593780517578125, -8.0108642578125e-05, -0.00012052035890519619, -3.814697265625e-06, -0.019980430603027344, -0.0001373291015625, -1.52587890625e-05, -3.814697265625e-06, -0.03876197338104248, -0.00033128244103863835, -1.52587890625e-05, -0.0008029937744140625, -8.96453857421875e-05, -0.189383402466774, -0.0018953001126646996, -0.6532745361328125, -0.1323261260986328, -0.0006313323974609375, 0.0, -0.029011130332946777, -0.00128173828125, 0.0, -3.814697265625e-06, -0.00067138671875, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.01727759838104248, -0.0014164447784423828, -0.0005047321319580078, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -2.86102294921875e-05, 0.0, -0.00041031837463378906, -1.71661376953125e-05, -0.03895676136016846, -1.9073486328125e-06, -0.000156402587890625, -2.288818359375e-05, -3.814697265625e-06, -0.07464814186096191, 0.0, -0.006378173828125, -6.67572021484375e-05, -0.00576472282409668, -0.0002053976058959961, 0.0, -0.0001163482666015625, -1.33514404296875e-05, -1.7881377516459906e-06, -1.1920928244535389e-07, -0.0003926203353330493, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template27"}, {"hole0": 2, "_type": "Template28"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.288465991694224}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -1.2749192714691162, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00010120868682861328, -1.9550272554624826e-05, -0.003199338912963867, -1.9073486328125e-06, -0.00170135498046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.21487808227539e-05, -2.300739288330078e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001811981201171875, 0.0, -8.7738037109375e-05, 0.0, -0.3657207489013672, -3.933906555175781e-06, -0.000209808349609375, -1.9073486328125e-06, -0.0014171600341796875, 0.0, -0.0010166168212890625, -0.0012292861938476562, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -3.814697265625e-05, -0.9329252243041992, -0.000514984130859375, -0.00011730192636605352, -0.0001583099365234375, -0.0015244483947753906, -0.02438485622406006, -5.340576171875e-05, -0.49988341331481934, -0.0001964569091796875, -5.340576171875e-05, -0.07296276092529297, -0.004581451416015625, 0.0, -3.2901763916015625e-05, -0.014148712158203125, 0.0, -2.86102294921875e-05, -0.04519081115722656, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.014971256256103516, -0.0013970136642456055, -0.00034224987030029297, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, -2.47955322265625e-05, 0.0, -0.0005135536193847656, -1.33514404296875e-05, -0.03381824493408203, -1.9073486328125e-06, -0.000530242919921875, -4.76837158203125e-05, -1.9073486328125e-06, -0.0016744136810302734, -1.9073486328125e-06, -0.002964019775390625, -0.0001049041748046875, -0.0018994808197021484, -0.00013840198516845703, -1.1920928244535389e-07, -0.0031223297119140625, -3.4332275390625e-05, -9.536738616588991e-07, -2.3841855067985307e-07, -0.00024234109150711447, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 4}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3673549048462093}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -0.4452838897705078, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00038945613778196275, -0.0009508132934570312, -6.103515625e-05, -0.028341293334960938, -3.62396240234375e-05, -0.3347797393798828, -0.27412986755371094, -0.021256446838378906, -0.00082780746743083, -2.19344328797888e-05, -0.0051593780517578125, -8.0108642578125e-05, -0.00012052035890519619, -3.814697265625e-06, -0.019980430603027344, -0.0001373291015625, -1.52587890625e-05, -3.814697265625e-06, -0.03876197338104248, -0.00033128244103863835, -1.52587890625e-05, -0.0008029937744140625, -8.96453857421875e-05, -0.189383402466774, -0.0018953001126646996, -0.7358322143554688, -1.52587890625e-05, -0.36216041445732117, -4.220008850097656e-05, 0.0, -0.006114959716796875, -0.00028228759765625, -3.6835059290751815e-05, -1.1920928244535389e-07, -0.0001625948352739215, -1.1920928244535389e-07], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template27"}, {"hole0": 2, "_type": "Template28"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.4294716449726153}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -1.0314664840698242, -0.0005016326904296875, -0.00011134146916447207, -0.000209808349609375, -0.001395583152770996, -0.022159457206726074, -5.91278076171875e-05, -1.716287612915039, -1.33514404296875e-05, -0.0001354217529296875, -0.12040519714355469, -0.003711700439453125, -1.9073486328125e-06, -0.00015091896057128906, -0.022047042846679688, 0.0, -3.4332275390625e-05, -0.03171730041503906, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.015259146690368652, -0.0015037059783935547, -0.0005719661712646484, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.86102294921875e-05, 0.0, -0.0005784034729003906, -1.52587890625e-05, -0.02834606170654297, -1.9073486328125e-06, -0.0006618499755859375, -4.38690185546875e-05, -1.9073486328125e-06, -0.0015581846237182617, -1.9073486328125e-06, -0.0029277801513671875, -0.0001087188720703125, -0.001855611801147461, -0.0001423358917236328, -1.1920928244535389e-07, -0.0031909942626953125, -3.62396240234375e-05, -9.536738616588991e-07, -2.3841855067985307e-07, -0.00024079160357359797, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 2}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9694656486562536}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "4", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(4)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -2.168494939804077, 0.0, 0.0, -3.814697265625e-06, -7.62939453125e-06, 0.0, -0.0003108978271484375, -6.318092346191406e-06, -0.011674880981445312, -1.9073486328125e-06, -0.000244140625, -7.62939453125e-06, 0.0, -0.00010573863983154297, -2.5033950805664062e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.0002727508544921875, 0.0, -8.96453857421875e-05, 0.0, -0.3668174743652344, -5.841255187988281e-06, -0.0001773834228515625, -1.9073486328125e-06, -0.001453399658203125, 0.0, -0.000762939453125, -0.0009765625, -1.9073486328125e-06, 0.0, -0.000789642333984375, 0.0, -4.38690185546875e-05, -0.7042083740234375, -0.0006198883056640625, -0.000125765785924159, -0.0001506805419921875, -0.0014643669128417969, -0.021979808807373047, -5.340576171875e-05, -0.49689722061157227, -0.0001964569091796875, -5.14984130859375e-05, -0.0644083023071289, -0.004254341125488281, 0.0, -2.9087066650390625e-05, -0.015445709228515625, 0.0, -3.0517578125e-05, -0.04656505584716797, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.014195680618286133, -0.0013769865036010742, -0.00034224987030029297, -1.71661376953125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -2.47955322265625e-05, 0.0, -0.0005116462707519531, -1.33514404296875e-05, -0.03351020812988281, -1.9073486328125e-06, -0.000530242919921875, -4.76837158203125e-05, -1.9073486328125e-06, -0.0016781091690063477, -1.9073486328125e-06, -0.0029277801513671875, -0.0001049041748046875, -0.0019109249114990234, -0.00013637542724609375, -1.1920928244535389e-07, -0.003108978271484375, -3.4332275390625e-05, -9.536738616588991e-07, -2.3841855067985307e-07, -0.00024246028624475002, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 4}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.027988945715109}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), MinionSelector(IsType(MINION_TYPE.MECH), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -1.2749192714691162, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00010120868682861328, -1.9550272554624826e-05, -0.003199338912963867, -1.9073486328125e-06, -0.00170135498046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.21487808227539e-05, -2.300739288330078e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001811981201171875, 0.0, -8.7738037109375e-05, 0.0, -0.3657207489013672, -3.933906555175781e-06, -0.000209808349609375, -1.9073486328125e-06, -0.0014171600341796875, 0.0, -0.0010166168212890625, -0.0012292861938476562, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -3.814697265625e-05, -0.504119873046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.00037920422619208694, -0.00104522705078125, -5.7220458984375e-05, -0.026845932006835938, -3.814697265625e-05, -0.33025646209716797, -0.27765750885009766, -0.021825790405273438, -0.0008279257453978062, -2.181522359023802e-05, -0.0051288604736328125, -7.82012939453125e-05, -0.00011861301027238369, -3.814697265625e-06, -0.019811630249023438, -0.0001392364501953125, -1.52587890625e-05, -3.814697265625e-06, -0.03901267051696777, -0.0003463028115220368, -1.52587890625e-05, -0.000820159912109375, -8.96453857421875e-05, -0.19224759936332703, -0.0018840947886928916, -0.6505584716796875, -0.13287925720214844, -0.00064849853515625, 0.0, -0.029629230499267578, -0.0013103485107421875, 0.0, -3.814697265625e-06, -0.000659942626953125, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.016846418380737305, -0.001402139663696289, -0.0005075931549072266, -1.9073486328125e-05, -3.814697265625e-06, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00040841102600097656, -1.71661376953125e-05, -0.03882706165313721, -1.9073486328125e-06, -0.000156402587890625, -2.288818359375e-05, -3.814697265625e-06, -0.07486462593078613, 0.0, -0.0064144134521484375, -6.67572021484375e-05, -0.005621671676635742, -0.0002053976058959961, 0.0, -0.0001163482666015625, -1.33514404296875e-05, -1.7881377516459906e-06, -1.1920928244535389e-07, -0.0003920244926121086, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template27"}, {"hole0": 2, "_type": "Template28"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.093189090229984}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -1.2749192714691162, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00010120868682861328, -1.9550272554624826e-05, -0.003199338912963867, -1.9073486328125e-06, -0.00170135498046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.21487808227539e-05, -2.300739288330078e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001811981201171875, 0.0, -8.7738037109375e-05, 0.0, -0.3657207489013672, -3.933906555175781e-06, -0.000209808349609375, -1.9073486328125e-06, -0.0014171600341796875, 0.0, -0.0010166168212890625, -0.0012292861938476562, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -3.814697265625e-05, -0.504119873046875, -1.9073486328125e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.00037920422619208694, -0.00104522705078125, -5.7220458984375e-05, -0.026845932006835938, -3.814697265625e-05, -0.33025646209716797, -0.27765750885009766, -0.021825790405273438, -0.0008279257453978062, -2.181522359023802e-05, -0.0051288604736328125, -7.82012939453125e-05, -0.00011861301027238369, -3.814697265625e-06, -0.019811630249023438, -0.0001392364501953125, -1.52587890625e-05, -3.814697265625e-06, -0.03901267051696777, -0.0003463028115220368, -1.52587890625e-05, -0.000820159912109375, -8.96453857421875e-05, -0.19224759936332703, -0.0018840947886928916, -0.7387561798095703, -1.52587890625e-05, -0.36808979511260986, -4.220008850097656e-05, 0.0, -0.00630950927734375, -0.00028228759765625, -3.695426494232379e-05, -1.1920928244535389e-07, -0.00016235644579865038, -1.1920928244535389e-07], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template27"}, {"hole0": 2, "_type": "Template28"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.245216267997854}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 42, 162, "2", "<EOS>", 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeHealth(2)), Buff(ChangeAttack(2)),\n            Buff(2())]), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -0.4452838897705078, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00038945613778196275, -0.0009508132934570312, -6.103515625e-05, -0.028341293334960938, -3.62396240234375e-05, -0.3347797393798828, -0.27412986755371094, -0.021256446838378906, -0.00082780746743083, -2.19344328797888e-05, -0.0051593780517578125, -8.0108642578125e-05, -0.00012052035890519619, -3.814697265625e-06, -0.019980430603027344, -0.0001373291015625, -1.52587890625e-05, -3.814697265625e-06, -0.03876197338104248, -0.00033128244103863835, -1.52587890625e-05, -0.0008029937744140625, -8.96453857421875e-05, -0.189383402466774, -0.0018953001126646996, -0.7358322143554688, -1.52587890625e-05, -1.2230041027069092, -0.0015488862991333008, -2.3841855067985307e-07, -0.040175437927246094, -0.000171661376953125, -3.9815105992602184e-05, -1.1920928244535389e-07, -0.00014078232925385237, -1.1920928244535389e-07], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template27"}, {"hole0": 2, "_type": "Template28"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.325753277381814}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "1", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(1)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -1.0314664840698242, -0.0005016326904296875, -0.00011134146916447207, -0.000209808349609375, -0.001395583152770996, -0.022159457206726074, -5.91278076171875e-05, -2.205834150314331, -5.7220458984375e-06, -0.000244140625, -0.04157543182373047, -0.0016984939575195312, 0.0, -1.3947486877441406e-05, -0.009496688842773438, 0.0, -5.14984130859375e-05, -0.03174781799316406, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.012124419212341309, -0.001348257064819336, -0.0003352165222167969, -1.71661376953125e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.4332275390625e-05, 0.0, -0.0004696846008300781, -1.52587890625e-05, -0.0308990478515625, -1.9073486328125e-06, -0.0003757476806640625, -5.53131103515625e-05, -1.9073486328125e-06, -0.001664876937866211, -1.9073486328125e-06, -0.0036296844482421875, -0.0001049041748046875, -0.0018690824508666992, -0.0001442432403564453, -1.1920928244535389e-07, -0.0032196044921875, -3.4332275390625e-05, -9.536738616588991e-07, -2.3841855067985307e-07, -0.0002345933608012274, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.365117824246184}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "2", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give(ChangeHealth(2)), MinionSelector(IsType(\n            MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -1.2749192714691162, -3.814697265625e-06, 0.0, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -0.00010120868682861328, -1.9550272554624826e-05, -0.003199338912963867, -1.9073486328125e-06, -0.00170135498046875, -5.7220458984375e-06, -1.9073486328125e-06, -9.21487808227539e-05, -2.300739288330078e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.0001811981201171875, 0.0, -8.7738037109375e-05, 0.0, -0.3657207489013672, -3.933906555175781e-06, -0.000209808349609375, -1.9073486328125e-06, -0.0014171600341796875, 0.0, -0.0010166168212890625, -0.0012292861938476562, -1.9073486328125e-06, 0.0, -0.0002269744873046875, 0.0, -3.814697265625e-05, -0.9329252243041992, -0.000514984130859375, -0.00011730192636605352, -0.0001583099365234375, -0.0015244483947753906, -0.02438485622406006, -5.340576171875e-05, -1.6803748607635498, -1.1444091796875e-05, -0.0001354217529296875, -0.10860252380371094, -0.003662109375, -1.9073486328125e-06, -0.00014901161193847656, -0.022378921508789062, 0.0, -3.4332275390625e-05, -0.03175640106201172, -2.288818359375e-05, -9.5367431640625e-06, 0.0, -0.015915989875793457, -0.0015552043914794922, -0.0006357431411743164, -1.9073486328125e-05, -1.9073486328125e-06, -1.33514404296875e-05, -3.0517578125e-05, 0.0, -0.0006126165390014648, -1.71661376953125e-05, -0.028328895568847656, -1.9073486328125e-06, -0.0006580352783203125, -4.38690185546875e-05, -1.9073486328125e-06, -0.0015600919723510742, -1.9073486328125e-06, -0.00286865234375, -0.0001087188720703125, -0.0018537044525146484, -0.0001404285430908203, -1.1920928244535389e-07, -0.0031719207763671875, -3.62396240234375e-05, -9.536738616588991e-07, -2.3841855067985307e-07, -0.000239480214077048, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 2}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.573321973663909}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(IsType(MINION_TYPE.MECH))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -0.4452838897705078, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00038945613778196275, -0.0009508132934570312, -6.103515625e-05, -0.028341293334960938, -3.62396240234375e-05, -1.3034849166870117, -0.009393692016601562, -7.2479248046875e-05, -0.0005221394822001457, 0.0, -0.10677909851074219, -0.000804901123046875, -0.00032770074903964996, -1.9073486328125e-06, -0.11029052734375, -0.22124195098876953, -1.33514404296875e-05, 0.0, -0.001133799203671515, -0.0017224550247192383, 0.0, -0.04059600830078125, -0.0080413818359375, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -1.1601401567459106, -0.008932352066040039, -0.011628389358520508, -2.288818359375e-05, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-05, 0.0, -0.00042366981506347656, -3.0517578125e-05, -0.03482162952423096, -1.9073486328125e-06, -0.2245492935180664, -9.5367431640625e-06, -0.00011121598799945787, -1.4305104514278355e-06, -0.0006071208044886589, -1.1920928244535389e-07], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.6827939991948}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Has", "Card", "Name", "<EOS>", 208, 40, 134, "Mech", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            MinionSelector(HasCardName('Mech'))))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -0.4452838897705078, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00038945613778196275, -0.0009508132934570312, -6.103515625e-05, -0.028341293334960938, -3.62396240234375e-05, -1.3034849166870117, -0.009393692016601562, -7.2479248046875e-05, -0.0005221394822001457, 0.0, -0.10677909851074219, -0.000804901123046875, -0.00032770074903964996, -1.9073486328125e-06, -0.11029052734375, -0.22124195098876953, -1.33514404296875e-05, 0.0, -0.001133799203671515, -0.0017224550247192383, 0.0, -0.04059600830078125, -0.0080413818359375, -3.814697265625e-06, -9.5367431640625e-06, 0.0, -0.5983821153640747, -0.0005749452393501997, -0.08103561401367188, -8.0108642578125e-05, -3.814697265625e-06, -0.1381998062133789, -0.003467559814453125, -0.3537956774234772, -0.012141227722167969, -0.6561050415039062, -1.52587890625e-05, -0.0006541211041621864, -1.1920928244535389e-07, -0.0019827948417514563, -1.1920928244535389e-07], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"s": "Mech", "_type": "Str"}], "func": {"id": "HasCardName", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.087906319221908}, {"choice_history": [55, 124, 221, 63, 103, "Screwjank", "Clunker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Screwjank", " ", "Clunker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 210, 43, 163, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "5", "<EOS>"], "inferred_code": "class ScrewjankClunker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Screwjank Clunker', 4, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MECH, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(2()), Buff(2())]),\n            MinionSelector(IsType(MINION_TYPE.MECH), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 5)\n", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -5.91278076171875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.033944953233003616, -0.000287849543383345, -0.019774548709392548, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -4.529942543740617e-06, -0.00018155574798583984, -8.225440979003906e-06, -0.000392913818359375, -0.0001888275146484375, -2.86102294921875e-05, -3.933906555175781e-06, 0.0, -7.62939453125e-06, -0.000362396240234375, -3.814697265625e-06, -9.298322765971534e-06, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0009241104125976562, -1.52587890625e-05, 0.0, -0.0001430511474609375, -1.33514404296875e-05, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -6.198883056640625e-06, -9.5367431640625e-06, -1.9073486328125e-05, 0.0, -5.14984130859375e-05, -0.00011444091796875, -2.288818359375e-05, -1.4185829968482722e-05, -2.110004425048828e-05, -3.266333806095645e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -0.00022243140847422183, -2.2649765014648438e-06, -5.7220458984375e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.001199960708618164, -9.953974949894473e-05, -0.7100121974945068, 0.0, 0.0, 0.0, -7.62939453125e-06, 0.0, -0.000141143798828125, -1.597404116182588e-05, -0.0018388032913208008, 0.0, -0.0031871795654296875, -7.62939453125e-06, -1.9073486328125e-06, -0.0001380443572998047, -2.300739288330078e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.0001239776611328125, 0.0, -3.62396240234375e-05, 0.0, -0.18171310424804688, -7.62939453125e-06, -0.0001354217529296875, -1.9073486328125e-06, -0.0033807754516601562, 0.0, -0.00122833251953125, -0.0012645721435546875, -1.9073486328125e-06, 0.0, -0.000148773193359375, 0.0, -2.6702880859375e-05, -0.4452838897705078, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00038945613778196275, -0.0009508132934570312, -6.103515625e-05, -0.028341293334960938, -3.62396240234375e-05, -0.3347797393798828, -1.4520034790039062, -5.340576171875e-05, -0.002929210662841797, -1.9073486328125e-06, -0.33104419708251953, -0.0023651123046875, -1.71661376953125e-05, -1.9073486328125e-06, -0.02180624008178711, -0.00020873536414001137, -1.52587890625e-05, -0.0023555755615234375, -2.86102294921875e-05, -0.3068135678768158, -0.003920229617506266, -0.0042247772216796875, -0.004765510559082031, -1.52587890625e-05, 0.0, -0.016686195507645607, -0.00028836727142333984, -1.9073486328125e-06, -0.012345314025878906, -6.103515625e-05, -0.3853892683982849, -0.002856675535440445, -0.5834331512451172, -0.11678695678710938, -0.000339508056640625, 0.0, -0.036425232887268066, -0.0010051727294921875, 0.0, -3.814697265625e-06, -0.0004558563232421875, -5.7220458984375e-06, -1.71661376953125e-05, 0.0, -0.025004982948303223, -0.0012476444244384766, -0.00033593177795410156, -1.71661376953125e-05, -3.814697265625e-06, -9.5367431640625e-06, -3.0517578125e-05, 0.0, -0.00040078163146972656, -1.52587890625e-05, -0.04050445556640625, -1.9073486328125e-06, -0.000148773193359375, -2.288818359375e-05, -3.814697265625e-06, -0.08054125308990479, 0.0, -0.005855560302734375, -8.58306884765625e-05, -0.009059906005859375, -0.00022804737091064453, 0.0, -0.0001163482666015625, -1.33514404296875e-05, -1.7881377516459906e-06, 0.0, -0.00039107113843783736, 0.0], "model_output": {"body": [{"name": "ScrewjankClunker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Screwjank Clunker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.224520198122029}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-0.00011444091796875, -2.09808349609375e-05, -20.821260452270508], "model_output": {"body": [], "_type": "Module"}, "score": -20.821395874023438}]}
{"gold_code": "class SneedsOldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Sneed's Old Shredder\", 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[IsRarity(CARD_RARITY.LEGENDARY), IsMinion()])),\n            PlayerSelector()))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -0.3563213348388672, -0.0013408660888671875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00023472309112548828, -5.841255187988281e-06, -0.0021266937255859375, -0.000133514404296875, -7.62939453125e-06, -0.03731358051300049, -3.24249267578125e-05, -0.000873565673828125, -0.0001392364501953125, -0.0025463104248046875, -0.009175300598144531, -0.000598907470703125, -2.09808349609375e-05, 0.0, -0.0026990175247192383, -0.007669687271118164, 0.0, -0.0006160736083984375, -0.015893936157226562, -1.9073486328125e-06, -0.0367797389626503, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.03438699245452881, -0.002283930778503418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.144259902478723}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -1.282377004623413, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -0.3563213348388672, -0.0013408660888671875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00023472309112548828, -5.841255187988281e-06, -0.0021266937255859375, -0.000133514404296875, -7.62939453125e-06, -0.03731358051300049, -3.24249267578125e-05, -0.000873565673828125, -0.0001392364501953125, -0.0025463104248046875, -0.009175300598144531, -0.000598907470703125, -2.09808349609375e-05, 0.0, -0.0026990175247192383, -0.007669687271118164, 0.0, -0.0006160736083984375, -0.015893936157226562, -1.9073486328125e-06, -0.0367797389626503, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.03438699245452881, -0.002283930778503418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK><UNK>Shredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0861629273906033}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -1.4648988246917725, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -0.3563213348388672, -0.0013408660888671875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00023472309112548828, -5.841255187988281e-06, -0.0021266937255859375, -0.000133514404296875, -7.62939453125e-06, -0.03731358051300049, -3.24249267578125e-05, -0.000873565673828125, -0.0001392364501953125, -0.0025463104248046875, -0.009175300598144531, -0.000598907470703125, -2.09808349609375e-05, 0.0, -0.0026990175247192383, -0.007669687271118164, 0.0, -0.0006160736083984375, -0.015893936157226562, -1.9073486328125e-06, -0.0367797389626503, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.03438699245452881, -0.002283930778503418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Sneed Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3414989736094753}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>Old(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old', 8, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -2.158891201019287, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -6.4373016357421875e-06, -0.00013554096221923828, -3.814697265625e-06, -0.00069427490234375, -0.0020627975463867188, -3.814697265625e-06, -0.000148773193359375, 0.0, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -1.192092622659402e-05, 0.0, -3.814697265625e-05, -0.5726165771484375, -0.0005054473876953125, -0.2654828727245331, -0.0009186267852783203, -0.0035320294555276632, -0.022748947143554688, -0.002414821879938245, -6.198873961693607e-06, -0.0012454986572265625, 0.0, -0.00124359130859375, -3.254413604736328e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.000164031982421875, 0.0, -0.01729297637939453, -7.62939453125e-06, -0.008392333984375, -8.0108642578125e-05, -8.344650268554688e-06, -5.960462772236497e-07, -0.00022420835739467293, -2.3841855067985307e-07, -0.0008484125137329102, -7.629365427419543e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00015842914581298828, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010528564453125, -6.67572021484375e-05, -5.91278076171875e-05, -5.91278076171875e-05, -0.006173967849463224, -4.5775486796628684e-05, -0.04863166809082031, -0.32332801818847656, -0.00139617919921875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00024044513702392578, -5.841255187988281e-06, -0.002063751220703125, -0.0001316070556640625, -7.62939453125e-06, -0.037281155586242676, -3.24249267578125e-05, -0.0008602142333984375, -0.0001392364501953125, -0.0025758743286132812, -0.009349822998046875, -0.0005970001220703125, -2.09808349609375e-05, 0.0, -0.0026723146438598633, -0.007677316665649414, 0.0, -0.00060272216796875, -0.015476226806640625, -1.9073486328125e-06, -0.03665612265467644, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.032593488693237305, -0.002314448356628418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK>Old", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.946160527290658}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old', 8, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -2.2452516555786133, -0.002182602183893323, -8.583057933719829e-06, -0.0011290311813354492, 0.0, -0.001383066177368164, -3.254413604736328e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.00017547607421875, 0.0, -0.018892288208007812, -7.62939453125e-06, -0.011930465698242188, -7.82012939453125e-05, -8.225440979003906e-06, -5.960462772236497e-07, -0.00022194387565832585, -2.3841855067985307e-07, -0.0008713006973266602, -7.152531907195225e-06, -1.1444091796875e-05, -0.0001125335693359375, -1.9073486328125e-05, -3.814697265625e-06, -0.00015652179718017578, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010528564453125, -6.67572021484375e-05, -6.103515625e-05, -5.91278076171875e-05, -0.006221174728125334, -4.4941058149561286e-05, -0.04852485656738281, -0.33057403564453125, -0.0013637542724609375, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00023853778839111328, -5.841255187988281e-06, -0.002079010009765625, -0.0001316070556640625, -7.62939453125e-06, -0.037479519844055176, -3.24249267578125e-05, -0.0008640289306640625, -0.000141143798828125, -0.00257110595703125, -0.009365081787109375, -0.0006008148193359375, -2.09808349609375e-05, 0.0, -0.002686619758605957, -0.007689714431762695, 0.0, -0.0006046295166015625, -0.015511512756347656, -1.9073486328125e-06, -0.03658030554652214, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.032989501953125, -0.0023077726364135742, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004845857620239258, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.2437040550337315}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Sneed", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sneed Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -1.282377004623413, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -1.4648988246917725, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -0.3563213348388672, -0.0013408660888671875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00023472309112548828, -5.841255187988281e-06, -0.0021266937255859375, -0.000133514404296875, -7.62939453125e-06, -0.03731358051300049, -3.24249267578125e-05, -0.000873565673828125, -0.0001392364501953125, -0.0025463104248046875, -0.009175300598144531, -0.000598907470703125, -2.09808349609375e-05, 0.0, -0.0026990175247192383, -0.007669687271118164, 0.0, -0.0006160736083984375, -0.015893936157226562, -1.9073486328125e-06, -0.0367797389626503, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.03438699245452881, -0.002283930778503418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK><UNK>Shredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Sneed Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.283401998521356}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Sneed", "Old", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(SneedOld()),\n            PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -1.2063980102539062, -1.9073486328125e-06, -0.28335532546043396, -0.8971235752105713, -0.28324094414711, -0.0008220672607421875, -3.814697265625e-06, -4.0650367736816406e-05, -9.655950634623878e-06, 0.0], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"hole0": "SneedOld", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.3031158399273295}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Sneed", "Shredder", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(SneedShredder()),\n            PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -1.2063980102539062, -1.9073486328125e-06, -0.28335532546043396, -1.109804391860962, -0.28324094414711, -0.0008220672607421875, -3.814697265625e-06, -4.0650367736816406e-05, -9.655950634623878e-06, 0.0], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"hole0": "SneedShredder", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.51579665657772}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>Old<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -2.715096950531006, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -0.3563213348388672, -0.0013408660888671875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00023472309112548828, -5.841255187988281e-06, -0.0021266937255859375, -0.000133514404296875, -7.62939453125e-06, -0.03731358051300049, -3.24249267578125e-05, -0.000873565673828125, -0.0001392364501953125, -0.0025463104248046875, -0.009175300598144531, -0.000598907470703125, -2.09808349609375e-05, 0.0, -0.0026990175247192383, -0.007669687271118164, 0.0, -0.0006160736083984375, -0.015893936157226562, -1.9073486328125e-06, -0.0367797389626503, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.03438699245452881, -0.002283930778503418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK>Old<UNK>", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.641454818488626}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old', 8, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(CardQuery(\n            conditions=[ManaCost(2), IsMinion()])), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -1.282377004623413, -2.158891201019287, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -6.4373016357421875e-06, -0.00013554096221923828, -3.814697265625e-06, -0.00069427490234375, -0.0020627975463867188, -3.814697265625e-06, -0.000148773193359375, 0.0, -6.67572021484375e-05, -7.62939453125e-06, 0.0, -1.192092622659402e-05, 0.0, -3.814697265625e-05, -0.5726165771484375, -0.0005054473876953125, -0.2654828727245331, -0.0009186267852783203, -0.0035320294555276632, -0.022748947143554688, -0.002414821879938245, -6.198873961693607e-06, -0.0012454986572265625, 0.0, -0.00124359130859375, -3.254413604736328e-05, -3.814697265625e-06, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -0.000164031982421875, 0.0, -0.01729297637939453, -7.62939453125e-06, -0.008392333984375, -8.0108642578125e-05, -8.344650268554688e-06, -5.960462772236497e-07, -0.00022420835739467293, -2.3841855067985307e-07, -0.0008484125137329102, -7.629365427419543e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00015842914581298828, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010528564453125, -6.67572021484375e-05, -5.91278076171875e-05, -5.91278076171875e-05, -0.006173967849463224, -4.5775486796628684e-05, -0.04863166809082031, -0.32332801818847656, -0.00139617919921875, -5.7220458984375e-06, 0.0, -0.0004245042509865016, -0.00024044513702392578, -5.841255187988281e-06, -0.002063751220703125, -0.0001316070556640625, -7.62939453125e-06, -0.037281155586242676, -3.24249267578125e-05, -0.0008602142333984375, -0.0001392364501953125, -0.0025758743286132812, -0.009349822998046875, -0.0005970001220703125, -2.09808349609375e-05, 0.0, -0.0026723146438598633, -0.007677316665649414, 0.0, -0.00060272216796875, -0.015476226806640625, -1.9073486328125e-06, -0.03665612265467644, -3.933906555175781e-06, -7.62939453125e-06, -1.9073486328125e-06, -0.032593488693237305, -0.002314448356628418, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0004826784133911133, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "<UNK><UNK>", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.888063552202539}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Sneed", "Of", "Shredder", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(SneedOfShredder(\n            )), PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -1.2063980102539062, -1.9073486328125e-06, -0.28335532546043396, -1.4981465339660645, -0.4165930151939392, -0.0025989622808992863, -0.000209808349609375, -1.52587890625e-05, -1.9431114196777344e-05, -1.0371208190917969e-05, 0.0], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"hole0": "SneedOfShredder", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0394685131952315}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "<UNK>", "Old", "<EOS>", 208, 29, 94, 19, 125, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>Old(CARD_SOURCE\n            .<UNK>), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.8865633010864258, -1.1762189865112305, -0.0012140951585024595, -0.018215537071228027, -0.00816300231963396, -0.010344505310058594, -0.0008088349713943899, -0.00011277198791503906, -0.0027295351028442383, -2.7179348762729205e-05, -0.0035753168631345034, -1.7404405298293568e-05, -0.6133331060409546, -0.1940516084432602, -0.004026796668767929, -0.059787750244140625, -1.2312641143798828, -1.9073486328125e-06, -0.0034618377685546875, 0.0, -0.1786355972290039, -2.0265579223632812e-06, -0.0025739669799804688, -2.3841855067985307e-07, -0.23007869720458984, -0.0008393526077270508, -1.3589766240329482e-05, -0.028738021850585938, -3.814697265625e-05, -1.3709050108445808e-05, 0.0, -1.4424285836867057e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "<UNK> Old Shredder", "hole4": [{"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}], "hole1": 8, "hole5": "PlayerSelector", "hole3": "<UNK>Old", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.231982707015021}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "<UNK>", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "Sneed", "Old", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class <UNK><UNK>Shredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(5, 7, deathrattle=Deathrattle(Summon(SneedOld()),\n            PlayerSelector()))\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -1.282377004623413, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.5734071731567383, -0.0004405975341796875, -0.2676597535610199, -0.00047981739044189453, -0.0012777127558365464, -0.11242294311523438, -0.0010571479797363281, -6.866455078125e-05, -0.002161144744604826, -5.125986263010418e-06, -0.0009763240814208984, 0.0, -0.001556992530822754, -1.728534698486328e-05, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.0002307891845703125, 0.0, -0.016969680786132812, -7.62939453125e-06, -0.018115997314453125, -7.82012939453125e-05, -6.318092346191406e-06, -7.152555099310121e-07, -0.0002136010443791747, -2.3841855067985307e-07, -0.0007969141006469727, -8.34461570775602e-06, -1.1444091796875e-05, -0.00011444091796875, -1.71661376953125e-05, -3.814697265625e-06, -0.00016033649444580078, -2.3841855067985307e-07, -1.1444091796875e-05, -0.0010700225830078125, -6.67572021484375e-05, -7.62939453125e-05, -6.4849853515625e-05, -0.00601613475009799, -4.160325261182152e-05, -0.04937934875488281, -1.2063980102539062, -1.9073486328125e-06, -0.28335532546043396, -0.8971235752105713, -0.28324094414711, -0.0008220672607421875, -3.814697265625e-06, -4.0650367736816406e-05, -9.655950634623878e-06, 0.0], "model_output": {"body": [{"name": "<UNK><UNK>Shredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "<UNK> Old Shredder", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 8, "hole3": "minion_type", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole3": {"args": [{"args": [{"hole0": "SneedOld", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 5, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.24501886483921}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Old", "Shredder", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "<UNK>", " ", "Old", " ", "Shredder", "<EOS>", "8", "<EOS>", "LEGENDARY", "<EOS>", "<UNK>", "Old", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class <UNK>OldShredder(MinionCard):\n\n    def __init__(self):\n        super().__init__('<UNK> Old Shredder', 8, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(<UNK>Old(IsType(\n            MINION_TYPE.MECH)), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.814697265625e-06, -0.012417654506862164, -0.3404739797115326, -0.2179020345211029, -0.00283442041836679, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -6.079673767089844e-06, -0.00022327899932861328, -3.814697265625e-06, -0.0001888275146484375, -0.0027828216552734375, -5.7220458984375e-06, -0.0001239776611328125, 0.0, -4.76837158203125e-05, -7.62939453125e-06, 0.0, -1.1682508556987159e-05, 0.0, -3.24249267578125e-05, -0.8865633010864258, -1.1762189865112305, -0.0012140951585024595, -0.018215537071228027, -0.00816300231963396, -0.010344505310058594, -0.0008088349713943899, -0.00011277198791503906, -0.0027295351028442383, -2.7179348762729205e-05, -0.0035753168631345034, -1.7404405298293568e-05, -0.6133331060409546, -0.1940516084432602, -0.004026796668767929, -0.059787750244140625, -0.4945220947265625, -9.918212890625e-05, -3.62396240234375e-05, 0.0, -1.2256935834884644, -0.0011693239212036133, 0.0, -0.014055252075195312, 0.0, 0.0, -3.4332275390625e-05, 0.0, -0.1274271011352539, 0.0, -0.5219306945800781, 0.0, -0.12550854682922363, -0.000102996826171875, -7.152555099310121e-07, -0.03679847717285156, -3.24249267578125e-05, -3.5166307498002425e-05, 0.0, -1.81197356141638e-05, -5.7220458984375e-06], "model_output": {"body": [{"name": "<UNK>OldShredder", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "<UNK> Old Shredder", "hole4": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole1": 8, "hole5": "PlayerSelector", "hole3": "<UNK>Old", "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.103773234952087}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-5.7220458984375e-06, -3.814697265625e-06, -22.37374496459961], "model_output": {"body": [], "_type": "Module"}, "score": -22.373754501342773}]}
{"gold_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(AddCard(CardQuery(source=\n            CARD_SOURCE.LIST, source_list=spare_part_list)), PlayerSelector()))\n\n    def create_minion(self, player):\n        from hearthbreaker.cards.spells.neutral import spare_part_list\n        return Minion(5, 7, deathrattle=Deathrattle(AddCard(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector()))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "<UNK>", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>),\n            PlayerSelector()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -0.4323972463607788, 0.0, -0.0010433197021484375, -0.004143714904785156, 0.0, -0.0017718076705932617, -0.0002276897430419922, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -1.1920928244535389e-07, -0.01567375659942627, -0.00144195556640625, -9.5367431640625e-06, -1.33514404296875e-05, -0.06299400329589844, 0.0, -0.0036716461181640625, -0.00030517578125, -3.814697265625e-06, 0.0, -0.008665204048156738, -1.9073486328125e-06, -7.62939453125e-06, -0.0037288665771484375, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.2359895557165146, -0.00014352586003951728, -5.7220458984375e-06, -0.046428680419921875, -0.10892963409423828, -0.0026912689208984375, -0.0009174346923828125, -7.62939453125e-06, -0.002581833628937602, -0.010916948318481445, -5.543231964111328e-05, -0.42308902740478516, -2.86102294921875e-05, -1.33514404296875e-05, -0.005766868591308594, 0.0, -0.0009918212890625, 0.0, -2.6702880859375e-05, 0.0, -0.0007152557373046875, -5.6028297876764555e-06, -0.02833271026611328, -0.0007848739624023438, -0.000110626220703125, -0.0001735687255859375, -0.001010894775390625, -7.62939453125e-06, -0.001621246337890625, 0.0, -0.24156856536865234, -4.398822784423828e-05, -0.3697071075439453, -1.9073486328125e-06, -0.0011037586955353618, -0.000133514404296875, 0.0, -0.07216262817382812, 0.0, -0.003752589225769043, -5.340576171875e-05, 0.0, -0.0010890960693359375, -1.9073486328125e-06, -7.5101784204889555e-06, 0.0, -0.001716017723083496, -3.576278118089249e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "<UNK>", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.4123470045007522}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Aura", "Until", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "<UNK>", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Give(AuraUntil(AddCard(CardQuery\n            (source=CARD_SOURCE.LIST, source_list=<UNK>)), PlayerSelector()\n            )), MinionSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -0.48647117614746094, -0.039969444274902344, -8.988344052340835e-05, -0.0001654500374570489, -0.002070784568786621, -0.0002530493075028062, -0.22964715957641602, -1.1920928244535389e-07, -0.2905271053314209, -0.04295003414154053, -0.0001735687255859375, -0.0004367828369140625, -1.1255340576171875, -1.9073486328125e-05, 0.0, -0.19652940332889557, -0.09952688217163086, -2.1457672119140625e-06, -0.2190408706665039, -0.04477882385253906, -0.02803325653076172, -4.1961669921875e-05, -2.47955322265625e-05, -0.04415743798017502, -0.0020208358764648438, -0.0058536529541015625, -0.0006103515625, -0.008440017700195312, -0.0001087188720703125, -2.09808349609375e-05, -1.71661376953125e-05, -0.0005480048712342978, -0.016674160957336426, -4.208087921142578e-05, -0.010929107666015625, -6.4849853515625e-05, -4.38690185546875e-05, -0.0034695863723754883, -1.9073486328125e-06, -0.0007476806640625, 0.0, -4.00543212890625e-05, 0.0, -0.0001277923583984375, -4.41074053014745e-06, -0.010412216186523438, -0.00499725341796875, -0.000102996826171875, -0.0001354217529296875, -0.001239776611328125, -1.1444091796875e-05, -0.0023193359375, -1.9073486328125e-06, -0.31015491485595703, -5.53131103515625e-05, -0.0008754730224609375, -1.9073486328125e-06, -0.00029647350311279297, -6.29425048828125e-05, 0.0, -0.14736473560333252, -0.0010204315185546875, 0.0, -0.0010128021240234375, -0.000133514404296875, -3.814697265625e-06, -0.03397941589355469, 0.0, -3.0517578125e-05, -3.814697265625e-06, -0.03143906593322754, -5.7220458984375e-06, -7.62939453125e-06, -0.004772186279296875, -1.9073486328125e-06, -4.0172799344873056e-05, 0.0, -0.0025253293570131063, -3.576278118089249e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Toshley", "hole4": [{"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "<UNK>", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "AuraUntil", "_type": "Name"}, "_type": "Call"}], "hole1": 6, "hole5": "MinionSelector", "hole3": "Give", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.680378164455469}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "<UNK>", "<EOS>", 39, 130, "4", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>), \n            4), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -0.4323972463607788, 0.0, -0.0010433197021484375, -0.004143714904785156, 0.0, -0.0017718076705932617, -0.0002276897430419922, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -1.1920928244535389e-07, -0.01567375659942627, -0.00144195556640625, -9.5367431640625e-06, -1.33514404296875e-05, -0.06299400329589844, 0.0, -0.0036716461181640625, -0.00030517578125, -3.814697265625e-06, 0.0, -0.008665204048156738, -1.9073486328125e-06, -7.62939453125e-06, -0.0037288665771484375, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.2359895557165146, -0.00014352586003951728, -5.7220458984375e-06, -0.046428680419921875, -0.10892963409423828, -0.0026912689208984375, -0.0009174346923828125, -7.62939453125e-06, -0.002581833628937602, -0.010916948318481445, -5.543231964111328e-05, -0.42308902740478516, -2.86102294921875e-05, -1.33514404296875e-05, -0.005766868591308594, 0.0, -0.0009918212890625, 0.0, -2.6702880859375e-05, 0.0, -0.0007152557373046875, -5.6028297876764555e-06, -0.02833271026611328, -0.0007848739624023438, -0.000110626220703125, -0.0001735687255859375, -0.001010894775390625, -7.62939453125e-06, -0.001621246337890625, 0.0, -0.24156856536865234, -4.398822784423828e-05, -1.2858152389526367, -4.38690185546875e-05, -0.2005089372396469, 0.0, -0.0004940032958984375, 0.0, -0.00012791156768798828, -1.9073486328125e-06, 0.0, -0.0001735687255859375, -1.9073486328125e-06, -5.7220440794480965e-06, 0.0, -0.0023610591888427734, -3.576278118089249e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "<UNK>", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"n": 4, "_type": "Num"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.452151686757752}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "spare_part_list", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=\n            spare_part_list), PlayerSelector()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -0.4323972463607788, 0.0, -0.0010433197021484375, -0.004143714904785156, 0.0, -0.0017718076705932617, -0.0002276897430419922, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -1.1920928244535389e-07, -0.01567375659942627, -0.00144195556640625, -9.5367431640625e-06, -1.33514404296875e-05, -0.06299400329589844, 0.0, -0.0036716461181640625, -0.00030517578125, -3.814697265625e-06, 0.0, -0.008665204048156738, -1.9073486328125e-06, -7.62939453125e-06, -0.0037288665771484375, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.2359895557165146, -0.00014352586003951728, -5.7220458984375e-06, -0.046428680419921875, -0.10892963409423828, -0.0026912689208984375, -0.0009174346923828125, -7.62939453125e-06, -0.002581833628937602, -0.010916948318481445, -5.543231964111328e-05, -0.42308902740478516, -2.86102294921875e-05, -1.33514404296875e-05, -0.005766868591308594, 0.0, -0.0009918212890625, 0.0, -2.6702880859375e-05, 0.0, -0.0007152557373046875, -5.6028297876764555e-06, -0.02833271026611328, -0.0007848739624023438, -0.000110626220703125, -0.0001735687255859375, -0.001010894775390625, -7.62939453125e-06, -0.001621246337890625, 0.0, -1.6079864501953125, -1.9073486328125e-06, -0.10474681854248047, -3.814697265625e-06, -0.010304450988769531, -0.0002040863037109375, 0.0, -0.03580665588378906, -1.9073486328125e-06, -0.001190781593322754, -5.7220458984375e-05, 0.0, -0.001232147216796875, -1.9073486328125e-06, -7.987013304955326e-06, 0.0, -0.0016151666641235352, -3.576278118089249e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "spare_part_list", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.484166310034816}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Aura", "Until", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "spare_part_list", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Give(AuraUntil(AddCard(CardQuery\n            (source=CARD_SOURCE.LIST, source_list=spare_part_list)),\n            PlayerSelector())), MinionSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -0.48647117614746094, -0.039969444274902344, -8.988344052340835e-05, -0.0001654500374570489, -0.002070784568786621, -0.0002530493075028062, -0.22964715957641602, -1.1920928244535389e-07, -0.2905271053314209, -0.04295003414154053, -0.0001735687255859375, -0.0004367828369140625, -1.1255340576171875, -1.9073486328125e-05, 0.0, -0.19652940332889557, -0.09952688217163086, -2.1457672119140625e-06, -0.2190408706665039, -0.04477882385253906, -0.02803325653076172, -4.1961669921875e-05, -2.47955322265625e-05, -0.04415743798017502, -0.0020208358764648438, -0.0058536529541015625, -0.0006103515625, -0.008440017700195312, -0.0001087188720703125, -2.09808349609375e-05, -1.71661376953125e-05, -0.0005480048712342978, -0.016674160957336426, -4.208087921142578e-05, -0.010929107666015625, -6.4849853515625e-05, -4.38690185546875e-05, -0.0034695863723754883, -1.9073486328125e-06, -0.0007476806640625, 0.0, -4.00543212890625e-05, 0.0, -0.0001277923583984375, -4.41074053014745e-06, -0.010412216186523438, -0.00499725341796875, -0.000102996826171875, -0.0001354217529296875, -0.001239776611328125, -1.1444091796875e-05, -0.0023193359375, -1.9073486328125e-06, -1.3619747161865234, -1.9073486328125e-06, -0.0005283355712890625, -1.1444091796875e-05, -0.0014199018478393555, -7.2479248046875e-05, 0.0, -0.16147613525390625, -0.0014495849609375, 0.0, -0.001171112060546875, -0.0001316070556640625, -3.814697265625e-06, -0.033313751220703125, 0.0, -4.57763671875e-05, -3.814697265625e-06, -0.02858567237854004, -5.7220458984375e-06, -7.62939453125e-06, -0.00469207763671875, -1.9073486328125e-06, -3.898075010511093e-05, 0.0, -0.0024101731833070517, -3.576278118089249e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Toshley", "hole4": [{"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "spare_part_list", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "AuraUntil", "_type": "Name"}, "_type": "Call"}], "hole1": 6, "hole5": "MinionSelector", "hole3": "Give", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.743936623781046}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Summon", "<EOS>", 209, 49, 174, "Whelp", "<EOS>", 39, 130, "2", "<EOS>", "Player", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(Whelp(), 2),\n            PlayerSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -0.48647117614746094, -0.039969444274902344, -8.988344052340835e-05, -0.0001654500374570489, -0.002070784568786621, -0.0002530493075028062, -0.22964715957641602, -1.1920928244535389e-07, -1.5878865718841553, -3.993438804172911e-05, -0.38045692443847656, -0.0036563873291015625, -2.288818359375e-05, -0.5422499179840088, -0.0003378390974830836, -0.13091468811035156, 0.0, -0.11475574970245361, 0.0, -0.5671302080154419, -6.4849853515625e-05, -3.576278118089249e-07, -5.53131103515625e-05, -2.09808349609375e-05, -1.9073486328125e-06, -0.0022907257080078125, 0.0, -3.814697265625e-06, -7.62939453125e-06, -0.09962081909179688, -6.914137884450611e-06, -9.5367431640625e-06, -0.3452463150024414, -1.9073486328125e-06, -3.218649908376392e-06, 0.0, -0.005128026008605957, -1.9073468138230965e-06], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Toshley", "hole4": [{"hole0": "Whelp", "_type": "Template38"}, {"n": 2, "_type": "Num"}], "hole1": 6, "hole5": "PlayerSelector", "hole3": "Summon", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.765743274044489}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "<UNK>", "<EOS>", 39, 130, "4", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>), \n            4), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -1.0980647802352905, -2.1457672119140625e-06, -0.4285087585449219, -0.0003204345703125, 0.0, -0.0017552375793457031, -0.00028526782989501953, -6.67572021484375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0002956390380859375, -1.1920928244535389e-07, -0.028911709785461426, -0.0019407272338867188, -1.1444091796875e-05, -9.5367431640625e-06, -0.09021186828613281, 0.0, -0.0031337738037109375, -0.0003032684326171875, -1.9073486328125e-06, 0.0, -0.007961392402648926, -1.9073486328125e-06, -9.5367431640625e-06, -0.004547119140625, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.24998387694358826, -0.00014614840620197356, -5.7220458984375e-06, -0.04097557067871094, -0.10447502136230469, -0.0032596588134765625, -0.0008563995361328125, -7.62939453125e-06, -0.00257599214091897, -0.011194467544555664, -5.352497100830078e-05, -0.43277931213378906, -2.86102294921875e-05, -1.1444091796875e-05, -0.00566864013671875, 0.0, -0.0008907318115234375, 0.0, -2.6702880859375e-05, 0.0, -0.0007038116455078125, -5.722038622479886e-06, -0.02984905242919922, -0.0006647109985351562, -0.0001068115234375, -0.0001506805419921875, -0.0010204315185546875, -5.7220458984375e-06, -0.0013141632080078125, 0.0, -0.17904949188232422, -3.063678741455078e-05, -0.6248111724853516, -3.62396240234375e-05, -0.20178765058517456, 0.0, -0.0006389617919921875, 0.0, -0.00012028217315673828, -1.9073486328125e-06, 0.0, -0.000194549560546875, -1.9073486328125e-06, -5.602834789897315e-06, 0.0, -0.0023512840270996094, -3.576278118089249e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "<UNK>", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"n": 4, "_type": "Num"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.875252694404644}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Give", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 49, 174, "Is", "Spell", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Give(CardQuery(conditions=[\n            ManaCost(Attribute('<UNK>', HeroSelector())), IsSpell()])),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -0.48647117614746094, -0.039969444274902344, -8.988344052340835e-05, -0.0001654500374570489, -0.002070784568786621, -0.0002530493075028062, -0.22964715957641602, -1.1920928244535389e-07, -0.2905271053314209, -0.04295003414154053, -0.0001735687255859375, -0.0004367828369140625, -0.3992176055908203, -0.00016021728515625, -7.62939453125e-06, -0.010493636131286621, -0.00032067298889160156, -5.924701690673828e-05, -0.10066032409667969, -2.288818359375e-05, -9.5367431640625e-06, -0.11133396625518799, -9.5367431640625e-06, -0.008266448974609375, -7.43865966796875e-05, -0.0046329498291015625, -0.0019245147705078125, -1.1444091796875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.02520202472805977, -0.01652371883392334, -1.9073486328125e-06, -0.0013980865478515625, -0.10084247589111328, -0.000102996826171875, -3.814697265625e-06, 0.0, -0.1466570794582367, -0.0005228519439697266, -1.33514404296875e-05, -0.0005359649658203125, -2.6702880859375e-05, -0.42215287685394287, -0.0010051727294921875, -0.0016765594482421875, -1.9073486328125e-06, -0.7080980539321899, -0.00012969970703125, 0.0, -0.17493629455566406, -1.9073486328125e-06, -0.6499873399734497, -0.29188597202301025, -0.002730727195739746, -0.006636857986450195, -0.000164031982421875, -1.1920928244535389e-07, -0.0011730194091796875, -4.9591064453125e-05, -3.814697265625e-06, -0.44379329681396484, 0.0, -8.7738037109375e-05, -7.62939453125e-06, -0.013118863105773926, -6.4849853515625e-05, -2.86102294921875e-05, -0.0001888275146484375, -5.7220458984375e-06, -6.43729799776338e-06, 0.0, -0.007485032081604004, -3.218649908376392e-06], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Toshley", "hole4": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "<UNK>", "_type": "Str"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsSpell", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "hole1": 6, "hole5": "MinionSelector", "hole3": "Give", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.974387027878251}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 217, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "LIST", "<EOS>", 54, 197, "source_list", "<EOS>", 19, 125, "<UNK>", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(source=CARD_SOURCE.LIST, source_list=<UNK>),\n            PlayerSelector()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -1.0980647802352905, -2.1457672119140625e-06, -0.4285087585449219, -0.0003204345703125, 0.0, -0.0017552375793457031, -0.00028526782989501953, -6.67572021484375e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -0.0002956390380859375, -1.1920928244535389e-07, -0.028911709785461426, -0.0019407272338867188, -1.1444091796875e-05, -9.5367431640625e-06, -0.09021186828613281, 0.0, -0.0031337738037109375, -0.0003032684326171875, -1.9073486328125e-06, 0.0, -0.007961392402648926, -1.9073486328125e-06, -9.5367431640625e-06, -0.004547119140625, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.24998387694358826, -0.00014614840620197356, -5.7220458984375e-06, -0.04097557067871094, -0.10447502136230469, -0.0032596588134765625, -0.0008563995361328125, -7.62939453125e-06, -0.00257599214091897, -0.011194467544555664, -5.352497100830078e-05, -0.43277931213378906, -2.86102294921875e-05, -1.1444091796875e-05, -0.00566864013671875, 0.0, -0.0008907318115234375, 0.0, -2.6702880859375e-05, 0.0, -0.0007038116455078125, -5.722038622479886e-06, -0.02984905242919922, -0.0006647109985351562, -0.0001068115234375, -0.0001506805419921875, -0.0010204315185546875, -5.7220458984375e-06, -0.0013141632080078125, 0.0, -0.17904949188232422, -3.063678741455078e-05, -0.8417415618896484, -1.9073486328125e-06, -0.00124871707521379, -0.000148773193359375, 0.0, -0.13791465759277344, 0.0, -0.0030472278594970703, -6.103515625e-05, 0.0, -0.002231597900390625, -1.9073486328125e-06, -6.794924956921022e-06, 0.0, -0.0016776323318481445, -4.768370445162873e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "LIST"}, "arg": "source", "_type": "keyword"}, {"value": {"id": "<UNK>", "_type": "Name"}, "arg": "source_list", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.033385068455679}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Equip", "<EOS>", 208, 49, 174, "5", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            Equip(5()), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -0.4323972463607788, 0.0, -0.0010433197021484375, -0.004143714904785156, 0.0, -0.0017718076705932617, -0.0002276897430419922, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -1.1920928244535389e-07, -0.01567375659942627, -0.00144195556640625, -9.5367431640625e-06, -1.33514404296875e-05, -0.06299400329589844, 0.0, -0.0036716461181640625, -0.00030517578125, -3.814697265625e-06, 0.0, -0.008665204048156738, -1.9073486328125e-06, -7.62939453125e-06, -0.0037288665771484375, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -2.011732816696167, -0.00012314191553741693, -0.0007762908935546875, -0.25362110137939453, 0.0, -0.8912041783332825, -0.02777520939707756, -3.4332275390625e-05, -1.9073486328125e-06, -0.00018131731485482305, -2.300739288330078e-05, 0.0, -0.0276031494140625, -1.9073486328125e-06, -5.006789251638111e-06, -1.1920928244535389e-07, -0.002597212791442871, -1.0728830375228426e-06], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"hole0": "5", "_type": "Template38"}], "func": {"id": "Equip", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.065339966688597}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Summon", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(EnemyPlayer()),\n            MinionSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -0.48647117614746094, -0.039969444274902344, -8.988344052340835e-05, -0.0001654500374570489, -0.002070784568786621, -0.0002530493075028062, -0.22964715957641602, -1.1920928244535389e-07, -1.5878865718841553, -3.993438804172911e-05, -1.2640323638916016, -0.008307456970214844, -5.7220458984375e-06, -0.6729423403739929, -0.0007132255705073476, -9.5367431640625e-06, -0.18967421352863312, -0.0041980743408203125, -2.145764938177308e-06, -0.0004138946533203125, -2.6702880859375e-05, 0.0, -0.1777181625366211, 0.0, -3.814697265625e-06, -7.62939453125e-06, -0.04226207733154297, -2.5033950805664062e-05, -3.814697265625e-06, -0.13777732849121094, -1.9073486328125e-06, -3.8146954466355965e-06, 0.0, -0.0039157867431640625, -1.4305104514278355e-06], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Toshley", "hole4": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "hole1": 6, "hole5": "MinionSelector", "hole3": "Summon", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0758009254401415}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Toshley", "<EOS>", "6", "<EOS>", "LEGENDARY", "<EOS>", "Summon", "<EOS>", 209, 49, 174, "Whelp", "<EOS>", 39, 130, "2", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, battlecry=Battlecry(Summon(Whelp(), 2),\n            MinionSelector(players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -0.48647117614746094, -0.039969444274902344, -8.988344052340835e-05, -0.0001654500374570489, -0.002070784568786621, -0.0002530493075028062, -0.22964715957641602, -1.1920928244535389e-07, -1.5878865718841553, -3.993438804172911e-05, -0.38045692443847656, -0.0036563873291015625, -2.288818359375e-05, -0.5422499179840088, -0.0003378390974830836, -0.13091468811035156, 0.0, -0.11475574970245361, 0.0, -1.1743937730789185, -0.0004730224609375, -3.576278118089249e-07, -0.0004405975341796875, -2.47955322265625e-05, -1.9073486328125e-06, -0.01823711395263672, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -0.081451416015625, -8.463859558105469e-06, -9.5367431640625e-06, -0.25875186920166016, -1.9073486328125e-06, -3.4570680327306036e-06, 0.0, -0.004826068878173828, -1.7881377516459906e-06], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Toshley", "hole4": [{"hole0": "Whelp", "_type": "Template38"}, {"n": 2, "_type": "Num"}], "hole1": 6, "hole5": "MinionSelector", "hole3": "Summon", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.284792084050359}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 208, 49, 174, "Is", "Weapon", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(conditions=[IsWeapon()]), PlayerSelector()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -0.4323972463607788, 0.0, -0.0010433197021484375, -0.004143714904785156, 0.0, -0.0017718076705932617, -0.0002276897430419922, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -1.1920928244535389e-07, -0.01567375659942627, -0.00144195556640625, -9.5367431640625e-06, -1.33514404296875e-05, -0.06299400329589844, 0.0, -0.0036716461181640625, -0.00030517578125, -3.814697265625e-06, 0.0, -0.008665204048156738, -1.9073486328125e-06, -7.62939453125e-06, -0.0037288665771484375, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.2359895557165146, -0.00014352586003951728, -5.7220458984375e-06, -0.046428680419921875, -0.10892963409423828, -0.0026912689208984375, -0.0009174346923828125, -7.62939453125e-06, -0.002581833628937602, -0.010916948318481445, -5.543231964111328e-05, -1.1113805770874023, -7.2479248046875e-05, -1.9073486328125e-06, -0.022829174995422363, -5.7220458984375e-06, -0.0061550140380859375, -6.67572021484375e-05, -0.9133272171020508, -0.014188766479492188, -0.001483917236328125, -0.19793030619621277, -0.1558375358581543, -1.52587890625e-05, -0.6265363693237305, 0.0, -0.07032108306884766, -0.0003147125244140625, 0.0, -0.02454376220703125, -1.9073486328125e-06, -0.00038993358612060547, -0.00011837482452392578, 0.0, -0.0002727508544921875, -1.9073486328125e-06, -8.225431884056889e-06, 0.0, -0.0018581151962280273, -7.152555099310121e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"hole0": "IsWeapon", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.405988351314583}, {"choice_history": [55, 124, 221, 63, 103, "Toshley", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Toshley", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "LEGENDARY", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 209, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Is", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", 39, 130, "2", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "7", "<EOS>"], "inferred_code": "class Toshley(MinionCard):\n\n    def __init__(self):\n        super().__init__('Toshley', 6, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY, minion_type=MINION_TYPE.DRAGON, battlecry=Battlecry(\n            AddCard(CardQuery(conditions=[Is<UNK>(Attribute('<UNK>',\n            PlayerSelector())), IsMinion()]), 2), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 7)\n", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.000202178955078125, -7.62939453125e-06, -0.0025308129843324423, -0.014093463309109211, 0.0, -5.7220458984375e-06, 0.0, -4.994868868379854e-05, -6.675716122117592e-06, -3.6716461181640625e-05, -9.5367431640625e-06, -0.0018405914306640625, -3.814697265625e-06, -4.291534423828125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -3.5762786865234375e-05, -7.152555099310121e-07, -0.20829486846923828, -1.0781335830688477, -2.09808349609375e-05, 0.0, -0.000278472900390625, -0.0005731582641601562, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -1.537795105832629e-05, -7.2479248046875e-05, -4.887569048150908e-06, 0.0, -0.00257110595703125, -0.0001277923583984375, -2.288818359375e-05, -2.1457672119140625e-06, -0.00016069412231445312, -7.62939453125e-06, 0.0, -0.00015032284136395901, -2.038461752817966e-05, -1.1444091796875e-05, -3.814697265625e-06, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007884502410888672, -2.753734588623047e-05, -0.001968860626220703, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -0.0006994009017944336, -1.4185894542606547e-05, -0.4323972463607788, 0.0, -0.0010433197021484375, -0.004143714904785156, 0.0, -0.0017718076705932617, -0.0002276897430419922, -7.62939453125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.0003662109375, -1.1920928244535389e-07, -0.01567375659942627, -0.00144195556640625, -9.5367431640625e-06, -1.33514404296875e-05, -0.06299400329589844, 0.0, -0.0036716461181640625, -0.00030517578125, -3.814697265625e-06, 0.0, -0.008665204048156738, -1.9073486328125e-06, -7.62939453125e-06, -0.0037288665771484375, -0.0001964569091796875, -1.33514404296875e-05, -1.9073486328125e-06, -0.2359895557165146, -0.00014352586003951728, -5.7220458984375e-06, -0.046428680419921875, -0.10892963409423828, -0.0026912689208984375, -0.0009174346923828125, -7.62939453125e-06, -0.002581833628937602, -0.010916948318481445, -5.543231964111328e-05, -1.1113805770874023, -7.2479248046875e-05, -1.9073486328125e-06, -0.022829174995422363, -5.7220458984375e-06, -0.0061550140380859375, -6.67572021484375e-05, -0.5180397033691406, -0.001476287841796875, -9.5367431640625e-06, -5.7220458984375e-05, -1.52587890625e-05, -1.2284348011016846, -0.003911852836608887, -0.0010710705537348986, -0.09119796752929688, -0.022096633911132812, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.025604991242289543, -0.0004048347473144531, -1.9073486328125e-05, -0.0007877349853515625, -5.14984130859375e-05, -0.25051382184028625, -0.00072479248046875, -0.00386810302734375, -1.9073486328125e-06, -0.47864460945129395, -3.24249267578125e-05, 0.0, -0.0938558578491211, -1.9073486328125e-06, -1.138477087020874, -0.432692289352417, -0.000396728515625, -0.010288238525390625, 0.0, -0.008627067320048809, 0.0, -0.0050811767578125, -3.814697265625e-06, -0.0004407167434692383, -2.288818359375e-05, 0.0, -0.0002841949462890625, -1.9073486328125e-06, -6.675716122117592e-06, 0.0, -0.003316163783892989, -4.768370445162873e-07], "model_output": {"body": [{"name": "Toshley", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Toshley", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "LEGENDARY"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "<UNK>", "_type": "Str"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Is<UNK>", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}, {"n": 2, "_type": "Num"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.719342677731781}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-9.5367431640625e-06, -3.814697265625e-06, -21.916086196899414], "model_output": {"body": [], "_type": "Module"}, "score": -21.916099548339844}]}
{"gold_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "buffs", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Cant", "Attack", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, buffs=[Buff(CantAttack())])\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -0.722987174987793, 0.0, -0.0010347366333007812, -8.58306884765625e-05, -0.0001964569091796875, -1.52587890625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.023675203323364258, -4.887569048150908e-06, -0.4145526885986328, -0.0009021759033203125, -5.7220458984375e-06, -0.8212207555770874, -0.006792175117880106, -7.748603820800781e-06, -0.0002803802490234375, -9.5367431640625e-06, -5.3405743528855965e-05, -8.344646857949556e-07, -9.417532055522315e-06, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"elts": [{"args": [{"hole0": "CantAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "buffs", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0716063435420082}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "buffs", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Buff", "<EOS>", 209, 49, 174, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, buffs=[Buff(1(),\n            SelfSelector())])\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -0.722987174987793, 0.0, -0.0010347366333007812, -8.58306884765625e-05, -0.0001964569091796875, -1.52587890625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.023675203323364258, -4.887569048150908e-06, -1.0813751220703125, -0.0001621246337890625, -4.57763671875e-05, -0.08437592536211014, -0.003760948544368148, -0.0011119842529296875, -5.7220458984375e-06, -0.10329984873533249, -2.0384788513183594e-05, 0.0, -0.00299072265625, -3.814697265625e-06, -8.177624113159254e-05, 0.0, -9.417514775122982e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"elts": [{"args": [{"hole0": "1", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "buffs", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.1050148324542235}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(\n            Damage(1), CharacterSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -1.0776395797729492, 0.0, -0.06504058837890625, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.0006313323974609375, -4.768370445162873e-07, -1.9073486328125e-06, -0.6797618865966797, -0.000286102294921875, -0.04328237473964691, -1.990795135498047e-05, -0.012988090515136719, -0.035125732421875, -0.00023651123046875, 0.0, -0.12762117385864258, -8.940617408370599e-05, 0.0, -0.12725162506103516, -4.57763671875e-05, -2.09808349609375e-05, -0.03861427307128906, 0.0, -3.814697265625e-06, -3.814697265625e-06, -0.00037467479705810547, -1.9073486328125e-06, 0.0, -0.0001087188720703125, -8.0108642578125e-05, -0.015809059143066406, 0.0, -7.05718994140625e-05, -7.62939453125e-06, -0.011754512786865234, -5.173683166503906e-05, -2.0265579223632812e-06, -0.000690460205078125, -6.67572021484375e-05, -6.270383164519444e-05, -2.3841855067985307e-07, -1.692763908067718e-05, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3175598999934763}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "buffs", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "1", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, buffs=[Buff(1())])\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -0.722987174987793, 0.0, -0.0010347366333007812, -8.58306884765625e-05, -0.0001964569091796875, -1.52587890625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.023675203323364258, -4.887569048150908e-06, -0.4145526885986328, -0.0009021759033203125, -5.7220458984375e-06, -1.7096529006958008, -0.02012333832681179, -0.0004730224609375, -1.9073486328125e-05, -4.243848525220528e-05, -2.3841830625315197e-06, -4.529952548182337e-06, -3.576278118089249e-07], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"elts": [{"args": [{"hole0": "1", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "buffs", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9735498963107645}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "buffs", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Mech", "Attack", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, buffs=[Buff(MechAttack())])\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -0.722987174987793, 0.0, -0.0010347366333007812, -8.58306884765625e-05, -0.0001964569091796875, -1.52587890625e-05, -9.5367431640625e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.023675203323364258, -4.887569048150908e-06, -0.4145526885986328, -0.0009021759033203125, -5.7220458984375e-06, -1.372917652130127, -0.46118736267089844, -1.33514404296875e-05, -8.58306884765625e-05, -3.814697265625e-06, -3.838538395939395e-05, -1.6689286894688848e-06, -9.179113476420753e-06, -4.768370445162873e-07], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"elts": [{"args": [{"hole0": "MechAttack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "buffs", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.077489572982579}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Warbot", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.7076082229614258, -0.0001068115234375, -4.29153169534402e-06, -5.006789251638111e-06, -1.4662757166661322e-05, -1.1920928244535389e-07, -0.010332703590393066, 0.0, -1.2636161045520566e-05, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -1.348464012145996, -4.768370445162873e-07, -0.008798599243164062, -1.9073486328125e-05, -4.053113570989808e-06, -2.0265558760002023e-06, -0.0001327889913227409, -1.2278481335670222e-05, -0.37163519859313965, -9.536697689327411e-06, -0.001178741455078125, -7.62939453125e-05, -0.30556488037109375, -3.0517578125e-05, -1.71661376953125e-05, -1.1444091796875e-05, 0.0, -0.0032554862555116415, -4.768371127283899e-06, -8.392333984375e-05, -0.006580352783203125, -0.0005054473876953125, -0.17724120616912842, -1.3113007298670709e-05, -0.20728683471679688, -0.06558799743652344, -4.57763671875e-05, 0.0, -0.0021048784255981445, -0.0002346038818359375, 0.0, -0.2563667297363281, -0.09847640991210938, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -0.4186406433582306, -0.13148319721221924, -5.960462772236497e-07, -7.62939453125e-06, -0.00018310546875, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.006267547607421875, 0.0, -0.32796573638916016, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0014157295227050781, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"_type": "Template3", "hole0": "Warbot", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.4586875573126505}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Warbot", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.7076082229614258, -0.0001068115234375, -4.29153169534402e-06, -5.006789251638111e-06, -1.4662757166661322e-05, -1.1920928244535389e-07, -0.010332703590393066, 0.0, -1.2636161045520566e-05, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -1.4416627883911133, 0.0, -0.003765106201171875, -1.1444091796875e-05, -4.1723224057932384e-06, -4.172316494077677e-06, -0.00010477975592948496, -2.2411095415009186e-05, -0.4193153381347656, -9.894321920000948e-06, -0.00098419189453125, -8.392333984375e-05, -0.20990753173828125, -2.6702880859375e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.004153847694396973, -2.861022494471399e-06, -8.392333984375e-05, -0.006552696228027344, -0.000499725341796875, -0.18247008323669434, -1.3113007298670709e-05, -0.24374675750732422, -0.06279182434082031, -4.1961669921875e-05, 0.0, -0.0022172927856445312, -0.0001983642578125, 0.0, -0.31855201721191406, -0.0901021957397461, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -0.3689004182815552, -0.13222718238830566, -5.960462772236497e-07, -7.62939453125e-06, -0.000186920166015625, -5.7220458984375e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0061187744140625, 0.0, -0.3299579620361328, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0013527870178222656, -3.933906555175781e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"_type": "Template3", "hole0": "Warbot", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.545088875850347}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Warbot", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.7076082229614258, -0.0001068115234375, -4.29153169534402e-06, -5.006789251638111e-06, -1.4662757166661322e-05, -1.1920928244535389e-07, -0.010332703590393066, 0.0, -1.2636161045520566e-05, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -1.4416627883911133, 0.0, -0.003765106201171875, -1.1444091796875e-05, -4.1723224057932384e-06, -4.172316494077677e-06, -0.00010477975592948496, -2.2411095415009186e-05, -0.4193153381347656, -9.894321920000948e-06, -0.00098419189453125, -8.392333984375e-05, -0.20990753173828125, -2.6702880859375e-05, -1.71661376953125e-05, -9.5367431640625e-06, 0.0, -0.004153847694396973, -2.861022494471399e-06, -8.392333984375e-05, -0.006552696228027344, -0.000499725341796875, -0.18247008323669434, -1.3113007298670709e-05, -1.558609962463379, -5.7220458984375e-06, -0.005598194431513548, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"_type": "Template3", "hole0": "Warbot", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.552766437919665}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Warbot", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.7076082229614258, -0.0001068115234375, -4.29153169534402e-06, -5.006789251638111e-06, -1.4662757166661322e-05, -1.1920928244535389e-07, -0.010332703590393066, 0.0, -1.2636161045520566e-05, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -1.320566177368164, -2.1457672119140625e-06, -0.0076999664306640625, -1.33514404296875e-05, -9.417526598554105e-06, -2.861018856492592e-06, -0.00011955158697674051, -1.5139465176616795e-05, -0.39294350147247314, -1.2874520507466514e-05, -0.001232147216796875, -6.866455078125e-05, -0.36792564392089844, -3.4332275390625e-05, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -0.0029834506567567587, -4.5299530029296875e-06, -8.58306884765625e-05, -0.006758689880371094, -0.000514984130859375, -0.1735706329345703, -1.2993798009119928e-05, -0.23907852172851562, -0.06364822387695312, -4.38690185546875e-05, 0.0, -0.002251744270324707, -0.000209808349609375, 0.0, -0.24225234985351562, -0.09816360473632812, -1.9073486328125e-06, -1.33514404296875e-05, -2.288818359375e-05, -0.4519090950489044, -0.12779748439788818, -5.960462772236497e-07, -7.62939453125e-06, -0.0001678466796875, -5.7220458984375e-06, -8.0108642578125e-05, -1.9073486328125e-06, -0.0062198638916015625, 0.0, -0.3288288116455078, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0014157295227050781, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"_type": "Template3", "hole0": "Warbot", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.5555775247433345}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Warbot", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.7076082229614258, -0.0001068115234375, -4.29153169534402e-06, -5.006789251638111e-06, -1.4662757166661322e-05, -1.1920928244535389e-07, -0.010332703590393066, 0.0, -1.2636161045520566e-05, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -1.320566177368164, -2.1457672119140625e-06, -0.0076999664306640625, -1.33514404296875e-05, -9.417526598554105e-06, -2.861018856492592e-06, -0.00011955158697674051, -1.5139465176616795e-05, -0.39294350147247314, -1.2874520507466514e-05, -0.001232147216796875, -6.866455078125e-05, -0.36792564392089844, -3.4332275390625e-05, -1.52587890625e-05, -1.1444091796875e-05, 0.0, -0.0029834506567567587, -4.5299530029296875e-06, -8.58306884765625e-05, -0.006758689880371094, -0.000514984130859375, -0.1735706329345703, -1.2993798009119928e-05, -1.576951026916504, -5.7220458984375e-06, -0.005533704999834299, -3.933906555175781e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"_type": "Template3", "hole0": "Warbot", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.575941312398292}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Warbot", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(1(), SelfSelector())])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.7076082229614258, -0.0001068115234375, -4.29153169534402e-06, -5.006789251638111e-06, -1.4662757166661322e-05, -1.1920928244535389e-07, -0.010332703590393066, 0.0, -1.2636161045520566e-05, -4.0531158447265625e-06, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -7.62939453125e-06, 0.0, -1.320566177368164, -2.1457672119140625e-06, -0.0076999664306640625, -1.33514404296875e-05, -9.417526598554105e-06, -2.861018856492592e-06, -0.00011955158697674051, -1.5139465176616795e-05, -0.39294350147247314, -1.2874520507466514e-05, -0.001232147216796875, -6.866455078125e-05, -1.1787300109863281, -6.67572021484375e-05, -1.71661376953125e-05, -0.003935813903808594, -3.814697265625e-06, -0.001368880271911621, -1.0728830375228426e-06, -5.7220458984375e-05, -0.008452415466308594, -0.0012226104736328125, -0.060225844383239746, -4.1245912143494934e-05, -0.4268321990966797, -1.9073486328125e-06, -0.0019100075587630272, -2.1457672119140625e-06, 0.0, -0.0002155303955078125, -1.71661376953125e-05, -2.288818359375e-05, 0.0, -0.3160073757171631, -3.576278118089249e-07, -1.33514404296875e-05, -0.4082670211791992, -0.0001087188720703125, -0.14364904165267944, -6.89027801854536e-05, -0.0001316070556640625, -1.9073486328125e-06, -0.018051763996481895, -3.933906555175781e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"_type": "Template3", "hole0": "Warbot", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "1", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0109578122517675}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 38, 127, "Null", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(Give\n            (ChangeAttack(1)), MinionSelector(Null, value=0)))\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -1.0776395797729492, 0.0, -0.06504058837890625, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.0006313323974609375, -4.768370445162873e-07, -1.9073486328125e-06, -1.231882095336914, -0.0019054412841796875, -0.00039315171306952834, -1.609325408935547e-05, -0.0003236532211303711, -0.10881149768829346, -1.9073486328125e-06, -0.001068204641342163, -2.0265579223632812e-06, -0.027759552001953125, -0.13015174865722656, -0.000377655029296875, 0.0, -0.001469254493713379, -0.7574272155761719, -1.1920928244535389e-07, -0.0012683868408203125, -0.03105640411376953, -0.008136749267578125, -5.161762237548828e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-05, 0.0, -1.1282566785812378, -8.344646857949556e-07, -0.021109580993652344, -6.103515625e-05, -0.000125765785924159, 0.0, -0.09052085876464844, -5.53131103515625e-05, -0.00018417550018057227, 0.0, -5.54300204385072e-05, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.7656705801835955}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 3, enrage=[Aura(ChangeAttack(1), MinionSelector(\n            IsType(MINION_TYPE.MURLOC), BothPlayer()))])\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -2.4569530487060547, 0.0, -0.0005931854248046875, -4.1961669921875e-05, 0.0, -1.7404556274414062e-05, -2.0265579223632812e-06, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, 0.0, -0.0001468658447265625, 0.0, -0.3365917205810547, -1.1920928244535389e-07, -0.007259368896484375, -1.9073486328125e-05, -1.9430985048529692e-05, -4.768370445162873e-07, -0.0001552475441712886, -3.4570634852570947e-06, -0.38770365715026855, -3.3378546504536644e-06, -0.0018787384033203125, -6.4849853515625e-05, -0.05532073974609375, -1.52587890625e-05, -1.33514404296875e-05, -3.814697265625e-06, 0.0, -0.005307316780090332, -4.52994936495088e-06, -7.43865966796875e-05, -0.006900787353515625, -0.0004596710205078125, -0.08337807655334473, -8.583057933719829e-06, -0.41982364654541016, -0.027449607849121094, -1.33514404296875e-05, 0.0, -0.0024383068084716797, -0.0001201629638671875, 0.0, -0.3518791198730469, -0.1582040786743164, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-05, -0.2995791733264923, -0.0694112703204155, -5.960462772236497e-07, -5.7220458984375e-06, -0.0003070831298828125, -3.814697265625e-06, -8.20159912109375e-05, -1.9073486328125e-06, -0.0048236846923828125, 0.0, -0.3064422607421875, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.0013337135314941406, -3.933906555175781e-06, 0.0], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.858607786840864}, {"choice_history": [55, 124, 221, 63, 103, "Warbot", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Warbot", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 32, 102, 19, 125, "Minion", "Selector", "<EOS>", 208, 38, 127, "Null", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "1", "<EOS>", "3", "<EOS>"], "inferred_code": "class Warbot(MinionCard):\n\n    def __init__(self):\n        super().__init__('Warbot', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, minion_type=MINION_TYPE.BEAST, battlecry=Battlecry(Give\n            (ChangeAttack(1)), MinionSelector(Null, players=EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(1, 3)\n", "score_history": [0.0, -1.9073486328125e-06, -1.9073486328125e-06, -3.0517578125e-05, -9.5367431640625e-06, -0.0001037067049765028, -0.0004029269621241838, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -5.7220440794480965e-06, -1.7404556274414062e-05, -0.0001049041748046875, -5.7220458984375e-06, -0.6803503036499023, -1.9073486328125e-05, -0.00014257431030273438, -4.768370445162873e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -8.296966552734375e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.00016021728515625, -3.814697265625e-06, -1.9073486328125e-05, -0.007293701171875, -4.9591064453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -1.9073486328125e-06, -2.9205850296420977e-05, -1.33514404296875e-05, -1.1920928955078125e-05, -1.1920928244535389e-07, -0.09119606018066406, -3.24249267578125e-05, -9.5367431640625e-06, -7.033334895822918e-06, -4.1723224057932384e-06, -3.814697265625e-06, -3.814697265625e-06, -0.00015243359666783363, -4.410743713378906e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.33514404296875e-05, -5.14984130859375e-05, -3.814697265625e-06, -5.245195097813848e-06, -0.09314990043640137, 0.0, 0.0, -9.5367431640625e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -1.1086402082582936e-05, -0.090087890625, -1.3232166566012893e-05, -0.0054302215576171875, -0.001407623291015625, -0.0001964569091796875, -3.933906555175781e-06, -2.3126602172851562e-05, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.00543212890625e-05, 0.0, -0.1085977554321289, -8.225440979003906e-06, -0.0002574920654296875, 0.0, -1.0776395797729492, 0.0, -0.06504058837890625, -3.4332275390625e-05, -9.5367431640625e-06, 0.0, -0.0006313323974609375, -4.768370445162873e-07, -1.9073486328125e-06, -1.231882095336914, -0.0019054412841796875, -0.00039315171306952834, -1.609325408935547e-05, -0.0003236532211303711, -0.10881149768829346, -1.9073486328125e-06, -0.001068204641342163, -2.0265579223632812e-06, -0.027759552001953125, -0.13015174865722656, -0.000377655029296875, 0.0, -0.001469254493713379, -0.7574272155761719, -1.1920928244535389e-07, -0.0012683868408203125, -0.03105640411376953, -0.008136749267578125, -5.161762237548828e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-05, 0.0, -1.3349827527999878, 0.0, -9.5367431640625e-06, 0.0, -0.030505061149597168, -1.0013580322265625e-05, 0.0, -0.11180686950683594, -2.6702880859375e-05, -3.349781036376953e-05, -8.344646857949556e-07, -6.914123787282733e-06, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Warbot", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Warbot", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"args": [{"value": "Null", "_type": "NameConstant"}], "keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.00268332928438}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -1.9073486328125e-06, -22.771324157714844], "model_output": {"body": [], "_type": "Module"}, "score": -22.771326065063477}]}
{"gold_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, taunt=True, deathrattle=Deathrattle(Summon(\n            CardQuery(conditions=[IsMinion()], source=CARD_SOURCE.MY_DECK)),\n            PlayerSelector(EnemyPlayer())))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Deathlord", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Deathlord(),\n            PlayerSelector()))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -0.369341105222702, -0.08263759315013885, -0.1522388458251953, -3.814697265625e-06, -0.00026404857635498047, -2.3722486730548553e-05, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>Deathlord", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.4192544938457559}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>(), PlayerSelector()))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -2.0886070728302, -0.7944011688232422, -9.5367431640625e-06, -0.001707076677121222, -5.66233902645763e-05, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.6995268423513608}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "Draw", "<EOS>", 32, 101, 19, 125, "Player", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Draw(), PlayerSelector(\n            EnemyPlayer())))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -3.0252270698547363, -0.0011487130541354418, -0.15831565856933594, -0.017194747924804688, -7.62939453125e-06, -1.9073486328125e-06, -0.0012618303298950195, -8.106231689453125e-06, 0.0, -0.009990692138671875, -0.0003147125244140625, 0.0, -0.009530910290777683, -8.213242836063728e-05, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "Draw", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9270760271599556}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Deathlord", "Deathlord", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>DeathlordDeathlord\n            (), PlayerSelector()))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -0.369341105222702, -2.7359085083007812, -0.004074047785252333, -0.04555702209472656, -5.7220458984375e-06, -0.0008001327514648438, -1.0251977982989047e-05, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>DeathlordDeathlord", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.970442154066177}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "buffs", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Windfury", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, buffs=[Buff(<UNK>Windfury())])\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -2.7274012565612793, -8.463855920126662e-06, -0.000263214111328125, -1.52587890625e-05, -0.02097320556640625, -4.00543212890625e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.012899279594421387, -8.940691259340383e-06, -0.5166397094726562, -0.04033660888671875, -1.9073486328125e-06, -0.05392814427614212, -0.6413412094116211, -5.245195097813848e-06], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"elts": [{"args": [{"hole0": "<UNK>Windfury", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "buffs"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.254341875434193}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "2", "<EOS>", 208, 40, 134, "puts", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>2('puts'),\n            PlayerSelector()))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -1.187911033630371, -0.000171661376953125, -7.62939453125e-06, -1.9073486328125e-06, -0.6034631729125977, -0.6254730224609375, -4.553794860839844e-05, -0.0019588470458984375, -1.1311769485473633, -1.9073486328125e-05, -0.3779623210430145, -0.000728607177734375, -0.23543739318847656, -1.9073486328125e-06, -0.0021382570266723633, -1.9073486328125e-06, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"args": [{"s": "puts", "_type": "Str"}], "func": {"id": "<UNK>2", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.505744096931039}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "puts", "Deathlord", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(putsDeathlord()),\n            PlayerSelector()))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -1.187911033630371, -0.000171661376953125, -7.62939453125e-06, -1.9073486328125e-06, -2.133786201477051, -0.0015459085116162896, -3.62396240234375e-05, -0.0004673004150390625, -5.7220458984375e-06, -0.26310890913009644, -0.12155571579933167, -0.8568164110183716, -0.0003108978271484375, 0.0, -4.601478576660156e-05, -9.536735888104886e-06, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"args": [{"hole0": "putsDeathlord", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.905025958766373}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Deathlord", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 70, 140, "2", "<EOS>", "8", "<EOS>", "Card", "Played", "<EOS>", "Summon", "<EOS>", 208, 49, 174, "puts", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(2, 8, effects=[Effect(CardPlayed(), ActionTag(Summon(\n            puts<UNK>()), PlayerSelector()))])\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.173018455505371, -7.62939453125e-06, -1.7166130419354886e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.821463779895566e-06, -1.0728830375228426e-06, -2.47955322265625e-05, -0.057229042053222656, -0.00054931640625, -4.41074053014745e-06, -4.935261677019298e-05, -7.6293927122605965e-06, -2.3841855067985307e-07, -0.12655067443847656, -2.264974000354414e-06, -0.00011491434997878969, -3.099440846199286e-06, -3.814697265625e-06, 0.0, -0.0002841949462890625, 0.0, -0.0002994537353515625, -1.1920928244535389e-07, -0.7831916809082031, -3.814697265625e-06, -0.18426799774169922, -0.09458637237548828, -4.208087193546817e-05, -1.883488948806189e-05, -0.0001260038116015494, -4.9114016292151064e-05, -0.4787864685058594, -0.04416191577911377, -1.33514404296875e-05, -0.021541476249694824, -4.744528996525332e-05, -5.7220458984375e-06, -0.000263214111328125, -6.4849853515625e-05, -0.08010848611593246, -1.0078136920928955, -0.003223238978534937, -0.005771160125732422, -0.0002574920654296875, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Deathlord", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Deathlord", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"_type": "Template0", "hole0": 2, "hole4": [{"hole0": "puts<UNK>", "_type": "Template38"}], "hole1": 8, "hole5": "PlayerSelector", "hole3": "Summon", "hole2": "CardPlayed"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.104401514143589}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Deathlord", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Deathlord(),\n            MinionSelector(IsType(MINION_TYPE.DEMON))))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -0.369341105222702, -0.08263759315013885, -1.9649858474731445, -0.05462837219238281, -5.7220458984375e-06, 0.0, -0.2171095609664917, -0.0001628398895263672, -2.3841855067985307e-07, -0.7215023040771484, -0.07749557495117188, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.4483107328414917, -0.0006268024444580078, -2.0265579223632812e-06, -0.0036334991455078125, 0.0, -1.9073486328125e-06, -0.000244140625, 0.0, -0.0033779144287109375, -4.279613494873047e-05, -1.0870246887207031, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>Deathlord", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.845884752567798}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Deathlord", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Deathlord(),\n            MinionSelector(IsType(MINION_TYPE.PIRATE))))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -0.369341105222702, -0.08263759315013885, -1.9649858474731445, -0.05462837219238281, -5.7220458984375e-06, 0.0, -0.2171095609664917, -0.0001628398895263672, -2.3841855067985307e-07, -0.7215023040771484, -0.07749557495117188, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.4483107328414917, -0.0006268024444580078, -2.0265579223632812e-06, -0.0036334991455078125, 0.0, -1.9073486328125e-06, -0.000244140625, 0.0, -0.0033779144287109375, -4.279613494873047e-05, -1.1745080947875977, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>Deathlord", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.933368158634693}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Deathlord", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "puts", "Deathlord", "Deathlord", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.\n            RARE, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(Summon(\n            putsDeathlordDeathlord()), PlayerSelector()))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.173018455505371, -7.62939453125e-06, -1.7166130419354886e-05, -2.3841855067985307e-07, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -8.821463779895566e-06, -1.0728830375228426e-06, -2.47955322265625e-05, -0.057229042053222656, -0.00054931640625, -4.41074053014745e-06, -4.935261677019298e-05, -7.6293927122605965e-06, -2.3841855067985307e-07, -0.12655067443847656, -2.264974000354414e-06, -0.00011491434997878969, -3.099440846199286e-06, -3.814697265625e-06, 0.0, -0.0002841949462890625, 0.0, -0.0002994537353515625, -1.1920928244535389e-07, -1.375173568725586, -7.62939453125e-06, -0.04159736633300781, -3.814697265625e-06, -1.8954275219584815e-05, 0.0, -0.0001537799253128469, -2.2649765014648438e-06, -0.01030111312866211, -1.490105023549404e-05, -0.00102996826171875, -1.52587890625e-05, -0.00035858154296875, 0.0, -0.0019303560256958008, -1.7881377516459906e-06, -6.67572021484375e-05, -0.17046356201171875, -8.20159912109375e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.7020204067230225, -0.0005601267330348492, -4.9591064453125e-05, -0.04833507537841797, -3.814697265625e-06, -0.08549325913190842, -0.14762769639492035, -0.9011557102203369, -0.06880739331245422, -0.000446319580078125, -3.814697265625e-06, -3.266334533691406e-05, -1.0728831512096804e-05, 0.0], "model_output": {"body": [{"name": "Deathlord", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Deathlord", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 3, "hole3": "minion_type", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 8, "hole3": {"args": [{"args": [{"hole0": "putsDeathlordDeathlord", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.955838614987037}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>(), MinionSelector\n            (IsType(MINION_TYPE.DEMON))))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -2.0886070728302, -0.6014976501464844, -0.2854022979736328, -1.9073486328125e-06, -1.9073486328125e-06, -0.1117786169052124, -8.14199447631836e-05, -2.3841855067985307e-07, -0.7835960388183594, -0.110443115234375, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.24569320678710938, -0.0008939504623413086, -2.0265579223632812e-06, -0.002338409423828125, -1.9073486328125e-06, -1.9073486328125e-06, -0.000110626220703125, 0.0, -0.0058269500732421875, -4.470348358154297e-05, -1.0506362915039062, -1.9073486328125e-06], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>", "_type": "Template38"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.101713237460643}, {"choice_history": [55, 124, 221, 63, 103, "Deathlord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Deathlord", "<EOS>", "3", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "8", "<EOS>", "deathrattle", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 49, 174, "<UNK>", "Deathlord", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Not", "<EOS>", 208, 32, 101, 19, 125, "Has", "Card", "Name", "<EOS>", 208, 40, 134, "puts", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class Deathlord(MinionCard):\n\n    def __init__(self):\n        super().__init__('Deathlord', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(2, 8, deathrattle=Deathrattle(<UNK>Deathlord(),\n            MinionSelector(Not(HasCardName('puts')), EnemyPlayer())))\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.00010656782251317054, -0.041660938411951065, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -2.7060508728027344e-05, -1.5139577953959815e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.1881561279296875, -0.006351470947265625, -4.887569048150908e-06, -4.8279336624545977e-05, -3.445148468017578e-05, -8.702239938429557e-06, -1.2278534995857626e-05, 0.0, -0.0036754608154296875, -7.05718994140625e-05, -8.106231689453125e-06, -7.152555099310121e-07, -0.0002198214497184381, -2.50339189733495e-06, -0.09635400772094727, -1.680836794548668e-05, -0.00032806396484375, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.0015888214111328125, -2.861018856492592e-06, -0.0004558563232421875, -0.36470508575439453, -4.1961669921875e-05, -0.11075344681739807, -0.369341105222702, -0.08263759315013885, -1.9649858474731445, -0.05462837219238281, -5.7220458984375e-06, 0.0, -0.2171095609664917, -0.0001628398895263672, -2.3841855067985307e-07, -0.6675205230712891, -0.16695117950439453, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -0.9848184585571289, -0.00012552738189697266, -2.86102294921875e-05, -0.000316619873046875, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.144983172416687, -0.06844906508922577, -0.026038169860839844, -3.814697265625e-06, -0.00017547607421875, -0.007094383239746094, -0.0003299713134765625, -0.2421155869960785, -0.7975360155105591, -0.0006427764892578125, 0.0, -0.08462762832641602, -9.72747802734375e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "Deathlord", "body": [{"hole1": 3, "hole0": "Deathlord", "_type": "Template5", "hole2": "ALL"}, {"hole1": 8, "hole3": {"args": [{"hole0": "<UNK>Deathlord", "_type": "Template38"}, {"args": [{"args": [{"args": [{"s": "puts", "_type": "Str"}], "func": {"id": "HasCardName", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Not", "_type": "Name"}, "_type": "Call"}, {"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 2, "_type": "Template10", "hole2": "deathrattle"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.695522395070583}, {"choice_history": [55, 124, 221, 62], "inferred_code": "break\n", "score_history": [0.0, -1.9073486328125e-06, -3.814697265625e-06, -18.780851364135742], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -18.78085708618164}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -1.9073486328125e-06, -23.0152645111084], "model_output": {"body": [], "_type": "Module"}, "score": -23.01526641845703}]}
{"gold_code": "class NerubarWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            BothPlayer(), HasBattlecry()))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "2", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(-2), CardSelector(\n            condition=IsSpell()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -0.4589424133300781, -0.001529693603515625, -0.0022144317626953125, -0.0001125335693359375, -1.71661376953125e-05, -0.437802791595459, -5.7220440794480965e-06, -0.0003376007080078125, -0.020132064819335938, -0.0013275146484375, -0.0001010894775390625, -0.00593256950378418, -0.00089263916015625, 0.0, -2.47955322265625e-05, -0.0001468658447265625, -0.000576019287109375, -0.0005277395248413086, -1.7762085917638615e-05, -0.049144744873046875, -1.9073486328125e-06, -0.0009468793869018555, -0.1773473024368286, -0.00017774105072021484], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 2, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsSpell", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.2640856288359146}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "1", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(-1), CardSelector(\n            condition=IsSpell()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -0.4589424133300781, -0.001529693603515625, -0.0022144317626953125, -0.0001125335693359375, -1.71661376953125e-05, -1.1431777477264404, -6.4373016357421875e-06, -0.0002384185791015625, -0.0002193450927734375, -0.00116729736328125, -5.91278076171875e-05, -0.015985488891601562, -0.000827789306640625, 0.0, -2.09808349609375e-05, -0.000141143798828125, -0.0004901885986328125, -0.0005239248275756836, -1.5973972040228546e-05, -0.06355857849121094, -1.9073486328125e-06, -0.0006090402603149414, -0.16581451892852783, -0.00017964839935302734], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 1, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsSpell", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.9616794370373327}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 39, 130, "2", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Spell", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsSpell()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -1.0037240982055664, -6.67572021484375e-05, -0.016785744577646255, -0.00016665415023453534, -0.00048828125, -0.2972078323364258, -0.0011386871337890625, -3.814697265625e-06, -0.002415776252746582, -0.0004215240478515625, 0.0, -4.9591064453125e-05, -8.58306884765625e-05, -0.00031280517578125, -0.0001405477523803711, -2.0742272681673057e-05, -0.602482795715332, -1.9073486328125e-06, -0.0003083944320678711, -0.23347580432891846, -0.00027871131896972656], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsSpell", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.2654019410562114}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 39, 130, "2", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON)))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -1.0037240982055664, -6.67572021484375e-05, -0.016785744577646255, -0.00016665415023453534, -0.00048828125, -0.2972078323364258, -0.0011386871337890625, -3.814697265625e-06, -0.002415776252746582, -0.0004215240478515625, 0.0, -4.9591064453125e-05, -8.58306884765625e-05, -0.00031280517578125, -0.0001405477523803711, -2.0742272681673057e-05, -0.7933034896850586, -0.0005893707275390625, -1.9073486328125e-06, 0.0, -0.01268768310546875, -0.0001506805419921875, -1.1920928244535389e-07, -3.814697265625e-06, -0.000148773193359375, 0.0, -9.72747802734375e-05, 0.0, -0.0001163482666015625, -5.7220458984375e-05, -0.46152985095977783, -0.000118255615234375], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.697659116501761}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "2", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(-2), CardSelector(\n            condition=IsMinion()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -0.4589424133300781, -0.001529693603515625, -0.0022144317626953125, -0.0001125335693359375, -1.71661376953125e-05, -0.437802791595459, -5.7220440794480965e-06, -0.0003376007080078125, -0.020132064819335938, -0.0013275146484375, -0.0001010894775390625, -0.00593256950378418, -0.00089263916015625, 0.0, -2.47955322265625e-05, -0.0001468658447265625, -0.000576019287109375, -0.0005277395248413086, -1.7762085917638615e-05, -0.049144744873046875, -1.9073486328125e-06, -0.0009468793869018555, -1.8507033586502075, -4.38690185546875e-05], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 2, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.937307813017128}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 39, 130, "2", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            condition=IsMinion()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -1.0037240982055664, -6.67572021484375e-05, -0.016785744577646255, -0.00016665415023453534, -0.00048828125, -0.2972078323364258, -0.0011386871337890625, -3.814697265625e-06, -0.002415776252746582, -0.0004215240478515625, 0.0, -4.9591064453125e-05, -8.58306884765625e-05, -0.00031280517578125, -0.0001405477523803711, -2.0742272681673057e-05, -0.602482795715332, -1.9073486328125e-06, -0.0003083944320678711, -1.6021710634231567, -3.814697265625e-05], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.633856635804136}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 39, 130, "2", "<EOS>", 32, 101, 19, 125, "Card", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), CardSelector(\n            EnemyPlayer()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -1.0037240982055664, -6.67572021484375e-05, -0.016785744577646255, -0.00016665415023453534, -0.00048828125, -1.3705024719238281, -1.52587890625e-05, -1.9073486328125e-06, -1.0078067779541016, -0.005458831787109375, 0.0, -0.000621795654296875, -0.008571624755859375, 0.0, -0.1813594400882721, -0.0013563542161136866, -5.960462772236497e-07], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7027522350539925}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "1", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(-1), CardSelector(\n            condition=IsMinion()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -0.4589424133300781, -0.001529693603515625, -0.0022144317626953125, -0.0001125335693359375, -1.71661376953125e-05, -1.1431777477264404, -6.4373016357421875e-06, -0.0002384185791015625, -0.0002193450927734375, -0.00116729736328125, -5.91278076171875e-05, -0.015985488891601562, -0.000827789306640625, 0.0, -2.09808349609375e-05, -0.000141143798828125, -0.0004901885986328125, -0.0005239248275756836, -1.5973972040228546e-05, -0.06355857849121094, -1.9073486328125e-06, -0.0006090402603149414, -1.9150067567825317, -4.38690185546875e-05], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 1, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7107358955105383}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 39, 130, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=[Aura(ManaChange(2), MinionSelector(\n            EnemyPlayer()))])\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -0.0017452239990234375, -0.0003261566162109375, -0.047534942626953125, -4.00543212890625e-05, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.0002993345260620117, -0.00039136409759521484, -0.0001068115234375, -0.006968498229980469, -5.53131103515625e-05, -0.00031280517578125, -4.38690185546875e-05, -0.004484883043915033, -0.0003066002391278744, -0.00026404825621284544, -4.38690185546875e-05, -1.0037240982055664, -6.67572021484375e-05, -0.016785744577646255, -0.00016665415023453534, -0.00048828125, -1.3705024719238281, -1.52587890625e-05, -1.9073486328125e-06, -0.6606779098510742, -4.410743713378906e-05, 0.0, -0.011272430419921875, -0.5179328918457031, -1.9073486328125e-06, -0.6976878643035889, -0.0023273155093193054, -4.768370445162873e-07], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.387521718104381}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "spell_targetable", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, spell_targetable=True)\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -5.028323650360107, -0.0003664491814561188, -0.1978912353515625, -7.62939453125e-06, -0.00804901123046875, -1.1444091796875e-05], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "spell_targetable"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.25751232454752}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "divine_shield", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, divine_shield=True)\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -5.743001461029053, -3.314013156341389e-05, -0.014752388000488281, -3.814697265625e-06, -0.000606536865234375, -1.9073486328125e-06], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "divine_shield"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.781262153009834}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, charge=True)\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -6.610118389129639, -1.2755388524965383e-05, -0.006052970886230469, -7.62939453125e-06, -0.0007953643798828125, -1.9073486328125e-06], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.639851921465038}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "auras", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, auras=1)\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -0.019958019256591797, -5.424022674560547e-05, -6.602526664733887, -0.0018310546875, -0.00219970615580678, -1.9073486328125e-05], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.649451663484456}, {"choice_history": [55, 124, 221, 63, 103, "Nerub'ar", "Weblord", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Nerub'ar", " ", "Weblord", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "4", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Nerub'arWeblord(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Nerub'ar Weblord\", 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 4, stealth=True)\n", "score_history": [0.0, -3.24249267578125e-05, -1.1444091796875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00282947882078588, -0.007827206514775753, -0.00456729531288147, -1.9073486328125e-06, -3.814697265625e-05, 0.0, -2.1457672119140625e-06, -6.508827209472656e-05, -5.7220458984375e-06, -9.5367431640625e-06, -0.005558013916015625, -0.0003070831298828125, -4.768360213347478e-06, -9.775161743164062e-06, -6.866455078125e-05, -0.00013375282287597656, -0.00029480457305908203, -8.22540732769994e-06, -0.0001237390679307282, -7.62939453125e-06, -0.0006618499755859375, -1.71661376953125e-05, -4.4107309804530814e-06, -1.0728830375228426e-06, -0.00025939266197383404, -7.152555099310121e-07, -7.26837682723999, -0.0003706216812133789, -0.01958751678466797, -1.9073486328125e-06, -0.0005130767822265625, -5.7220458984375e-06], "model_output": {"body": [{"name": "Nerub'arWeblord", "body": [{"hole1": 2, "hole0": "Nerub'ar Weblord", "_type": "Template4", "hole2": "ALL"}, {"hole1": 4, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.311718576820226}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -3.24249267578125e-05, -21.75832176208496], "model_output": {"body": [], "_type": "Module"}, "score": -21.75835418701172}]}
{"gold_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=False)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -0.28584861755371094, -0.0023193359375, -9.965400386136025e-05, -0.0001274334208574146, -0.005017638206481934, -0.0005664825439453125, -0.0008904783753678203, -8.702266313775908e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06075000762939453, -1.52587890625e-05, -2.980227463922347e-06, -7.033323527139146e-06, -0.0005048512248322368, -4.935142715112306e-05, -0.12386441230773926, -1.3232214769232087e-05, -0.0007457733154296875, -1.52587890625e-05, -0.00334930419921875, -0.0001163482666015625], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template4", "hole2": "ALL"}, {"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "spell_targetable"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.49236837508647113}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -1.7403125762939453, -0.0001125335693359375, -4.0649541915627196e-05, -5.841244637849741e-05, -0.00048172473907470703, -0.013967514038085938, -0.00046669389121234417, -4.768370445162873e-07, -0.0001163482666015625, 0.0, -0.0002040863037109375, -2.2292137145996094e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -0.09938526153564453, -0.0001239776611328125, -0.15697574615478516, -2.47955322265625e-05, -3.4570680327306036e-06, -6.97350042173639e-05, -0.00019347634224686772, -2.3483953555114567e-05, -0.01342320442199707, -3.421284782234579e-05, -0.00061798095703125, -1.33514404296875e-05, -0.0012722015380859375, -8.7738037109375e-05], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"_type": "Template3", "hole0": "Spectral Knight", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 5, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "spell_targetable"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.03608242957705}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 6, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -2.9139575958251953, -0.005157470703125, -0.0020096360240131617, -0.0033167554065585136, -2.0265573766664602e-05, -0.0001277923583984375, -0.004459974821656942, -0.00037026405334472656, -0.000286102294921875, 0.0, -0.0019693374633789062, -5.340576171875e-05, -1.0967192793032154e-05, -3.576278118089249e-07, -0.00039979888242669404, -1.0371154530730564e-05, -0.6055059432983398, -1.39474832394626e-05, -0.0006427764892578125, -1.33514404296875e-05, -0.0065021514892578125, -0.0001010894775390625], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template6", "hole2": "ALL"}, {"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "spell_targetable"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.552956965656392}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "4", "<EOS>", 39, 130, "6", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, charge=True, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -1.7403125762939453, -0.0001125335693359375, -4.0649541915627196e-05, -5.841244637849741e-05, -0.00048172473907470703, -0.013967514038085938, -0.00046669389121234417, -4.768370445162873e-07, -0.0001163482666015625, 0.0, -0.0002040863037109375, -2.2292137145996094e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -0.09938526153564453, -0.0001239776611328125, -2.056666374206543, -1.9073486328125e-06, -0.0005120038986206055, -1.537799835205078e-05, 0.0, -0.0005474090576171875, -3.814697265625e-06, -9.107589721679688e-05, -1.2874520507466514e-05, -4.9591064453125e-05, -0.0032759904861450195, -7.152555099310121e-07, -0.00011444091796875, -0.00020599365234375, -0.00122833251953125, -9.5367431640625e-05, -0.0004367828369140625, -5.91278076171875e-05, 0.0, -6.532669067382812e-05, -0.0010226964950561523, -3.24249267578125e-05, -0.0001125335693359375, -5.7220458984375e-06, -5.722011337638833e-06, -8.821448318485636e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.5284261703491211, -6.437280717364047e-06, -0.002559661865234375, -0.000102996826171875, 0.0, -0.2797900438308716, -1.919269561767578e-05, -2.288818359375e-05, -7.62939453125e-06, -0.028293609619140625, -2.09808349609375e-05, -0.00373077392578125, -5.91278076171875e-05, -0.02079010009765625, -8.58306884765625e-05, -0.0011386871337890625, -0.000152587890625, -0.011737823486328125, -0.0004367828369140625], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"_type": "Template3", "hole0": "Spectral Knight", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 5, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 6, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "spell_targetable", "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.805346296224002}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "4", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, charge=True, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -1.7403125762939453, -0.0001125335693359375, -4.0649541915627196e-05, -5.841244637849741e-05, -0.00048172473907470703, -0.013967514038085938, -0.00046669389121234417, -4.768370445162873e-07, -0.0001163482666015625, 0.0, -0.0002040863037109375, -2.2292137145996094e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -0.09938526153564453, -0.0001239776611328125, -2.056666374206543, -1.9073486328125e-06, -0.0005120038986206055, -1.537799835205078e-05, 0.0, -0.0005474090576171875, -3.814697265625e-06, -9.107589721679688e-05, -1.2874520507466514e-05, -4.9591064453125e-05, -0.0032759904861450195, -7.152555099310121e-07, -0.00011444091796875, -0.00020599365234375, -0.00122833251953125, -9.5367431640625e-05, -0.0004367828369140625, -5.91278076171875e-05, 0.0, -6.532669067382812e-05, -0.0010226964950561523, -3.24249267578125e-05, -0.0001125335693359375, -5.7220458984375e-06, -5.722011337638833e-06, -8.821448318485636e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.8908157348632812, -7.986990567587782e-06, -0.002574920654296875, -0.00011444091796875, -1.9073486328125e-06, -0.5408831834793091, -9.5367431640625e-06, -2.47955322265625e-05, -1.1444091796875e-05, -0.01018524169921875, -1.9073486328125e-05, -0.001819610595703125, -7.2479248046875e-05, -0.027398109436035156, -9.918212890625e-05, -0.0011768341064453125, -0.0001506805419921875, -0.011644363403320312, -0.00042724609375], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"_type": "Template3", "hole0": "Spectral Knight", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 5, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "spell_targetable", "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.415401742837844}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "stealth", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, stealth=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -0.28584861755371094, -0.0023193359375, -9.965400386136025e-05, -0.0001274334208574146, -0.005017638206481934, -0.0005664825439453125, -0.0008904783753678203, -8.702266313775908e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06075000762939453, -1.52587890625e-05, -2.980227463922347e-06, -7.033323527139146e-06, -0.0005048512248322368, -4.935142715112306e-05, -4.889081954956055, -2.5033950805664062e-05, -0.000232696533203125, -9.5367431640625e-06, -0.27871131896972656, -8.58306884765625e-05], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template4", "hole2": "ALL"}, {"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 4, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.532410417835081}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "4", "<EOS>", 39, 130, "4", "<EOS>", 217, 54, 197, "taunt", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(4, 4, taunt=True, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -1.7403125762939453, -0.0001125335693359375, -4.0649541915627196e-05, -5.841244637849741e-05, -0.00048172473907470703, -0.013967514038085938, -0.00046669389121234417, -4.768370445162873e-07, -0.0001163482666015625, 0.0, -0.0002040863037109375, -2.2292137145996094e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -0.09938526153564453, -0.0001239776611328125, -2.056666374206543, -1.9073486328125e-06, -0.0005120038986206055, -1.537799835205078e-05, 0.0, -0.0005474090576171875, -3.814697265625e-06, -9.107589721679688e-05, -1.2874520507466514e-05, -4.9591064453125e-05, -0.0032759904861450195, -7.152555099310121e-07, -0.00011444091796875, -0.00020599365234375, -0.00122833251953125, -9.5367431640625e-05, -0.0004367828369140625, -5.91278076171875e-05, 0.0, -6.532669067382812e-05, -0.0010226964950561523, -3.24249267578125e-05, -0.0001125335693359375, -5.7220458984375e-06, -5.722011337638833e-06, -8.821448318485636e-06, -4.9591064453125e-05, -1.9073486328125e-06, -0.8908157348632812, -7.986990567587782e-06, -0.002574920654296875, -0.00011444091796875, -1.9073486328125e-06, -1.0062886476516724, -2.3841855067985307e-07, -6.103515625e-05, -1.9073486328125e-06, -0.0019664764404296875, -3.62396240234375e-05, -0.0021066665649414062, -4.9591064453125e-05, -0.022993087768554688, -0.000118255615234375, -0.0010595321655273438, -0.000202178955078125, -0.012754440307617188, -0.000347137451171875], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"_type": "Template3", "hole0": "Spectral Knight", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "hole1": 5, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 4, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "taunt", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "spell_targetable", "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.869465396783738}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Minion", "<EOS>", 209, 39, 130, "4", "<EOS>", 39, 130, "6", "<EOS>", 217, 54, 197, "charge", "<EOS>", 20, 126, "True", "<EOS>", 54, 197, "spell_targetable", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(4, 6, charge=True, spell_targetable=True)\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -1.7403125762939453, -0.0001125335693359375, -4.0649541915627196e-05, -5.841244637849741e-05, -0.00048172473907470703, -0.013967514038085938, -0.00046669389121234417, -4.768370445162873e-07, -0.0001163482666015625, 0.0, -0.0002040863037109375, -2.2292137145996094e-05, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, 0.0, -7.62939453125e-06, 0.0, -2.980772018432617, -7.62939453125e-06, -0.16710758209228516, -1.9073486328125e-06, -0.0006033182144165039, -9.5367431640625e-06, 0.0, -0.0016965866088867188, -3.814697265625e-06, -0.00010764598118839785, -8.34461570775602e-06, -0.0001621246337890625, -0.0022509098052978516, -1.1920922133867862e-06, -0.000125885009765625, -0.000194549560546875, -0.00122833251953125, -9.34600830078125e-05, -0.0005016326904296875, -5.14984130859375e-05, 0.0, -6.35385513305664e-05, -0.0013012886047363281, -2.86102294921875e-05, -8.96453857421875e-05, -7.62939453125e-06, -3.8146590668475255e-06, -1.0251946150674485e-05, -5.53131103515625e-05, -1.9073486328125e-06, -0.603585958480835, -4.887569048150908e-06, -0.002696990966796875, -0.0001544952392578125, 0.0, -0.38575661182403564, -1.71661376953125e-05, -2.47955322265625e-05, -7.62939453125e-06, -0.04878044128417969, -2.09808349609375e-05, -0.0036163330078125, -6.67572021484375e-05, -0.021757125854492188, -8.0108642578125e-05, -0.001300811767578125, -0.0001392364501953125, -0.011458396911621094, -0.0004558563232421875], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"_type": "Template3", "hole0": "Spectral Knight", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "hole1": 5, "hole3": "minion_type", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"n": 6, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "charge", "_type": "keyword"}, {"value": {"value": true, "_type": "NameConstant"}, "arg": "spell_targetable", "_type": "keyword"}], "func": {"id": "Minion", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.000248358672366}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "<UNK>", "Spell", "Target", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            EnemyPlayer()))])\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -2.9139575958251953, -0.005157470703125, -0.0020096360240131617, -0.0033167554065585136, -2.0265573766664602e-05, -0.0001277923583984375, -0.004459974821656942, -0.00037026405334472656, -0.000286102294921875, 0.0, -0.0019693374633789062, -5.340576171875e-05, -1.0967192793032154e-05, -3.576278118089249e-07, -0.00039979888242669404, -1.0371154530730564e-05, -0.958399772644043, -1.9073486328125e-06, -0.0040302276611328125, -0.0001583099365234375, -0.0521087646484375, -9.5367431640625e-06, -1.33514404296875e-05, -4.57763671875e-05, 0.0, -0.00021004676818847656, -7.2479248046875e-05, -3.814697265625e-05, -0.09137630462646484, -0.0006198883056640625, -0.9341081976890564, -0.08650296181440353, -0.011911749839782715, -2.09808349609375e-05, -0.04564476013183594, -0.0003528594970703125, -5.7220458984375e-06, 0.0, -0.005340695381164551, -1.33514404296875e-05, 0.0, -0.4498577117919922, -0.0023345947265625, 0.0, -0.743705153465271, -0.007806658744812012, 0.0], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template6", "hole2": "ALL"}, {"hole1": 6, "hole3": {"elts": [{"args": [{"hole0": "<UNK>SpellTarget", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.33486761609214}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "<UNK>", "Spell", "Target", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(<UNK>SpellTarget(), MinionSelector(\n            EnemyPlayer()))])\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -0.28584861755371094, -0.0023193359375, -9.965400386136025e-05, -0.0001274334208574146, -0.005017638206481934, -0.0005664825439453125, -0.0008904783753678203, -8.702266313775908e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06075000762939453, -1.52587890625e-05, -2.980227463922347e-06, -7.033323527139146e-06, -0.0005048512248322368, -4.935142715112306e-05, -2.957864999771118, -1.1920928244535389e-07, -0.012648582458496094, -0.000244140625, -0.8411130905151367, -1.1444091796875e-05, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000240325927734375, -0.000186920166015625, -4.9591064453125e-05, -0.0618743896484375, -0.00067901611328125, -1.0954818725585938, -0.08745459467172623, -0.012111186981201172, -1.52587890625e-05, -0.03047943115234375, -0.0002841949462890625, -5.7220458984375e-06, 0.0, -0.007303357124328613, -1.52587890625e-05, 0.0, -0.4440641403198242, -0.002330780029296875, 0.0, -0.7511461973190308, -0.0075397491455078125, 0.0], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template4", "hole2": "ALL"}, {"hole1": 6, "hole3": {"elts": [{"args": [{"hole0": "<UNK>SpellTarget", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.677471351961451}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "4", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(4(), MinionSelector(EnemyPlayer()))])\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -2.9139575958251953, -0.005157470703125, -0.0020096360240131617, -0.0033167554065585136, -2.0265573766664602e-05, -0.0001277923583984375, -0.004459974821656942, -0.00037026405334472656, -0.000286102294921875, 0.0, -0.0019693374633789062, -5.340576171875e-05, -1.0967192793032154e-05, -3.576278118089249e-07, -0.00039979888242669404, -1.0371154530730564e-05, -0.958399772644043, -1.9073486328125e-06, -0.0040302276611328125, -0.0001583099365234375, -0.0521087646484375, -9.5367431640625e-06, -1.33514404296875e-05, -4.57763671875e-05, 0.0, -0.00021004676818847656, -7.2479248046875e-05, -3.814697265625e-05, -0.09137630462646484, -0.0006198883056640625, -1.3900494575500488, -0.0008869171142578125, -0.2230548858642578, -0.04385089874267578, -3.814697265625e-06, 0.0, -0.00010323524475097656, -1.9073486328125e-05, 0.0, -0.08970832824707031, -0.015777587890625, -1.9073486328125e-06, -0.963661789894104, -0.006106019020080566, 0.0], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template6", "hole2": "ALL"}, {"hole1": 6, "hole3": {"elts": [{"args": [{"hole0": "4", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.7804861337889974}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "4", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, auras=[Aura(4(), MinionSelector(EnemyPlayer()))])\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -0.28584861755371094, -0.0023193359375, -9.965400386136025e-05, -0.0001274334208574146, -0.005017638206481934, -0.0005664825439453125, -0.0008904783753678203, -8.702266313775908e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06075000762939453, -1.52587890625e-05, -2.980227463922347e-06, -7.033323527139146e-06, -0.0005048512248322368, -4.935142715112306e-05, -2.957864999771118, -1.1920928244535389e-07, -0.012648582458496094, -0.000244140625, -0.8411130905151367, -1.1444091796875e-05, -1.71661376953125e-05, -4.57763671875e-05, 0.0, -0.000240325927734375, -0.000186920166015625, -4.9591064453125e-05, -0.0618743896484375, -0.00067901611328125, -1.1891075372695923, -0.0010223388671875, -0.2375774383544922, -0.04074859619140625, -3.814697265625e-06, 0.0, -0.00011467933654785156, -1.9073486328125e-05, 0.0, -0.08658027648925781, -0.010171890258789062, -1.9073486328125e-06, -1.0002018213272095, -0.005663633346557617, 0.0], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template4", "hole2": "ALL"}, {"hole1": 6, "hole3": {"elts": [{"args": [{"hole0": "4", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.810452615062552}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "<UNK>", "Spell", "Target", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, enrage=[Aura(<UNK>SpellTarget(), MinionSelector\n            (EnemyPlayer()))])\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -0.28584861755371094, -0.0023193359375, -9.965400386136025e-05, -0.0001274334208574146, -0.005017638206481934, -0.0005664825439453125, -0.0008904783753678203, -8.702266313775908e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06075000762939453, -1.52587890625e-05, -2.980227463922347e-06, -7.033323527139146e-06, -0.0005048512248322368, -4.935142715112306e-05, -3.3720104694366455, -2.861018856492592e-06, -0.0989532470703125, -0.000152587890625, -0.5671653747558594, -5.7220458984375e-06, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -0.0005626678466796875, -0.000247955322265625, -4.57763671875e-05, -0.06007957458496094, -0.0006561279296875, -0.9855316877365112, -0.09105334430932999, -0.010764598846435547, -1.9073486328125e-05, -0.018543243408203125, -0.0002899169921875, -5.7220458984375e-06, 0.0, -0.007022976875305176, -1.33514404296875e-05, 0.0, -0.5217924118041992, -0.0023441314697265625, 0.0, -0.7620236277580261, -0.007883906364440918, 0.0], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template4", "hole2": "ALL"}, {"hole1": 6, "hole3": {"elts": [{"args": [{"hole0": "<UNK>SpellTarget", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.871485901212736}, {"choice_history": [55, 124, 221, 63, 103, "Spectral", "Knight", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Spectral", " ", "Knight", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", 72, 145, "4", "<EOS>", "6", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "4", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>"], "inferred_code": "class SpectralKnight(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spectral Knight', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(4, 6, enrage=[Aura(4(), MinionSelector(EnemyPlayer()))])\n", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -5.7220458984375e-05, -1.9073486328125e-06, -5.7220458984375e-06, -0.0001685477327555418, -0.004261246882379055, -0.003282984485849738, -2.6702880859375e-05, -7.82012939453125e-05, -3.814697265625e-06, 0.0, -0.00011837482452392578, 0.0, -1.9073486328125e-06, -0.28584861755371094, -0.0023193359375, -9.965400386136025e-05, -0.0001274334208574146, -0.005017638206481934, -0.0005664825439453125, -0.0008904783753678203, -8.702266313775908e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.06075000762939453, -1.52587890625e-05, -2.980227463922347e-06, -7.033323527139146e-06, -0.0005048512248322368, -4.935142715112306e-05, -3.3720104694366455, -2.861018856492592e-06, -0.0989532470703125, -0.000152587890625, -0.5671653747558594, -5.7220458984375e-06, -2.6702880859375e-05, -2.47955322265625e-05, 0.0, -0.0005626678466796875, -0.000247955322265625, -4.57763671875e-05, -0.06007957458496094, -0.0006561279296875, -1.2743914127349854, -0.001064300537109375, -0.2373371124267578, -0.08280563354492188, -3.814697265625e-06, 0.0, -0.00010704994201660156, -1.71661376953125e-05, 0.0, -0.08210182189941406, -0.0085601806640625, -1.9073486328125e-06, -0.9433801174163818, -0.00576937198638916, 0.0], "model_output": {"body": [{"name": "SpectralKnight", "body": [{"hole1": 5, "hole0": "Spectral Knight", "_type": "Template4", "hole2": "ALL"}, {"hole1": 6, "hole3": {"elts": [{"args": [{"hole0": "4", "_type": "Template38"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 4, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.099737798011347}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.33514404296875e-05, -7.62939453125e-06, -20.04561996459961], "model_output": {"body": [], "_type": "Module"}, "score": -20.04564094543457}]}
{"gold_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(1), MinionSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.4748492240905762, -0.001815818715840578, -0.0003349771723151207, -5.841255187988281e-06, -1.1444091796875e-05, -0.00017833709716796875, 0.0, -0.0010782480239868164, -3.576278118089249e-07, -0.6320374608039856, -4.887569048150908e-06, -1.1444091796875e-05, -0.001033782958984375, 0.0, -1.0257399082183838, -1.3470649719238281e-05, -5.269050598144531e-05, -1.9073486328125e-05, 0.0, -0.0018606185913085938, -0.032713890075683594, -1.9073486328125e-06, -0.9414069056510925, -0.0025469001848250628, 0.0, -0.000400543212890625, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -3.32593554048799e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.136364955499907}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.4748492240905762, -0.001815818715840578, -0.0003349771723151207, -5.841255187988281e-06, -1.1444091796875e-05, -0.00017833709716796875, 0.0, -0.0010782480239868164, -3.576278118089249e-07, -0.6320374608039856, -4.887569048150908e-06, -1.1444091796875e-05, -0.001033782958984375, 0.0, -1.3188878297805786, -1.1920928244535389e-07, -3.4928321838378906e-05, -1.9073486328125e-05, 0.0, -0.0020647048950195312, -0.017297744750976562, -3.814697265625e-06, -0.7554407715797424, -0.0017827682895585895, 0.0, -0.0004329681396484375, -1.9073486328125e-06, -1.1920917586394353e-07, -1.1920928244535389e-07, -3.5643537557916716e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.227576274116629}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "Silence", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(0), MinionSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.4748492240905762, -0.001815818715840578, -0.0003349771723151207, -5.841255187988281e-06, -1.1444091796875e-05, -0.00017833709716796875, 0.0, -0.0010782480239868164, -3.576278118089249e-07, -0.6320374608039856, -4.887569048150908e-06, -1.1444091796875e-05, -0.001033782958984375, 0.0, -1.306636095046997, -0.00014495776849798858, -0.002162933349609375, -2.300739288330078e-05, 0.0, -0.0011625289916992188, -0.06907463073730469, -3.814697265625e-06, -0.8400015830993652, -0.0025891007389873266, 0.0, -0.00048065185546875, -1.9073486328125e-06, -1.1920917586394353e-07, -1.1920928244535389e-07, -3.5524328268365934e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"n": 0, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.353890735435179}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Both", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(1), MinionSelector\n            (BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.4748492240905762, -0.001815818715840578, -0.0003349771723151207, -5.841255187988281e-06, -1.1444091796875e-05, -0.00017833709716796875, 0.0, -0.0010782480239868164, -3.576278118089249e-07, -0.6320374608039856, -4.887569048150908e-06, -1.1444091796875e-05, -0.001033782958984375, 0.0, -1.0257399082183838, -1.3470649719238281e-05, -5.269050598144531e-05, -1.9073486328125e-05, 0.0, -0.0018606185913085938, -0.032713890075683594, -1.9073486328125e-06, -1.7914855480194092, -0.010610103607177734, 0.0, -0.0005054473876953125, -1.9073486328125e-06, -1.1920906217710581e-07, -2.0265579223632812e-06, -3.2782503694761544e-05, -7.152555099310121e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.994613135962197}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Both", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.4748492240905762, -0.001815818715840578, -0.0003349771723151207, -5.841255187988281e-06, -1.1444091796875e-05, -0.00017833709716796875, 0.0, -0.0010782480239868164, -3.576278118089249e-07, -0.6320374608039856, -4.887569048150908e-06, -1.1444091796875e-05, -0.001033782958984375, 0.0, -1.3188878297805786, -1.1920928244535389e-07, -3.4928321838378906e-05, -1.9073486328125e-05, 0.0, -0.0020647048950195312, -0.017297744750976562, -3.814697265625e-06, -1.7809648513793945, -0.007880568504333496, 0.0, -0.0005664825439453125, -1.9073486328125e-06, 0.0, -2.0265579223632812e-06, -3.504748019622639e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.259332860617455}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Count", "<EOS>", 208, 49, 174, "Has", "Silence", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=Count(HasSilence()))), MinionSelector(players=\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.8099117279052734, -5.8530047681415454e-05, -0.00011610959336394444, -4.291534423828125e-06, -5.7220458984375e-06, -0.0001621228875592351, -2.3841855067985307e-07, -0.0027502772863954306, -5.006785613659304e-06, -0.36375632882118225, -4.8994726967066526e-05, -0.0002994537353515625, -0.1613016128540039, -0.1138763427734375, -0.00018310546875, -2.09808349609375e-05, -0.5572742223739624, -0.08176326751708984, -3.814697265625e-06, -9.72747802734375e-05, -2.6702880859375e-05, -0.0004291534423828125, -0.014304399490356445, -1.9073486328125e-06, -0.052700042724609375, -0.0004138946533203125, -5.7220458984375e-06, -2.6702880859375e-05, -0.3745565414428711, -0.04289877414703369, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -0.9716736674308777, -0.01773696206510067, -2.205371856689453e-05, -0.05511641502380371, -0.0012054443359375, -1.1920928244535389e-07, -0.0004634857177734375, -0.0010738372802734375, -3.814697265625e-06, -0.05539894104003906, 0.0, -7.62939453125e-06, 0.0, -0.5693615674972534, -1.33514404296875e-05, 0.0, -0.008823394775390625, -1.9073486328125e-06, 0.0, -1.1920928244535389e-07, -5.137908738106489e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"keywords": [{"value": {"args": [{"hole0": "HasSilence", "_type": "Template38"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Silence", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.278230328736143}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Count", "<EOS>", 208, 49, 174, "Has", "Silence", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=Count(HasSilence()))), MinionSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.8099117279052734, -5.8530047681415454e-05, -0.00011610959336394444, -4.291534423828125e-06, -5.7220458984375e-06, -0.0001621228875592351, -2.3841855067985307e-07, -0.0027502772863954306, -5.006785613659304e-06, -0.36375632882118225, -4.8994726967066526e-05, -0.0002994537353515625, -0.1613016128540039, -0.1138763427734375, -0.00018310546875, -2.09808349609375e-05, -0.5572742223739624, -0.08176326751708984, -3.814697265625e-06, -9.72747802734375e-05, -2.6702880859375e-05, -0.0004291534423828125, -0.014304399490356445, -1.9073486328125e-06, -0.052700042724609375, -0.0004138946533203125, -5.7220458984375e-06, -2.6702880859375e-05, -0.3745565414428711, -0.04289877414703369, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -0.9716736674308777, -0.01773696206510067, -2.205371856689453e-05, -0.05511641502380371, -0.0012054443359375, -1.1920928244535389e-07, -0.0004634857177734375, -0.0010738372802734375, -3.814697265625e-06, -0.05539894104003906, 0.0, -7.62939453125e-06, 0.0, -0.9330328702926636, -8.96453857421875e-05, 0.0, -0.010110855102539062, -1.9073486328125e-06, -1.192074705613777e-07, 0.0, -4.696835458162241e-05, -7.152555099310121e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"keywords": [{"value": {"args": [{"hole0": "HasSilence", "_type": "Template38"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Silence", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.643260855860227}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Count", "<EOS>", 208, 49, 174, "Card", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=Count(CardSelector()))), MinionSelector(players=\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.8099117279052734, -5.8530047681415454e-05, -0.00011610959336394444, -4.291534423828125e-06, -5.7220458984375e-06, -0.0001621228875592351, -2.3841855067985307e-07, -0.0027502772863954306, -5.006785613659304e-06, -0.36375632882118225, -4.8994726967066526e-05, -0.0002994537353515625, -0.1613016128540039, -0.1138763427734375, -0.00018310546875, -2.09808349609375e-05, -0.5572742223739624, -0.08176326751708984, -3.814697265625e-06, -9.72747802734375e-05, -2.6702880859375e-05, -0.0004291534423828125, -0.014304399490356445, -1.9073486328125e-06, -0.052700042724609375, -0.0004138946533203125, -5.7220458984375e-06, -2.6702880859375e-05, -0.3745565414428711, -0.04289877414703369, -4.00543212890625e-05, -2.09808349609375e-05, 0.0, -2.270080327987671, -0.0004971026792190969, 0.0, -0.0020424125250428915, -0.0025081634521484375, -1.1920928244535389e-07, -0.0002574920654296875, -0.0013446807861328125, -1.9073486328125e-06, -0.036292076110839844, 0.0, -9.5367431640625e-06, 0.0, -0.45126819610595703, -9.5367431640625e-06, 0.0, -0.02312469482421875, 0.0, 0.0, -2.3841855067985307e-07, -6.0081427363911644e-05, -1.311301275563892e-06], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"keywords": [{"value": {"args": [{"hole0": "CardSelector", "_type": "Template38"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Silence", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.384773282727728}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON))), MinionSelector(players=\n            BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.8099117279052734, -5.8530047681415454e-05, -0.00011610959336394444, -4.291534423828125e-06, -5.7220458984375e-06, -0.0001621228875592351, -2.3841855067985307e-07, -0.0027502772863954306, -5.006785613659304e-06, -0.36375632882118225, -4.8994726967066526e-05, -0.0002994537353515625, -0.1613016128540039, -0.1138763427734375, -0.00018310546875, -2.09808349609375e-05, -0.5572742223739624, -0.08176326751708984, -3.814697265625e-06, -9.72747802734375e-05, -2.6702880859375e-05, -0.0004291534423828125, -0.014304399490356445, -1.9073486328125e-06, -0.052700042724609375, -0.0004138946533203125, -5.7220458984375e-06, -2.6702880859375e-05, -1.4470252990722656, -0.01891613006591797, -2.09808349609375e-05, -5.7220458984375e-06, -0.00186920166015625, -7.62939453125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -0.026218414306640625, -2.0265579223632812e-06, -0.7907592058181763, -3.814697265625e-06, -0.2697829008102417, -0.027029037475585938, 0.0, -0.00042724609375, -0.001190185546875, -3.814697265625e-06, -0.022543907165527344, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.6612226963043213, -7.641315460205078e-05, 0.0, -0.024286270141601562, -1.9073486328125e-06, 0.0, 0.0, -5.483618951984681e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Silence", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.4713028955314655}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Wailing", " ", "Soul", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Silence", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Silence(CardSelector(\n            condition=IsType(MINION_TYPE.DRAGON))), MinionSelector(players=\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -0.01672649383544922, -1.8099117279052734, -5.8530047681415454e-05, -0.00011610959336394444, -4.291534423828125e-06, -5.7220458984375e-06, -0.0001621228875592351, -2.3841855067985307e-07, -0.0027502772863954306, -5.006785613659304e-06, -0.36375632882118225, -4.8994726967066526e-05, -0.0002994537353515625, -0.1613016128540039, -0.1138763427734375, -0.00018310546875, -2.09808349609375e-05, -0.5572742223739624, -0.08176326751708984, -3.814697265625e-06, -9.72747802734375e-05, -2.6702880859375e-05, -0.0004291534423828125, -0.014304399490356445, -1.9073486328125e-06, -0.052700042724609375, -0.0004138946533203125, -5.7220458984375e-06, -2.6702880859375e-05, -1.4470252990722656, -0.01891613006591797, -2.09808349609375e-05, -5.7220458984375e-06, -0.00186920166015625, -7.62939453125e-06, -7.05718994140625e-05, -1.9073486328125e-06, -0.026218414306640625, -2.0265579223632812e-06, -0.7907592058181763, -3.814697265625e-06, -0.2697829008102417, -0.027029037475585938, 0.0, -0.00042724609375, -0.001190185546875, -3.814697265625e-06, -0.022543907165527344, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -0.8736021518707275, -9.5367431640625e-06, 0.0, -0.019123077392578125, 0.0, 0.0, -1.1920928244535389e-07, -5.722039350075647e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Wailing Soul", "hole4": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Silence", "hole7": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.678452878002041}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Wailing", " ", "Soul", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -4.186809539794922, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.82012939453125e-05, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -0.0004911614232696593, -1.5497207641601562e-05, -1.5020364116935525e-05, -1.1920928244535389e-07, -8.96453857421875e-05, -0.000152587890625, -8.58306884765625e-05, -2.372236667724792e-05, -2.1219253540039062e-05, -2.8729431505780667e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.00021660278434865177, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0002307891845703125, -0.0031609535217285156, -0.005501151084899902, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -4.1961669921875e-05, -4.7325978812295943e-05, -0.00302731990814209, -1.33514404296875e-05, -0.0617218017578125, -0.00110626220703125, 0.0, -0.000217437744140625, -1.4185905456542969e-05, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -1.0050239562988281, -0.0001964569091796875, -0.0038661956787109375, 0.0, -0.0004291534423828125, 0.0, -0.02850055694580078, -6.29425048828125e-05, -1.33514404296875e-05, 0.0, -0.000240325927734375, -2.503394853192731e-06, -1.71661376953125e-05, -0.22109317779541016, -0.000537872314453125, -0.40667620301246643, -0.04813874885439873, -0.009571075439453125, -3.814697265625e-06, -1.1726064682006836, -0.0002162456512451172, 0.0, -0.5517282485961914, -1.9073486328125e-06, -4.529908437689301e-06, -2.384185791015625e-06, -3.397456384846009e-05, -6.0796710386057384e-06], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Wailing Soul", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.7159405376819095}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Wailing", " ", "Soul", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -4.186809539794922, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.82012939453125e-05, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -0.0004911614232696593, -1.5497207641601562e-05, -1.5020364116935525e-05, -1.1920928244535389e-07, -8.96453857421875e-05, -0.000152587890625, -8.58306884765625e-05, -2.372236667724792e-05, -2.1219253540039062e-05, -2.8729431505780667e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.00021660278434865177, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0002307891845703125, -0.0031609535217285156, -0.005501151084899902, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -4.1961669921875e-05, -4.7325978812295943e-05, -0.00302731990814209, -1.33514404296875e-05, -0.0617218017578125, -0.00110626220703125, 0.0, -0.000217437744140625, -1.4185905456542969e-05, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -1.0050239562988281, -0.0001964569091796875, -0.0038661956787109375, 0.0, -0.0004291534423828125, 0.0, -0.02850055694580078, -6.29425048828125e-05, -1.33514404296875e-05, 0.0, -0.000240325927734375, -2.503394853192731e-06, -1.71661376953125e-05, -0.22109317779541016, -0.000537872314453125, -0.40667620301246643, -0.04813874885439873, -0.009571075439453125, -3.814697265625e-06, -1.1553969383239746, -0.0004711151123046875, 0.0, -0.26791858673095703, -0.00136566162109375, -0.00014788249973207712, -2.384185791015625e-06, -0.001523762010037899, -3.147124152746983e-05, -0.17739474773406982, -2.9802317840221804e-06, -0.19862937927246094, -0.0001087188720703125, -0.0004787445068359375, -3.814697265625e-06], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Wailing Soul", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.794816886595946}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Wailing", " ", "Soul", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "5", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Silence(), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -4.186809539794922, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.82012939453125e-05, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -0.0004911614232696593, -1.5497207641601562e-05, -1.5020364116935525e-05, -1.1920928244535389e-07, -8.96453857421875e-05, -0.000152587890625, -8.58306884765625e-05, -2.372236667724792e-05, -2.1219253540039062e-05, -2.8729431505780667e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.00021660278434865177, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0002307891845703125, -0.0031609535217285156, -0.005501151084899902, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -4.1961669921875e-05, -4.7325978812295943e-05, -0.00302731990814209, -1.33514404296875e-05, -0.0617218017578125, -0.00110626220703125, 0.0, -0.000217437744140625, -1.4185905456542969e-05, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -1.009058952331543, -0.000339508056640625, -0.0008296966552734375, 0.0, -0.0005197525024414062, 0.0, -0.013927459716796875, -0.0001983642578125, -7.62939453125e-06, 0.0, -0.0002288818359375, -2.622604142743512e-06, -1.52587890625e-05, -0.19054794311523438, -0.0005321502685546875, -0.4869298040866852, -0.04881706088781357, -0.0069904327392578125, -3.814697265625e-06, -1.2111543416976929, -0.0002084970474243164, 0.0, -0.5821685791015625, -1.9073486328125e-06, -4.410700967127923e-06, -2.384185791015625e-06, -3.409376950003207e-05, -6.0796710386057384e-06], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Wailing Soul", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.819496824223698}, {"choice_history": [55, 124, 221, 63, 103, "Wailing", "Soul", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Wailing", " ", "Soul", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 72, 145, "3", "<EOS>", "5", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WailingSoul(MinionCard):\n\n    def __init__(self):\n        super().__init__('Wailing Soul', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.MURLOC, battlecry=\n            Battlecry(Silence(), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 5, taunt=True)\n", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, -2.47955322265625e-05, -1.52587890625e-05, -0.0005057962844148278, -3.969590397900902e-05, -0.0008318555192090571, -3.814697265625e-06, -1.52587890625e-05, 0.0, -4.291525328881107e-06, -0.00022828545479569584, -1.5258787243510596e-05, -5.91278076171875e-05, -0.00145721435546875, -3.814697265625e-06, -3.814697265625e-05, -7.152555099310121e-07, -2.6702880859375e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.00010561932867858559, -4.0531076592742465e-06, -4.57763671875e-05, -4.186809539794922, -7.62939453125e-06, 0.0, -8.20159912109375e-05, -7.82012939453125e-05, 0.0, -4.1961669921875e-05, -1.33514404296875e-05, -0.0004911614232696593, -1.5497207641601562e-05, -1.5020364116935525e-05, -1.1920928244535389e-07, -8.96453857421875e-05, -0.000152587890625, -8.58306884765625e-05, -2.372236667724792e-05, -2.1219253540039062e-05, -2.8729431505780667e-05, -7.62939453125e-06, -1.52587890625e-05, 0.0, -0.00021660278434865177, -2.3841855067985307e-07, -1.9073486328125e-06, 0.0, -9.5367431640625e-06, 0.0, -0.0002307891845703125, -0.0031609535217285156, -0.005501151084899902, -1.9073486328125e-06, 0.0, 0.0, -1.71661376953125e-05, -1.1444091796875e-05, -4.1961669921875e-05, -4.7325978812295943e-05, -0.00302731990814209, -1.33514404296875e-05, -0.0617218017578125, -0.00110626220703125, 0.0, -0.000217437744140625, -1.4185905456542969e-05, -4.38690185546875e-05, 0.0, -1.33514404296875e-05, 0.0, -0.0001049041748046875, 0.0, -1.009058952331543, -0.000339508056640625, -0.0008296966552734375, 0.0, -0.0005197525024414062, 0.0, -0.013927459716796875, -0.0001983642578125, -7.62939453125e-06, 0.0, -0.0002288818359375, -2.622604142743512e-06, -1.52587890625e-05, -0.19054794311523438, -0.0005321502685546875, -0.4869298040866852, -0.04881706088781357, -0.0069904327392578125, -3.814697265625e-06, -1.3649393320083618, -0.000530242919921875, 0.0, -0.26954078674316406, -0.001323699951171875, -0.00014597648987546563, -2.503394853192731e-06, -0.0015018449630588293, -3.147124152746983e-05, -0.1733837127685547, -2.9802317840221804e-06, -0.19343185424804688, -0.0001087188720703125, -0.0004749298095703125, -3.814697265625e-06], "model_output": {"body": [{"name": "WailingSoul", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Wailing Soul", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 3, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.031338399040315}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-3.0517578125e-05, -1.9073486328125e-06, -21.979969024658203], "model_output": {"body": [], "_type": "Module"}, "score": -21.98000144958496}]}
{"gold_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(3), SelfSelector())])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -1.5138311386108398, -0.0001220703125, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0022660493850708008, -2.1457672119140625e-06, -0.0003452301025390625, -0.004374504089355469, -0.0003795623779296875, -0.7762022018432617, -1.1920928244535389e-07, -0.00023651123046875, 0.0, -0.19041161239147186, -5.841255187988281e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.721205353073991}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -0.25192928314208984, -0.0002269744873046875, -3.814697265625e-06, -0.00017547607421875, -1.9073486328125e-06, -0.002447366714477539, -4.768370445162873e-07, -9.34600830078125e-05, -0.036957740783691406, -0.0008563995361328125, -0.670836329460144, -3.540513716870919e-05, -0.00576019287109375, 0.0, -0.0036982190795242786, -4.0531158447265625e-06, 0.0, -8.58306884765625e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -0.07181417942047119, -2.3841855067985307e-07, -0.001232147216796875, -0.6276836395263672, -0.05539226531982422, -0.11319879442453384, -0.0006030797376297414, -0.005593299865722656, -1.9073486328125e-06, -0.6480840444564819, -0.0001068115234375, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": 1, "_type": "Template36"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.7298726846483987}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector()),\n            Aura(ChangeHealth(1), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -0.25192928314208984, -0.0002269744873046875, -3.814697265625e-06, -0.00017547607421875, -1.9073486328125e-06, -0.002447366714477539, -4.768370445162873e-07, -9.34600830078125e-05, -0.036957740783691406, -0.0008563995361328125, -0.670836329460144, -3.540513716870919e-05, -0.00576019287109375, 0.0, -0.0036982190795242786, -4.0531158447265625e-06, 0.0, -8.58306884765625e-05, -3.4332275390625e-05, -5.7220458984375e-06, 0.0, -0.07181417942047119, -2.3841855067985307e-07, -0.001232147216796875, -0.6276836395263672, -0.05539226531982422, -0.11319879442453384, -0.0006030797376297414, -0.005593299865722656, -1.9073486328125e-06, -0.8187271356582642, -4.649161837733118e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": 1, "_type": "Template36"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.900413613488581}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(ChangeHealth(1), MinionSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -0.25192928314208984, -0.0002269744873046875, -3.814697265625e-06, -0.00017547607421875, -1.9073486328125e-06, -0.002447366714477539, -4.768370445162873e-07, -9.34600830078125e-05, -0.036957740783691406, -0.0008563995361328125, -0.7620067596435547, -4.768370445162873e-07, -0.0009555816650390625, 0.0, -0.01974761113524437, -4.172325134277344e-06, 0.0, -0.0001277923583984375, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.12818455696105957, -1.1920928244535389e-07, -0.00180816650390625, -0.6886720657348633, -0.05667591094970703, -0.09765342622995377, -0.0005799531354568899, -0.0053005218505859375, -1.9073486328125e-06, -0.6696186065673828, -0.0001087188720703125, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": 1, "_type": "Template36"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.9571905017136473}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 47, 172, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(2), SelfSelector()),\n            Aura(ChangeHealth(1), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -0.25192928314208984, -0.0002269744873046875, -3.814697265625e-06, -0.00017547607421875, -1.9073486328125e-06, -0.002447366714477539, -4.768370445162873e-07, -9.34600830078125e-05, -0.036957740783691406, -0.0008563995361328125, -0.7620067596435547, -4.768370445162873e-07, -0.0009555816650390625, 0.0, -0.01974761113524437, -4.172325134277344e-06, 0.0, -0.0001277923583984375, -3.62396240234375e-05, -5.7220458984375e-06, 0.0, -0.12818455696105957, -1.1920928244535389e-07, -0.00180816650390625, -0.6886720657348633, -0.05667591094970703, -0.09765342622995377, -0.0005799531354568899, -0.0053005218505859375, -1.9073486328125e-06, -0.7940248847007751, -4.5299530029296875e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": 1, "_type": "Template36"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0814925909279722}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -1.5138311386108398, -0.0001220703125, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0022660493850708008, -2.1457672119140625e-06, -0.0003452301025390625, -0.004374504089355469, -0.0003795623779296875, -1.4936660528182983, -2.002716064453125e-05, -0.002777099609375, 0.0, -0.04009723663330078, -9.655952453613281e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.2909191393183903}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "5", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=[Aura(ChangeAttack(5), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -0.0048675537109375, -0.000751495361328125, -1.5138311386108398, -0.0001220703125, -9.5367431640625e-06, -9.5367431640625e-06, 0.0, -0.0022660493850708008, -2.1457672119140625e-06, -0.0003452301025390625, -0.004374504089355469, -0.0003795623779296875, -1.632177710533142, -2.193450927734375e-05, -0.0001888275146484375, 0.0, -0.025487639009952545, -8.106231689453125e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 5, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.412233284943028}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, auras=[Aura(ChangeAttack(2), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -2.0081944465637207, -1.1920928244535389e-07, -0.0039348602294921875, -0.0010528564453125, -0.5152130126953125, -9.34600830078125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0017242431640625, -2.1457672119140625e-06, -0.0013484954833984375, -0.0049800872802734375, -0.0004215240478515625, -0.8231593370437622, -1.1920928244535389e-07, -0.0002269744873046875, 0.0, -0.1727285087108612, -5.9604644775390625e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 2, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.5604609691578304}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, auras=[Aura(ChangeAttack(1), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -2.0081944465637207, -1.1920928244535389e-07, -0.0039348602294921875, -0.0010528564453125, -0.5152130126953125, -9.34600830078125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0017242431640625, -2.1457672119140625e-06, -0.0013484954833984375, -0.0049800872802734375, -0.0004215240478515625, -1.469549536705017, -1.5974044799804688e-05, -0.002155303955078125, 0.0, -0.03692355751991272, -9.655952453613281e-06, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 1, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.072994097419404}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "5", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, auras=[Aura(ChangeAttack(5), SelfSelector())])\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -2.0081944465637207, -1.1920928244535389e-07, -0.0039348602294921875, -0.0010528564453125, -0.5152130126953125, -9.34600830078125e-05, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -0.0017242431640625, -2.1457672119140625e-06, -0.0013484954833984375, -0.0049800872802734375, -0.0004215240478515625, -1.586952567100525, -1.800060272216797e-05, -0.000209808349609375, 0.0, -0.02258434146642685, -1.0013580322265625e-05, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"hole0": 5, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.174114800341748}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "MECH", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, MECH=True)\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -5.503267288208008, -2.145764938177308e-06, -0.41666221618652344, -0.0001926422119140625, -0.03198051452636719, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "MECH"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.979466273730537}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, stealth=True)\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -5.93060302734375, -2.622604142743512e-06, -0.027387619018554688, -0.00018310546875, -0.0075206756591796875, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.993058516927164}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "enrage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, enrage=1)\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -0.20002329349517822, -5.483612312673358e-06, -5.670009613037109, -0.0045413970947265625, -0.3171725571155548, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"n": 1, "_type": "Num"}, "hole0": 2, "_type": "Template10", "hole2": "enrage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.219113811187668}, {"choice_history": [55, 124, 221, 63, 103, "Amani", "Berserker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Amani", " ", "Berserker", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "spell_targetable", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class AmaniBerserker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Amani Berserker', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 3, spell_targetable=True)\n", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -1.1444091796875e-05, -3.4332275390625e-05, -1.9073486328125e-06, -0.004577158950269222, -0.007940275594592094, -0.001537840929813683, -1.9073486328125e-06, -6.103515625e-05, 0.0, -2.1457672119140625e-06, -2.300739288330078e-05, -1.9073486328125e-06, -7.62939453125e-06, -0.007167816162109375, -0.0016345977783203125, -3.4689852327574044e-05, -1.0371208190917969e-05, -2.86102294921875e-05, -0.0012373921927064657, -4.267683834768832e-05, -1.4305012882687151e-05, -2.3245811462402344e-05, 0.0, -0.0020465850830078125, -5.7220458984375e-06, -2.3841855067985307e-07, -3.576278118089249e-07, -0.000905922322999686, -7.152555099310121e-07, -5.642627716064453, -4.970903682988137e-05, -0.3747987747192383, -9.72747802734375e-05, -0.1804332733154297, 0.0], "model_output": {"body": [{"name": "AmaniBerserker", "body": [{"hole1": 2, "hole0": "Amani Berserker", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "spell_targetable"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.225368214749011}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-3.814697265625e-06, -3.814697265625e-06, -21.982505798339844], "model_output": {"body": [], "_type": "Module"}, "score": -21.982513427734375}]}
{"gold_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(), ActionTag(AddCard(\n            hearthbreaker.cards.Fireball()), PlayerSelector()))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -1.1071043014526367, -7.62939453125e-06, -0.0001773834228515625, -0.0002307891845703125, 0.0, -0.00172424188349396, -0.00016510306159034371, -9.5367431640625e-06, -0.00037384033203125, -0.005467414855957031, -0.011897087097167969, -0.0002040863037109375, -0.001402496942318976, -0.0150986909866333, -2.1457672119140625e-06, -8.0108642578125e-05, -0.0001354217529296875, -1.71661376953125e-05, -0.12647438049316406, 0.0, -1.1444091796875e-05, -2.86102294921875e-05, -0.019290804862976074, -2.1219253540039062e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.0015528202056884766, -0.0004138946533203125, -9.822845458984375e-05, -3.814697265625e-06, -0.000522613525390625, -0.0013294219970703125, -3.24249267578125e-05, 0.0, -0.11358632892370224, -4.8040365072665736e-05, -2.288818359375e-05, -0.000896453857421875, -7.62939453125e-06, -0.02571096457540989, -0.5867712497711182, -0.017623648047447205, -0.000141143798828125, -1.9073486328125e-06, -0.0002654787676874548, -1.9550323486328125e-05, -7.152555099310121e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.790867315524558}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireball'Antonidas()), PlayerSelector()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -1.1071043014526367, -7.62939453125e-06, -0.0001773834228515625, -0.0002307891845703125, 0.0, -0.00172424188349396, -0.00016510306159034371, -9.5367431640625e-06, -0.00037384033203125, -0.005467414855957031, -0.011897087097167969, -0.0002040863037109375, -0.001402496942318976, -0.0150986909866333, -2.1457672119140625e-06, -8.0108642578125e-05, -0.0001354217529296875, -1.71661376953125e-05, -0.12647438049316406, 0.0, -1.1444091796875e-05, -2.86102294921875e-05, -0.019290804862976074, -2.1219253540039062e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001010894775390625, -5.7220458984375e-06, 0.0, -0.0015528202056884766, -0.0004138946533203125, -9.822845458984375e-05, -3.814697265625e-06, -0.000522613525390625, -0.0013294219970703125, -3.24249267578125e-05, 0.0, -0.11358632892370224, -4.8040365072665736e-05, -2.288818359375e-05, -0.000896453857421875, -7.62939453125e-06, -0.02571096457540989, -0.9357550144195557, -0.26803579926490784, -0.061041802167892456, -0.0005092620849609375, -3.62396240234375e-05, -6.353854405460879e-05, -4.0411949157714844e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.4515259286849513}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -1.7545208930969238, 0.0, -0.0009533163974992931, 0.0, -0.003917694091796875, -6.4849853515625e-05, -4.649161837733118e-06, -1.2159273865108844e-05, -4.458403418539092e-05, -2.9444683605106547e-05, -0.00036704077501781285, -1.5258772691595368e-05, -0.000110626220703125, -0.000118255615234375, -1.2241592407226562, -7.62939453125e-06, -0.00018310546875, -0.000225067138671875, 0.0, -0.0015666470862925053, -0.00014531468332279474, -9.5367431640625e-06, -0.00037384033203125, -0.005333900451660156, -0.0121917724609375, -0.0001430511474609375, -0.0014578100526705384, -0.01488649845123291, -2.3841855067985307e-07, -6.866455078125e-05, -0.0001201629638671875, -1.52587890625e-05, -0.12084388732910156, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.018129348754882812, -2.1219253540039062e-05, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -0.001566171646118164, -0.0004119873046875, -9.632110595703125e-05, -3.814697265625e-06, -0.000518798828125, -0.001312255859375, -3.24249267578125e-05, 0.0, -0.11518421769142151, -4.8040365072665736e-05, -2.288818359375e-05, -0.0009002685546875, -7.62939453125e-06, -0.025650283321738243, -0.58620285987854, -0.01763160154223442, -0.000141143798828125, -1.9073486328125e-06, -0.0002673861163202673, -1.9550323486328125e-05, -7.152555099310121e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "ROGUE"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.012722211871925}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector())),\n            Battlecry(Summon('Fireballhand()), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.5826399326324463, -0.017460649833083153, -0.000133514404296875, -1.9073486328125e-06, -0.00026774374418891966, -2.1457672119140625e-05, -7.152555099310121e-07, -0.000217437744140625, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.5029072761535645, -1.6450881958007812e-05, -5.7220458984375e-06, -0.002056121826171875, -0.0024662017822265625, -0.000797271728515625, 0.0, -0.5272750854492188, -1.2516951755969785e-05, -1.71661376953125e-05, -0.0007648468017578125, -2.86102294921875e-05, -0.09631159156560898, -0.8737785220146179, -0.010461976751685143, -0.000438690185546875, -9.5367431640625e-06, -0.0005682706832885742, -4.0650367736816406e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.231077205712481}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector())),\n            Battlecry(Summon('Fireball'Antonidas()), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.5826399326324463, -0.017460649833083153, -0.000133514404296875, -1.9073486328125e-06, -0.00026774374418891966, -2.1457672119140625e-05, -7.152555099310121e-07, -0.000217437744140625, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.5029072761535645, -1.6450881958007812e-05, -5.7220458984375e-06, -0.002056121826171875, -0.0024662017822265625, -0.000797271728515625, 0.0, -0.5272750854492188, -1.2516951755969785e-05, -1.71661376953125e-05, -0.0007648468017578125, -2.86102294921875e-05, -0.09631159156560898, -0.9412330985069275, -0.22352033853530884, -0.03680478408932686, -0.0006809234619140625, -6.4849853515625e-05, -0.00016129016876220703, -6.16312026977539e-05, -3.576278118089249e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.54830599794802}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireball'Antonidas()), PlayerSelector())),\n            Battlecry(Summon('Fireballhand()), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.9387686252593994, -0.2717699408531189, -0.06082969903945923, -0.000499725341796875, -3.4332275390625e-05, -6.544589268742129e-05, -4.0411949157714844e-05, -2.3841855067985307e-07, -0.000362396240234375, -8.392333984375e-05, -1.52587890625e-05, 0.0, -0.3610738515853882, -1.442432312614983e-05, -3.814697265625e-06, -0.0014629364013671875, -0.0016078948974609375, -0.000705718994140625, 0.0, -0.48233723640441895, -1.6331634469679557e-05, -1.52587890625e-05, -0.00077056884765625, -3.4332275390625e-05, -0.11214441061019897, -0.7961164116859436, -0.010582033544778824, -0.0003910064697265625, -9.5367431640625e-06, -0.0005663633346557617, -5.2094459533691406e-05, -8.344646857949556e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.652690526718359}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "ROGUE", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireball'Antonidas()), PlayerSelector()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -1.7545208930969238, 0.0, -0.0009533163974992931, 0.0, -0.003917694091796875, -6.4849853515625e-05, -4.649161837733118e-06, -1.2159273865108844e-05, -4.458403418539092e-05, -2.9444683605106547e-05, -0.00036704077501781285, -1.5258772691595368e-05, -0.000110626220703125, -0.000118255615234375, -1.2241592407226562, -7.62939453125e-06, -0.00018310546875, -0.000225067138671875, 0.0, -0.0015666470862925053, -0.00014531468332279474, -9.5367431640625e-06, -0.00037384033203125, -0.005333900451660156, -0.0121917724609375, -0.0001430511474609375, -0.0014578100526705384, -0.01488649845123291, -2.3841855067985307e-07, -6.866455078125e-05, -0.0001201629638671875, -1.52587890625e-05, -0.12084388732910156, 0.0, -9.5367431640625e-06, -2.6702880859375e-05, -0.018129348754882812, -2.1219253540039062e-05, -3.814697265625e-06, -1.52587890625e-05, -9.5367431640625e-05, -5.7220458984375e-06, 0.0, -0.001566171646118164, -0.0004119873046875, -9.632110595703125e-05, -3.814697265625e-06, -0.000518798828125, -0.001312255859375, -3.24249267578125e-05, 0.0, -0.11518421769142151, -4.8040365072665736e-05, -2.288818359375e-05, -0.0009002685546875, -7.62939453125e-06, -0.025650283321738243, -0.9358904361724854, -0.26726171374320984, -0.061223555356264114, -0.0005130767822265625, -3.4332275390625e-05, -6.163119542179629e-05, -4.0411949157714844e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "ROGUE"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.673482443501079}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector())),\n            Deathrattle(Summon('Fireballhand()), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.5826399326324463, -0.017460649833083153, -0.000133514404296875, -1.9073486328125e-06, -0.00026774374418891966, -2.1457672119140625e-05, -7.152555099310121e-07, -0.000217437744140625, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.2139286994934082, -2.0742414562846534e-05, -7.62939453125e-06, -0.0031681060791015625, -0.0049304962158203125, -0.000118255615234375, 0.0, -0.4937519133090973, -1.0013561222876888e-05, -1.52587890625e-05, -0.001171112060546875, -1.9073486328125e-05, -0.08103123307228088, -0.7857422828674316, -0.01194862648844719, -0.0003566741943359375, -7.62939453125e-06, -0.00041317936847917736, -4.2557716369628906e-05, -9.536738616588991e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.809804300142545}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector())),\n            Deathrattle(Summon('Fireball'Antonidas()), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.5826399326324463, -0.017460649833083153, -0.000133514404296875, -1.9073486328125e-06, -0.00026774374418891966, -2.1457672119140625e-05, -7.152555099310121e-07, -0.000217437744140625, -5.340576171875e-05, -7.62939453125e-06, 0.0, -1.2139286994934082, -2.0742414562846534e-05, -7.62939453125e-06, -0.0031681060791015625, -0.0049304962158203125, -0.000118255615234375, 0.0, -0.4937519133090973, -1.0013561222876888e-05, -1.52587890625e-05, -0.001171112060546875, -1.9073486328125e-05, -0.08103123307228088, -0.9112613201141357, -0.3024255335330963, -0.030302077531814575, -0.0004596710205078125, -6.29425048828125e-05, -0.00014591217041015625, -6.54458999633789e-05, -4.768370445162873e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.256015776050944}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 32, 101, 19, 125, "Player", "Selector", "<EOS>", 208, 49, 174, "<UNK>", "Player", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector())),\n            Battlecry(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.5826399326324463, -0.017460649833083153, -0.000133514404296875, -1.9073486328125e-06, -0.00026774374418891966, -2.1457672119140625e-05, -7.152555099310121e-07, -0.000217437744140625, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.5029072761535645, -1.6450881958007812e-05, -5.7220458984375e-06, -0.002056121826171875, -0.0024662017822265625, -0.000797271728515625, 0.0, -1.5523405075073242, -0.0008732080459594727, -0.00048065185546875, -2.47955322265625e-05, -0.08034324645996094, -5.7220458984375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007429886027239263, -0.0003402233123779297, -5.9604644775390625e-06, -0.0014858245849609375, -0.0004940032958984375, -7.62939453125e-06, -0.809319257736206, -1.0728830375228426e-06, -0.002689361572265625, 0.0, -0.0006542205810546875, 0.0, -0.007122993469238281, -2.1457672119140625e-06, -0.05501759052276611, -2.0265579223632812e-06, -0.014431953430175781, -0.0003490447998046875, -1.1444091796875e-05, 0.0, -0.00021755635680165142, -0.0020494461059570312, 0.0, -3.4332275390625e-05, -0.0020046234130859375, 0.0, -0.0031652357429265976, -0.0038417759351432323, -1.537799835205078e-05], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "source", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "<UNK>Player", "_type": "Template38"}], "func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.2595194216524845}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireball'Antonidas()), PlayerSelector())),\n            Battlecry(Summon('Fireball'Antonidas()), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.9387686252593994, -0.2717699408531189, -0.06082969903945923, -0.000499725341796875, -3.4332275390625e-05, -6.544589268742129e-05, -4.0411949157714844e-05, -2.3841855067985307e-07, -0.000362396240234375, -8.392333984375e-05, -1.52587890625e-05, 0.0, -0.3610738515853882, -1.442432312614983e-05, -3.814697265625e-06, -0.0014629364013671875, -0.0016078948974609375, -0.000705718994140625, 0.0, -0.48233723640441895, -1.6331634469679557e-05, -1.52587890625e-05, -0.00077056884765625, -3.4332275390625e-05, -0.11214441061019897, -1.0588433742523193, -0.4035698473453522, -0.02070125937461853, -0.0016021728515625, -6.67572021484375e-05, -0.00014829635620117188, -6.127357482910156e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.329965465391453}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(Summon('Fireballhand()), PlayerSelector())),\n            Battlecry(AddCard(CardQuery(conditions=[IsType(MINION_TYPE.MECH\n            )])), PlayerSelector())])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -0.11969058960676193, -4.6252302126958966e-05, -2.288818359375e-05, -0.000972747802734375, -7.62939453125e-06, -0.024910254403948784, -0.5826399326324463, -0.017460649833083153, -0.000133514404296875, -1.9073486328125e-06, -0.00026774374418891966, -2.1457672119140625e-05, -7.152555099310121e-07, -0.000217437744140625, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.5029072761535645, -1.6450881958007812e-05, -5.7220458984375e-06, -0.002056121826171875, -0.0024662017822265625, -0.000797271728515625, 0.0, -1.5523405075073242, -0.0008732080459594727, -0.00048065185546875, -2.47955322265625e-05, -0.08034324645996094, -5.7220458984375e-05, -1.9073486328125e-05, -5.7220458984375e-06, -0.0007429886027239263, -0.0003402233123779297, -5.9604644775390625e-06, -0.0014858245849609375, -0.0004940032958984375, -7.62939453125e-06, -0.6151912212371826, -7.748603820800781e-06, -0.0024547576904296875, -7.43865966796875e-05, -0.013192176818847656, -0.01593780517578125, -4.38690185546875e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.1752539724111557, -0.004393577575683594, -1.2397762475302443e-05, -0.0001392364501953125, -5.7220458984375e-06, -1.9073486328125e-06, -0.005330085754394531, 0.0, -0.012149930000305176, -3.933906555175781e-06, -0.4246835708618164, -2.503394853192731e-06, -0.0007190704345703125, -6.29425048828125e-05, -0.002569437026977539, -3.49283182004001e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"keywords": [{"value": {"elts": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.630897224230445}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 32, 101, 19, 125, "Player", "Selector", "<EOS>", 208, 49, 174, "<UNK>", "Player", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 209, 32, 101, 19, 125, "Not", "<EOS>", 208, 32, 101, 19, 125, "Has", "Card", "Name", "<EOS>", 208, 40, 134, "Gallywix's", " ", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player()))), Effect(SpellCast(Not(\n            HasCardName(\"Gallywix's hand\")), PlayerSelector()), ActionTag(\n            Summon('Fireballhand()), PlayerSelector()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -2.3286044597625732, -0.0007914304151199758, -0.00025177001953125, -4.1961669921875e-05, -0.07808685302734375, -0.000152587890625, -9.5367431640625e-06, -5.7220458984375e-06, -0.0011470187455415726, -0.00048148632049560547, -5.841255187988281e-06, -0.0012912750244140625, -0.0004405975341796875, -7.62939453125e-06, -0.40251946449279785, -1.1920922133867862e-06, -0.0012111663818359375, 0.0, -0.0009250640869140625, 0.0, -0.031714439392089844, -2.1457672119140625e-06, -0.059233784675598145, -3.933906555175781e-06, -0.0076751708984375, -0.000652313232421875, -1.52587890625e-05, 0.0, -0.00042748372652567923, -0.0021295547485351562, 0.0, -2.47955322265625e-05, -0.00832366943359375, 0.0, -0.002809809986501932, -0.0052375332452356815, -1.3470649719238281e-05, -0.0001354217529296875, -0.0011310577392578125, -9.5367431640625e-06, 0.0, -0.2855764627456665, -4.9233411118621007e-05, -7.62939453125e-06, -0.05491065979003906, -0.012071609497070312, -0.00014495849609375, 0.0, -0.004730095621198416, -0.0033113956451416016, 0.0, -0.07608604431152344, -0.004050254821777344, -0.00040435791015625, -0.0001506805419921875, 0.0, -0.1932884305715561, -0.000209808349609375, -1.9073486328125e-06, -0.0021038055419921875, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.8357923626899719, -0.0006272327154874802, -0.02514934539794922, -3.24249267578125e-05, -5.7220458984375e-06, -0.00699615478515625, -4.9591064453125e-05, -0.24651122093200684, -0.09501564502716064, -0.4449117183685303, -2.6702880859375e-05, -4.1961669921875e-05, -0.0001220703125, -0.4468897581100464, -0.00010502338409423828, -1.1920928244535389e-07, -0.02718830108642578, -7.05718994140625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.03257131576538086, -0.0023403167724609375, -4.0531158447265625e-05, -3.814697265625e-06, -0.00030517578125, -0.0002841949462890625, -6.866455078125e-05, 0.0, -0.24661748111248016, -3.373583604115993e-05, -1.9073486328125e-05, -0.00067901611328125, -7.62939453125e-06, -0.034076109528541565, -0.5554289817810059, -0.007664339151233435, -0.000164031982421875, -3.814697265625e-06, -0.0002303121000295505, -3.0994415283203125e-05, -1.0728830375228426e-06], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "source", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "<UNK>Player", "_type": "Template38"}], "func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"args": [{"s": "Gallywix's hand", "_type": "Str"}], "func": {"id": "HasCardName", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Not", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireballhand", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.049423465563542}, {"choice_history": [55, 124, 221, 63, 103, "Archmage", "Antonidas", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Archmage", " ", "Antonidas", "<EOS>", "7", "<EOS>", "HUNTER", "<EOS>", "LEGENDARY", "<EOS>", 72, 145, "5", "<EOS>", "7", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Spell", "Cast", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Add", "Card", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "source", "<EOS>", 11, 94, 19, 125, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", 32, 101, 19, 125, "Player", "Selector", "<EOS>", 208, 49, 174, "<UNK>", "Player", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 209, 32, 101, 19, 125, "Not", "<EOS>", 208, 32, 101, 19, 125, "Has", "Card", "Name", "<EOS>", 208, 40, 134, "Gallywix's", " ", "hand", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Summon", "<EOS>", 208, 49, 174, "'Fireball", "'", "Antonidas", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ArchmageAntonidas(MinionCard):\n\n    def __init__(self):\n        super().__init__('Archmage Antonidas', 7, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(5, 7, effects=[Effect(SpellCast(player=EnemyPlayer()),\n            ActionTag(AddCard(CardQuery(source=CARD_SOURCE.<UNK>)),\n            PlayerSelector(<UNK>Player()))), Effect(SpellCast(Not(\n            HasCardName(\"Gallywix's hand\")), PlayerSelector()), ActionTag(\n            Summon('Fireball'Antonidas()), PlayerSelector()))])\n", "score_history": [-1.52587890625e-05, -0.0002288818359375, -3.814697265625e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.05117611214518547, -0.0014992436626926064, -0.009804954752326012, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -1.1444089977885596e-05, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-05, -0.03928852081298828, -2.47955322265625e-05, -2.372236667724792e-05, -2.586841583251953e-05, -5.7220458984375e-06, -2.86102294921875e-05, -0.0001882176147773862, -1.1920928244535389e-07, -0.6324267387390137, 0.0, -0.0029191970825195312, 0.0, -0.013131141662597656, -5.14984130859375e-05, -4.768371127283899e-06, -1.4543427823809907e-05, -4.303430614527315e-05, -3.135203223791905e-05, -0.00042652522097341716, -1.8477414414519444e-05, -0.000110626220703125, -8.58306884765625e-05, -0.40393829345703125, 0.0, -1.1444091796875e-05, -0.000942230224609375, -1.9073486328125e-06, -0.0027958154678344727, -2.6225870897178538e-05, -1.1444091796875e-05, -0.0005950927734375, -0.07605552673339844, -0.032874107360839844, -4.76837158203125e-05, -0.0010309208882972598, -0.011377692222595215, -1.1920928244535389e-07, -6.866455078125e-05, -0.0001087188720703125, -1.33514404296875e-05, -0.16636383533477783, 0.0, -1.33514404296875e-05, -2.09808349609375e-05, -0.014188766479492188, -2.3126602172851562e-05, -1.9073486328125e-06, -2.6702880859375e-05, -0.0001373291015625, -3.814697265625e-06, -1.9073486328125e-06, -0.0017789602279663086, -0.0004215240478515625, -0.00010418891906738281, -3.814697265625e-06, -0.0004062652587890625, -0.001468658447265625, -3.24249267578125e-05, 0.0, -2.3286044597625732, -0.0007914304151199758, -0.00025177001953125, -4.1961669921875e-05, -0.07808685302734375, -0.000152587890625, -9.5367431640625e-06, -5.7220458984375e-06, -0.0011470187455415726, -0.00048148632049560547, -5.841255187988281e-06, -0.0012912750244140625, -0.0004405975341796875, -7.62939453125e-06, -0.40251946449279785, -1.1920922133867862e-06, -0.0012111663818359375, 0.0, -0.0009250640869140625, 0.0, -0.031714439392089844, -2.1457672119140625e-06, -0.059233784675598145, -3.933906555175781e-06, -0.0076751708984375, -0.000652313232421875, -1.52587890625e-05, 0.0, -0.00042748372652567923, -0.0021295547485351562, 0.0, -2.47955322265625e-05, -0.00832366943359375, 0.0, -0.002809809986501932, -0.0052375332452356815, -1.3470649719238281e-05, -0.0001354217529296875, -0.0011310577392578125, -9.5367431640625e-06, 0.0, -0.2855764627456665, -4.9233411118621007e-05, -7.62939453125e-06, -0.05491065979003906, -0.012071609497070312, -0.00014495849609375, 0.0, -0.004730095621198416, -0.0033113956451416016, 0.0, -0.07608604431152344, -0.004050254821777344, -0.00040435791015625, -0.0001506805419921875, 0.0, -0.1932884305715561, -0.000209808349609375, -1.9073486328125e-06, -0.0021038055419921875, -2.09808349609375e-05, -3.814697265625e-06, 0.0, -0.8357923626899719, -0.0006272327154874802, -0.02514934539794922, -3.24249267578125e-05, -5.7220458984375e-06, -0.00699615478515625, -4.9591064453125e-05, -0.24651122093200684, -0.09501564502716064, -0.4449117183685303, -2.6702880859375e-05, -4.1961669921875e-05, -0.0001220703125, -0.4468897581100464, -0.00010502338409423828, -1.1920928244535389e-07, -0.02718830108642578, -7.05718994140625e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.03257131576538086, -0.0023403167724609375, -4.0531158447265625e-05, -3.814697265625e-06, -0.00030517578125, -0.0002841949462890625, -6.866455078125e-05, 0.0, -0.24661748111248016, -3.373583604115993e-05, -1.9073486328125e-05, -0.00067901611328125, -7.62939453125e-06, -0.034076109528541565, -0.9478144645690918, -0.2709548771381378, -0.07400564849376678, -0.0005397796630859375, -3.814697265625e-05, -4.220008122501895e-05, -4.4226646423339844e-05, -3.576278118089249e-07], "model_output": {"body": [{"name": "ArchmageAntonidas", "body": [{"hole1": 7, "hole3": "LEGENDARY", "hole0": "Archmage Antonidas", "_type": "Template7", "hole2": "HUNTER"}, {"hole1": 7, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"keywords": [{"value": {"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "arg": "source", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "func": {"id": "AddCard", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "<UNK>Player", "_type": "Template38"}], "func": {"id": "PlayerSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"args": [{"s": "Gallywix's hand", "_type": "Str"}], "func": {"id": "HasCardName", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Not", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "'Fireball'Antonidas", "_type": "Template38"}], "func": {"id": "Summon", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 5, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.779339619745464}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.52587890625e-05, -0.0002288818359375, -20.297779083251953], "model_output": {"body": [], "_type": "Module"}, "score": -20.298023223876953}]}
{"gold_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, False, hearthbreaker.targeting.find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n        self.target.increase_health(1)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self.target.card)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -0.5959484577178955, 0.0, -5.53131103515625e-05, -0.07627487182617188, -5.7220458984375e-06, -0.2916402816772461, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -0.5412406921386719, -2.622604142743512e-06, -0.00012385845184326172, -2.384185791015625e-06, -0.13849413394927979, -1.9073486328125e-06], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.7229282727186543}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(1)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -2.0322535037994385, 0.0, -4.00543212890625e-05, -0.014591217041015625, -1.1444091796875e-05, -0.10304353386163712, -1.9073486328125e-06], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 1, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.229003394181227}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(player.hero.<UNK>)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -0.5959484577178955, 0.0, -5.53131103515625e-05, -0.07627487182617188, -5.7220458984375e-06, -0.2916402816772461, -4.00543212890625e-05, -3.62396240234375e-05, 0.0, -1.0442819595336914, -6.079665126890177e-06, -0.12157317250967026, -2.3841855067985307e-07, -0.058185577392578125, -1.5616416931152344e-05], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.2671253179768414}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(MINION_TYPE.DEMON)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -0.5959484577178955, 0.0, -5.53131103515625e-05, -0.07627487182617188, -5.7220458984375e-06, -1.3860807418823242, 0.0, -0.32294178009033203, 0.0, -0.214239239692688, 0.0], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.6746078600830785}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(<UNK>()))\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -1.321768045425415, -4.172325134277344e-06, -3.0517578125e-05, -0.0010433197021484375, -3.62396240234375e-05, -2.86102294921875e-05, 0.0, -0.3257335424423218, -1.1086463018727954e-05, -0.0047607421875, -0.0065784454345703125, -3.814697265625e-06, -0.6346034407615662, -0.6744537353515625], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"args": [{"hole0": "<UNK>", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0481174459395604}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "+1/+1", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(+1/+1()))\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -1.321768045425415, -4.172325134277344e-06, -3.0517578125e-05, -0.0010433197021484375, -3.62396240234375e-05, -2.86102294921875e-05, 0.0, -0.3257335424423218, -1.1086463018727954e-05, -0.0047607421875, -0.0065784454345703125, -3.814697265625e-06, -0.8333475589752197, -0.6744537353515625], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"args": [{"hole0": "+1/+1", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.246861564153214}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(1)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -0.5959484577178955, 0.0, -5.53131103515625e-05, -2.833207130432129, -7.62939453125e-06, -0.011233523488044739, 0.0], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 1, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.519513787860369}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(3)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -2.0322535037994385, 0.0, -4.00543212890625e-05, -0.014591217041015625, -1.1444091796875e-05, -2.4750843048095703, -1.9073486328125e-06], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 3, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.60104416512916}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.<UNK>()\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -3.518482208251953, -1.9073486328125e-05, 0.0, -7.43865966796875e-05, 0.0, -1.9907753085135482e-05, -1.1920928244535389e-07, -0.0003510713577270508, 0.0, -0.8662919998168945, -1.52587890625e-05, -1.9073486328125e-06, -0.0033611059188842773, -6.210803257999942e-05, -1.33514404296875e-05, 0.0, -3.218588972231373e-06, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.003076791763305664, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.0001049041748046875, -3.62396240234375e-05, -0.0002765655517578125, -3.099436753473128e-06, -0.0007228851318359375, -4.76837158203125e-05, -0.0002956390380859375, -0.0004291534423828125, -0.00030744075775146484, -7.62939453125e-06, -0.10632038116455078, -0.08125495910644531, -0.0243072509765625, 0.0, -0.0003833770751953125, 0.0, -3.4332275390625e-05, -4.0531076592742465e-06, -9.894371032714844e-06, 0.0, -0.48390793800354004, -6.31790462648496e-05], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "<UNK>", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0944567770941305}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.increase_health(self)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -0.5959484577178955, 0.0, -5.53131103515625e-05, -4.481729507446289, 0.0, -0.053153157234191895, -5.960462772236497e-07], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "increase_health", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.209948765272422}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 39, 130, "1", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(1)\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -0.030736923217773438, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.145764938177308e-06, -1.1920928244535389e-07, -2.110004425048828e-05, 0.0, -0.0057697296142578125, -0.0046100616455078125, -1.9073486328125e-06, -0.0013085603713989258, -4.482268923311494e-05, -7.62939453125e-06, 0.0, -1.3112839951645583e-06, 0.0, -1.9073486328125e-06, -2.6702880859375e-05, -9.5367431640625e-06, 0.0, -1.9073486328125e-05, -7.62939453125e-06, -0.0025644302368164062, 0.0, -3.814697265625e-06, -3.814697265625e-06, -4.9591064453125e-05, -9.5367431640625e-05, -0.000125885009765625, -3.4570634852570947e-06, -0.0014133453369140625, -6.687641143798828e-05, -0.0005893707275390625, -0.0009098052978515625, -0.0002142190933227539, -1.33514404296875e-05, -4.00543212890625e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0010204315185546875, 0.0, -3.24249267578125e-05, -9.5367431640625e-06, -4.00543212890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -2.09808349609375e-05, -0.00020992755889892578, 0.0, -0.017189383506774902, -3.0875205993652344e-05, -0.000171661376953125, -0.007366180419921875, -1.52587890625e-05, -1.52587890625e-05, -1.71661376953125e-05, -3.814697265625e-06, -7.462501525878906e-05, -2.062299427052494e-05, -3.6835659557254985e-05, -3.576278118089249e-07, -5.148625373840332, -2.0265579223632812e-06, -1.9073486328125e-06, -0.003162384033203125, -2.47955322265625e-05, -0.04637623578310013, -1.9073486328125e-06], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 1, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.277256364161467}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.bounce()\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -3.518482208251953, -1.9073486328125e-05, 0.0, -7.43865966796875e-05, 0.0, -1.9907753085135482e-05, -1.1920928244535389e-07, -0.0003510713577270508, 0.0, -0.8662919998168945, -1.52587890625e-05, -1.9073486328125e-06, -0.0033611059188842773, -6.210803257999942e-05, -1.33514404296875e-05, 0.0, -3.218588972231373e-06, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.003076791763305664, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.0001049041748046875, -3.62396240234375e-05, -0.0002765655517578125, -3.099436753473128e-06, -0.0007228851318359375, -4.76837158203125e-05, -0.0002956390380859375, -0.0004291534423828125, -0.00030744075775146484, -7.62939453125e-06, -0.10632038116455078, -0.08125495910644531, -0.0243072509765625, 0.0, -0.0003833770751953125, 0.0, -3.4332275390625e-05, -4.0531076592742465e-06, -9.894371032714844e-06, 0.0, -2.092050313949585, -4.41074053014745e-06], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "bounce", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.702540384734441}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff()\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -3.518482208251953, -1.9073486328125e-05, 0.0, -7.43865966796875e-05, 0.0, -1.9907753085135482e-05, -1.1920928244535389e-07, -0.0003510713577270508, 0.0, -0.8662919998168945, -1.52587890625e-05, -1.9073486328125e-06, -0.0033611059188842773, -6.210803257999942e-05, -1.33514404296875e-05, 0.0, -3.218588972231373e-06, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.003076791763305664, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.0001049041748046875, -3.62396240234375e-05, -0.0002765655517578125, -3.099436753473128e-06, -0.0007228851318359375, -4.76837158203125e-05, -0.0002956390380859375, -0.0004291534423828125, -0.00030744075775146484, -7.62939453125e-06, -0.10632038116455078, -0.08125495910644531, -0.0243072509765625, 0.0, -0.0003833770751953125, 0.0, -3.4332275390625e-05, -4.0531076592742465e-06, -9.894371032714844e-06, 0.0, -2.2382748126983643, -0.00020360935013741255], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "add_buff", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.848964082092827}, {"choice_history": [55, 124, 221, 63, 103, "Bananas", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Bananas", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 71, 143, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "Spell", "<EOS>"], "inferred_code": "class Bananas(SpellCard):\n\n    def __init__(self):\n        super().__init__('Bananas', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.Spell()\n", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -0.0007038116455078125, -0.00032806396484375, -2.288818359375e-05, -6.079665126890177e-06, -0.00034164657699875534, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -1.7642965758568607e-05, -0.00011622899182839319, 0.0, -3.0517578125e-05, -0.00080108642578125, -3.4332275390625e-05, -1.2516919014160521e-05, 0.0, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0013033099239692092, -1.311301275563892e-06, -0.000152587890625, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001125335693359375, -3.518482208251953, -1.9073486328125e-05, 0.0, -7.43865966796875e-05, 0.0, -1.9907753085135482e-05, -1.1920928244535389e-07, -0.0003510713577270508, 0.0, -0.8662919998168945, -1.52587890625e-05, -1.9073486328125e-06, -0.0033611059188842773, -6.210803257999942e-05, -1.33514404296875e-05, 0.0, -3.218588972231373e-06, 0.0, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, 0.0, -1.1444091796875e-05, -5.7220458984375e-06, -0.003076791763305664, 0.0, -1.1444091796875e-05, -2.288818359375e-05, -0.0001049041748046875, -3.62396240234375e-05, -0.0002765655517578125, -3.099436753473128e-06, -0.0007228851318359375, -4.76837158203125e-05, -0.0002956390380859375, -0.0004291534423828125, -0.00030744075775146484, -7.62939453125e-06, -0.10632038116455078, -0.08125495910644531, -0.0243072509765625, 0.0, -0.0003833770751953125, 0.0, -3.4332275390625e-05, -4.0531076592742465e-06, -9.894371032714844e-06, 0.0, -2.5365092754364014, -0.0012522911420091987], "model_output": {"body": [{"name": "Bananas", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Bananas", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "Spell", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.148247226622736}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -9.5367431640625e-06, -18.75777244567871], "model_output": {"body": [], "_type": "Module"}, "score": -18.757783889770508}]}
{"gold_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(DoubleAttack()))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -0.5567829608917236, 0.0, -5.7220458984375e-06, -1.405653953552246, -5.7220458984375e-06, -0.06367886066436768, -7.152555099310121e-07], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3311823675480454}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.card)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -0.5567829608917236, 0.0, -5.7220458984375e-06, -0.9071731567382812, -4.57763671875e-05, -0.0779256820678711, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0035343170166015625, -1.1920928244535389e-07, -6.508827209472656e-05, -1.1920928244535389e-07, -0.63965904712677, -1.3470649719238281e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.490305669054301}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.card)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -1.393843412399292, -3.063678741455078e-05, -1.52587890625e-05, -0.33209896087646484, -4.1961669921875e-05, -0.018174171447753906, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.003223419189453125, 0.0, -6.711483001708984e-05, -1.1920928244535389e-07, -0.7057639360427856, -1.5497207641601562e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7583727905600455}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.health)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -0.5567829608917236, 0.0, -5.7220458984375e-06, -0.9071731567382812, -4.57763671875e-05, -0.0779256820678711, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.0035343170166015625, -1.1920928244535389e-07, -6.508827209472656e-05, -1.1920928244535389e-07, -0.944740891456604, 0.0], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.795374042734416}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.health)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -1.393843412399292, -3.063678741455078e-05, -1.52587890625e-05, -0.33209896087646484, -4.1961669921875e-05, -0.018174171447753906, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.003223419189453125, 0.0, -6.711483001708984e-05, -1.1920928244535389e-07, -0.848159909248352, 0.0], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9007532665579703}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "5", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(5)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -0.5567829608917236, 0.0, -5.7220458984375e-06, -1.597794532775879, -1.9073486328125e-05, -0.4587784707546234, -2.3841855067985307e-07], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"n": 5, "_type": "Num"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9184354314654044}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 30, 96, 21, 130, "5", "<EOS>", 57, 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(5 - self.target.calculate_attack())\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.6505298614501953, -0.000156402587890625, 0.0, 0.0, -0.0061187744140625, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -5.1855888159479946e-05, -7.033334895822918e-06, -0.5567829608917236, 0.0, -5.7220458984375e-06, -2.0149621963500977, -0.00226593017578125, -0.0033779144287109375, -0.00139617919921875, -0.1371600478887558, -1.7523765563964844e-05, -0.015572547912597656, -0.007718086242675781, -0.011182785034179688, -3.62396240234375e-05, 0.0, -0.0004119873046875, 0.0, -0.0001068115234375, 0.0, -4.1961669921875e-05, -1.0728830375228426e-06, -3.206721521564759e-05, -7.152555099310121e-07, -0.017244458198547363, -1.4185901818564162e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"op": {"_type": "Sub"}, "left": {"n": 5, "_type": "Num"}, "right": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "BinOp"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.073385826603804}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -1.1784543991088867, -1.9073486328125e-06, -0.007917404174804688, -2.288818359375e-05, 0.0, -0.0007535219192504883, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001850128173828125, -7.62939453125e-06, -0.0582960844039917, -3.6835670471191406e-05, -0.7046871185302734, -0.00016021728515625, 0.0, 0.0, -0.0060558319091796875, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -4.9114089051727206e-05, -7.033334895822918e-06, -0.5579366683959961, 0.0, -5.7220458984375e-06, -1.421107292175293, -5.7220458984375e-06, -0.0641254186630249, -7.152555099310121e-07], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.170626885651899}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.change_attack(self.target.card)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -1.1784543991088867, -1.9073486328125e-06, -0.007917404174804688, -2.288818359375e-05, 0.0, -0.0007535219192504883, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001850128173828125, -7.62939453125e-06, -0.0582960844039917, -3.6835670471191406e-05, -0.7046871185302734, -0.00016021728515625, 0.0, 0.0, -0.0060558319091796875, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -4.9114089051727206e-05, -7.033334895822918e-06, -0.5579366683959961, 0.0, -5.7220458984375e-06, -0.8581647872924805, -4.57763671875e-05, -0.07699394226074219, -7.62939453125e-06, -4.00543212890625e-05, 0.0, -0.003589630126953125, -1.1920928244535389e-07, -6.508827209472656e-05, -1.1920928244535389e-07, -0.6391679048538208, -1.3470649719238281e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "change_attack", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.263476259469556}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "card", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.set_health_to(self.target.card)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -1.1784543991088867, -1.9073486328125e-06, -0.007917404174804688, -2.288818359375e-05, 0.0, -0.0007535219192504883, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001850128173828125, -7.62939453125e-06, -0.0582960844039917, -3.6835670471191406e-05, -0.7046871185302734, -0.00016021728515625, 0.0, 0.0, -0.0060558319091796875, 0.0, -2.288818359375e-05, -8.344646857949556e-07, -4.9114089051727206e-05, -7.033334895822918e-06, -1.3954033851623535, -3.254413604736328e-05, -1.52587890625e-05, -0.3254575729370117, -4.1961669921875e-05, -0.018164634704589844, -3.814697265625e-06, -4.00543212890625e-05, 0.0, -0.0032501220703125, 0.0, -6.711483001708984e-05, -1.1920928244535389e-07, -0.6958314180374146, -1.5497207641601562e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "set_health_to", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "card"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.565768844842488}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 67, 112, 15, 104, 19, 125, "temp_attack", "<EOS>", 205, 2, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 38, 127, "Null", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 37, 125, "temp_attack", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.7504444122314453, -0.0001201629638671875, -6.270407902775332e-05, 0.0, -4.76837158203125e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.3232214769232087e-05, 0.0, 0.0, -2.288818359375e-05, -2.7418097943154862e-06, -2.86102294921875e-05, -7.402896881103516e-05, -1.1682508556987159e-05, -0.23225021362304688, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.288818359375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0005484538269229233, 0.0, -4.8279762268066406e-05, 0.0, -3.0517578125e-05, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.960462772236497e-07, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -6.604177906410769e-05, -0.07858943939208984, -0.0001239776611328125, -3.814697265625e-06, -0.0002307891845703125, -1.9073486328125e-06, -0.11236870288848877, -6.794917680963408e-06, -0.0025844573974609375, -0.024466514587402344, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00859832763671875, 0.0, -0.0058383941650390625, 0.0, -6.306171417236328e-05, -3.576278118089249e-07, -0.016667604446411133, -2.0265558760002023e-06, -0.5956707000732422, -0.000141143798828125, -1.9073486328125e-06, -0.012042999267578125, -1.9073486328125e-06, -0.027109503746032715, -1.0728796951298136e-05, -0.020493507385253906, -3.814697265625e-06, -9.72747802734375e-05, -4.1961669921875e-05, -0.0001506805419921875, 0.0, -6.29425048828125e-05, 0.0, -5.352497100830078e-05, -1.1920928244535389e-07, -0.007664441596716642, -1.1920928244535389e-07, -0.0003299713134765625, -0.0039825439453125, -0.009667396545410156, -0.000186920166015625, -0.05527782440185547, -1.9073486328125e-06, -0.5262861251831055, -6.0439109802246094e-05, -0.0001964569091796875, -0.20191287994384766, 0.0, -3.814697265625e-05, -4.38690185546875e-05, -0.002857179380953312, -1.1920928244535389e-07, -0.0028047561645507812, -0.02494335174560547, -1.9073486328125e-06, -0.011102676391601562, -1.33514404296875e-05, -8.392333984375e-05, 0.0, -0.0001373291015625, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -0.0006028413772583008, -2.50339189733495e-06, -5.6981894886121154e-05, -1.776217504811939e-05, -0.10190558433532715, -1.1920928244535389e-07, -2.86102294921875e-05, -0.03285503387451172, -0.000514984130859375, -0.0003962516784667969, -1.1920928244535389e-07, -0.00152587890625, -0.004378318786621094, 0.0, -3.0517578125e-05, -0.04318428039550781, -9.5367431640625e-06, -0.0065555572509765625, -0.000457763671875, -0.000202178955078125, -3.814697265625e-05, 0.0, -0.003611922264099121, -1.6689286894688848e-06, -0.00013983124517835677, -8.82148651726311e-06, -0.019667983055114746, -0.0013551712036132812, -2.6702880859375e-05, -0.0029296875, 0.0, -0.30371129512786865, -2.2411206373362802e-05, -9.918212890625e-05, 0.0, -0.000148773193359375, -0.060161590576171875, 0.0, 0.0, -3.24249267578125e-05, 0.0, -7.82012939453125e-05, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -2.145765392924659e-05, -2.0265579223632812e-06, -0.5686078071594238, -0.0017719268798828125, -1.52587890625e-05, -0.0026874542236328125, 0.0, -0.3374752998352051, -1.1682510375976562e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "_type": "Assign"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Eq"}]}, "body": [{"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "orelse": [{"value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "temp_attack", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "set_health_to"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.880725212344068}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 67, 112, 15, 104, 19, 125, "temp_attack", "<EOS>", 205, 2, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 38, 127, "Null", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 37, 125, "temp_attack", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.FREE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -1.1784543991088867, -1.9073486328125e-06, -0.007917404174804688, -2.288818359375e-05, 0.0, -0.0007535219192504883, 0.0, -3.0517578125e-05, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001850128173828125, -7.62939453125e-06, -0.0582960844039917, -3.6835670471191406e-05, -0.6941928863525391, -0.000125885009765625, -6.47306369501166e-05, 0.0, -4.9591064453125e-05, -3.814697265625e-05, -1.9073486328125e-06, -1.3113007298670709e-05, 0.0, 0.0, -2.288818359375e-05, -2.622600959512056e-06, -3.0517578125e-05, -6.818771362304688e-05, -1.1682508556987159e-05, -0.23827743530273438, -2.09808349609375e-05, 0.0, -1.1444091796875e-05, 0.0, -2.288818359375e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0005628702347166836, 0.0, -4.8279762268066406e-05, 0.0, -3.0517578125e-05, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.960462772236497e-07, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -6.413443043129519e-05, -0.07654953002929688, -0.000125885009765625, -3.814697265625e-06, -0.0002288818359375, -1.9073486328125e-06, -0.11450445652008057, -6.914126061019488e-06, -0.0025987625122070312, -0.024468421936035156, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.008607864379882812, 0.0, -0.005890846252441406, 0.0, -6.306171417236328e-05, -3.576278118089249e-07, -0.01671433448791504, -2.0265558760002023e-06, -0.5908956527709961, -0.000141143798828125, -1.9073486328125e-06, -0.0120697021484375, -1.9073486328125e-06, -0.027073264122009277, -1.0728796951298136e-05, -0.020425796508789062, -3.814697265625e-06, -9.72747802734375e-05, -4.1961669921875e-05, -0.0001506805419921875, 0.0, -6.29425048828125e-05, 0.0, -5.352497100830078e-05, -1.1920928244535389e-07, -0.007658719550818205, -1.1920928244535389e-07, -0.0003223419189453125, -0.0039825439453125, -0.009514808654785156, -0.000186920166015625, -0.054533958435058594, -1.9073486328125e-06, -0.5241270065307617, -6.23464584350586e-05, -0.0001964569091796875, -0.20178985595703125, 0.0, -3.814697265625e-05, -4.38690185546875e-05, -0.0028540799394249916, -1.1920928244535389e-07, -0.0028076171875, -0.024852752685546875, -1.9073486328125e-06, -0.011137008666992188, -1.33514404296875e-05, -8.392333984375e-05, 0.0, -0.0001373291015625, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -0.0006028413772583008, -2.50339189733495e-06, -5.6981894886121154e-05, -1.776217504811939e-05, -0.10199236869812012, -1.1920928244535389e-07, -2.86102294921875e-05, -0.03286552429199219, -0.000514984130859375, -0.0003952980041503906, -1.1920928244535389e-07, -0.001522064208984375, -0.004390716552734375, 0.0, -3.0517578125e-05, -0.04311370849609375, -9.5367431640625e-06, -0.006549835205078125, -0.000457763671875, -0.000202178955078125, -3.814697265625e-05, 0.0, -0.003615736961364746, -1.6689286894688848e-06, -0.00013983124517835677, -8.82148651726311e-06, -0.01967942714691162, -0.0013561248779296875, -2.6702880859375e-05, -0.0029296875, 0.0, -0.3037484884262085, -2.2411206373362802e-05, -9.918212890625e-05, 0.0, -0.000148773193359375, -0.060187339782714844, 0.0, 0.0, -3.24249267578125e-05, 0.0, -7.82012939453125e-05, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -2.145765392924659e-05, -2.0265579223632812e-06, -0.568657398223877, -0.0017719268798828125, -1.52587890625e-05, -0.002689361572265625, 0.0, -0.3374767303466797, -1.1682510375976562e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "_type": "Assign"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Eq"}]}, "body": [{"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "orelse": [{"value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "temp_attack", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "set_health_to"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.591089546165037}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 67, 112, 15, 104, 19, 125, "<UNK>", "<EOS>", 205, 2, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 38, 127, "Null", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 37, 125, "temp_attack", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if <UNK> == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(temp_attack)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.7504444122314453, -0.0001201629638671875, -6.270407902775332e-05, 0.0, -4.76837158203125e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.3232214769232087e-05, 0.0, 0.0, -2.288818359375e-05, -2.7418097943154862e-06, -2.86102294921875e-05, -7.402896881103516e-05, -1.1682508556987159e-05, -0.23225021362304688, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.288818359375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0005484538269229233, 0.0, -4.8279762268066406e-05, 0.0, -3.0517578125e-05, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.960462772236497e-07, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -6.604177906410769e-05, -0.07858943939208984, -0.0001239776611328125, -3.814697265625e-06, -0.0002307891845703125, -1.9073486328125e-06, -0.11236870288848877, -6.794917680963408e-06, -0.0025844573974609375, -0.024466514587402344, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00859832763671875, 0.0, -0.0058383941650390625, 0.0, -6.306171417236328e-05, -3.576278118089249e-07, -0.016667604446411133, -2.0265558760002023e-06, -0.5956707000732422, -0.000141143798828125, -1.9073486328125e-06, -0.012042999267578125, -1.9073486328125e-06, -0.027109503746032715, -1.0728796951298136e-05, -0.020493507385253906, -3.814697265625e-06, -9.72747802734375e-05, -4.1961669921875e-05, -0.0001506805419921875, 0.0, -6.29425048828125e-05, 0.0, -5.352497100830078e-05, -1.1920928244535389e-07, -0.007664441596716642, -1.1920928244535389e-07, -0.0003299713134765625, -0.0039825439453125, -0.009667396545410156, -0.000186920166015625, -0.05527782440185547, -1.9073486328125e-06, -1.0511322021484375, -2.503394853192731e-06, -3.0517578125e-05, -0.5153789520263672, 0.0, -0.000164031982421875, -2.288818359375e-05, -0.002446256810799241, 0.0, -0.0034685134887695312, -0.027315139770507812, -1.9073486328125e-06, -0.016759872436523438, -1.33514404296875e-05, -5.91278076171875e-05, 0.0, -0.0001430511474609375, -9.5367431640625e-06, -0.0001049041748046875, 0.0, -0.0006409883499145508, -2.50339189733495e-06, -5.4478514357469976e-05, -1.7523756469017826e-05, -0.11745607852935791, -1.1920928244535389e-07, -3.0517578125e-05, -0.04131126403808594, -0.000499725341796875, -0.0004107952117919922, -1.1920928244535389e-07, -0.0014629364013671875, -0.0045986175537109375, 0.0, -3.0517578125e-05, -0.04226875305175781, -9.5367431640625e-06, -0.007916450500488281, -0.000469207763671875, -0.0002079010009765625, -3.814697265625e-05, 0.0, -0.003642439842224121, -1.7881377516459906e-06, -0.00013947352999821305, -8.70227722771233e-06, -0.02003037929534912, -0.0013990402221679688, -2.6702880859375e-05, -0.0028934478759765625, 0.0, -0.3045867681503296, -2.2411206373362802e-05, -9.72747802734375e-05, 0.0, -0.000148773193359375, -0.05955696105957031, 0.0, 0.0, -3.24249267578125e-05, 0.0, -7.82012939453125e-05, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -2.145765392924659e-05, -2.0265579223632812e-06, -0.5689224004745483, -0.0017690658569335938, -1.52587890625e-05, -0.0026912689208984375, 0.0, -0.33745527267456055, -1.1682510375976562e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "_type": "Assign"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "<UNK>", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Eq"}]}, "body": [{"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "orelse": [{"value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "temp_attack", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "set_health_to"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.752826034199913}, {"choice_history": [55, 124, 221, 63, 103, "Blessed", "Champion", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Blessed", " ", "Champion", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 14, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "health", "<EOS>", 67, 112, 15, 104, 19, 125, "temp_attack", "<EOS>", 205, 2, 208, 39, 130, "0", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 38, 127, "Null", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "<UNK>", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "set_health_to", "<EOS>", 208, 37, 125, "<UNK>", "<EOS>"], "inferred_code": "class BlessedChampion(SpellCard):\n\n    def __init__(self):\n        super().__init__('Blessed Champion', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        <UNK> = self.target.calculate_attack()\n        <UNK> = self.target.health\n        if temp_attack == 0:\n            self.target.die(Null)\n        else:\n            self.target.<UNK>(<UNK>)\n            self.target.set_health_to(<UNK>)\n", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -5.7220458984375e-05, -1.1444091796875e-05, -7.033323527139146e-06, -0.00620190380141139, -0.00023541064001619816, -3.814697265625e-06, -2.09808349609375e-05, -7.62939453125e-06, -0.000128147192299366, -5.042536940891296e-05, -1.9073486328125e-06, -2.47955322265625e-05, -0.000156402587890625, -1.1444091796875e-05, -0.0005685090436600149, -1.3709065569855738e-05, -7.62939453125e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.3378219086444005e-05, -7.62939453125e-06, -0.0002117156982421875, -4.57763671875e-05, -1.33514404296875e-05, -1.9073486328125e-06, -0.0048313140869140625, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00022718709078617394, -5.9604644775390625e-06, -4.0531158447265625e-06, -2.3841855067985307e-07, -0.11582756042480469, -5.7220458984375e-06, -0.000766754150390625, -0.0002851079625543207, -2.47955322265625e-05, -0.00226134923286736, -1.9073486328125e-06, -0.0002994537353515625, 0.0, -8.844937838148326e-05, -1.311301275563892e-06, 0.0, 0.0, -1.33514404296875e-05, 0.0, -0.0002584456233307719, -8.344646857949556e-07, -0.03784823417663574, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.6941299438476562e-05, -8.106198947643861e-06, -0.42084503173828125, -1.9073486328125e-06, -0.000179290771484375, -2.86102294921875e-05, 0.0, -0.0010415315628051758, -1.1920928244535389e-07, -3.0517578125e-05, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, -0.0001773834228515625, -7.62939453125e-06, -0.05505824089050293, -4.2319297790527344e-05, -0.7504444122314453, -0.0001201629638671875, -6.270407902775332e-05, 0.0, -4.76837158203125e-05, -4.9591064453125e-05, -1.9073486328125e-06, -1.3232214769232087e-05, 0.0, 0.0, -2.288818359375e-05, -2.7418097943154862e-06, -2.86102294921875e-05, -7.402896881103516e-05, -1.1682508556987159e-05, -0.23225021362304688, -1.9073486328125e-05, 0.0, -1.1444091796875e-05, 0.0, -2.288818359375e-05, 0.0, -2.288818359375e-05, 0.0, -0.0005484538269229233, 0.0, -4.8279762268066406e-05, 0.0, -3.0517578125e-05, -4.38690185546875e-05, -3.814697265625e-06, -3.814697265625e-06, -5.960462772236497e-07, -1.52587890625e-05, -1.9073486328125e-06, -4.00543212890625e-05, -6.604177906410769e-05, -0.07858943939208984, -0.0001239776611328125, -3.814697265625e-06, -0.0002307891845703125, -1.9073486328125e-06, -0.11236870288848877, -6.794917680963408e-06, -0.0025844573974609375, -0.024466514587402344, -5.7220458984375e-06, 0.0, -2.6702880859375e-05, -7.62939453125e-06, -0.00859832763671875, 0.0, -0.0058383941650390625, 0.0, -6.306171417236328e-05, -3.576278118089249e-07, -0.016667604446411133, -2.0265558760002023e-06, -0.5956707000732422, -0.000141143798828125, -1.9073486328125e-06, -0.012042999267578125, -1.9073486328125e-06, -0.027109503746032715, -1.0728796951298136e-05, -0.020493507385253906, -3.814697265625e-06, -9.72747802734375e-05, -4.1961669921875e-05, -0.0001506805419921875, 0.0, -6.29425048828125e-05, 0.0, -5.352497100830078e-05, -1.1920928244535389e-07, -0.007664441596716642, -1.1920928244535389e-07, -0.0003299713134765625, -0.0039825439453125, -0.009667396545410156, -0.000186920166015625, -0.05527782440185547, -1.9073486328125e-06, -0.5262861251831055, -6.0439109802246094e-05, -0.0001964569091796875, -0.20191287994384766, 0.0, -3.814697265625e-05, -4.38690185546875e-05, -0.002857179380953312, -1.1920928244535389e-07, -0.0028047561645507812, -0.02494335174560547, -1.9073486328125e-06, -0.011102676391601562, -1.33514404296875e-05, -8.392333984375e-05, 0.0, -0.0001373291015625, -7.62939453125e-06, -8.96453857421875e-05, 0.0, -0.0006028413772583008, -2.50339189733495e-06, -5.6981894886121154e-05, -1.776217504811939e-05, -0.10190558433532715, -1.1920928244535389e-07, -2.86102294921875e-05, -0.03285503387451172, -0.000514984130859375, -0.0003962516784667969, -1.1920928244535389e-07, -0.00152587890625, -0.004378318786621094, 0.0, -3.0517578125e-05, -0.04318428039550781, -9.5367431640625e-06, -0.0065555572509765625, -0.000457763671875, -0.000202178955078125, -3.814697265625e-05, 0.0, -0.003611922264099121, -1.6689286894688848e-06, -0.00013983124517835677, -8.82148651726311e-06, -0.019667983055114746, -0.0013551712036132812, -2.6702880859375e-05, -0.0029296875, 0.0, -0.30371129512786865, -2.2411206373362802e-05, -9.918212890625e-05, 0.0, -0.000148773193359375, -0.060161590576171875, 0.0, 0.0, -3.24249267578125e-05, 0.0, -7.82012939453125e-05, 0.0, -3.814697265625e-05, -1.1920928244535389e-07, -2.145765392924659e-05, -2.0265579223632812e-06, -0.5686078071594238, -0.0017719268798828125, -1.52587890625e-05, -0.0026874542236328125, 0.0, -1.9436450004577637, -1.3470632438838948e-05], "model_output": {"body": [{"name": "BlessedChampion", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Blessed Champion", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "target_func", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}, "_type": "Assign"}, {"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "health"}, "_type": "Assign"}, {"test": {"comparators": [{"n": 0, "_type": "Num"}], "left": {"id": "temp_attack", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Eq"}]}, "body": [{"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "orelse": [{"value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "<UNK>", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "set_health_to"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.486896701088689}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-7.62939453125e-06, -1.9073486328125e-06, -22.629810333251953], "model_output": {"body": [], "_type": "Module"}, "score": -22.629819869995117}]}
{"gold_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Steal(), MinionSelector(\n            AttackLessThanOrEqualTo(2), players=EnemyPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.676751971244812, -0.03549118712544441, -0.00242531206458807, -0.11175272613763809, -0.0070296525955200195, -4.2319297790527344e-05, -3.814697265625e-06, -0.009729385375976562, -2.09808349609375e-05, -0.1307746171951294, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.012308117933571339, -1.537799835205078e-05, 0.0, -0.00263214111328125, -3.814697265625e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00038158876122906804, -3.576278118089249e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.9618638137214148}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "Greater", "Than", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(6), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.7503546476364136, -0.0025249719619750977, -0.005504012107849121, -9.5367431640625e-06, -0.01335906982421875, -0.0028057098388671875, -0.49418389797210693, -3.576278118089249e-07, -0.0037384033203125, -9.5367431640625e-06, -0.03446221351623535, -8.392333984375e-05, 0.0, -0.0020236968994140625, -1.9073486328125e-06, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0005252359551377594, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "AttackGreaterThan", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.2819335514537116}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "Greater", "Than", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.7503546476364136, -0.0025249719619750977, -0.005504012107849121, -9.5367431640625e-06, -0.01335906982421875, -0.0028057098388671875, -1.467029094696045, -1.9073486328125e-06, -0.023286819458007812, -5.7220458984375e-06, -0.01594816893339157, -1.9073486328125e-05, 0.0, -0.0012722015380859375, -1.9073486328125e-06, -3.576278118089249e-07, -1.1920928244535389e-07, -0.0004459617775864899, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "AttackGreaterThan", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.2549151161544287}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -2.071739673614502, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -2.264974000354414e-06, -0.00010883808135986328, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -2.3841855067985307e-07, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -3.921985626220703e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.09973621368408203, -0.5050239562988281, -0.00013457823661156, -0.0002467631711624563, -0.0006922483444213867, -0.00014495849609375, -0.00014972020289860666, -6.496906280517578e-05, -0.00015043295570649207, -3.576278118089249e-07, -0.032242536544799805, -3.6358302168082446e-05, -0.0013499921187758446, -2.3841855067985307e-07, -0.0011835098266601562, -0.00016236305236816406, -1.1920928244535389e-07, -0.017236709594726562, -3.4332275390625e-05, -1.71661376953125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.0456162691116333, -0.6628521680831909, -0.03486104682087898, -0.002409576438367367, -0.11162207275629044, -0.007008671760559082, -4.2319297790527344e-05, -3.814697265625e-06, -0.009792327880859375, -2.09808349609375e-05, -0.12696754932403564, 0.0, -0.000156402587890625, -1.9073486328125e-06, -0.012298461981117725, -1.537799835205078e-05, 0.0, -0.00274658203125, -3.814697265625e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00036478022229857743, -3.576278118089249e-07], "model_output": {"body": [{"name": "CabalShadowPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8260198602993256}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "Greater", "Than", "<EOS>", 208, 39, 130, "6", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(6), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -2.071739673614502, -5.7220458984375e-06, -2.6702880859375e-05, -3.814697265625e-06, -2.264974000354414e-06, -0.00010883808135986328, -1.9073486328125e-06, -9.5367431640625e-06, -6.866455078125e-05, -9.5367431640625e-06, -5.841255187988281e-06, -2.3841855067985307e-07, -5.7220458984375e-06, -3.814697265625e-05, 0.0, -3.921985626220703e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.09973621368408203, -0.5050239562988281, -0.00013457823661156, -0.0002467631711624563, -0.0006922483444213867, -0.00014495849609375, -0.00014972020289860666, -6.496906280517578e-05, -0.00015043295570649207, -3.576278118089249e-07, -0.032242536544799805, -3.6358302168082446e-05, -0.0013499921187758446, -2.3841855067985307e-07, -0.0011835098266601562, -0.00016236305236816406, -1.1920928244535389e-07, -0.017236709594726562, -3.4332275390625e-05, -1.71661376953125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.0456162691116333, -0.7664488554000854, -0.002522110939025879, -0.005602240562438965, -9.5367431640625e-06, -0.013019561767578125, -0.0028057098388671875, -0.49851974844932556, -3.576278118089249e-07, -0.0038547515869140625, -9.5367431640625e-06, -0.03503453731536865, -8.392333984375e-05, 0.0, -0.0020961761474609375, -1.9073486328125e-06, -4.768370445162873e-07, -2.3841855067985307e-07, -0.0004947183770127594, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 6, "_type": "Num"}], "func": {"id": "AttackGreaterThan", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.185355916143514}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "3", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(3), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.676751971244812, -0.03549118712544441, -0.00242531206458807, -0.11175272613763809, -0.0070296525955200195, -4.2319297790527344e-05, -3.814697265625e-06, -0.009729385375976562, -2.09808349609375e-05, -2.452299118041992, -1.9073486328125e-06, -0.000232696533203125, 0.0, -0.14290618896484375, -2.6702880859375e-05, 0.0, -0.002231597900390625, -5.7220458984375e-06, -4.768370445162873e-07, -1.1920928244535389e-07, -0.0005880590761080384, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 3, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.413885772784489}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>Than<UNK>EqualTo(2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.676751971244812, -0.03549118712544441, -0.00242531206458807, -2.6562187671661377, -0.005024790298193693, -0.06326532363891602, -0.007474064826965332, -3.266334533691406e-05, -3.814697265625e-06, -0.011110305786132812, -9.5367431640625e-06, -0.2256244570016861, -1.9073486328125e-06, -9.72747802734375e-05, -1.9073486328125e-06, -0.005535597912967205, -1.919269561767578e-05, 0.0, -0.0025615692138671875, -5.7220458984375e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.00036823732079938054, -3.576278118089249e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.664369914014664}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 210, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Random", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -2.4968175888061523, -5.14984130859375e-05, 0.0, -0.0001659393310546875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.3351411325857043e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -4.1961669921875e-05, -8.940656698541716e-06, -1.9073486328125e-05, -0.0008150246576406062, -7.62939453125e-05, -0.0023077644873410463, -0.0038022994995117188, -6.29425048828125e-05, 0.0, -0.00023517775116488338, -1.0728830375228426e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.516674041748047e-05, -1.5497207641601562e-05, -0.016836047172546387, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -3.2186455882765586e-06, -0.0015277862548828125, -1.1444091796875e-05, -0.0014438629150390625, -0.0052165985107421875, 0.0, -0.2457752227783203, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, 0.0, -0.0013980865478515625, -0.979248046875, -0.001033782958984375, -0.16163034737110138, -2.1219184418441728e-05, -0.008775711059570312, -1.33514404296875e-05, -2.09808349609375e-05, 0.0, -4.601478576660156e-05, -2.384185791015625e-06, -4.768370445162873e-07, -0.13102436065673828, -0.0030012130737304688, -1.9073486328125e-06, -0.0003261566162109375, -1.9073486328125e-06, -0.2338273674249649, -0.00334322452545166, -0.01080968789756298, -0.0013592580799013376, -0.08635144680738449, -0.0026607513427734375, -6.699562072753906e-05, -3.814697265625e-06, -0.0009002685546875, -8.392333984375e-05, -0.00696670962497592, -5.7220458984375e-06, -0.0003452301025390625, 0.0, -0.022093534469604492, -4.482269287109375e-05, 0.0, -0.00016021728515625, 0.0, -0.02235555648803711, -5.042503835284151e-05, -2.1576723156613298e-05, -0.0006237030029296875, -1.9073486328125e-06, -2.1457672119140625e-06, -1.1920922133867862e-06, -0.0002446170256007463, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole0": "Kill", "_type": "Template38"}, {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "RandomPicker", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.67190946076024}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "<UNK>", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class Cabal<UNK>Priest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -2.92340087890625, -0.00018631342391017824, -0.3692864179611206, -1.9073486328125e-06, -3.24249267578125e-05, -1.1444091796875e-05, -2.741813204920618e-06, -5.7220458984375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -7.82012939453125e-05, -7.62939453125e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -3.910064697265625e-05, -7.62939453125e-06, -8.20159912109375e-05, -0.10067939758300781, -0.5422754287719727, -0.00014244495832826942, -0.00025832647224888206, -0.00067901611328125, -0.0001373291015625, -0.00014495258801616728, -6.306171417236328e-05, -0.0001481685321778059, -3.576278118089249e-07, -0.03130221366882324, -4.053055090480484e-05, -0.0013650113251060247, -2.3841855067985307e-07, -0.0012177228927612305, -0.00016236305236816406, -1.1920928244535389e-07, -0.01683330535888672, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.045884132385253906, -0.6672447919845581, -0.03499801829457283, -0.0024180402979254723, -0.11156902462244034, -0.007026791572570801, -4.2319297790527344e-05, -3.814697265625e-06, -0.009759902954101562, -2.09808349609375e-05, -0.12488603591918945, 0.0, -0.0001583099365234375, -1.9073486328125e-06, -0.012022254057228565, -1.537799835205078e-05, 0.0, -0.0026836395263671875, -3.814697265625e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0003702638787217438, -3.576278118089249e-07], "model_output": {"body": [{"name": "Cabal<UNK>Priest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.008165536131209}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "Greater", "Than", "<EOS>", 208, 39, 130, "LEGENDARY", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(0), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.7503546476364136, -0.0025249719619750977, -0.005504012107849121, -9.5367431640625e-06, -0.01335906982421875, -0.0028057098388671875, -3.2516016960144043, -1.6689286894688848e-06, -0.0015964508056640625, -7.62939453125e-06, -0.051819782704114914, -5.14984130859375e-05, 0.0, -0.0015659332275390625, -1.9073486328125e-06, -2.3841855067985307e-07, -1.1920928244535389e-07, -0.0005526540335267782, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 0, "_type": "Num"}], "func": {"id": "AttackGreaterThan", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.054103361182747}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", "6", "<EOS>", "EPIC", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "Greater", "Than", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, battlecry=Battlecry(Kill(), MinionSelector(\n            AttackGreaterThan(1), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -0.10588455200195312, -0.5492854118347168, -0.0001431601122021675, -0.00025403493782505393, -0.00054931640625, -6.4849853515625e-05, -0.00036799139343202114, -0.00016987323760986328, -0.00015400900156237185, -3.576278118089249e-07, -0.032094717025756836, -3.862320227199234e-05, -0.0013471320271492004, -2.3841855067985307e-07, -0.0012042522430419922, -0.00016236305236816406, -1.1920928244535389e-07, -0.016824722290039062, -3.4332275390625e-05, -1.9073486328125e-05, -3.62396240234375e-05, -5.7220458984375e-06, -0.046240925788879395, -0.7503546476364136, -0.0025249719619750977, -0.005504012107849121, -9.5367431640625e-06, -0.01335906982421875, -0.0028057098388671875, -3.2882814407348633, -3.814697265625e-06, -0.0374755859375, -1.52587890625e-05, -0.3095550537109375, -0.0004901885986328125, 0.0, -0.00183868408203125, -3.814697265625e-06, -7.152555099310121e-07, -1.1920928244535389e-07, -0.0005547995679080486, -3.576278118089249e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "AttackGreaterThan", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Cabal Shadow Priest", "hole1": 6, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "EPIC"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.385123377174246}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -2.4968175888061523, -5.14984130859375e-05, 0.0, -0.0001659393310546875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.3351411325857043e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -4.1961669921875e-05, -8.940656698541716e-06, -1.9073486328125e-05, -0.0008150246576406062, -7.62939453125e-05, -0.0023077644873410463, -0.0038022994995117188, -6.29425048828125e-05, 0.0, -0.00023517775116488338, -1.0728830375228426e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.516674041748047e-05, -1.5497207641601562e-05, -0.016836047172546387, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -3.2186455882765586e-06, -0.0015277862548828125, -1.1444091796875e-05, -0.0014438629150390625, -0.0052165985107421875, 0.0, -0.2457752227783203, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, 0.0, -0.0013980865478515625, -0.8216047286987305, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000740766292437911, -0.003046751022338867, -8.0108642578125e-05, -0.16148948669433594, -1.71661376953125e-05, -0.053168296813964844, -1.3692474365234375, -0.0004482269287109375, -0.2457486242055893, -1.9073486328125e-06, -0.04252815246582031, -0.000347137451171875, -0.02089383825659752, -3.814697265625e-06, -0.001705169677734375, -1.9073486328125e-06, -0.009527204558253288, -1.0013580322265625e-05, 0.0, -0.0067844390869140625, -3.814697265625e-06, -2.5152961825369857e-05, 0.0, -0.0004668159526772797, -1.1920928244535389e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.732360767945906}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Attack", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Attack()),\n            Buff(Attack())]), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -2.4968175888061523, -5.14984130859375e-05, 0.0, -0.0001659393310546875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.3351411325857043e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -4.1961669921875e-05, -8.940656698541716e-06, -1.9073486328125e-05, -0.0008150246576406062, -7.62939453125e-05, -0.0023077644873410463, -0.0038022994995117188, -6.29425048828125e-05, 0.0, -0.00023517775116488338, -1.0728830375228426e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.516674041748047e-05, -1.5497207641601562e-05, -0.016836047172546387, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -3.2186455882765586e-06, -0.0015277862548828125, -1.1444091796875e-05, -0.0014438629150390625, -0.0052165985107421875, 0.0, -0.2457752227783203, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, 0.0, -0.0013980865478515625, -0.8216047286987305, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000740766292437911, -0.003046751022338867, -8.0108642578125e-05, -0.16148948669433594, -1.71661376953125e-05, -0.053168296813964844, -0.32613372802734375, -0.00083160400390625, -1.71661376953125e-05, 0.0, -0.016842961311340332, -0.0014244318008422852, -4.1961669921875e-05, -0.006618499755859375, -1.1444091796875e-05, -0.15043319761753082, -1.280062198638916, -0.0003871917724609375, -0.000125885009765625, -2.288818359375e-05, 0.0, -0.015336990356445312, -2.145765392924659e-05, -0.0002536773681640625, -0.011260986328125, -3.814697265625e-06, -0.2113032042980194, -0.3048887252807617, -0.0002231597900390625, -5.7220458984375e-06, -0.7047983407974243, -9.34600830078125e-05, 0.0, -0.0045871734619140625, -3.814697265625e-06, -1.81197356141638e-05, -5.960462772236497e-07, -0.00043141801143065095, -1.1920928244535389e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.07080093087761}, {"choice_history": [55, 124, 221, 63, 103, "Cabal", "Shadow", "Priest", "Priest", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Cabal", " ", "Shadow", " ", "Priest", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Attack", "<UNK>", "Priest", "<EOS>", 32, 101, 19, 125, "Choice", "<EOS>", 210, 49, 174, "Attack", "<EOS>", 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "5", "<EOS>"], "inferred_code": "class CabalShadowPriestPriest(MinionCard):\n\n    def __init__(self):\n        super().__init__('Cabal Shadow Priest', 6, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(\n            Attack<UNK>Priest()), Choice(Attack(), Give(2()),\n            MinionSelector())]), MinionSelector(Attack<UNK>Than<UNK>EqualTo\n            (2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 5)\n", "score_history": [0.0, -3.814697265625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.33514404296875e-05, -0.00021669900161214173, -0.07536318898200989, -0.002848264994099736, -0.1347648650407791, -0.003820665180683136, -1.9073486328125e-06, -4.57763671875e-05, -3.814697265625e-06, -4.768370445162873e-07, -8.58306884765625e-05, -1.9073486328125e-06, -7.62939453125e-06, -8.7738037109375e-05, -9.5367431640625e-06, -7.748603820800781e-06, -1.1920928244535389e-07, -5.7220458984375e-06, -4.00543212890625e-05, -1.9073486328125e-06, -3.719329833984375e-05, -9.5367431640625e-06, -7.43865966796875e-05, -2.4968175888061523, -5.14984130859375e-05, 0.0, -0.0001659393310546875, -7.62939453125e-06, 0.0, -1.9073486328125e-06, 0.0, -1.3351411325857043e-05, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -5.14984130859375e-05, -1.52587890625e-05, -4.1961669921875e-05, -8.940656698541716e-06, -1.9073486328125e-05, -0.0008150246576406062, -7.62939453125e-05, -0.0023077644873410463, -0.0038022994995117188, -6.29425048828125e-05, 0.0, -0.00023517775116488338, -1.0728830375228426e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.52587890625e-05, 0.0, -3.516674041748047e-05, -1.5497207641601562e-05, -0.016836047172546387, 0.0, 0.0, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -1.71661376953125e-05, -3.2186455882765586e-06, -0.0015277862548828125, -1.1444091796875e-05, -0.0014438629150390625, -0.0052165985107421875, 0.0, -0.2457752227783203, 0.0, -7.43865966796875e-05, -5.7220458984375e-06, -9.5367431640625e-06, 0.0, -5.14984130859375e-05, 0.0, -0.0013980865478515625, -0.8216047286987305, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000740766292437911, -0.003046751022338867, -8.0108642578125e-05, -0.16148948669433594, -1.71661376953125e-05, -0.053168296813964844, -0.32613372802734375, -0.00083160400390625, -1.71661376953125e-05, 0.0, -0.016842961311340332, -0.0014244318008422852, -4.1961669921875e-05, -0.006618499755859375, -1.1444091796875e-05, -0.15043319761753082, -0.3809523582458496, -0.44976478815078735, -0.0058436705730855465, -0.06208992004394531, -0.00045013427734375, -7.62939453125e-05, 0.0, -0.099509596824646, -4.017353057861328e-05, -0.0037965774536132812, -0.0026092529296875, -0.0006570816040039062, -0.04634498059749603, -0.04551041126251221, -0.0023212432861328125, -8.96453857421875e-05, -1.33514404296875e-05, 0.0, -0.02083897590637207, -0.0030530691146850586, -1.9073486328125e-06, -0.29164791107177734, -7.62939453125e-06, -0.027566906064748764, -0.00028034148272126913, -0.0063076019287109375, 0.0, -0.8691065907478333, -6.473064422607422e-05, 0.0, -0.04829120635986328, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.026244401931762695, -2.1457672119140625e-05, -1.1920928244535389e-07, -0.038860321044921875, -0.00417327880859375, 0.0, -0.0001926422119140625, 0.0, -0.2932901382446289, -0.019971251487731934, -0.006979390047490597, -0.002731441520154476, -0.10490411520004272, -0.0028542280197143555, -3.266334533691406e-05, -1.9073486328125e-06, -0.0030078887939453125, -8.392333984375e-05, -0.010197758674621582, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.034416913986206055, -2.86102294921875e-05, 0.0, -0.001148223876953125, -3.814697265625e-06, -2.8610222670977237e-06, -3.576278118089249e-07, -0.0005067578167654574, -2.3841855067985307e-07], "model_output": {"body": [{"name": "CabalShadowPriestPriest", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Cabal Shadow Priest", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "Attack<UNK>Priest", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Attack", "_type": "Template38"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Choice", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 5, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.453916447365046}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -3.814697265625e-06, -22.011423110961914], "model_output": {"body": [], "_type": "Module"}, "score": -22.01142692565918}]}
{"gold_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.add_buff(Buff(Frozen()))\n        index = self.target.index\n        if self.target.index < len(self.target.player.minions) - 1:\n            minion = self.target.player.minions[index + 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n        self.target.damage(player.effective_spell_damage(1), self)\n        if self.target.index > 0:\n            minion = self.target.player.minions[index - 1]\n            minion.damage(player.effective_spell_damage(1), self)\n            minion.add_buff(Buff(Frozen()))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -2.05245304107666, 0.0, -0.0023860931396484375, -2.47955322265625e-05, 0.0, -1.9073486328125e-06, -0.0007104873657226562, -1.9073486328125e-06, -0.0004482269287109375, -7.62939453125e-06, -0.0007861852645874023, 0.0, -3.6835670471191406e-05, -3.814697265625e-06, -0.18741416931152344, 0.0, -3.814697265625e-06, -0.0024261474609375, -0.00026702880859375, -0.025422997772693634, -1.9073486328125e-06, -0.0071659088134765625, -4.57763671875e-05, -6.961822509765625e-05, -1.3470649719238281e-05], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.362862593022783}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not self.target.index:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -0.37969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.41375935077667236, -4.5299530029296875e-06, -0.000476837158203125, -0.0365753173828125, -9.5367431640625e-06, -0.0013446807861328125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.7706079483032227, 0.0, -0.19061744213104248, -9.274070180254057e-05, -0.0003552436828613281, -1.9073486328125e-06, -3.814697265625e-06, -0.06169414520263672, -4.9591064453125e-05, -0.0020038264337927103, -4.410743713378906e-06, -0.001834869384765625, -3.814697265625e-06, -0.024222612380981445, -1.9073486328125e-06], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.95731124497388}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not game.other_player.hero:\n            self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -1.164689064025879, -0.00012695789337158203, -0.0007233619689941406, 0.0, -0.13777759671211243, -5.7220458984375e-06, -0.0025043487548828125, -0.060207366943359375, -1.9073486328125e-06, -0.0001544952392578125, 0.0, 0.0, -1.9073486328125e-06, -0.13187694549560547, -1.9073486328125e-05, -0.0004062652587890625, 0.0, -0.007233142852783203, -2.3841855067985307e-07, -0.00010943412780761719, -2.1457672119140625e-06, -0.5378812551498413, 0.0, -3.814697265625e-06, -0.014454841613769531, -0.00012969970703125, -0.026122769340872765, -1.9073486328125e-06, -0.004704475402832031, -5.14984130859375e-05, -0.000141143798828125, -1.1563301086425781e-05], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.163276602042487}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not self.target.index:\n            self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -0.37969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.41375935077667236, -4.5299530029296875e-06, -0.000476837158203125, -0.0365753173828125, -9.5367431640625e-06, -0.0013446807861328125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.6230840682983398, -1.71661376953125e-05, -9.34600830078125e-05, 0.0, -0.0014274120330810547, -1.1920928244535389e-07, -7.37905502319336e-05, -2.1457672119140625e-06, -0.8955883979797363, 0.0, -5.7220458984375e-06, -0.014157295227050781, -0.000102996826171875, -0.022400343790650368, -1.9073486328125e-06, -0.0044498443603515625, -4.1961669921875e-05, -9.441375732421875e-05, -2.491474151611328e-05], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.467382930678916}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not self.target.index:\n            self.target.die(self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -0.37969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.41375935077667236, -4.5299530029296875e-06, -0.000476837158203125, -0.0365753173828125, -9.5367431640625e-06, -0.0013446807861328125, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -0.6230840682983398, -1.71661376953125e-05, -9.34600830078125e-05, 0.0, -0.0014274120330810547, -1.1920928244535389e-07, -7.37905502319336e-05, -2.1457672119140625e-06, -0.7026877403259277, 0.0, -0.0040035247802734375, -0.2858705520629883, 0.0, -0.00038623809814453125, 0.0], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.5234631881989955}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not game.other_player.hero:\n            self.target.die(self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -1.164689064025879, -0.00012695789337158203, -0.0007233619689941406, 0.0, -0.13777759671211243, -5.7220458984375e-06, -0.0025043487548828125, -0.060207366943359375, -1.9073486328125e-06, -0.0001544952392578125, 0.0, 0.0, -1.9073486328125e-06, -0.13187694549560547, -1.9073486328125e-05, -0.0004062652587890625, 0.0, -0.007233142852783203, -2.3841855067985307e-07, -0.00010943412780761719, -2.1457672119140625e-06, -1.053387999534607, 0.0, -0.002979278564453125, -0.2376108169555664, 0.0, -0.0003814697265625, 0.0], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.87413319805043}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not self.target.immune:\n            minion.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -0.37969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.3125072717666626, -6.008148193359375e-05, -0.000415802001953125, -0.0019378662109375, -7.62939453125e-06, -0.0001163482666015625, 0.0, 0.0, -1.9073486328125e-06, -0.7100248336791992, 0.0, -0.3163496255874634, -4.088794958079234e-05, -0.0003361701965332031, -1.9073486328125e-06, -3.814697265625e-06, -0.056586265563964844, -4.38690185546875e-05, -0.00208753882907331, -4.410743713378906e-06, -0.0014448165893554688, -1.9073486328125e-06, -0.029006242752075195, -1.9073486328125e-06], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.884624007479488}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n        self.target.die(self)\n        self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -1.1072616577148438, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.543231964111328e-05, 0.0, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -0.0002079010009765625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.1552734375e-05, -3.814697265625e-06, -2.1338462829589844e-05, -3.5881785152014345e-05, -0.1745891571044922, -2.288818359375e-05, -0.00067901611328125, -6.67572021484375e-05, -5.7220458984375e-06, -4.57763671875e-05, -0.0004901885986328125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -9.429454803466797e-05, -1.1920928244535389e-07, -2.5987612389144488e-05, -1.1920928244535389e-07, -1.1509977579116821, 0.0, -0.004138946533203125, -0.013602256774902344, 0.0, -0.000370025634765625, 0.0, -0.1528329849243164, -1.9073486328125e-06, -0.0069789886474609375, -0.0003376007080078125, -1.9073486328125e-06, 0.0, -0.000514984130859375, -1.9073486328125e-06, -0.0002155303955078125, -1.9073486328125e-06, -0.0006511211395263672, 0.0, -1.1801716937043238e-05, 0.0, -1.4894524812698364, 0.0, -0.00104522705078125, -0.1614227294921875, 0.0, -0.0004863739013671875, 0.0, -0.10317707061767578, -1.9073486328125e-06, -0.012132644653320312, -0.0024547576904296875, -1.9073486328125e-06, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -0.0003566741943359375, -1.9073486328125e-06, -0.0007138252258300781, 0.0, -1.3351438610698096e-05, -1.9073486328125e-06, -0.5873622894287109, 0.0, -9.5367431640625e-06, -0.0029916763305664062, -0.0005435943603515625, -0.04784872382879257, -1.9073486328125e-06, -0.013545036315917969, -6.67572021484375e-05, -0.0002040863037109375, -3.933906555175781e-06], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.056027373690526}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not game.other_player.hero:\n            self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -1.8315297365188599, 0.0, -9.632110595703125e-05, 0.0, -0.0005950927734375, -0.000164031982421875, -7.62939453125e-06, -3.814697265625e-06, -3.24249267578125e-05, 0.0, -0.0001049041748046875, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.10607361793518066, -3.814697265625e-05, -0.0004177093505859375, -5.7220458984375e-06, -5.924701690673828e-05, 0.0, -2.6702880859375e-05, -0.0001220703125, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.5669012069702148, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.206715700798668e-05, -0.052992820739746094, -1.33514404296875e-05, -3.814697265625e-05, -0.17891788482666016, -0.0065288543701171875, -0.0007228851318359375, 0.0, -0.0329437255859375, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.152410626411438, -0.00010216233931714669, -0.04493427276611328, -0.022853851318359375, -6.866455078125e-05, 0.0, -0.14630699157714844, -0.05447673797607422, -0.004988670349121094, -1.9073486328125e-05, -0.12330436706542969, 0.0, -0.06048393249511719, 0.0, -0.01935100555419922, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.4555244445800781, -1.1444091796875e-05, -0.05414581298828125, -3.814697265625e-06, -0.07311439514160156, -1.52587890625e-05, -0.0007991790771484375, -1.9073486328125e-06, -1.1649866104125977, -0.00012695789337158203, -0.0007233619689941406, 0.0, -0.1378461718559265, -5.7220458984375e-06, -0.002506256103515625, -0.060326576232910156, -1.9073486328125e-06, -0.0001544952392578125, 0.0, 0.0, -1.9073486328125e-06, -0.1328449249267578, -1.9073486328125e-05, -0.0004062652587890625, 0.0, -0.007231235504150391, -2.3841855067985307e-07, -0.00010943412780761719, -2.1457672119140625e-06, -0.5370515584945679, 0.0, -3.814697265625e-06, -0.014461517333984375, -0.00012969970703125, -0.02610744908452034, -1.9073486328125e-06, -0.0047054290771484375, -5.14984130859375e-05, -0.000141143798828125, -1.1563301086425781e-05], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "WARLOCK"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.292845266395915}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 20, 126, "True", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "immune", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.immune = True\n        if self.target is not self.target.immune:\n            self.target.die(self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -0.574894905090332, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.33514404296875e-05, -5.7220458984375e-06, -5.14984130859375e-05, 0.0, -3.0517578125e-05, 0.0, -1.52587890625e-05, -0.0002384185791015625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.000110626220703125, -3.814697265625e-06, -1.7404556274414062e-05, -3.1947951356414706e-05, -0.052936553955078125, -1.33514404296875e-05, -3.814697265625e-05, -0.1768016815185547, -0.0065288543701171875, -0.0007219314575195312, 0.0, -0.0328369140625, 0.0, -7.82012939453125e-05, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.15237629413604736, -0.00010216233931714669, -0.04489707946777344, -0.022813796997070312, -6.866455078125e-05, 0.0, -0.1443624496459961, -0.053924560546875, -0.0049648284912109375, -1.9073486328125e-05, -0.12352848052978516, 0.0, -0.060550689697265625, 0.0, -0.019372940063476562, 0.0, -0.0007725954055786133, -7.62939453125e-06, -4.76837158203125e-05, -0.45510196685791016, -1.1444091796875e-05, -0.05413532257080078, -3.814697265625e-06, -0.07314491271972656, -1.33514404296875e-05, -0.0007991790771484375, -1.9073486328125e-06, -0.37969970703125, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -1.3125072717666626, -6.008148193359375e-05, -0.000415802001953125, -0.0019378662109375, -7.62939453125e-06, -0.0001163482666015625, 0.0, 0.0, -1.9073486328125e-06, -0.6793909072875977, -1.71661376953125e-05, -0.000186920166015625, 0.0, -0.0015249252319335938, -1.1920928244535389e-07, -3.731250762939453e-05, -2.1457672119140625e-06, -0.7210060358047485, 0.0, -0.0056591033935546875, -0.1734600067138672, 0.0, -0.0004444122314453125, 0.0], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "value": {"value": true, "_type": "NameConstant"}, "_type": "Assign"}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "immune"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.350418864277792}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in targets:\n            target.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -1.1072616577148438, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.543231964111328e-05, 0.0, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -0.0002079010009765625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.1552734375e-05, -3.814697265625e-06, -2.1338462829589844e-05, -3.5881785152014345e-05, -0.1745891571044922, -2.288818359375e-05, -0.00067901611328125, -6.67572021484375e-05, -5.7220458984375e-06, -4.57763671875e-05, -0.0004901885986328125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -9.429454803466797e-05, -1.1920928244535389e-07, -2.5987612389144488e-05, -1.1920928244535389e-07, -0.5304075479507446, 0.0, -3.814697265625e-06, -0.0013885498046875, -0.0001621246337890625, -0.02412205934524536, -1.9073486328125e-06, -0.009190559387207031, -2.6702880859375e-05, -7.82012939453125e-05, -7.867813110351562e-06, -0.4169178009033203, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.014919519424438477, -5.483625955093885e-06, -1.3565149307250977, 0.0, -0.00090789794921875, -3.814697265625e-06, -0.0031833648681640625, -0.0012969970703125, -1.9073486328125e-06, -0.00016021728515625, 0.0, -5.7220458984375e-06, 0.0, -0.007328033447265625, 0.0, -0.6410776376724243, -5.722029527532868e-06, -0.0024701356887817383, 0.0, -3.814697265625e-06, -0.04844474792480469, -5.53131103515625e-05, -0.0030498714186251163, -5.006789251638111e-06, -0.0025997161865234375, -1.71661376953125e-05, -0.06841576099395752, -1.9073486328125e-06, -0.1413707733154297, -0.00037860870361328125, -0.0004253387451171875, -6.4849853515625e-05, -0.06557750701904297, 0.0, -0.0017547607421875, 0.0, -0.004393577575683594, 0.0, -0.0006716251373291016, -9.5367431640625e-06, -5.7220458984375e-05, -0.43282508850097656, -1.1444091796875e-05, -0.0016126632690429688, -1.1444091796875e-05, -0.043437957763671875, -1.1444091796875e-05, -0.0008602142333984375, 0.0, -0.635528564453125, -1.9073486328125e-06, -5.7220458984375e-06, -3.814697265625e-06, -0.372843861579895, -4.5299530029296875e-06, -0.00026702880859375, -0.006709098815917969, -1.33514404296875e-05, -0.0011539459228515625, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -0.0023345947265625, -9.5367431640625e-06, -0.000675201416015625, 0.0, -0.0019379854202270508, -1.1920928244535389e-07, -0.00018107891082763672, -9.894371032714844e-06, -0.3240736722946167, 0.0, -7.62939453125e-06, -0.013819694519042969, -0.00023651123046875, -0.02653978206217289, 0.0, -0.005352973937988281, -4.38690185546875e-05, -8.678436279296875e-05, -2.300739288330078e-05], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.5195826281842315}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in copy.copy(game.other_player.minions):\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(4, self)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -1.1072616577148438, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.543231964111328e-05, 0.0, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -0.0002079010009765625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.1552734375e-05, -3.814697265625e-06, -2.1338462829589844e-05, -3.5881785152014345e-05, -0.1745891571044922, -2.288818359375e-05, -0.00067901611328125, -6.67572021484375e-05, -5.7220458984375e-06, -4.57763671875e-05, -0.0004901885986328125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -9.429454803466797e-05, -1.1920928244535389e-07, -2.5987612389144488e-05, -1.1920928244535389e-07, -0.5304075479507446, 0.0, -3.814697265625e-06, -0.0013885498046875, -0.0001621246337890625, -0.02412205934524536, -1.9073486328125e-06, -0.009190559387207031, -2.6702880859375e-05, -7.82012939453125e-05, -7.867813110351562e-06, -0.4169178009033203, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.014919519424438477, -5.483625955093885e-06, -1.3576993942260742, -0.0001468658447265625, -0.0039539337158203125, 0.0, -0.020811080932617188, 0.0, -0.0006275177001953125, -2.3841855067985307e-07, -0.0129852294921875, 0.0, -9.5367431640625e-06, -0.000118255615234375, 0.0, -0.04791831970214844, -5.7220458984375e-05, -0.034252166748046875, 0.0, -0.0021190643310546875, -1.9669532775878906e-05, -0.013434410095214844, 0.0, -0.00699415011331439, -1.9073486328125e-06, -0.0006198883056640625, -1.0994024276733398, -3.0517578125e-05, -6.4849853515625e-05, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.04150199890136719, 0.0, -0.1024707555770874, -0.00014983485743869096, -0.00029861927032470703, -1.9073486328125e-06, -1.9073486328125e-06, -0.23702716827392578, -3.24249267578125e-05, -0.0024850592017173767, -2.2649765014648438e-06, -0.00141143798828125, -3.814697265625e-06, -0.023986101150512695, -1.9073486328125e-06, -0.27173423767089844, -0.0006456375122070312, -0.0004940032958984375, -2.6702880859375e-05, -0.026106834411621094, 0.0, -0.0061626434326171875, 0.0, -0.0053615570068359375, 0.0, -0.0007382631301879883, -1.9073486328125e-06, -5.14984130859375e-05, -0.5234346389770508, -1.1444091796875e-05, -0.001556396484375, -9.5367431640625e-06, -0.08935356140136719, -1.1444091796875e-05, -0.000885009765625, 0.0, -0.6207132339477539, -1.9073486328125e-06, -7.62939453125e-06, -3.814697265625e-06, -0.36450302600860596, -4.5299530029296875e-06, -0.0002727508544921875, -0.009174346923828125, -1.52587890625e-05, -0.0011444091796875, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -0.002574920654296875, -9.5367431640625e-06, -0.0009746551513671875, 0.0, -0.00225067138671875, -1.1920928244535389e-07, -0.00018739700317382812, -7.987022399902344e-06, -0.24054300785064697, 0.0, -7.62939453125e-06, -0.013916969299316406, -0.0002536773681640625, -0.028083952143788338, -1.9073486328125e-06, -0.0051212310791015625, -4.76837158203125e-05, -8.20159912109375e-05, -2.300739288330078e-05], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.52587587002376}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 19, 125, "minion", "<EOS>", 205, 7, 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in copy.copy(game.other_player.minions):\n            if minion is not self.target:\n                lightwarden.summon(player, game.other_player, len(game.\n                    other_player.minions))\n        targets.append(self.target)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -1.1072616577148438, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.543231964111328e-05, 0.0, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -0.0002079010009765625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.1552734375e-05, -3.814697265625e-06, -2.1338462829589844e-05, -3.5881785152014345e-05, -0.1745891571044922, -2.288818359375e-05, -0.00067901611328125, -6.67572021484375e-05, -5.7220458984375e-06, -4.57763671875e-05, -0.0004901885986328125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -9.429454803466797e-05, -1.1920928244535389e-07, -2.5987612389144488e-05, -1.1920928244535389e-07, -0.5304075479507446, 0.0, -3.814697265625e-06, -0.0013885498046875, -0.0001621246337890625, -0.02412205934524536, -1.9073486328125e-06, -0.009190559387207031, -2.6702880859375e-05, -7.82012939453125e-05, -7.867813110351562e-06, -0.4169178009033203, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.014919519424438477, -5.483625955093885e-06, -1.3576993942260742, -0.0001468658447265625, -0.0039539337158203125, 0.0, -0.020811080932617188, 0.0, -0.0006275177001953125, -2.3841855067985307e-07, -0.0129852294921875, 0.0, -9.5367431640625e-06, -0.000118255615234375, 0.0, -0.04791831970214844, -5.7220458984375e-05, -0.034252166748046875, 0.0, -0.0021190643310546875, -1.9669532775878906e-05, -0.013434410095214844, 0.0, -0.00699415011331439, -1.9073486328125e-06, -0.0006198883056640625, -0.40634822845458984, -0.000118255615234375, -0.0018138885498046875, -0.0001201629638671875, -0.03277873992919922, -2.47955322265625e-05, -0.24489402770996094, -1.33514404296875e-05, -8.0108642578125e-05, -0.04099559783935547, -9.1552734375e-05, -0.0627899169921875, -2.47955322265625e-05, -0.0034580230712890625, 0.0, -0.0004291534423828125, 0.0, -0.0002918243408203125, 0.0, -0.0014820098876953125, -0.0010366439819335938, -1.1444091796875e-05, -0.0005741119384765625, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, -0.012594223022460938, 0.0, -0.9759055376052856, -2.3841855067985307e-07, -0.07531452178955078, 0.0, -0.0001678466796875, -0.11822223663330078, -1.9073486328125e-06, -0.006346702575683594, 0.0, -0.03566932678222656, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.1677846908569336, -1.1920928244535389e-07, -0.02289295196533203, 0.0, -0.5290956497192383, -0.1518993377685547, -2.47955322265625e-05, -8.20159912109375e-05, -0.0007073879241943359, -5.960462772236497e-07, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.3786945343017578, -0.000278472900390625, -0.0022735595703125, 0.0, -0.1437511444091797, -0.00010323524475097656, -0.0011053085327148438, 0.0, -0.0008223491022363305, 0.0, -0.009918212890625, -4.00543212890625e-05, -0.0001468658447265625, 0.0, -4.38690185546875e-05, 0.0, -0.03468513488769531, 0.0, -0.006796836853027344, -1.71661376953125e-05, -0.5948286056518555, 0.0, -3.814697265625e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.40970325469970703, 0.0, -0.4696063995361328, 0.0, -0.0013427734375, 0.0], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"test": {"comparators": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}], "left": {"id": "minion", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "lightwarden", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}]}, {"value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "append"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.748975102369265}, {"choice_history": [55, 124, 221, 63, 103, "Cone", "Of", "Cold", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Cone", " ", "of", " ", "Cold", "<EOS>", "4", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "4", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 19, 125, "minion", "<EOS>", 205, 7, 208, 29, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "lightwarden", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>"], "inferred_code": "class ConeOfCold(SpellCard):\n\n    def __init__(self):\n        super().__init__('Cone of Cold', 4, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(4, self)\n        for minion in copy.copy(game.other_player.minions):\n            if minion is not self.target:\n                lightwarden.summon(player, game.other_player, len(game.\n                    other_player.minions))\n        targets.extend(game.other_player.hero)\n", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -1.52587890625e-05, -0.0002040863037109375, -4.57763671875e-05, -0.00010406429646536708, -0.00017368733824696392, -0.1939285844564438, -0.003357504727318883, -4.9591064453125e-05, -4.00543212890625e-05, -1.1444091796875e-05, -0.0001678466796875, -1.0251998901367188e-05, 0.0, -0.008264541625976562, -0.001361846923828125, -2.86102294921875e-05, -0.00016675988445058465, -0.0001614093780517578, -5.2094459533691406e-05, -0.0006085634231567383, -4.6610701247118413e-05, -1.9073486328125e-06, -4.565619019558653e-05, 0.0, -0.7644997835159302, 0.0, -0.0020598173141479492, 0.0, -0.00067901611328125, -5.91278076171875e-05, -7.62939453125e-06, -3.814697265625e-06, -2.86102294921875e-05, 0.0, -0.0001068115234375, -3.814697265625e-06, -3.063678741455078e-05, -3.814697265625e-06, -0.039205312728881836, -2.47955322265625e-05, -0.0004520416259765625, -5.7220458984375e-06, -5.733966827392578e-05, 0.0, -2.86102294921875e-05, -0.0001163482666015625, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -3.933906555175781e-06, 0.0, 0.0, -2.2172915123519488e-05, -2.9802317840221804e-06, -1.1072616577148438, -9.5367431640625e-06, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -1.52587890625e-05, -7.62939453125e-06, -5.543231964111328e-05, 0.0, -3.62396240234375e-05, 0.0, -7.62939453125e-06, -0.0002079010009765625, -1.9073486328125e-06, -4.9591064453125e-05, 0.0, -9.1552734375e-05, -3.814697265625e-06, -2.1338462829589844e-05, -3.5881785152014345e-05, -0.1745891571044922, -2.288818359375e-05, -0.00067901611328125, -6.67572021484375e-05, -5.7220458984375e-06, -4.57763671875e-05, -0.0004901885986328125, -1.9073486328125e-06, -8.20159912109375e-05, 0.0, -9.429454803466797e-05, -1.1920928244535389e-07, -2.5987612389144488e-05, -1.1920928244535389e-07, -0.5304075479507446, 0.0, -3.814697265625e-06, -0.0013885498046875, -0.0001621246337890625, -0.02412205934524536, -1.9073486328125e-06, -0.009190559387207031, -2.6702880859375e-05, -7.82012939453125e-05, -7.867813110351562e-06, -0.4169178009033203, -4.00543212890625e-05, -1.52587890625e-05, 0.0, -0.014919519424438477, -5.483625955093885e-06, -1.3576993942260742, -0.0001468658447265625, -0.0039539337158203125, 0.0, -0.020811080932617188, 0.0, -0.0006275177001953125, -2.3841855067985307e-07, -0.0129852294921875, 0.0, -9.5367431640625e-06, -0.000118255615234375, 0.0, -0.04791831970214844, -5.7220458984375e-05, -0.034252166748046875, 0.0, -0.0021190643310546875, -1.9669532775878906e-05, -0.013434410095214844, 0.0, -0.00699415011331439, -1.9073486328125e-06, -0.0006198883056640625, -0.40634822845458984, -0.000118255615234375, -0.0018138885498046875, -0.0001201629638671875, -0.03277873992919922, -2.47955322265625e-05, -0.24489402770996094, -1.33514404296875e-05, -8.0108642578125e-05, -0.04099559783935547, -9.1552734375e-05, -0.0627899169921875, -2.47955322265625e-05, -0.0034580230712890625, 0.0, -0.0004291534423828125, 0.0, -0.0002918243408203125, 0.0, -0.0014820098876953125, -0.0010366439819335938, -1.1444091796875e-05, -0.0005741119384765625, -1.9073486328125e-06, -1.9073486328125e-06, -8.0108642578125e-05, -0.012594223022460938, 0.0, -0.9759055376052856, -2.3841855067985307e-07, -0.07531452178955078, 0.0, -0.0001678466796875, -0.11822223663330078, -1.9073486328125e-06, -0.006346702575683594, 0.0, -0.03566932678222656, -1.9073486328125e-06, -0.000156402587890625, 0.0, -0.1677846908569336, -1.1920928244535389e-07, -0.02289295196533203, 0.0, -0.5290956497192383, -0.1518993377685547, -2.47955322265625e-05, -8.20159912109375e-05, -0.0007073879241943359, -5.960462772236497e-07, -3.814697265625e-06, -9.5367431640625e-06, -5.7220458984375e-06, -0.3786945343017578, -0.000278472900390625, -0.0022735595703125, 0.0, -0.1437511444091797, -0.00010323524475097656, -0.0011053085327148438, 0.0, -0.0008223491022363305, 0.0, -0.009918212890625, -4.00543212890625e-05, -0.0001468658447265625, 0.0, -4.38690185546875e-05, 0.0, -0.03468513488769531, 0.0, -0.006796836853027344, -1.71661376953125e-05, -0.8456144332885742, 0.0, -2.47955322265625e-05, -9.5367431640625e-06, -1.33514404296875e-05, -0.3423948287963867, -0.0004482269287109375, -0.0025272369384765625, -7.62939453125e-06, -0.017551422119140625, -7.367134094238281e-05, -0.28506457805633545, 0.0, -0.25832292437553406, -1.9073486328125e-06], "model_output": {"body": [{"name": "ConeOfCold", "body": [{"_type": "Template3", "hole0": "Cone of Cold", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 4, "hole3": "target_func", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"test": {"comparators": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}], "left": {"id": "minion", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "lightwarden", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}]}, {"value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "extend"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -10.025529537860827}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -0.001194000244140625, -21.244035720825195], "model_output": {"body": [], "_type": "Module"}, "score": -21.24523162841797}]}
{"gold_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(Taunt()), Buff\n            (ChangeAttack(1)), Buff(ChangeHealth(1))]), MinionSelector(\n            Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 180, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -0.13831615447998047, -3.000363349914551, -0.0006394749507308006, -0.0005762516520917416, -0.0128556489944458, -9.941973257809877e-05, -5.2809715270996094e-05, -9.179115295410156e-05, -0.006451725494116545, 0.0, -0.21056056022644043, -2.50339189733495e-06, -0.06976838409900665, -7.152531907195225e-06, -0.043813467025756836, -0.000102996826171875, -8.344646857949556e-07, -0.05428886413574219, -7.62939453125e-06, -0.00041547542787157, 0.0, -0.00020883241086266935, 0.0], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Defender of Argus", "hole1": 4, "hole5": "PlayerSelector", "hole3": "Draw", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.6425085008087024}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 181, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(MinionSelector(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -0.13831615447998047, -2.853644847869873, -0.001379134482704103, -0.00015783289563842118, -0.08157169818878174, -8.70227740961127e-05, -5.173683166503906e-05, -4.220008850097656e-05, -0.014763951301574707, 0.0, -0.14356756210327148, -4.768370445162873e-07, -0.5423352718353271, -0.01354062557220459, -3.933898824470816e-06, -0.00407564640045166, -0.004972577095031738, -3.2186455882765586e-06, -0.013378143310546875, -0.0007381439208984375, 0.0, -0.003070831298828125, 0.0, -9.5367431640625e-06, 0.0, -0.001635909080505371, -1.728534698486328e-05, 0.0, -9.918212890625e-05, 0.0, -0.62604820728302, 0.0, -0.002666473388671875, -1.9073486328125e-06, -0.0009521245956420898, -0.00011372564040357247, -1.4305104514278355e-06, -0.0012569427490234375, -3.814697265625e-06, -1.072882923836005e-06, 0.0, -1.2278502254048362e-05, 0.0], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Defender of Argus", "hole1": 4, "hole5": "MinionSelector", "hole3": "MinionSelector", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.5524060755157905}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 183, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Kill", "<EOS>", "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            MinionSelector(IsType(MINION_TYPE.MURLOC)), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -0.13831615447998047, -1.894507884979248, -2.539125671319198e-05, -0.0006698321085423231, -0.0004924535751342773, -0.0001481744257034734, -6.484983896370977e-05, -0.0004353523254394531, -0.0010745525360107422, -4.768370445162873e-07, -0.23865973949432373, -9.417517503607087e-06, -0.9356834888458252, -2.3841855067985307e-07, -0.0016362572787329555, -0.009760022163391113, -4.768360213347478e-06, -0.029000282287597656, -0.0007266998291015625, -0.0002040863037109375, -7.62939453125e-06, 0.0, -0.8368454575538635, -0.002474546432495117, -1.1920928244535389e-07, -0.0007266998291015625, -0.008213043212890625, 0.0, -7.62939453125e-06, 0.0, -0.06596960872411728, -0.00038111209869384766, -0.0001119375228881836, -0.000156402587890625, -1.33514404296875e-05, 0.0, -3.24249267578125e-05, 0.0, -0.0006394386291503906, -7.390974587906385e-06, -0.7038624286651611, -0.00012242794036865234, -1.9073486328125e-05, -3.62396240234375e-05, -0.0006899762083776295, -3.850459688692354e-05, -1.9073486328125e-06, -0.03205299377441406, -3.814697265625e-06, -7.390945029328577e-06, 0.0, -2.3364824301097542e-05, 0.0], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Defender of Argus", "hole1": 4, "hole5": "MinionSelector", "hole3": "Kill", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.007750211690841}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", "Self", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(IsType(MINION_TYPE.MECH))))),\n            BothPlayer()]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -0.13831615447998047, -1.2251520156860352, -0.026316005736589432, -0.0013681279961019754, -0.04352748394012451, -0.0003951787657570094, -4.243848889018409e-05, -1.7523756469017826e-05, -0.27588629722595215, -1.2993727978027891e-05, -0.012847406789660454, -0.0003319433890283108, -0.01120379101485014, -0.0015676134498789907, -0.0002727508544921875, -0.029837608337402344, -0.0011730194091796875, -0.0003528594970703125, -0.007747650146484375, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -0.03286251053214073, -1.4901076610840391e-05, -0.000202178955078125, -0.0038213729858398438, -3.814697265625e-06, -0.0003070831298828125, -9.5367431640625e-06, -0.3715173900127411, -0.325614869594574, -0.0001277923583984375, -0.0039768218994140625, -0.0005855560302734375, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.7941798567771912, -8.344649540958926e-05, -2.86102294921875e-05, -0.000560760498046875, -4.1961669921875e-05, -0.3300074636936188, -0.04584991931915283, -0.035164833068847656, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.0008028617594391108, -1.919269561767578e-05, -4.768370445162873e-07, -0.33216094970703125, -0.12671375274658203, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.20375145971775055, -0.0003637075424194336, -2.1457668481161818e-05, -0.0003814697265625, -5.91278076171875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0004603862762451172, -2.861022494471399e-06, -0.9160176515579224, -5.638597212964669e-05, -0.8439598083496094, -4.38690185546875e-05, -0.02810881845653057, -0.0001819133758544922, -3.814697265625e-06, -0.028843283653259277, -1.3709068298339844e-05, -2.419927841401659e-05, -0.00591278076171875, -4.1961669921875e-05, -0.0004941190127283335, -5.960462772236497e-07, -0.000500075810123235, -2.741813204920618e-06, -0.14258038997650146, -3.623903467087075e-05, -0.005504608154296875, -7.43865966796875e-05, -0.00014495849609375, 0.0], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Defender of Argus", "hole4": [{"elts": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "List"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Give", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.462781019151095}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Defender", " ", "of", " ", "Argus", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", "Self", "Selector", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(IsType(MINION_TYPE.MURLOC)))\n            )), BothPlayer()]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -0.13831615447998047, -1.2251520156860352, -0.026316005736589432, -0.0013681279961019754, -0.04352748394012451, -0.0003951787657570094, -4.243848889018409e-05, -1.7523756469017826e-05, -0.27588629722595215, -1.2993727978027891e-05, -0.012847406789660454, -0.0003319433890283108, -0.01120379101485014, -0.0015676134498789907, -0.0002727508544921875, -0.029837608337402344, -0.0011730194091796875, -0.0003528594970703125, -0.007747650146484375, -4.76837158203125e-05, -3.0517578125e-05, 0.0, -0.03286251053214073, -1.4901076610840391e-05, -0.000202178955078125, -0.0038213729858398438, -3.814697265625e-06, -0.0003070831298828125, -9.5367431640625e-06, -0.3715173900127411, -0.325614869594574, -0.0001277923583984375, -0.0039768218994140625, -0.0005855560302734375, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -0.7941798567771912, -8.344649540958926e-05, -2.86102294921875e-05, -0.000560760498046875, -4.1961669921875e-05, -0.3300074636936188, -0.04584991931915283, -0.035164833068847656, -0.00016021728515625, -7.62939453125e-06, 0.0, -0.0008028617594391108, -1.919269561767578e-05, -4.768370445162873e-07, -0.33216094970703125, -0.12671375274658203, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.20375145971775055, -0.0003637075424194336, -2.1457668481161818e-05, -0.0003814697265625, -5.91278076171875e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -0.0004603862762451172, -2.861022494471399e-06, -1.3773328065872192, -2.181529998779297e-05, -0.2881813049316406, -5.91278076171875e-05, -0.02172284945845604, -0.00013434886932373047, -1.9073486328125e-06, -0.2550032138824463, -1.7642974853515625e-05, -2.026544461841695e-05, -0.0067081451416015625, -4.76837158203125e-05, -0.0006593652651645243, -3.576278118089249e-07, -0.00033329511643387377, -2.2649765014648438e-06, -0.07389545440673828, -2.777542977128178e-05, -0.0065975189208984375, -8.7738037109375e-05, -0.000377655029296875, 0.0], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Defender of Argus", "hole4": [{"elts": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "List"}], "hole1": 4, "hole5": "SelfSelector", "hole3": "Give", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.521467244622983}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(IsType(MINION_TYPE.MECH))))),\n            BothPlayer()]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7985466718673706, -0.00013005732034798712, -1.9073486328125e-05, -0.0016803741455078125, -2.86102294921875e-05, -0.3103601038455963, -0.08302199840545654, -0.017769813537597656, -0.0002346038818359375, -7.62939453125e-06, 0.0, -0.0007554198382422328, -1.919269561767578e-05, -4.768370445162873e-07, -0.33109092712402344, -0.10824108123779297, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.18737730383872986, -0.00035190582275390625, -2.121925172104966e-05, -0.000370025634765625, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0004642009735107422, -2.861022494471399e-06, -0.9207842350006104, -5.650517778121866e-05, -0.7007808685302734, -4.1961669921875e-05, -0.026802409440279007, -0.0002237558364868164, -3.814697265625e-06, -0.3491191864013672, -7.62939453125e-06, -0.00727999210357666, -1.9669532775878906e-05, 0.0, -0.12654495239257812, 0.0, -1.2993723430554383e-05, -1.1920928244535389e-07, -2.5510489649605006e-05, -1.1920928244535389e-07], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.689327368490588}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 39, 130, "2", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(IsType(MINION_TYPE.MURLOC)))\n            )), BothPlayer()]), 2))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7985466718673706, -0.00013005732034798712, -1.9073486328125e-05, -0.0016803741455078125, -2.86102294921875e-05, -0.3103601038455963, -0.08302199840545654, -0.017769813537597656, -0.0002346038818359375, -7.62939453125e-06, 0.0, -0.0007554198382422328, -1.919269561767578e-05, -4.768370445162873e-07, -0.33109092712402344, -0.10824108123779297, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.18737730383872986, -0.00035190582275390625, -2.121925172104966e-05, -0.000370025634765625, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0004642009735107422, -2.861022494471399e-06, -1.3573400974273682, -2.181529998779297e-05, -0.2636880874633789, -5.91278076171875e-05, -0.018972035497426987, -0.00016701221466064453, -1.9073486328125e-06, -0.6833324432373047, -9.5367431640625e-06, -0.00865606963634491, -6.103515625e-05, -0.029308319091796875, -4.9591064453125e-05, -0.00037758323014713824, -1.1920928244535389e-07, -0.00021098865545354784, -3.576278118089249e-07, -0.00792204961180687, -1.62123869813513e-05, -0.00812530517578125, -0.0002040863037109375, -0.0008220672607421875, 0.0], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"n": 2, "_type": "Num"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.936969493131599}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 49, 174, "adjacent", "+1/+1", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Count(MinionSelector(IsType(MINION_TYPE.MECH), BothPlayer())))),\n            Buff(ChangeHealth(Count(MinionSelector(adjacent+1/+1(),\n            EnemyPlayer()))))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7782925367355347, -0.0005202985485084355, -0.0002155303955078125, -0.001850128173828125, -0.003192901611328125, -7.62939453125e-06, 0.0, -0.0012183571234345436, -4.220008850097656e-05, -8.344646857949556e-07, -0.1309814453125, -1.0808353424072266, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.40830713510513306, -0.0022902435157448053, -8.285035437438637e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0013377666473388672, -3.218649908376392e-06, -0.7643747329711914, -3.981589543400332e-05, -0.0001506805419921875, -5.340576171875e-05, -0.00018763536354526877, -0.00038182735443115234, -1.71661376953125e-05, -0.003398895263671875, -7.62939453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.6064094305038452, -6.544491043314338e-05, -0.0002079010009765625, -0.0007457733154296875, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.02872447483241558, -0.23097187280654907, 0.0, -0.000637054443359375, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.44842076301574707, -0.0003136311424896121, -0.00016021728515625, -0.0008544921875, -0.0012073516845703125, -9.5367431640625e-06, 0.0, -0.000939546967856586, -4.6133995056152344e-05, -4.768370445162873e-07, -0.1555767059326172, -0.22700023651123047, -1.33514404296875e-05, -0.8810980319976807, -0.5606393814086914, -0.16297206282615662, -0.0003566741943359375, -1.9073486328125e-06, -0.5235166549682617, -6.830683560110629e-05, -0.0001455545425415039, -0.0046138763427734375, 0.0, -0.005817770957946777, -0.00010108929564012215, -5.960462772236497e-07, -0.0027256011962890625, -1.9073486328125e-06, -7.521810766775161e-05, -1.1920928244535389e-07, -6.270223093451932e-05, -1.1563301086425781e-05], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"args": [{"hole0": "adjacent+1/+1", "_type": "Template38"}, {"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.739735077301319}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(IsType(MINION_TYPE.MECH))))),\n            Buff(ChangeHealth(Attribute('attack', MinionSelector(IsType(\n            MINION_TYPE.MURLOC)))))]), BothPlayer()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7985466718673706, -0.00013005732034798712, -1.9073486328125e-05, -0.0016803741455078125, -2.86102294921875e-05, -0.3103601038455963, -0.08302199840545654, -0.017769813537597656, -0.0002346038818359375, -7.62939453125e-06, 0.0, -0.0007554198382422328, -1.919269561767578e-05, -4.768370445162873e-07, -0.33109092712402344, -0.10824108123779297, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.18737730383872986, -0.00035190582275390625, -2.121925172104966e-05, -0.000370025634765625, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0004642009735107422, -2.861022494471399e-06, -0.9207842350006104, -5.650517778121866e-05, -0.7146625518798828, -3.0517578125e-05, -1.1444091796875e-05, 0.0, -0.76521897315979, -2.610662704682909e-05, -0.0001850128173828125, -0.00131988525390625, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -0.12367027997970581, -0.2268735021352768, -1.1920928244535389e-07, -0.0007038116455078125, -4.1961669921875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.6954923272132874, -4.112720489501953e-05, -3.4332275390625e-05, -0.0005397796630859375, -2.09808349609375e-05, -0.30577149987220764, -0.08461868762969971, -0.14701080322265625, -0.000225067138671875, -7.62939453125e-06, 0.0, -0.0007802178151905537, -1.537799835205078e-05, -4.768370445162873e-07, -0.3762550354003906, -0.09255409240722656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.18482249975204468, -0.0003402233123779297, -1.7166135876323096e-05, -0.000457763671875, -5.14984130859375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0004546642303466797, -2.861022494471399e-06, -1.3731709718704224, -2.181529998779297e-05, -3.814697265625e-06, -0.0001735687255859375, -0.12383031845092773, -0.0013009309768676758, -9.5367431640625e-06, -0.22186756134033203, -2.6702880859375e-05, -0.0006694956100545824, -2.1457672119140625e-06, -0.0008226438658311963, -9.775161743164062e-06, -0.00576472282409668, -4.4584237912204117e-05, -0.029313087463378906, -0.0001373291015625, -0.0009593963623046875, -1.9073486328125e-06], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -12.958976949742478}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Count(MinionSelector(IsType(MINION_TYPE.MECH), BothPlayer())))),\n            Buff(ChangeHealth(Count(MinionSelector(IsType(MINION_TYPE.MECH),\n            BothPlayer()))))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7782925367355347, -0.0005202985485084355, -0.0002155303955078125, -0.001850128173828125, -0.003192901611328125, -7.62939453125e-06, 0.0, -0.0012183571234345436, -4.220008850097656e-05, -8.344646857949556e-07, -0.1309814453125, -1.0808353424072266, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.40830713510513306, -0.0022902435157448053, -8.285035437438637e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0013377666473388672, -3.218649908376392e-06, -0.7643747329711914, -3.981589543400332e-05, -0.0001506805419921875, -5.340576171875e-05, -0.00018763536354526877, -0.00038182735443115234, -1.71661376953125e-05, -0.003398895263671875, -7.62939453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.6064094305038452, -6.544491043314338e-05, -0.0002079010009765625, -0.0007457733154296875, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.02872447483241558, -0.23097187280654907, 0.0, -0.000637054443359375, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.44842076301574707, -0.0003136311424896121, -0.00016021728515625, -0.0008544921875, -0.0012073516845703125, -9.5367431640625e-06, 0.0, -0.000939546967856586, -4.6133995056152344e-05, -4.768370445162873e-07, -0.1555767059326172, -1.7147111892700195, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.4239139258861542, -0.0025465446524322033, -4.363053812994622e-05, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -0.001471400260925293, -3.3378591979271732e-06, -0.7760003805160522, -4.470347266760655e-05, -0.0001926422119140625, -6.866455078125e-05, -0.00018978113075718284, -0.00033795833587646484, -1.52587890625e-05, -0.6523227691650391, -7.62939453125e-06, -0.010316014289855957, -2.5510787963867188e-05, -1.1920928244535389e-07, -0.1354961395263672, -1.9073486328125e-06, -2.121902070939541e-05, -1.1920928244535389e-07, -2.9802020435454324e-05, -3.933906555175781e-06], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -13.088395308159086}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Attribute('attack', MinionSelector(IsType(MINION_TYPE.MECH))))),\n            Buff(ChangeHealth(Attribute('attack', MinionSelector(IsType(\n            MINION_TYPE.MECH)))))]), BothPlayer()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7985466718673706, -0.00013005732034798712, -1.9073486328125e-05, -0.0016803741455078125, -2.86102294921875e-05, -0.3103601038455963, -0.08302199840545654, -0.017769813537597656, -0.0002346038818359375, -7.62939453125e-06, 0.0, -0.0007554198382422328, -1.919269561767578e-05, -4.768370445162873e-07, -0.33109092712402344, -0.10824108123779297, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.18737730383872986, -0.00035190582275390625, -2.121925172104966e-05, -0.000370025634765625, -5.340576171875e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0004642009735107422, -2.861022494471399e-06, -0.9207842350006104, -5.650517778121866e-05, -0.7146625518798828, -3.0517578125e-05, -1.1444091796875e-05, 0.0, -0.76521897315979, -2.610662704682909e-05, -0.0001850128173828125, -0.00131988525390625, -5.7220458984375e-06, -8.20159912109375e-05, 0.0, -0.12367027997970581, -0.2268735021352768, -1.1920928244535389e-07, -0.0007038116455078125, -4.1961669921875e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.6954923272132874, -4.112720489501953e-05, -3.4332275390625e-05, -0.0005397796630859375, -2.09808349609375e-05, -0.30577149987220764, -0.08461868762969971, -0.14701080322265625, -0.000225067138671875, -7.62939453125e-06, 0.0, -0.0007802178151905537, -1.537799835205078e-05, -4.768370445162873e-07, -0.3762550354003906, -0.09255409240722656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.18482249975204468, -0.0003402233123779297, -1.7166135876323096e-05, -0.000457763671875, -5.14984130859375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0004546642303466797, -2.861022494471399e-06, -0.90577232837677, -5.6624387070769444e-05, -2.09808349609375e-05, -7.62939453125e-05, -0.46906113624572754, -0.003002166748046875, -1.9073486328125e-05, -0.5264892578125, -1.9073486328125e-06, -1.8834867660189047e-05, 0.0, -3.65968699043151e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -13.105405656634517}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Count(MinionSelector(IsType(MINION_TYPE.MECH), BothPlayer())))),\n            Buff(ChangeHealth(Attribute('attack', MinionSelector(IsType(\n            MINION_TYPE.MURLOC)))))]), BothPlayer()))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7782925367355347, -0.0005202985485084355, -0.0002155303955078125, -0.001850128173828125, -0.003192901611328125, -7.62939453125e-06, 0.0, -0.0012183571234345436, -4.220008850097656e-05, -8.344646857949556e-07, -0.1309814453125, -1.0808353424072266, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.40830713510513306, -0.0022902435157448053, -8.285035437438637e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0013377666473388672, -3.218649908376392e-06, -0.7643747329711914, -3.981589543400332e-05, -0.0001506805419921875, -5.340576171875e-05, -0.00018763536354526877, -0.00038182735443115234, -1.71661376953125e-05, -0.003398895263671875, -7.62939453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.6064094305038452, -6.544491043314338e-05, -0.0002079010009765625, -0.0007457733154296875, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.02872447483241558, -0.23097187280654907, 0.0, -0.000637054443359375, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.4574835300445557, -5.6743621826171875e-05, -2.6702880859375e-05, -0.0004749298095703125, -1.9073486328125e-05, -0.27664098143577576, -0.10270428657531738, -0.12900161743164062, -0.00019073486328125, -5.7220458984375e-06, 0.0, -0.0008988280314952135, -1.728534698486328e-05, -4.768370445162873e-07, -0.3842506408691406, -0.1055755615234375, 0.0, -1.9073486328125e-06, 0.0, -0.17289981245994568, -0.0003497600555419922, -1.9192693798686378e-05, -0.00046539306640625, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0004527568817138672, -2.861022494471399e-06, -1.3648425340652466, -2.181529998779297e-05, -3.814697265625e-06, -0.0001697540283203125, -0.12420237064361572, -0.0013657808303833008, -9.5367431640625e-06, -0.2161397933959961, -2.47955322265625e-05, -0.0006568677490577102, -2.1457672119140625e-06, -0.0008089456823654473, -9.775161743164062e-06, -0.00573420524597168, -4.684921441366896e-05, -0.029219627380371094, -0.0001392364501953125, -0.0009593963623046875, -1.9073486328125e-06], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -13.1389578592755}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Count(MinionSelector(IsType(MINION_TYPE.MECH), BothPlayer())))),\n            Buff(ChangeHealth(Attribute('attack', MinionSelector(IsType(\n            MINION_TYPE.MECH)))))]), BothPlayer()))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7782925367355347, -0.0005202985485084355, -0.0002155303955078125, -0.001850128173828125, -0.003192901611328125, -7.62939453125e-06, 0.0, -0.0012183571234345436, -4.220008850097656e-05, -8.344646857949556e-07, -0.1309814453125, -1.0808353424072266, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.40830713510513306, -0.0022902435157448053, -8.285035437438637e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0013377666473388672, -3.218649908376392e-06, -0.7643747329711914, -3.981589543400332e-05, -0.0001506805419921875, -5.340576171875e-05, -0.00018763536354526877, -0.00038182735443115234, -1.71661376953125e-05, -0.003398895263671875, -7.62939453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.6064094305038452, -6.544491043314338e-05, -0.0002079010009765625, -0.0007457733154296875, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.02872447483241558, -0.23097187280654907, 0.0, -0.000637054443359375, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.4574835300445557, -5.6743621826171875e-05, -2.6702880859375e-05, -0.0004749298095703125, -1.9073486328125e-05, -0.27664098143577576, -0.10270428657531738, -0.12900161743164062, -0.00019073486328125, -5.7220458984375e-06, 0.0, -0.0008988280314952135, -1.728534698486328e-05, -4.768370445162873e-07, -0.3842506408691406, -0.1055755615234375, 0.0, -1.9073486328125e-06, 0.0, -0.17289981245994568, -0.0003497600555419922, -1.9192693798686378e-05, -0.00046539306640625, -5.53131103515625e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.0004527568817138672, -2.861022494471399e-06, -0.9103957414627075, -5.459782914840616e-05, -2.09808349609375e-05, -7.2479248046875e-05, -0.48900628089904785, -0.00305938720703125, -1.9073486328125e-05, -0.523402214050293, -1.9073486328125e-06, -1.871566018962767e-05, 0.0, -3.635845860117115e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -13.32069025885928}, {"choice_history": [55, 124, 221, 63, 103, "Defender", "Of", "Argus", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Defender", " ", "of", " ", "Argus", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Attack", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Change", "Health", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 39, 130, "2", "<EOS>", 72, 145, "2", "<EOS>", "3", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DefenderOfArgus(MinionCard):\n\n    def __init__(self):\n        super().__init__('Defender of Argus', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(\n            Count(MinionSelector(IsType(MINION_TYPE.MECH), BothPlayer())))),\n            Buff(ChangeHealth(Count(MinionSelector(IsType(MINION_TYPE.MECH),\n            BothPlayer()))))]), 2))\n\n    def create_minion(self, player):\n        return Minion(2, 3, taunt=True)\n", "score_history": [-1.1444091796875e-05, 0.0, -5.7220458984375e-06, -5.7220458984375e-05, -0.000148773193359375, -0.00015281491505447775, -0.0008421981474384665, -0.017964644357562065, -0.0677475854754448, -5.7220458984375e-06, -3.24249267578125e-05, -1.1444091796875e-05, -5.364403477869928e-06, -0.00032639503479003906, -1.9311904907226562e-05, -2.288818359375e-05, -0.016269683837890625, -7.62939453125e-06, -6.0080987168475986e-05, -8.463859558105469e-06, 0.0, -3.62396240234375e-05, 0.0, -0.0001279045536648482, -2.3841855067985307e-07, -2.09808349609375e-05, -3.8708295822143555, -2.47955322265625e-05, 0.0, -0.000171661376953125, -5.14984130859375e-05, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0003843056329060346, -2.7060508728027344e-05, -0.0001511573645984754, -2.861022494471399e-06, -4.9591064453125e-05, -8.0108642578125e-05, -3.814697265625e-05, -9.179073458653875e-06, -3.004073914780747e-05, -0.00013029429828748107, -0.00015652179718017578, -0.009916186332702637, -0.0031137466430664062, -5.7220458984375e-06, 0.0, -0.0014703143388032913, -1.3470649719238281e-05, 0.0, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -5.841255187988281e-05, -4.136561983614229e-05, -0.023389577865600586, 0.0, 0.0, -9.5367431640625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -6.198883056640625e-06, -7.748586540401448e-06, -0.0015510320663452148, -1.9073486328125e-06, -0.39834022521972656, -0.011078834533691406, 0.0, -0.0022755861282348633, -5.960462772236497e-07, -0.0001583099365234375, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -3.6716461181640625e-05, -1.1920928244535389e-07, -0.000392913818359375, -0.037474632263183594, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -0.0005585587350651622, -0.001002192497253418, -9.1552734375e-05, -0.0037384033203125, -1.1444091796875e-05, -0.008193016052246094, -0.04551124572753906, -0.0003337860107421875, -2.47955322265625e-05, 0.0, -0.013128644786775112, -3.945756907342002e-05, -0.0001239776611328125, -0.02145099639892578, -9.5367431640625e-06, -0.0001220703125, -1.9073486328125e-06, -0.08282262086868286, -0.06262260675430298, -3.814697265625e-06, -0.011667251586914062, -0.0001316070556640625, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.7782925367355347, -0.0005202985485084355, -0.0002155303955078125, -0.001850128173828125, -0.003192901611328125, -7.62939453125e-06, 0.0, -0.0012183571234345436, -4.220008850097656e-05, -8.344646857949556e-07, -0.1309814453125, -1.0808353424072266, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.40830713510513306, -0.0022902435157448053, -8.285035437438637e-05, -3.814697265625e-06, -4.38690185546875e-05, -5.340576171875e-05, -7.62939453125e-06, 0.0, -0.0013377666473388672, -3.218649908376392e-06, -0.7643747329711914, -3.981589543400332e-05, -0.0001506805419921875, -5.340576171875e-05, -0.00018763536354526877, -0.00038182735443115234, -1.71661376953125e-05, -0.003398895263671875, -7.62939453125e-05, -1.52587890625e-05, -1.9073486328125e-06, -0.6064094305038452, -6.544491043314338e-05, -0.0002079010009765625, -0.0007457733154296875, -1.9073486328125e-06, -0.000125885009765625, 0.0, -0.02872447483241558, -0.23097187280654907, 0.0, -0.000637054443359375, -4.00543212890625e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.44842076301574707, -0.0003136311424896121, -0.00016021728515625, -0.0008544921875, -0.0012073516845703125, -9.5367431640625e-06, 0.0, -0.000939546967856586, -4.6133995056152344e-05, -4.768370445162873e-07, -0.1555767059326172, -1.7147111892700195, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -0.4239139258861542, -0.0025465446524322033, -4.363053812994622e-05, -3.814697265625e-06, -3.814697265625e-05, -5.7220458984375e-05, -9.5367431640625e-06, 0.0, -0.001471400260925293, -3.3378591979271732e-06, -0.7760003805160522, -4.470347266760655e-05, -0.0001926422119140625, -6.866455078125e-05, -0.00018978113075718284, -0.00033795833587646484, -1.52587890625e-05, -0.8531284332275391, -5.7220458984375e-06, -0.00977759063243866, -0.000171661376953125, -0.1636667251586914, -6.866455078125e-05, -0.00021419604308903217, -2.2649765014648438e-06, -0.00100183323957026, -3.600119816837832e-05, -0.054774485528469086, -0.00012623908696696162, -0.0135955810546875, -0.000255584716796875, -0.0002765655517578125, -1.9073486328125e-06], "model_output": {"body": [{"name": "DefenderOfArgus", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Defender of Argus", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeAttack", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ChangeHealth", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"n": 2, "_type": "Num"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -13.387273600017373}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.1444091796875e-05, 0.0, -22.10531234741211], "model_output": {"body": [], "_type": "Module"}, "score": -22.105323791503906}]}
{"gold_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.EPIC, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, buffs=[Buff(Windfury())])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -0.06927871704101562, -0.0001888275146484375, -0.10377675294876099, -7.641038246219978e-05, -0.0001220703125, -1.9073486328125e-06, -0.17332696914672852, 0.0, -1.52587890625e-05, -0.00041866302490234375, -3.814697265625e-06, -0.00014507770538330078, -1.1920928244535389e-07, 0.0, -0.0001125335693359375, 0.0, -0.000141143798828125, -0.00019073486328125, -2.6702880859375e-05, -0.0001049041748046875, -0.04599952697753906, -1.9073486328125e-05, -5.7220458984375e-06, -0.000241517394897528, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.0009679895592853427, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.0419459231197834, -3.5643577575683594e-05], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.656631749644923}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_minion(self, player):\n        return Weapon(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -0.06927871704101562, -0.0001888275146484375, -0.10377675294876099, -7.641038246219978e-05, -0.0001220703125, -1.9073486328125e-06, -2.058379650115967, 0.0, -3.814697265625e-06, -0.000354766845703125, -3.814697265625e-06, -6.902217864990234e-05, -1.1920928244535389e-07, 0.0, -7.43865966796875e-05, -1.1920928244535389e-07, -0.0001068115234375, -0.0001850128173828125, -3.0517578125e-05, -8.96453857421875e-05, -0.07373237609863281, -1.9073486328125e-05, -5.7220458984375e-06, -0.0002516499371267855, -3.814697265625e-06, -2.86102294921875e-05, -1.52587890625e-05, 0.0, -0.0006717753130942583, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.04233669117093086, -3.7670135498046875e-05], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.569281163317541}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "5", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=5)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -0.06927871704101562, -0.0001888275146484375, -2.3315255641937256, -2.8610140361706726e-05, -0.0022411346435546875, -7.62939453125e-06, -0.08426415920257568, 0.0, -2.288818359375e-05, -0.0004596710205078125, -1.9073486328125e-06, -0.00011849403381347656, -1.1920928244535389e-07, 0.0, -0.000133514404296875, 0.0, -0.00016021728515625, -0.00020599365234375, -2.47955322265625e-05, -0.0001087188720703125, -0.027067184448242188, -2.09808349609375e-05, -5.7220458984375e-06, -0.0002448551822453737, -3.814697265625e-06, -2.6702880859375e-05, -1.52587890625e-05, 0.0, -0.0008934552897699177, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.04283744469285011, -3.7670135498046875e-05], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 5, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.7793602056803977}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -2.769918441772461, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.0161285400390625, -2.3841855067985307e-07, -0.07611465454101562, -0.08329486846923828, -0.0001583099365234375, -0.08466106653213501, -8.046303264563903e-05, -0.0001125335693359375, -1.9073486328125e-06, -0.15539109706878662, 0.0, -1.52587890625e-05, -0.00040912628173828125, -3.814697265625e-06, -0.00014507770538330078, -1.1920928244535389e-07, 0.0, -0.000110626220703125, 0.0, -0.0001373291015625, -0.0001888275146484375, -2.6702880859375e-05, -0.0001010894775390625, -0.048816680908203125, -1.9073486328125e-05, -5.7220458984375e-06, -0.00023972924100235105, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.0009472821839153767, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.04185590147972107, -3.5643577575683594e-05], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.2987119533767952}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "2", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 2)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -0.06927871704101562, -0.0001888275146484375, -0.10377675294876099, -7.641038246219978e-05, -0.0001220703125, -1.9073486328125e-06, -0.17332696914672852, 0.0, -1.52587890625e-05, -0.00041866302490234375, -3.814697265625e-06, -0.00014507770538330078, -1.1920928244535389e-07, 0.0, -0.0001125335693359375, 0.0, -0.000141143798828125, -0.00019073486328125, -2.6702880859375e-05, -0.0001049041748046875, -0.04599952697753906, -1.9073486328125e-05, -5.7220458984375e-06, -0.000241517394897528, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.0009679895592853427, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -3.2292234897613525, 0.0], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8438736727089164}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "DRUID", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 101, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.DRUID,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -3.925952911376953, -2.3841855067985307e-07, -1.9073486328125e-06, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -2.3841855067985307e-07, -0.057621002197265625, -1.1920928244535389e-07, -0.11821746826171875, -0.10491275787353516, -0.0001773834228515625, -0.09142115712165833, -8.868777513271198e-05, -0.0001068115234375, -1.9073486328125e-06, -0.14738893508911133, 0.0, -1.71661376953125e-05, -0.000415802001953125, -3.814697265625e-06, -0.00014317035675048828, -1.1920928244535389e-07, 0.0, -0.0001087188720703125, 0.0, -0.000141143798828125, -0.00019073486328125, -2.6702880859375e-05, -0.0001010894775390625, -0.045806884765625, -1.9073486328125e-05, -5.7220458984375e-06, -0.0002446167927701026, -3.814697265625e-06, -2.86102294921875e-05, -1.71661376953125e-05, 0.0, -0.0009471671655774117, -1.1920928244535389e-07, -1.9073486328125e-06, 0.0, -0.04172918573021889, -3.7550926208496094e-05], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "DRUID"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.555637036811696}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "create_weapon", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 69, 132, 14, 102, 19, 125, "Weapon", "<EOS>", 209, 39, 130, "2", "<EOS>", 39, 130, "8", "<EOS>", 217, 54, 197, "windfury", "<EOS>", 20, 126, "True", "<EOS>", 52, 158, "6", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def create_weapon(self, player):\n        return Weapon(2, 8, windfury=True, enrage=[Aura(ChangeAttack(6),\n            SelfSelector())])\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -0.06927871704101562, -0.0001888275146484375, -0.10377675294876099, -7.641038246219978e-05, -0.0001220703125, -1.9073486328125e-06, -0.17332696914672852, 0.0, -1.52587890625e-05, -0.00041866302490234375, -3.814697265625e-06, -0.00014507770538330078, -1.1920928244535389e-07, 0.0, -0.0001125335693359375, 0.0, -0.000141143798828125, -0.00019073486328125, -2.6702880859375e-05, -0.0001049041748046875, -3.134169578552246, -2.47955322265625e-05, 0.0, -0.014468789100646973, -1.9073486328125e-06, -9.5367431640625e-05, -3.814697265625e-06, 0.0, -0.0002834190090652555, 0.0, -3.814697265625e-06, 0.0, -0.07789405435323715, -2.384185791015625e-06, -0.06033897399902344, -0.009637832641601562, -9.5367431640625e-06, -0.25940144062042236, 0.0, -0.000308990478515625, -1.9073486328125e-05, -8.58306884765625e-05, -6.29425048828125e-05, -0.6920566558837891, -0.009812355041503906, -0.11057045310735703, -3.814697265625e-06], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_weapon", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"n": 2, "_type": "Num"}, {"n": 8, "_type": "Num"}], "keywords": [{"value": {"value": true, "_type": "NameConstant"}, "arg": "windfury", "_type": "keyword"}, {"hole0": 6, "_type": "Template20"}], "func": {"id": "Weapon", "_type": "Name"}, "_type": "Call"}, "_type": "Return"}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.936620560661595}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 51, 152, "<UNK>", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "2", "<EOS>", "Character", "Selector", "<EOS>", 209, 38, 127, "Null", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, effects=[\n            Effect(<UNK>(), ActionTag(Damage(2), CharacterSelector(Null,\n            BothPlayer())))])\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -2.4729366302490234, -0.06417465209960938, 0.0, -0.6050667762756348, -4.291534423828125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, 0.0, -0.17253494262695312, 0.0, -0.5438938140869141, 0.0, -0.22650432586669922, -0.1706066131591797, -0.004683852195739746, -0.0004589557647705078, -0.11386692523956299, -1.1920928244535389e-07, -8.7738037109375e-05, -0.049675941467285156, -4.00543212890625e-05, -0.07260245829820633, -3.576278118089249e-07, -0.02970576286315918, -0.0001798868179321289, -3.063678741455078e-05, -0.0004978179931640625, -0.0002193450927734375, -0.0001010894775390625, -2.241134461655747e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -0.02675020694732666, -1.1801719665527344e-05, 0.0, -0.021352767944335938, -4.38690185546875e-05, -1.597404116182588e-05, -1.1920928244535389e-07, -0.5881525278091431, 0.0], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}, {"_type": "Template12", "hole0": "<UNK>", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "BothPlayer", "_type": "Template38"}], "hole1": "Damage", "hole3": "CharacterSelector", "hole2": [{"n": 2, "_type": "Num"}]}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.294622832282968}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(2()), Buff(2()\n            )]), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -3.085695266723633, 0.0, -0.0005153417587280273, 0.0, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0003337860107421875, 0.0, -0.0003204345703125, -0.1891002655029297, 0.0, -3.4332275390625e-05, 0.0, -0.0560758113861084, -0.0014554262161254883, -0.011030197143554688, -0.029735565185546875, -0.0001735687255859375, -0.03430652618408203, -0.2968597412109375, -0.0007915496826171875, -2.288818359375e-05, 0.0, -0.008661627769470215, -0.0002521276182960719, -0.0005168914794921875, -0.06709480285644531, -0.0001068115234375, -0.3212859630584717, -0.0002965926832985133, -0.001190185546875, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, -0.04028737545013428, -8.225440979003906e-06, -0.0001354217529296875, -0.16455364227294922, -1.33514404296875e-05, -0.23571570217609406, -0.00023388852423522621, -0.0001811981201171875, -9.5367431640625e-06, -0.12466728687286377, -7.05718994140625e-05, 0.0, -0.05006122589111328, -1.9073486328125e-06, -1.8954269762616605e-05, -2.3841855067985307e-07, -0.527259111404419, -9.536738616588991e-07], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 8, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.468758286119716}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 51, 152, "<UNK>", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "2", "<EOS>", "Character", "Selector", "<EOS>", 209, 38, 127, "Null", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON, effects=[\n            Effect(<UNK>(), ActionTag(Damage(2), CharacterSelector(Null,\n            BothPlayer())))])\n\n    def create_minion(self, player):\n        return Minion(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -2.4729366302490234, -0.06417465209960938, 0.0, -0.6050667762756348, -4.291534423828125e-06, -5.7220458984375e-06, 0.0, -2.86102294921875e-05, 0.0, -0.17253494262695312, 0.0, -0.5438938140869141, 0.0, -0.22650432586669922, -0.1706066131591797, -0.004683852195739746, -0.0004589557647705078, -0.11386692523956299, -1.1920928244535389e-07, -8.7738037109375e-05, -0.049675941467285156, -4.00543212890625e-05, -0.07260245829820633, -3.576278118089249e-07, -0.02970576286315918, -0.0001798868179321289, -3.063678741455078e-05, -0.0004978179931640625, -0.0002193450927734375, -0.0001010894775390625, -2.241134461655747e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -0.02675020694732666, -1.1801719665527344e-05, 0.0, -0.021352767944335938, -4.38690185546875e-05, -1.597404116182588e-05, -1.1920928244535389e-07, -0.8193454742431641, -4.768370445162873e-07], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}, {"_type": "Template12", "hole0": "<UNK>", "hole4": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "BothPlayer", "_type": "Template38"}], "hole1": "Damage", "hole3": "CharacterSelector", "hole2": [{"n": 2, "_type": "Num"}]}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 8, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.525816255554034}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -3.085695266723633, 0.0, -0.0005153417587280273, 0.0, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0003337860107421875, 0.0, -0.0003204345703125, -0.1891002655029297, 0.0, -3.4332275390625e-05, 0.0, -0.0560758113861084, -0.0014554262161254883, -0.011030197143554688, -0.029735565185546875, -0.0001735687255859375, -0.03430652618408203, -1.4116859436035156, -0.000553131103515625, -0.006777403876185417, -3.814697265625e-06, -0.0014896392822265625, -0.0002040863037109375, -0.004160229116678238, -3.814697265625e-06, -0.00257110595703125, -9.5367431640625e-06, -0.021820425987243652, -5.9604644775390625e-06, 0.0, -0.0938272476196289, -1.1444091796875e-05, -3.8623758882749826e-05, 0.0, -0.6458720564842224, 0.0], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.817430126740426}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "2", "<EOS>", 49, 174, "Hero", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "2", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(2()), Buff(2()\n            )]), HeroSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 2)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -3.085695266723633, 0.0, -0.0005153417587280273, 0.0, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0003337860107421875, 0.0, -0.0003204345703125, -0.1891002655029297, 0.0, -3.4332275390625e-05, 0.0, -0.0560758113861084, -0.0014554262161254883, -0.011030197143554688, -0.029735565185546875, -0.0001735687255859375, -0.03430652618408203, -0.2968597412109375, -0.0007915496826171875, -2.288818359375e-05, 0.0, -0.008661627769470215, -0.0002521276182960719, -0.0005168914794921875, -0.06709480285644531, -0.0001068115234375, -0.3212859630584717, -0.0002965926832985133, -0.001190185546875, -4.76837158203125e-05, -1.71661376953125e-05, 0.0, -0.04028737545013428, -8.225440979003906e-06, -0.0001354217529296875, -0.16455364227294922, -1.33514404296875e-05, -0.23571570217609406, -0.00023388852423522621, -0.0001811981201171875, -9.5367431640625e-06, -0.12466728687286377, -7.05718994140625e-05, 0.0, -0.05006122589111328, -1.9073486328125e-06, -1.8954269762616605e-05, -2.3841855067985307e-07, -0.8977895379066467, 0.0], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "2", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "HeroSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 2, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.839287758948082}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "2", "<EOS>", "8", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(2\n            )), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(2, 8)\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -3.085695266723633, 0.0, -0.0005153417587280273, 0.0, -0.0001678466796875, -1.1444091796875e-05, -5.7220458984375e-06, 0.0, -0.0003337860107421875, 0.0, -0.0003204345703125, -0.1891002655029297, 0.0, -3.4332275390625e-05, 0.0, -0.0560758113861084, -0.0014554262161254883, -0.011030197143554688, -0.029735565185546875, -0.0001735687255859375, -0.03430652618408203, -1.4116859436035156, -0.000553131103515625, -0.006777403876185417, -3.814697265625e-06, -0.0014896392822265625, -0.0002040863037109375, -0.004160229116678238, -3.814697265625e-06, -0.00257110595703125, -9.5367431640625e-06, -0.021820425987243652, -5.9604644775390625e-06, 0.0, -0.0938272476196289, -1.1444091796875e-05, -3.8623758882749826e-05, 0.0, -0.7473466396331787, 0.0], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 8, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.918904709889382}, {"choice_history": [55, 124, 221, 63, 103, "Doomhammer", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Doomhammer", "<EOS>", 39, 130, "5", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 53, 175, "2", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Doomhammer(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Doomhammer', 5, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, overload=2)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 2):\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -3.814697265625e-06, -2.86102294921875e-05, -2.86102294921875e-05, -5.674201020156033e-05, -0.00046907662181183696, -3.814697265625e-06, -1.1444091796875e-05, -9.5367431640625e-06, -0.0004769563674926758, -0.0002747774124145508, -1.9073486328125e-06, -0.003246307373046875, -0.00083160400390625, 0.0, -1.5020257706055418e-05, -1.1920928244535389e-07, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -8.416175842285156e-05, -7.748603820800781e-06, -0.0022382736206054688, -0.0001316070556640625, -5.7220458984375e-06, 0.0, -7.05718994140625e-05, -9.918212890625e-05, 0.0, -3.814697265625e-06, -7.62939453125e-06, -1.1920928244535389e-07, -7.62939453125e-06, -2.09808349609375e-05, 0.0, -5.340576171875e-05, -0.0001373291015625, -3.814697265625e-06, -5.960462772236497e-07, -0.0005075931549072266, -1.9073486328125e-06, 0.0, -0.010603785514831543, -2.0265558760002023e-06, -1.9073486328125e-06, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -0.0001964569091796875, 0.0, -0.10366165637969971, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -9.5367431640625e-06, -1.1920928244535389e-07, -0.0069637298583984375, -2.3841855067985307e-07, -0.08907222747802734, -0.06927871704101562, -0.0001888275146484375, -0.10377675294876099, -7.641038246219978e-05, -0.0001220703125, -1.9073486328125e-06, -3.8007044792175293, 0.0, -9.5367431640625e-06, -4.57763671875e-05, -1.9073486328125e-06, -2.288818359375e-05, 0.0, 0.0, -0.000782012939453125, 0.0, -1.9073486328125e-06, -4.017353057861328e-05, -2.2649765014648438e-06, -0.20166015625, -0.0001277923583984375, -1.9073486328125e-06, 0.0, -0.0001964569091796875, -0.000324249267578125, -3.814697265625e-06, -4.1961669921875e-05, 0.0, -1.1920928955078125e-05, 0.0, -2.491474151611328e-05, -7.152555099310121e-07, -1.9073486328125e-06, -8.58306884765625e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -9.1552734375e-05, 0.0, -1.52587890625e-05, -1.7404525351594202e-05, -0.14529895782470703, -7.62939453125e-06, -3.814697265625e-05, 0.0, -0.7094168663024902, -9.536738616588991e-07, -5.7220458984375e-06, -9.5367431640625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.0003266334533691406, -2.622604142743512e-06, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -0.0003477277350611985, -1.3470649719238281e-05, -0.006333351135253906, 0.0, -0.059334684163331985, 0.0, -0.31484413146972656, -0.00170135498046875, -7.62939453125e-06, -0.000621795654296875, -0.013599395751953125, -4.57763671875e-05, 0.0, -0.04004383087158203, 0.0, -0.5935409069061279, -4.768370445162873e-07, -0.003508925437927246, 0.0, -2.09808349609375e-05, -0.008055686950683594, -1.9073486328125e-06, -0.0004940032958984375, 0.0, -0.08528900146484375, 0.0, -0.0019283294677734375, -9.536738616588991e-07, -0.000820159912109375, -2.86102294921875e-05, -1.9073486328125e-06, -1.9073486328125e-06, -0.0020269155502319336, -2.3841855067985307e-07, -2.288818359375e-05, -3.814697265625e-06, -1.9073486328125e-06, -0.0245361328125, 0.0, -0.000247955322265625, -5.841255187988281e-06, -0.0005002021789550781, -1.9073486328125e-06], "model_output": {"body": [{"name": "Doomhammer", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Doomhammer", "_type": "Str"}, {"n": 5, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"hole0": 2, "_type": "Template39"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.410200324034896}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.6702880859375e-05, -1.1444091796875e-05, -22.67906379699707], "model_output": {"body": [], "_type": "Module"}, "score": -22.679101943969727}]}
{"gold_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.silence()\n        self.target.damage(player.effective_spell_damage(1), self)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.09102761745452881, -0.0001964569091796875, -0.4454050064086914, -0.0001544952392578125, 0.0, -1.9073486328125e-06, -0.0002689361572265625, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.004364490509033203, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0032863616943359375, -0.000118255615234375, -5.662630428560078e-06, -1.5258672647178173e-05, -7.43865966796875e-05, -1.9073486328125e-06, -0.0001430511474609375, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.1130126942571152}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -1.1977715492248535, -0.000324249267578125, -0.0015513896942138672, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -5.91278076171875e-05, -5.53131103515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.16433775424957275, -0.000186920166015625, -0.5513429641723633, -0.0001392364501953125, 0.0, -1.9073486328125e-06, -0.00018310546875, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.004441738128662109, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0034399032592773438, -0.0001125335693359375, -6.079853847040795e-06, -1.537788011773955e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014972686767578125, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "WARRIOR"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.9291638959712074}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -2.6302740573883057, -0.0001068115234375, -0.030332565307617188, -0.00128936767578125, 0.0, 0.0, -0.00037384033203125, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.007097840309143066, -3.933906555175781e-06, -3.814697265625e-06, -0.00301361083984375, -0.0001068115234375, -8.061657354119234e-06, -1.2636104656849056e-05, -5.91278076171875e-05, -1.9073486328125e-06, -0.00012874603271484375, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.240760006421617}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_enemy_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_enemy_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -1.1977715492248535, -0.000324249267578125, -0.0015513896942138672, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -5.91278076171875e-05, -5.53131103515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -2.0234436988830566, -0.00011444091796875, -0.034130096435546875, -0.001293182373046875, 0.0, 0.0, -0.0003223419189453125, 0.0, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.007454514503479004, -3.933906555175781e-06, -3.814697265625e-06, -0.0032405853271484375, -0.000102996826171875, -7.167587682488374e-06, -1.2755313036905136e-05, -5.7220458984375e-05, -1.9073486328125e-06, -0.0001316070556640625, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_enemy_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "WARRIOR"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.275050498955345}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -2.777341365814209, -1.9073486328125e-06, -0.0007616281509399414, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.340576171875e-05, -1.71661376953125e-05, -3.814697265625e-05, -0.07255411148071289, -0.0001850128173828125, -0.47461700439453125, -0.0001468658447265625, 0.0, -1.9073486328125e-06, -0.0002498626708984375, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.004334926605224609, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0032720565795898438, -0.00011444091796875, -6.497093636426143e-06, -1.5258672647178173e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014209747314453125, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "ROGUE"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.3388967741884628}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        player.draw()\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.09102761745452881, -0.0001964569091796875, -1.0260124206542969, -1.52587890625e-05, -0.00025451183319091797, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -0.818272590637207, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, 0.0, -2.86102294921875e-05, -0.000217437744140625, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -8.0108642578125e-05, -1.01327859738376e-05, -0.16683387756347656, -1.71661376953125e-05, -0.006809234619140625, -0.000324249267578125, -7.62939453125e-06, 0.0, -0.0012254714965820312, 0.0, -3.4332275390625e-05, 0.0, -2.491474151611328e-05, -1.1920928244535389e-07, -5.352497100830078e-05, -2.3841855067985307e-07, -0.029096484184265137, -5.7220458984375e-06, -5.7220458984375e-06, -0.018441200256347656, -0.0002079010009765625, -0.005163755267858505, 0.0, -0.022873878479003906, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.29184722900390625, -9.5367431640625e-06, -0.14563655853271484, -0.19748878479003906, -4.9591064453125e-05, -1.9073486328125e-06, -0.05489826202392578, 0.0, -0.22185707092285156, -4.172325134277344e-06, -0.0017567863687872887, -1.9073486328125e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.6690404893660826}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        player.draw()\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -1.1977715492248535, -0.000324249267578125, -0.0015513896942138672, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -5.91278076171875e-05, -5.53131103515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.16433775424957275, -0.000186920166015625, -0.8605289459228516, -1.52587890625e-05, -0.00026214122772216797, 0.0, -1.71661376953125e-05, -9.72747802734375e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -0.842015266418457, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.4332275390625e-05, 0.0, -2.09808349609375e-05, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -2.6702880859375e-05, 0.0, -2.86102294921875e-05, -0.000217437744140625, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -2.288818359375e-05, 0.0, -8.0108642578125e-05, -1.01327859738376e-05, -0.16753196716308594, -1.71661376953125e-05, -0.0067462921142578125, -0.000324249267578125, -7.62939453125e-06, 0.0, -0.0012235641479492188, 0.0, -3.4332275390625e-05, 0.0, -2.491474151611328e-05, -1.1920928244535389e-07, -5.352497100830078e-05, -2.3841855067985307e-07, -0.02911555767059326, -5.7220458984375e-06, -5.7220458984375e-06, -0.018439292907714844, -0.0002079010009765625, -0.005177456885576248, 0.0, -0.022886276245117188, -9.5367431640625e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.29408836364746094, -9.5367431640625e-06, -0.14524269104003906, -0.19653892517089844, -4.9591064453125e-05, -1.9073486328125e-06, -0.054668426513671875, 0.0, -0.21739482879638672, -4.172325134277344e-06, -0.0017542829737067223, -1.9073486328125e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.234272520413427}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -3.6622071266174316, 0.0, -0.0006396762328222394, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -7.62939453125e-06, -3.814697265625e-06, -5.91278076171875e-05, -6.103515625e-05, -1.71661376953125e-05, -5.340576171875e-05, -0.1075594425201416, -0.0001678466796875, -0.4828767776489258, -0.00016021728515625, 0.0, -1.9073486328125e-06, -0.0003337860107421875, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.004234790802001953, -2.0265579223632812e-06, -3.814697265625e-06, -0.0032014846801757812, -0.0001201629638671875, -5.573230737354606e-06, -1.5258672647178173e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014591217041015625, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "PALADIN"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.266844682022558}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.WARLOCK,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -3.993074893951416, 0.0, -0.01799631118774414, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -3.0517578125e-05, -5.7220458984375e-06, -3.814697265625e-06, -7.2479248046875e-05, -4.38690185546875e-05, -1.71661376953125e-05, -7.43865966796875e-05, -0.15942132472991943, -0.000213623046875, -0.4684333801269531, -0.0001506805419921875, 0.0, -1.9073486328125e-06, -0.0002040863037109375, 0.0, -7.62939453125e-06, 0.0, -1.52587890625e-05, 0.0, -0.004443645477294922, -2.0265579223632812e-06, -5.7220458984375e-06, -0.0033168792724609375, -0.00011444091796875, -5.990445060888305e-06, -1.537788011773955e-05, -7.2479248046875e-05, -1.9073486328125e-06, -0.00014495849609375, 0.0], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "WARLOCK"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.65273319972038}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in targets:\n            target.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(1, self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.09102761745452881, -0.0001964569091796875, -1.0260124206542969, -1.52587890625e-05, -0.00025451183319091797, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -1.105799674987793, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, 0.0, -0.0001125335693359375, -1.2397762475302443e-05, -0.00289154052734375, -7.62939453125e-06, -0.00051116943359375, -6.103515625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.006585121154785156, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.733966827392578e-05, -2.3841855067985307e-07, -0.02885901927947998, -5.841255187988281e-06, -5.7220458984375e-06, -0.0162200927734375, -0.0001583099365234375, -0.003376152366399765, 0.0, -0.03319835662841797, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.4227418899536133, -0.0014925003051757812, -1.52587890625e-05, -1.9073486328125e-06, -0.02850639820098877, -2.0861618395429105e-05, -0.33359718322753906, -1.9073486328125e-06, -0.0034093856811523438, -1.1444091796875e-05, -0.0002193450927734375, -0.0016040802001953125, -1.9073486328125e-06, -0.000148773193359375, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0010824203491210938, -1.9073486328125e-06, -0.5871689319610596, -2.7656173188006505e-05, -0.001314401626586914, 0.0, -3.814697265625e-06, -0.00229644775390625, -8.96453857421875e-05, -0.0013691153144463897, -4.947184061165899e-05, -0.0001735687255859375, -3.814697265625e-06, -0.006543159484863281, -2.0265579223632812e-06, -0.05731487274169922, -0.0008707046508789062, -0.0044384002685546875, -4.00543212890625e-05, -0.03423595428466797, 0.0, -0.0007190704345703125, 0.0, -0.03068065643310547, 0.0, -0.0001690387725830078, -7.867813110351562e-06, -0.0002040863037109375, -0.13013553619384766, -7.62939453125e-06, -0.00109100341796875, -4.00543212890625e-05, -0.000732421875, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, -0.07383537292480469, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.10934555530548096, -7.033347174001392e-06, -3.4332275390625e-05, -0.0016241073608398438, -1.9073486328125e-06, -0.00022125244140625, -6.29425048828125e-05, 0.0, 0.0, -0.002567291259765625, -3.814697265625e-06, -0.012912750244140625, 0.0, -0.04640388488769531, 0.0, -0.000102996826171875, -2.1457672119140625e-06, -0.04176950454711914, -3.814697265625e-06, -1.9073486328125e-05, -0.5179557800292969, -0.0007762908935546875, -0.009056854993104935, 0.0, -0.008871078491210938, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.362513814421575}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(1, self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.09102761745452881, -0.0001964569091796875, -1.0260124206542969, -1.52587890625e-05, -0.00025451183319091797, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -1.105799674987793, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, 0.0, -0.0001125335693359375, -1.2397762475302443e-05, -0.00289154052734375, -7.62939453125e-06, -0.00051116943359375, -6.103515625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.006585121154785156, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.733966827392578e-05, -2.3841855067985307e-07, -0.02885901927947998, -5.841255187988281e-06, -5.7220458984375e-06, -0.0162200927734375, -0.0001583099365234375, -0.003376152366399765, 0.0, -0.03319835662841797, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.4227418899536133, -0.0014925003051757812, -1.52587890625e-05, -1.9073486328125e-06, -0.02850639820098877, -2.0861618395429105e-05, -0.33359718322753906, -1.9073486328125e-06, -0.0034093856811523438, -1.1444091796875e-05, -0.0002193450927734375, -0.0016040802001953125, -1.9073486328125e-06, -0.000148773193359375, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0010824203491210938, -1.9073486328125e-06, -0.9126203060150146, -5.721893103327602e-05, -0.00021767616271972656, 0.0, -3.814697265625e-06, -0.003143310546875, -0.0001087188720703125, -0.00210363045334816, -4.374978016130626e-05, -0.000156402587890625, -3.814697265625e-06, -0.008000373840332031, -2.0265579223632812e-06, -0.05441474914550781, -0.0008707046508789062, -0.004169464111328125, -4.1961669921875e-05, -0.029989242553710938, 0.0, -0.000759124755859375, 0.0, -0.03087139129638672, 0.0, -0.00017762184143066406, -9.775161743164062e-06, -0.00020599365234375, -0.1304645538330078, -7.62939453125e-06, -0.0010433197021484375, -4.00543212890625e-05, -0.00074005126953125, -9.5367431640625e-06, -0.0003509521484375, -1.9073486328125e-06, -0.0688486099243164, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.1084824800491333, -7.033347174001392e-06, -3.4332275390625e-05, -0.0016565322875976562, -1.9073486328125e-06, -0.000225067138671875, -6.4849853515625e-05, 0.0, 0.0, -0.00258636474609375, -3.814697265625e-06, -0.01322174072265625, 0.0, -0.04638862609863281, 0.0, -0.0001049041748046875, -2.1457672119140625e-06, -0.042470455169677734, -3.814697265625e-06, -2.09808349609375e-05, -0.5252151489257812, -0.00078582763671875, -0.009075099602341652, 0.0, -0.008884429931640625, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.685544118938154}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in targets:\n            target.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.09102761745452881, -0.0001964569091796875, -1.0260124206542969, -1.52587890625e-05, -0.00025451183319091797, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -1.105799674987793, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, 0.0, -0.0001125335693359375, -1.2397762475302443e-05, -0.00289154052734375, -7.62939453125e-06, -0.00051116943359375, -6.103515625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.006585121154785156, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.733966827392578e-05, -2.3841855067985307e-07, -0.02885901927947998, -5.841255187988281e-06, -5.7220458984375e-06, -0.0162200927734375, -0.0001583099365234375, -0.003376152366399765, 0.0, -0.03319835662841797, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.4227418899536133, -0.0014925003051757812, -1.52587890625e-05, -1.9073486328125e-06, -0.02850639820098877, -2.0861618395429105e-05, -0.33359718322753906, -1.9073486328125e-06, -0.0034093856811523438, -1.1444091796875e-05, -0.0002193450927734375, -0.0016040802001953125, -1.9073486328125e-06, -0.000148773193359375, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0010824203491210938, -1.9073486328125e-06, -0.5871689319610596, -2.7656173188006505e-05, -0.001314401626586914, 0.0, -3.814697265625e-06, -0.00229644775390625, -8.96453857421875e-05, -0.0013691153144463897, -4.947184061165899e-05, -0.0001735687255859375, -3.814697265625e-06, -0.006543159484863281, -2.0265579223632812e-06, -0.05731487274169922, -0.0008707046508789062, -0.0044384002685546875, -4.00543212890625e-05, -0.03423595428466797, 0.0, -0.0007190704345703125, 0.0, -0.03068065643310547, 0.0, -0.0001690387725830078, -7.867813110351562e-06, -0.0002040863037109375, -0.13013553619384766, -7.62939453125e-06, -0.00109100341796875, -4.00543212890625e-05, -0.000732421875, -1.1444091796875e-05, -0.000362396240234375, -1.9073486328125e-06, -0.07383537292480469, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.10934555530548096, -7.033347174001392e-06, -3.4332275390625e-05, -0.0016241073608398438, -1.9073486328125e-06, -0.00022125244140625, -6.29425048828125e-05, 0.0, 0.0, -0.002567291259765625, -3.814697265625e-06, -0.012912750244140625, 0.0, -0.04640388488769531, 0.0, -0.000102996826171875, -2.1457672119140625e-06, -0.04176950454711914, -3.814697265625e-06, -1.9073486328125e-05, -0.9188461303710938, -1.33514404296875e-05, -0.00038041314110159874, -4.2200059397146106e-05, -9.5367431640625e-05, -3.814697265625e-06, -0.0013074874877929688, -2.0265579223632812e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.7465064542283955}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in targets:\n            target.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(1, self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -1.1977715492248535, -0.000324249267578125, -0.0015513896942138672, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -2.288818359375e-05, -7.62939453125e-06, -3.814697265625e-06, -5.91278076171875e-05, -5.53131103515625e-05, -1.71661376953125e-05, -4.38690185546875e-05, -0.16433775424957275, -0.000186920166015625, -0.8605289459228516, -1.52587890625e-05, -0.00026214122772216797, 0.0, -1.71661376953125e-05, -9.72747802734375e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -1.098628044128418, -1.71661376953125e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -0.000164031982421875, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, 0.0, -0.0001125335693359375, -1.2397762475302443e-05, -0.0028896331787109375, -7.62939453125e-06, -0.00051116943359375, -6.103515625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.006600379943847656, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.733966827392578e-05, -2.3841855067985307e-07, -0.028870463371276855, -5.841255187988281e-06, -5.7220458984375e-06, -0.016236305236816406, -0.0001583099365234375, -0.003384023904800415, 0.0, -0.03315448760986328, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.41579723358154297, -0.0014896392822265625, -1.52587890625e-05, -1.9073486328125e-06, -0.028578877449035645, -2.0861618395429105e-05, -0.3322582244873047, -1.9073486328125e-06, -0.003391265869140625, -1.1444091796875e-05, -0.0002193450927734375, -0.001605987548828125, -1.9073486328125e-06, -0.000148773193359375, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0010833740234375, -1.9073486328125e-06, -0.5874617099761963, -2.7656173188006505e-05, -0.0013124942779541016, 0.0, -3.814697265625e-06, -0.0022945404052734375, -8.96453857421875e-05, -0.0013695437228307128, -4.947184061165899e-05, -0.0001735687255859375, -3.814697265625e-06, -0.006545066833496094, -2.0265579223632812e-06, -0.05713081359863281, -0.0008716583251953125, -0.0044460296630859375, -4.00543212890625e-05, -0.034058570861816406, 0.0, -0.0007228851318359375, 0.0, -0.03085613250732422, 0.0, -0.0001690387725830078, -7.867813110351562e-06, -0.000202178955078125, -0.13013935089111328, -7.62939453125e-06, -0.0010890960693359375, -4.00543212890625e-05, -0.000732421875, -1.1444091796875e-05, -0.0003604888916015625, -1.9073486328125e-06, -0.0738677978515625, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.10935509204864502, -7.033347174001392e-06, -3.4332275390625e-05, -0.00162506103515625, -1.9073486328125e-06, -0.0002231597900390625, -6.29425048828125e-05, 0.0, 0.0, -0.0025634765625, -3.814697265625e-06, -0.012912750244140625, 0.0, -0.04638957977294922, 0.0, -0.000102996826171875, -2.1457672119140625e-06, -0.041780948638916016, -3.814697265625e-06, -1.9073486328125e-05, -0.5178718566894531, -0.0007762908935546875, -0.00905228964984417, 0.0, -0.008872032165527344, -1.9073486328125e-05, -1.52587890625e-05, -3.814697265625e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "target", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.891798211561721}, {"choice_history": [55, 124, 221, 63, 103, "Earth", "Shock", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Earth", " ", "Shock", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "1", "<EOS>", 37, 125, "self", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 19, 125, "targets", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>", 67, 111, 15, 104, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", 205, 7, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "index", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "1", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class EarthShock(SpellCard):\n\n    def __init__(self):\n        super().__init__('Earth Shock', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(1, self)\n        for minion in targets:\n            minion.damage(player.effective_spell_damage(1), self)\n        if self.target is not self.target.index:\n            self.target.damage(player.effective_spell_damage(1), self)\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -1.71661376953125e-05, -1.9073486328125e-06, -4.8993817472364753e-05, -0.0002602000313345343, -8.583032467868179e-06, -3.814697265625e-06, -5.340576171875e-05, -1.9073486328125e-06, -0.0004602670669555664, -2.4437820684397593e-05, -1.1444091796875e-05, -0.0027408599853515625, -0.0009479522705078125, -0.000110626220703125, -1.823891761887353e-05, -5.412101745605469e-05, -2.682209014892578e-05, 0.0, -2.3244192561833188e-05, -1.1920928244535389e-07, -0.5611758232116699, 0.0, -0.0016918182373046875, 0.0, -7.62939453125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-05, -7.62939453125e-06, -3.814697265625e-06, -6.103515625e-05, -5.14984130859375e-05, -1.71661376953125e-05, -5.14984130859375e-05, -0.09102761745452881, -0.0001964569091796875, -1.0260124206542969, -1.52587890625e-05, -0.00025451183319091797, 0.0, -1.9073486328125e-05, -9.34600830078125e-05, 0.0, -4.291534423828125e-06, 0.0, -1.33514404296875e-05, -1.1444091796875e-05, 0.0, -1.9073486328125e-06, -1.1444089977885596e-05, -1.311301275563892e-06, -1.105799674987793, -1.52587890625e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -1.33514404296875e-05, -7.62939453125e-06, -9.5367431640625e-06, 0.0, -2.6702880859375e-05, 0.0, -2.47955322265625e-05, -0.0001621246337890625, -5.7220458984375e-06, -1.52587890625e-05, 0.0, -3.0517578125e-05, 0.0, -0.0001125335693359375, -1.2397762475302443e-05, -0.00289154052734375, -7.62939453125e-06, -0.00051116943359375, -6.103515625e-05, -1.33514404296875e-05, -1.1444091796875e-05, -0.006585121154785156, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.5497207641601562e-05, -1.1920928244535389e-07, -5.733966827392578e-05, -2.3841855067985307e-07, -0.02885901927947998, -5.841255187988281e-06, -5.7220458984375e-06, -0.0162200927734375, -0.0001583099365234375, -0.003376152366399765, 0.0, -0.03319835662841797, -7.62939453125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.4227418899536133, -0.0014925003051757812, -1.52587890625e-05, -1.9073486328125e-06, -0.02850639820098877, -2.0861618395429105e-05, -0.33359718322753906, -1.9073486328125e-06, -0.0034093856811523438, -1.1444091796875e-05, -0.0002193450927734375, -0.0016040802001953125, -1.9073486328125e-06, -0.000148773193359375, -7.62939453125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0010824203491210938, -1.9073486328125e-06, -0.9126203060150146, -5.721893103327602e-05, -0.00021767616271972656, 0.0, -3.814697265625e-06, -0.003143310546875, -0.0001087188720703125, -0.00210363045334816, -4.374978016130626e-05, -0.000156402587890625, -3.814697265625e-06, -0.008000373840332031, -2.0265579223632812e-06, -0.05441474914550781, -0.0008707046508789062, -0.004169464111328125, -4.1961669921875e-05, -0.029989242553710938, 0.0, -0.000759124755859375, 0.0, -0.03087139129638672, 0.0, -0.00017762184143066406, -9.775161743164062e-06, -0.00020599365234375, -0.1304645538330078, -7.62939453125e-06, -0.0010433197021484375, -4.00543212890625e-05, -0.00074005126953125, -9.5367431640625e-06, -0.0003509521484375, -1.9073486328125e-06, -0.0688486099243164, -1.9073486328125e-06, -9.655952453613281e-06, -1.9073486328125e-06, -0.1084824800491333, -7.033347174001392e-06, -3.4332275390625e-05, -0.0016565322875976562, -1.9073486328125e-06, -0.000225067138671875, -6.4849853515625e-05, 0.0, 0.0, -0.00258636474609375, -3.814697265625e-06, -0.01322174072265625, 0.0, -0.04638862609863281, 0.0, -0.0001049041748046875, -2.1457672119140625e-06, -0.042470455169677734, -3.814697265625e-06, -2.09808349609375e-05, -0.907989501953125, -1.33514404296875e-05, -0.0003844513848889619, -4.231926504871808e-05, -9.5367431640625e-05, -3.814697265625e-06, -0.0012979507446289062, -2.0265579223632812e-06], "model_output": {"body": [{"name": "EarthShock", "body": [{"_type": "Template3", "hole0": "Earth Shock", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 1, "hole3": "target_func", "hole2": "HUNTER"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"id": "targets", "_type": "Name"}, "_type": "For", "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}]}, {"test": {"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "index"}], "left": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Compare", "ops": [{"_type": "IsNot"}]}, "body": [{"value": {"args": [{"hole0": 1, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.051374249343965}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -23.194377899169922], "model_output": {"body": [], "_type": "Module"}, "score": -23.19438362121582}]}
{"gold_code": "class EyeForAnEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for an Eye', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, character, attacker, amount):\n        if character.is_hero():\n            character.player.opponent.hero.damage(amount, self)\n        super().reveal()\n\n    def activate(self, player):\n        player.bind('character_damaged', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_damaged', self._reveal)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.6119811534881592, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10039415955543518, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00048351287841796875, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0009832382202148438, -0.000125885009765625, -0.06071949005126953, -0.0001373291015625, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011539459228515625, 0.0, -1.9073486328125e-06, -0.04704475402832031, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.4632606506347656, -1.9073486328125e-06, -0.05626487731933594, 0.0, -0.00047969818115234375, 0.0, -0.6120281219482422, -5.960462772236497e-07, -0.46906840801239014, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09985101222991943, -0.0001087188720703125, -0.000156402587890625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.00201416015625, 0.0, -0.00110626220703125, -0.000148773193359375, -0.05931377410888672, -0.0001316070556640625, -2.288818359375e-05, -0.00024127960205078125, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.053076744079589844, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.5084962844848633, -1.9073486328125e-06, -0.04613685607910156, 0.0, -0.0005102157592773438, 0.0, -0.6314697265625, -5.960462772236497e-07, -0.46588385105133057, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-05, -0.09877193719148636, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000560760498046875, -1.9073486328125e-06, -0.0020151138305664062, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.962854452298075}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "Of", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class EyeOfEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.9233528971672058, -0.0007549524307250977, -0.01049181167036295, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.002402782440185547, -8.392333984375e-05, -1.1444091796875e-05, -0.04162406921386719, -0.022235870361328125, -0.000293731689453125, -8.201262971851975e-05, -0.00014913082122802734, -0.007839560508728027, -0.02515125274658203, -0.0014164448948577046, -7.62939453125e-06, -1.430509882993647e-06, -5.960446742392378e-06, -0.44300711154937744, 0.0, -0.00019073486328125, -9.5367431640625e-06, -0.7423983812332153, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008411407470703125, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012257575988769531, 0.0, -0.0012569427490234375, -1.71661376953125e-05, 0.0, 0.0, -0.00292205810546875, -7.62939453125e-06, 0.0, -0.1886425018310547, -1.9073486328125e-06, -0.07663917541503906, -3.814697265625e-06, -0.0005426406860351562, 0.0, -0.25785326957702637, -7.152555099310121e-07, -0.608778715133667, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10051599144935608, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0004825592041015625, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0010938644409179688, -0.0001239776611328125, -0.060776710510253906, -0.0001373291015625, -2.09808349609375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011444091796875, 0.0, -1.9073486328125e-06, -0.04726982116699219, 0.0, -0.0006465911865234375, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.46317386627197266, -1.9073486328125e-06, -0.05627632141113281, 0.0, -0.00047969818115234375, 0.0, -0.6114969253540039, -5.960462772236497e-07, -0.468774676322937, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09983861446380615, -0.0001087188720703125, -0.000156402587890625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.00201416015625, 0.0, -0.0012302398681640625, -0.0001468658447265625, -0.059378623962402344, -0.0001316070556640625, -2.09808349609375e-05, -0.0002422332763671875, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.05342578887939453, 0.0, -0.000644683837890625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.5086555480957031, -1.9073486328125e-06, -0.046054840087890625, 0.0, -0.0005102157592773438, 0.0, -0.6311378479003906, -5.960462772236497e-07, -0.46550536155700684, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-05, -0.09874726086854935, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000560760498046875, -1.9073486328125e-06, -0.0020151138305664062, 0.0], "model_output": {"body": [{"name": "EyeOfEye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.157862673188106}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.7894198894500732, -5.7220458984375e-06, -2.288818359375e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.10975939780473709, -9.1552734375e-05, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005941390991210938, -1.9073486328125e-06, -0.002040863037109375, 0.0, -0.0010528564453125, -0.000148773193359375, -0.059612274169921875, -0.0001316070556640625, -2.288818359375e-05, -0.000240325927734375, -1.1444091796875e-05, -0.0001373291015625, 0.0, -1.9073486328125e-06, -0.055281639099121094, 0.0, -0.00063323974609375, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.4788331985473633, -1.9073486328125e-06, -0.054363250732421875, 0.0, -0.0004901885986328125, 0.0, -0.6186895370483398, -5.960462772236497e-07, -0.4683816432952881, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09944487363100052, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.0020151138305664062, 0.0, -0.0011053085327148438, -0.000148773193359375, -0.05932140350341797, -0.0001316070556640625, -2.288818359375e-05, -0.00024127960205078125, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.05301094055175781, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.5088520050048828, -1.9073486328125e-06, -0.04613685607910156, 0.0, -0.00051116943359375, 0.0, -0.631256103515625, -5.960462772236497e-07, -0.46607935428619385, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-05, -0.09877253323793411, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000560760498046875, -1.9073486328125e-06, -0.0020151138305664062, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.176410548255831}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.6119811534881592, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10039415955543518, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00048351287841796875, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0009832382202148438, -0.000125885009765625, -0.06071949005126953, -0.0001373291015625, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011539459228515625, 0.0, -1.9073486328125e-06, -0.04704475402832031, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.4632606506347656, -1.9073486328125e-06, -0.05626487731933594, 0.0, -0.00047969818115234375, 0.0, -0.6120281219482422, -5.960462772236497e-07, -0.46906840801239014, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09985101222991943, -0.0001087188720703125, -0.000156402587890625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.00201416015625, 0.0, -0.00110626220703125, -0.000148773193359375, -0.05931377410888672, -0.0001316070556640625, -2.288818359375e-05, -0.00024127960205078125, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.053076744079589844, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.9208850860595703, 0.0, -0.0012494325637817383, -1.0728830375228426e-06, -0.2112743854522705, -3.814697265625e-06, -0.0001010894775390625, -0.00012969970703125, -1.33514404296875e-05, -0.9663680195808411, -6.67572021484375e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0011930465698242188, 0.0, -0.0017652511596679688, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.311684369907368}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "Of", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class EyeOfEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.9233528971672058, -0.0007549524307250977, -0.01049181167036295, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.002402782440185547, -8.392333984375e-05, -1.1444091796875e-05, -0.04162406921386719, -0.022235870361328125, -0.000293731689453125, -8.201262971851975e-05, -0.00014913082122802734, -0.007839560508728027, -0.02515125274658203, -0.0014164448948577046, -7.62939453125e-06, -1.430509882993647e-06, -5.960446742392378e-06, -0.44300711154937744, 0.0, -0.00019073486328125, -9.5367431640625e-06, -0.7423983812332153, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008411407470703125, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012257575988769531, 0.0, -0.0012569427490234375, -1.71661376953125e-05, 0.0, 0.0, -0.00292205810546875, -7.62939453125e-06, 0.0, -0.1886425018310547, -1.9073486328125e-06, -0.07663917541503906, -3.814697265625e-06, -0.0005426406860351562, 0.0, -0.25785326957702637, -7.152555099310121e-07, -0.7932717800140381, -5.7220458984375e-06, -2.288818359375e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.11010713875293732, -9.1552734375e-05, -0.0002002716064453125, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0005931854248046875, -1.9073486328125e-06, -0.0020418167114257812, 0.0, -0.0011682510375976562, -0.000148773193359375, -0.05968284606933594, -0.0001316070556640625, -2.09808349609375e-05, -0.000240325927734375, -1.1444091796875e-05, -0.00013828277587890625, 0.0, -1.9073486328125e-06, -0.0556640625, 0.0, -0.000637054443359375, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.4787940979003906, -1.9073486328125e-06, -0.05433845520019531, 0.0, -0.0004901885986328125, 0.0, -0.6182327270507812, -5.960462772236497e-07, -0.46805453300476074, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09942568093538284, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.0020151138305664062, 0.0, -0.0012302398681640625, -0.0001468658447265625, -0.059386253356933594, -0.0001316070556640625, -2.09808349609375e-05, -0.0002422332763671875, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.053359031677246094, 0.0, -0.000644683837890625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.5090112686157227, -1.9073486328125e-06, -0.04605293273925781, 0.0, -0.00051116943359375, 0.0, -0.6309242248535156, -5.960462772236497e-07, -0.4656980037689209, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-05, -0.0987478569149971, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000560760498046875, -1.9073486328125e-06, -0.0020151138305664062, 0.0], "model_output": {"body": [{"name": "EyeOfEye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.378920140350715}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.6119811534881592, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10039415955543518, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00048351287841796875, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0009832382202148438, -0.000125885009765625, -0.06071949005126953, -0.0001373291015625, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011539459228515625, 0.0, -1.9073486328125e-06, -0.04704475402832031, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.9933910369873047, 0.0, -0.001221776008605957, -1.0728830375228426e-06, -0.20986294746398926, -3.814697265625e-06, -0.000102996826171875, -0.0001316070556640625, -1.33514404296875e-05, -0.9613861441612244, -6.4849853515625e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0012054443359375, 0.0, -0.0017652511596679688, 0.0, -0.0011568069458007812, -0.0001220703125, -0.057379722595214844, -0.0001277923583984375, -2.09808349609375e-05, -0.0002384185791015625, -9.5367431640625e-06, -0.000118255615234375, 0.0, -1.9073486328125e-06, -0.04792499542236328, 0.0, -0.0006504058837890625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.5054779052734375, -1.9073486328125e-06, -0.04551887512207031, 0.0, -0.0005130767822265625, 0.0, -0.6297541856765747, -5.960462772236497e-07, -0.4681288003921509, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-05, -0.09904921054840088, -0.000110626220703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005588531494140625, -1.9073486328125e-06, -0.00201416015625, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.418187141284932}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.6119811534881592, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10039415955543518, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00048351287841796875, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0009832382202148438, -0.000125885009765625, -0.06071949005126953, -0.0001373291015625, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011539459228515625, 0.0, -1.9073486328125e-06, -0.04704475402832031, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.4632606506347656, -1.9073486328125e-06, -0.05626487731933594, 0.0, -0.00047969818115234375, 0.0, -0.6120281219482422, -5.960462772236497e-07, -1.0026482343673706, -1.3470649719238281e-05, -2.47955322265625e-05, -8.392333984375e-05, -5.91278076171875e-05, -0.11733552068471909, -0.0001010894775390625, -1.33514404296875e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00044918060302734375, -1.9073486328125e-06, -0.0022878646850585938, 0.0, -0.0010290145874023438, -0.0001220703125, -0.06015586853027344, -0.000133514404296875, -2.09808349609375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011539459228515625, 0.0, -1.9073486328125e-06, -0.04725170135498047, 0.0, -0.0006389617919921875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.4919452667236328, -1.9073486328125e-06, -0.04811286926269531, 0.0, -0.0005006790161132812, 0.0, -0.6248780488967896, -5.960462772236497e-07, -0.4668099880218506, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.814697265625e-05, -0.09912359714508057, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000560760498046875, -1.9073486328125e-06, -0.00201416015625, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.488965056703478}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "Of", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class EyeOfEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.9233528971672058, -0.0007549524307250977, -0.01049181167036295, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.002402782440185547, -8.392333984375e-05, -1.1444091796875e-05, -0.04162406921386719, -0.022235870361328125, -0.000293731689453125, -8.201262971851975e-05, -0.00014913082122802734, -0.007839560508728027, -0.02515125274658203, -0.0014164448948577046, -7.62939453125e-06, -1.430509882993647e-06, -5.960446742392378e-06, -0.44300711154937744, 0.0, -0.00019073486328125, -9.5367431640625e-06, -0.7423983812332153, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008411407470703125, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012257575988769531, 0.0, -0.0012569427490234375, -1.71661376953125e-05, 0.0, 0.0, -0.00292205810546875, -7.62939453125e-06, 0.0, -0.1886425018310547, -1.9073486328125e-06, -0.07663917541503906, -3.814697265625e-06, -0.0005426406860351562, 0.0, -0.25785326957702637, -7.152555099310121e-07, -0.608778715133667, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10051599144935608, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.0004825592041015625, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0010938644409179688, -0.0001239776611328125, -0.060776710510253906, -0.0001373291015625, -2.09808349609375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011444091796875, 0.0, -1.9073486328125e-06, -0.04726982116699219, 0.0, -0.0006465911865234375, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.46317386627197266, -1.9073486328125e-06, -0.05627632141113281, 0.0, -0.00047969818115234375, 0.0, -0.6114969253540039, -5.960462772236497e-07, -0.468774676322937, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09983861446380615, -0.0001087188720703125, -0.000156402587890625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.00201416015625, 0.0, -0.0012302398681640625, -0.0001468658447265625, -0.059378623962402344, -0.0001316070556640625, -2.09808349609375e-05, -0.0002422332763671875, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.05342578887939453, 0.0, -0.000644683837890625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.9206438064575195, 0.0, -0.001248478889465332, -1.0728830375228426e-06, -0.21114277839660645, -3.814697265625e-06, -0.0001010894775390625, -0.00012969970703125, -1.33514404296875e-05, -0.9663863778114319, -6.67572021484375e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0011920928955078125, 0.0, -0.0017652511596679688, 0.0], "model_output": {"body": [{"name": "EyeOfEye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.506993951881384}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.7894198894500732, -5.7220458984375e-06, -2.288818359375e-05, -3.4332275390625e-05, -2.86102294921875e-05, -0.10975939780473709, -9.1552734375e-05, -0.0002002716064453125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005941390991210938, -1.9073486328125e-06, -0.002040863037109375, 0.0, -0.0010528564453125, -0.000148773193359375, -0.059612274169921875, -0.0001316070556640625, -2.288818359375e-05, -0.000240325927734375, -1.1444091796875e-05, -0.0001373291015625, 0.0, -1.9073486328125e-06, -0.055281639099121094, 0.0, -0.00063323974609375, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-06, -0.4788331985473633, -1.9073486328125e-06, -0.054363250732421875, 0.0, -0.0004901885986328125, 0.0, -0.6186895370483398, -5.960462772236497e-07, -0.4683816432952881, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09944487363100052, -0.0001087188720703125, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.0020151138305664062, 0.0, -0.0011053085327148438, -0.000148773193359375, -0.05932140350341797, -0.0001316070556640625, -2.288818359375e-05, -0.00024127960205078125, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.05301094055175781, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.9203481674194336, 0.0, -0.001248478889465332, -1.0728830375228426e-06, -0.21130776405334473, -3.814697265625e-06, -0.0001010894775390625, -0.00012969970703125, -1.33514404296875e-05, -0.96652752161026, -6.67572021484375e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0011930465698242188, 0.0, -0.0017652511596679688, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.5245563237523925}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.7631741762161255, -1.9073486328125e-06, -5.7220458984375e-06, -0.0008497238159179688, 0.0, -6.079673767089844e-06, 0.0, -1.9073486328125e-06, -0.012361526489257812, 0.0, -0.0012340545654296875, -1.71661376953125e-05, 0.0, 0.0, -0.0028972625732421875, -7.62939453125e-06, 0.0, -0.1884002685546875, -1.9073486328125e-06, -0.07698822021484375, -3.814697265625e-06, -0.0005445480346679688, 0.0, -0.2595345973968506, -7.152555099310121e-07, -0.6119811534881592, -1.1444091796875e-05, -4.76837158203125e-05, -5.340576171875e-05, -4.38690185546875e-05, -0.10039415955543518, -7.2479248046875e-05, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00048351287841796875, -1.9073486328125e-06, -0.002307891845703125, 0.0, -0.0009832382202148438, -0.000125885009765625, -0.06071949005126953, -0.0001373291015625, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011539459228515625, 0.0, -1.9073486328125e-06, -0.04704475402832031, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -3.0517578125e-05, -1.9073486328125e-06, -0.4632606506347656, -1.9073486328125e-06, -0.05626487731933594, 0.0, -0.00047969818115234375, 0.0, -0.6120281219482422, -5.960462772236497e-07, -0.46906840801239014, -1.9073486328125e-06, -1.9073486328125e-05, -6.67572021484375e-05, -3.62396240234375e-05, -0.09985101222991943, -0.0001087188720703125, -0.000156402587890625, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0005664825439453125, -1.9073486328125e-06, -0.00201416015625, 0.0, -0.00110626220703125, -0.000148773193359375, -0.05931377410888672, -0.0001316070556640625, -2.288818359375e-05, -0.00024127960205078125, -1.1444091796875e-05, -0.000133514404296875, 0.0, -1.9073486328125e-06, -0.053076744079589844, 0.0, -0.000640869140625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, -3.4332275390625e-05, -1.9073486328125e-06, -0.5084962844848633, -1.9073486328125e-06, -0.04613685607910156, 0.0, -0.0005102157592773438, 0.0, -0.6314697265625, -5.960462772236497e-07, -1.00869619846344, -1.3470649719238281e-05, -2.47955322265625e-05, -8.58306884765625e-05, -6.103515625e-05, -0.11759647727012634, -0.000102996826171875, -1.52587890625e-05, 0.0, -1.1444091796875e-05, -1.9073486328125e-06, -0.00044155120849609375, -1.9073486328125e-06, -0.0022907257080078125, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.52456393824616}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "1", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.6876641511917114, 0.0, -8.58306884765625e-05, -0.22038745880126953, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -1.9073486328125e-06, -0.15679025650024414, 0.0, -5.7220458984375e-06, -0.0069620609283447266, -1.8835005903383717e-05, -9.5367431640625e-05, -0.0026264190673828125, -0.0001430511474609375, -0.0663595199584961, -0.000133514404296875, -0.0001201629638671875, -0.0031681060791015625, -0.19589710235595703, -0.0006256103515625, -0.0022640228271484375, -4.00543212890625e-05, -0.003505706787109375, -2.8132995794294402e-05, -2.288818359375e-05, -0.08717632293701172, -0.00014495849609375, -0.04631614685058594, -2.6702880859375e-05, -0.004151344299316406, -3.814697265625e-06, -0.010676383972167969, -0.000133514404296875, -0.006930351257324219, 0.0, -0.003979682922363281, 0.0, -0.48488038778305054, -7.62939453125e-06, -0.026824951171875, -0.0005359649658203125, -0.023415565490722656, -0.0025281906127929688, -2.86102294921875e-05, -0.0071201324462890625, -3.24249267578125e-05, -0.09809160232543945, 0.0, -0.07815003395080566, -6.556507287314162e-06, -0.34667015075683594, -0.18382549285888672, -0.06552886962890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.0001373291015625, -5.14984130859375e-05, -0.005779266357421875, -2.09808349609375e-05, -0.07102584838867188, -3.814697265625e-05, -0.34027957916259766, -0.0001773834228515625, -0.39176368713378906, -0.021752357482910156, -0.1794360876083374, -0.000118255615234375, -0.03735470771789551, -2.3841855067985307e-07, -0.0036411616019904613, -5.602834789897315e-06, -0.014694570563733578, 0.0, -0.17611658573150635, -0.00014328956604003906, -0.026822861284017563, -1.7642974853515625e-05, -0.17226505279541016, -0.0026807785034179688, -0.00040435791015625, -0.0008280789479613304, 0.0, -0.00154876708984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.04627227783203125, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.009697198867797852, -1.1920928244535389e-07, -0.003475189208984375, 0.0, -0.000522613525390625, -2.6702880859375e-05, -0.0414276123046875, -1.1444091796875e-05, -2.47955322265625e-05, -0.0003566741943359375, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -1.52587890625e-05, -0.0024509429931640625, 0.0, -0.001735687255859375, -4.9591064453125e-05, 0.0, 0.0, -0.0001354217529296875, -9.5367431640625e-06, 0.0, -0.5180778503417969, -3.814697265625e-06, -0.016071319580078125, -1.9073486328125e-06, -0.000713348388671875, 0.0, -0.23684144020080566, -1.0728830375228426e-06, -0.14943146705627441, -1.537799835205078e-05, -6.866455078125e-05, -7.43865966796875e-05, -4.9591064453125e-05, -0.13237766921520233, -5.340576171875e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000476837158203125, -1.9073486328125e-06, -0.0023717880249023438, 0.0, -0.0010395050048828125, -0.0001239776611328125, -0.059569358825683594, -0.0001354217529296875, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011920928955078125, 0.0, -1.9073486328125e-06, -0.04734039306640625, 0.0, -0.000621795654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.44513702392578125, -1.9073486328125e-06, -0.06038856506347656, 0.0, -0.00047588348388671875, 0.0, -0.6025466918945312, -5.960462772236497e-07, -0.47190749645233154, -1.9073486328125e-06, -1.9073486328125e-05, -6.4849853515625e-05, -3.62396240234375e-05, -0.10018313676118851, -0.0001068115234375, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000568389892578125, -1.9073486328125e-06, -0.00201416015625, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 1, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.485416692550096}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "Of", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "1", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class EyeOfEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.9233528971672058, -0.0007549524307250977, -0.01049181167036295, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.002402782440185547, -8.392333984375e-05, -1.1444091796875e-05, -0.04162406921386719, -0.022235870361328125, -0.000293731689453125, -8.201262971851975e-05, -0.00014913082122802734, -0.007839560508728027, -0.02515125274658203, -0.0014164448948577046, -7.62939453125e-06, -1.430509882993647e-06, -5.960446742392378e-06, -0.44300711154937744, 0.0, -0.00019073486328125, -9.5367431640625e-06, -0.7076140642166138, -1.1920928244535389e-07, -8.392333984375e-05, -0.2134256362915039, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -1.9073486328125e-06, -0.16282033920288086, 0.0, -5.7220458984375e-06, -0.00705265998840332, -1.8715796613832936e-05, -9.72747802734375e-05, -0.0026035308837890625, -0.0001430511474609375, -0.06595039367675781, -0.000133514404296875, -0.0001220703125, -0.003223419189453125, -0.1935567855834961, -0.0006237030029296875, -0.0022668838500976562, -4.00543212890625e-05, -0.0035114288330078125, -2.8132995794294402e-05, -2.288818359375e-05, -0.08700180053710938, -0.00014495849609375, -0.046909332275390625, -2.6702880859375e-05, -0.0041484832763671875, -3.814697265625e-06, -0.010682106018066406, -0.000133514404296875, -0.0069217681884765625, 0.0, -0.003973960876464844, 0.0, -0.4854920208454132, -7.62939453125e-06, -0.026825904846191406, -0.0005359649658203125, -0.023412704467773438, -0.0025281906127929688, -2.86102294921875e-05, -0.0071258544921875, -3.24249267578125e-05, -0.0981302261352539, 0.0, -0.07807755470275879, -6.556507287314162e-06, -0.345916748046875, -0.1829824447631836, -0.06548213958740234, -1.1444091796875e-05, -2.47955322265625e-05, -0.0001373291015625, -5.14984130859375e-05, -0.0057830810546875, -2.09808349609375e-05, -0.07102394104003906, -3.814697265625e-05, -0.34014415740966797, -0.0001773834228515625, -0.3917999267578125, -0.02175426483154297, -0.17937219142913818, -0.000118255615234375, -0.037355661392211914, -2.3841855067985307e-07, -0.0036413997877389193, -5.602834789897315e-06, -0.014701246283948421, 0.0, -0.17613345384597778, -0.00014328956604003906, -0.026812966912984848, -1.7642974853515625e-05, -0.1724395751953125, -0.0026807785034179688, -0.0004062652587890625, -0.0008276081643998623, 0.0, -0.00154876708984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.04635429382324219, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.009702920913696289, -1.1920928244535389e-07, -0.003475189208984375, 0.0, -0.0005779266357421875, -2.6702880859375e-05, -0.04211235046386719, -9.5367431640625e-06, -2.47955322265625e-05, -0.0003566741943359375, -1.9073486328125e-06, -7.355213165283203e-05, 0.0, -1.52587890625e-05, -0.0023679733276367188, 0.0, -0.001766204833984375, -4.76837158203125e-05, 0.0, 0.0, -0.0001354217529296875, -9.5367431640625e-06, 0.0, -0.5182628631591797, -3.814697265625e-06, -0.016122817993164062, -1.9073486328125e-06, -0.0007123947143554688, 0.0, -0.23695015907287598, -1.0728830375228426e-06, -0.14956307411193848, -1.537799835205078e-05, -6.67572021484375e-05, -7.2479248046875e-05, -4.9591064453125e-05, -0.13242201507091522, -5.340576171875e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000476837158203125, -1.9073486328125e-06, -0.0023717880249023438, 0.0, -0.0011577606201171875, -0.0001220703125, -0.059650421142578125, -0.0001354217529296875, -2.09808349609375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011920928955078125, 0.0, -1.9073486328125e-06, -0.047576904296875, 0.0, -0.0006256103515625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.4452972412109375, -1.9073486328125e-06, -0.060302734375, 0.0, -0.00047588348388671875, 0.0, -0.60223388671875, -5.960462772236497e-07, -0.47152888774871826, -1.9073486328125e-06, -1.9073486328125e-05, -6.4849853515625e-05, -3.62396240234375e-05, -0.10016144067049026, -0.0001068115234375, -0.0001544952392578125, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000568389892578125, -1.9073486328125e-06, -0.00201416015625, 0.0], "model_output": {"body": [{"name": "EyeOfEye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 1, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.723636528386024}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "<UNK>", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "1", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Eye<UNK>Eye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.6325766444206238, -0.0820493996143341, -0.0030546095222234726, -1.33514404296875e-05, -6.67572021484375e-05, -1.71661376953125e-05, -0.00442957878112793, -0.0001010894775390625, -9.5367431640625e-06, -0.044315338134765625, -0.02970123291015625, -0.0003299713134765625, -7.962863310240209e-05, -0.0001550912857055664, -0.006428122520446777, -0.020926475524902344, -0.0014728308888152242, -9.5367431640625e-06, -1.1920917586394353e-06, -5.483612312673358e-06, -0.43190038204193115, 0.0, -0.000171661376953125, -9.5367431640625e-06, -0.6876641511917114, 0.0, -8.58306884765625e-05, -0.22038745880126953, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -1.9073486328125e-06, -0.15679025650024414, 0.0, -5.7220458984375e-06, -0.0069620609283447266, -1.8835005903383717e-05, -9.5367431640625e-05, -0.0026264190673828125, -0.0001430511474609375, -0.0663595199584961, -0.000133514404296875, -0.0001201629638671875, -0.0031681060791015625, -0.19589710235595703, -0.0006256103515625, -0.0022640228271484375, -4.00543212890625e-05, -0.003505706787109375, -2.8132995794294402e-05, -2.288818359375e-05, -0.08717632293701172, -0.00014495849609375, -0.04631614685058594, -2.6702880859375e-05, -0.004151344299316406, -3.814697265625e-06, -0.010676383972167969, -0.000133514404296875, -0.006930351257324219, 0.0, -0.003979682922363281, 0.0, -0.48488038778305054, -7.62939453125e-06, -0.026824951171875, -0.0005359649658203125, -0.023415565490722656, -0.0025281906127929688, -2.86102294921875e-05, -0.0071201324462890625, -3.24249267578125e-05, -0.09809160232543945, 0.0, -0.07815003395080566, -6.556507287314162e-06, -0.34667015075683594, -0.18382549285888672, -0.06552886962890625, -1.1444091796875e-05, -2.47955322265625e-05, -0.0001373291015625, -5.14984130859375e-05, -0.005779266357421875, -2.09808349609375e-05, -0.07102584838867188, -3.814697265625e-05, -0.34027957916259766, -0.0001773834228515625, -0.39176368713378906, -0.021752357482910156, -0.1794360876083374, -0.000118255615234375, -0.03735470771789551, -2.3841855067985307e-07, -0.0036411616019904613, -5.602834789897315e-06, -0.014694570563733578, 0.0, -0.17611658573150635, -0.00014328956604003906, -0.026822861284017563, -1.7642974853515625e-05, -0.17226505279541016, -0.0026807785034179688, -0.00040435791015625, -0.0008280789479613304, 0.0, -0.00154876708984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.04627227783203125, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.009697198867797852, -1.1920928244535389e-07, -0.003475189208984375, 0.0, -0.000522613525390625, -2.6702880859375e-05, -0.0414276123046875, -1.1444091796875e-05, -2.47955322265625e-05, -0.0003566741943359375, -1.9073486328125e-06, -7.450580596923828e-05, 0.0, -1.52587890625e-05, -0.0024509429931640625, 0.0, -0.001735687255859375, -4.9591064453125e-05, 0.0, 0.0, -0.0001354217529296875, -9.5367431640625e-06, 0.0, -0.5180778503417969, -3.814697265625e-06, -0.016071319580078125, -1.9073486328125e-06, -0.000713348388671875, 0.0, -0.23684144020080566, -1.0728830375228426e-06, -0.14943146705627441, -1.537799835205078e-05, -6.866455078125e-05, -7.43865966796875e-05, -4.9591064453125e-05, -0.13237766921520233, -5.340576171875e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000476837158203125, -1.9073486328125e-06, -0.0023717880249023438, 0.0, -0.0010395050048828125, -0.0001239776611328125, -0.059569358825683594, -0.0001354217529296875, -2.288818359375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011920928955078125, 0.0, -1.9073486328125e-06, -0.04734039306640625, 0.0, -0.000621795654296875, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.0249958038330078, 0.0, -0.0012208223342895508, -1.0728830375228426e-06, -0.21105408668518066, -3.814697265625e-06, -0.000102996826171875, -0.0001316070556640625, -1.1444091796875e-05, -0.9575161337852478, -6.4849853515625e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0012121200561523438, 0.0, -0.001766204833984375, 0.0], "model_output": {"body": [{"name": "Eye<UNK>Eye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 1, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.999905680174344}, {"choice_history": [55, 124, 221, 63, 103, "Eye", "Of", "Eye", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 83, 176, "Eye", " ", "for", " ", "Eye", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "1", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class EyeOfEye(SecretCard):\n\n    def __init__(self):\n        super().__init__('Eye for Eye', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.minions and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 1\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.unbind('character_attack', self._reveal)\n", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -1.9073486328125e-06, -4.00543212890625e-05, -9.5367431640625e-06, -0.0003077510336879641, -0.9233528971672058, -0.0007549524307250977, -0.01049181167036295, -1.33514404296875e-05, -4.57763671875e-05, -1.1444091796875e-05, -0.002402782440185547, -8.392333984375e-05, -1.1444091796875e-05, -0.04162406921386719, -0.022235870361328125, -0.000293731689453125, -8.201262971851975e-05, -0.00014913082122802734, -0.007839560508728027, -0.02515125274658203, -0.0014164448948577046, -7.62939453125e-06, -1.430509882993647e-06, -5.960446742392378e-06, -0.44300711154937744, 0.0, -0.00019073486328125, -9.5367431640625e-06, -0.7076140642166138, -1.1920928244535389e-07, -8.392333984375e-05, -0.2134256362915039, -1.9073486328125e-06, -1.1563301086425781e-05, 0.0, -1.9073486328125e-06, -0.16282033920288086, 0.0, -5.7220458984375e-06, -0.00705265998840332, -1.8715796613832936e-05, -9.72747802734375e-05, -0.0026035308837890625, -0.0001430511474609375, -0.06595039367675781, -0.000133514404296875, -0.0001220703125, -0.003223419189453125, -0.1935567855834961, -0.0006237030029296875, -0.0022668838500976562, -4.00543212890625e-05, -0.0035114288330078125, -2.8132995794294402e-05, -2.288818359375e-05, -0.08700180053710938, -0.00014495849609375, -0.046909332275390625, -2.6702880859375e-05, -0.0041484832763671875, -3.814697265625e-06, -0.010682106018066406, -0.000133514404296875, -0.0069217681884765625, 0.0, -0.003973960876464844, 0.0, -0.4854920208454132, -7.62939453125e-06, -0.026825904846191406, -0.0005359649658203125, -0.023412704467773438, -0.0025281906127929688, -2.86102294921875e-05, -0.0071258544921875, -3.24249267578125e-05, -0.0981302261352539, 0.0, -0.07807755470275879, -6.556507287314162e-06, -0.345916748046875, -0.1829824447631836, -0.06548213958740234, -1.1444091796875e-05, -2.47955322265625e-05, -0.0001373291015625, -5.14984130859375e-05, -0.0057830810546875, -2.09808349609375e-05, -0.07102394104003906, -3.814697265625e-05, -0.34014415740966797, -0.0001773834228515625, -0.3917999267578125, -0.02175426483154297, -0.17937219142913818, -0.000118255615234375, -0.037355661392211914, -2.3841855067985307e-07, -0.0036413997877389193, -5.602834789897315e-06, -0.014701246283948421, 0.0, -0.17613345384597778, -0.00014328956604003906, -0.026812966912984848, -1.7642974853515625e-05, -0.1724395751953125, -0.0026807785034179688, -0.0004062652587890625, -0.0008276081643998623, 0.0, -0.00154876708984375, -1.9073486328125e-06, -1.9073486328125e-06, -0.04635429382324219, -1.33514404296875e-05, 0.0, -4.9591064453125e-05, -1.9073486328125e-06, -0.009702920913696289, -1.1920928244535389e-07, -0.003475189208984375, 0.0, -0.0005779266357421875, -2.6702880859375e-05, -0.04211235046386719, -9.5367431640625e-06, -2.47955322265625e-05, -0.0003566741943359375, -1.9073486328125e-06, -7.355213165283203e-05, 0.0, -1.52587890625e-05, -0.0023679733276367188, 0.0, -0.001766204833984375, -4.76837158203125e-05, 0.0, 0.0, -0.0001354217529296875, -9.5367431640625e-06, 0.0, -0.5182628631591797, -3.814697265625e-06, -0.016122817993164062, -1.9073486328125e-06, -0.0007123947143554688, 0.0, -0.23695015907287598, -1.0728830375228426e-06, -0.14956307411193848, -1.537799835205078e-05, -6.67572021484375e-05, -7.2479248046875e-05, -4.9591064453125e-05, -0.13242201507091522, -5.340576171875e-05, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.000476837158203125, -1.9073486328125e-06, -0.0023717880249023438, 0.0, -0.0011577606201171875, -0.0001220703125, -0.059650421142578125, -0.0001354217529296875, -2.09808349609375e-05, -0.000232696533203125, -9.5367431640625e-06, -0.00011920928955078125, 0.0, -1.9073486328125e-06, -0.047576904296875, 0.0, -0.0006256103515625, -1.33514404296875e-05, 0.0, -1.9073486328125e-06, -7.62939453125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -1.0247077941894531, 0.0, -0.0012198686599731445, -1.0728830375228426e-06, -0.2109053134918213, -3.814697265625e-06, -0.000102996826171875, -0.0001316070556640625, -1.1444091796875e-05, -0.9575731158256531, -6.4849853515625e-05, -1.71661376953125e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, -0.0012121200561523438, 0.0, -0.0017652511596679688, 0.0], "model_output": {"body": [{"name": "EyeOfEye", "body": [{"hole1": 1, "hole0": "Eye for Eye", "_type": "Template4", "hole2": "HUNTER"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 1, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.238382531238543}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.33514404296875e-05, -3.62396240234375e-05, -23.001325607299805], "model_output": {"body": [], "_type": "Module"}, "score": -23.001375198364258}]}
{"gold_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in hearthbreaker.targeting.find_minion_spell_target(game,\n            lambda m: m.stealth):\n            minion.stealth = False\n        for secret in game.other_player.secrets:\n            secret.deactivate(game.other_player)\n        game.other_player.secrets = []\n        player.draw()\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.add_buff(Buff(Draw()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -1.8096237182617188, -0.0005950927734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.053113570989808e-06, 0.0, -3.814697265625e-05, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -3.826618194580078e-05, -2.2053514840081334e-05, -0.005298614501953125, -1.52587890625e-05, -0.0001888275146484375, 0.0, -0.03040003776550293, -0.00012027494085486978, -0.0076274871826171875, -0.41591358184814453, -0.0007801055908203125, 0.0, -0.0006046295166015625, 0.0, -0.000301361083984375, -2.3841855067985307e-07, -0.0029107332229614258, 0.0, -0.0001926422119140625, -0.0002193450927734375, 0.0, -0.2831764221191406, -0.000244140625, -0.00153350830078125, 0.0, -0.012578964233398438, -3.6716461181640625e-05, -0.004247425124049187, 0.0, -0.0002649952657520771, -3.814697265625e-06, -0.007534027099609375, -0.00153350830078125, 0.0, -1.9073486328125e-06, -0.0003376007080078125, -1.9073486328125e-06, -3.814697265625e-06, -0.10873985290527344, 0.0, -0.025304317474365234, -0.0009285685373470187, -0.6124815940856934, -1.1444091796875e-05, -4.38690185546875e-05, -0.0008487701416015625, -3.814697265625e-06, -0.0001506805419921875, 0.0, -0.013766765594482422, -0.0005128383636474609, -0.00749969482421875, -0.5603952407836914, -3.814697265625e-05, -0.7178707122802734, -0.02304092049598694], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.341360801250197}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for minion in copy.copy(game.other_player.minions):\n            minion.die(self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -1.8096237182617188, -0.0005950927734375, 0.0, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, 0.0, -4.053113570989808e-06, 0.0, -3.814697265625e-05, 0.0, -3.24249267578125e-05, -5.14984130859375e-05, -9.5367431640625e-06, -3.814697265625e-06, 0.0, -1.9073486328125e-05, 0.0, -3.826618194580078e-05, -2.2053514840081334e-05, -0.005298614501953125, -1.52587890625e-05, -0.0001888275146484375, 0.0, -0.03040003776550293, -0.00012027494085486978, -0.0076274871826171875, -0.41591358184814453, -0.0007801055908203125, 0.0, -0.0006046295166015625, 0.0, -0.000301361083984375, -2.3841855067985307e-07, -0.0029107332229614258, 0.0, -0.0001926422119140625, -0.0002193450927734375, 0.0, -0.2831764221191406, -0.000244140625, -0.00153350830078125, 0.0, -0.012578964233398438, -3.6716461181640625e-05, -0.004247425124049187, 0.0, -0.0002649952657520771, -3.814697265625e-06, -0.007534027099609375, -0.00153350830078125, 0.0, -1.9073486328125e-06, -0.0003376007080078125, -1.9073486328125e-06, -3.814697265625e-06, -0.10873985290527344, 0.0, -0.025304317474365234, -0.0009285685373470187, -1.7602415084838867, 0.0, -3.814697265625e-06, -0.19516468048095703, -1.9073486328125e-06, -0.004574775695800781, 0.0], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.364682996064879}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 37, 125, "targets", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.9384862184524536, -3.933898824470816e-06, -0.8349924087524414, 0.0, -0.009809494018554688, -0.0005588531494140625, -5.7220458984375e-06, -0.00019931793212890625, -1.1920928244535389e-07, -0.005092620849609375, -3.814697265625e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.000217437744140625, -0.0002307891845703125, -0.000141143798828125, -0.00031280517578125, -0.009943246841430664, -3.576278118089249e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.010728836059570312, 0.0, -5.53131103515625e-05, -4.172325134277344e-06, -7.605552673339844e-05, -1.33514404296875e-05, -0.05349254608154297, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.03835427761077881, -7.986990567587782e-06, -0.533665657043457, -0.29045867919921875, -0.0004520416259765625, -3.814697265625e-06, -0.007283568382263184, -0.00011562970757950097, -0.000202178955078125, -0.35184478759765625, -6.866455078125e-05, -0.1410369873046875, -3.814697265625e-06, -0.0004482269287109375, -0.0006008148193359375, -4.1961669921875e-05, -0.031533241271972656, -1.9073486328125e-06, -0.0018720626831054688, -0.000301361083984375, -0.00017547607421875, -4.76837158203125e-05, -3.814697265625e-06, -0.04774773120880127, -4.208087921142578e-05, -0.0003299713134765625, -9.5367431640625e-06, -0.0001621246337890625, 0.0, -0.39744138717651367, -2.3841855067985307e-07, -0.0030841827392578125, -0.006670594215393066, -0.11145973205566406, -0.018776893615722656, -1.9073486328125e-06, -3.814697265625e-06, -0.0061550140380859375, -3.814697265625e-06, -3.814697265625e-06, -0.007898330688476562, -1.9073486328125e-06, -0.04606449604034424, -1.0848032616195269e-05, -0.48655998706817627, -2.09808349609375e-05], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.0689037229310046}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "minion", "<EOS>", "deathrattle", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in minion.deathrattle:\n            minion.die(self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.9384862184524536, -3.933898824470816e-06, -0.8349924087524414, 0.0, -0.009809494018554688, -0.0005588531494140625, -5.7220458984375e-06, -0.00019931793212890625, -1.1920928244535389e-07, -0.005092620849609375, -3.814697265625e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.000217437744140625, -0.0002307891845703125, -0.000141143798828125, -0.00031280517578125, -0.009943246841430664, -3.576278118089249e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.010728836059570312, 0.0, -5.53131103515625e-05, -4.172325134277344e-06, -7.605552673339844e-05, -1.33514404296875e-05, -0.05349254608154297, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.03835427761077881, -7.986990567587782e-06, -0.9354820251464844, 0.0, -0.10791969299316406, 0.0, -0.3895378112792969, -1.3708998267247807e-05, -0.19422006607055664, 0.0, -0.012193679809570312, -3.24249267578125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001697540283203125, -1.1444091796875e-05, -3.814697265625e-06, -0.000797271728515625, 0.0, -0.2117311954498291, -0.00038213218795135617, -0.6874504089355469, 0.0, 0.0, -0.0033197402954101562, 0.0, -0.0015192031860351562, 0.0], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "deathrattle"}, "_type": "For", "body": [{"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.1210896856507375}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.7709795236587524, 0.0, -0.845524787902832, 0.0, -1.33514404296875e-05, -0.0001735687255859375, -2.6702880859375e-05, -0.0012531280517578125, 0.0, -2.86102294921875e-05, -3.933906555175781e-06, -0.06213212013244629, -5.7220458984375e-06, -0.10306262969970703, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.029360651969909668, -3.4570634852570947e-06, -0.7882919311523438, -0.15590667724609375, -0.00028228759765625, -1.9073486328125e-06, -0.0031626224517822266, -0.00012373649224173278, -4.76837158203125e-05, -0.8206453323364258, -1.9073486328125e-06, -0.003490447998046875, 0.0, -9.5367431640625e-05, -1.1920928244535389e-07, -0.0004526371485553682, -9.5367431640625e-06, -9.1552734375e-05, -0.003368377685546875, -3.814697265625e-06, -0.08437633514404297, -4.398822784423828e-05, -0.0016613006591796875, -0.0001430511474609375, -0.0001659393310546875, -1.52587890625e-05, -5.7220458984375e-06, -0.11091768741607666, -3.62396240234375e-05, -0.002033233642578125, -1.52587890625e-05, -6.103515625e-05, 0.0, -0.17076683044433594, -1.1920928244535389e-07, -0.0025129318237304688, -0.005879044532775879, -0.11586380004882812, -0.006420135498046875, -1.9073486328125e-06, -1.9073486328125e-06, -0.009401321411132812, -3.814697265625e-06, -3.814697265625e-06, -0.013026237487792969, 0.0, -0.0639573335647583, -5.245203283266164e-06, -0.33299219608306885, -2.6702880859375e-05], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "extend"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.182359614610313}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 37, 125, "targets", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.7709795236587524, 0.0, -0.845524787902832, 0.0, -1.33514404296875e-05, -0.0001735687255859375, -2.6702880859375e-05, -0.0012531280517578125, 0.0, -2.86102294921875e-05, -3.933906555175781e-06, -0.06213212013244629, -5.7220458984375e-06, -0.10306262969970703, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.029360651969909668, -3.4570634852570947e-06, -0.7882919311523438, -0.15590667724609375, -0.00028228759765625, -1.9073486328125e-06, -0.0031626224517822266, -0.00012373649224173278, -4.76837158203125e-05, -0.5935516357421875, -6.866455078125e-05, -0.14038848876953125, -3.814697265625e-06, -0.0003814697265625, -0.000682830810546875, -4.9591064453125e-05, -0.03566551208496094, -1.9073486328125e-06, -0.0017757415771484375, -0.0003452301025390625, -0.0001697540283203125, -4.76837158203125e-05, -3.814697265625e-06, -0.04768097400665283, -4.398822784423828e-05, -0.000347137451171875, -9.5367431640625e-06, -0.0001735687255859375, 0.0, -0.39771413803100586, -2.3841855067985307e-07, -0.0032100677490234375, -0.006050825119018555, -0.12154388427734375, -0.014284133911132812, -1.9073486328125e-06, -3.814697265625e-06, -0.0064334869384765625, -3.814697265625e-06, -3.814697265625e-06, -0.008699417114257812, -1.9073486328125e-06, -0.0492020845413208, -1.2397755199344829e-05, -0.4553161859512329, -2.09808349609375e-05], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "extend"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.3177565725261715}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in <UNK>(player.minions, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.9384862184524536, -3.933898824470816e-06, -0.8349924087524414, 0.0, -0.009809494018554688, -0.0005588531494140625, -5.7220458984375e-06, -0.00019931793212890625, -1.1920928244535389e-07, -0.005092620849609375, -3.814697265625e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.000217437744140625, -0.0002307891845703125, -0.000141143798828125, -0.00031280517578125, -0.009943246841430664, -3.576278118089249e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.010728836059570312, 0.0, -5.53131103515625e-05, -4.172325134277344e-06, -7.605552673339844e-05, -1.33514404296875e-05, -0.05349254608154297, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.03835427761077881, -7.986990567587782e-06, -0.533665657043457, -0.29045867919921875, -0.0004520416259765625, -3.814697265625e-06, -0.007283568382263184, -0.00011562970757950097, -0.000202178955078125, -1.2384977340698242, -1.9073486328125e-06, -0.0034084320068359375, 0.0, -5.7220458984375e-05, -1.1920928244535389e-07, -0.00047159145469777286, -9.5367431640625e-06, -0.0003757476806640625, -0.0023212432861328125, -3.814697265625e-06, -0.13396644592285156, -4.410743713378906e-05, -0.0011701583862304688, -0.0001697540283203125, -0.00019073486328125, -1.52587890625e-05, -5.7220458984375e-06, -0.09259545803070068, -3.62396240234375e-05, -0.0019054412841796875, -1.33514404296875e-05, -4.9591064453125e-05, 0.0, -0.1584768295288086, -1.1920928244535389e-07, -0.00220489501953125, -0.005875110626220703, -0.09451103210449219, -0.008711814880371094, -1.9073486328125e-06, -1.9073486328125e-06, -0.009347915649414062, -3.814697265625e-06, -3.814697265625e-06, -0.012735366821289062, 0.0, -0.060009121894836426, -5.483620952873025e-06, -0.34736168384552, -2.6702880859375e-05], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.583060660041802}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Flare", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 37, 125, "targets", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -1.1349468231201172, -9.5367431640625e-05, -1.0728830375228426e-06, -0.00010371208190917969, -3.4570607567729894e-06, -2.622600959512056e-06, -0.5824099779129028, -5.602679812000133e-05, -0.006267547607421875, 0.0, -3.0159948437358253e-05, -1.1920928244535389e-07, 0.0, -4.00543212890625e-05, 0.0, -9.059880540007725e-06, -8.344646857949556e-07, 0.0, -5.161762237548828e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -7.653236389160156e-05, -7.987004210008308e-06, -0.13698673248291016, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220440794480965e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -4.589557647705078e-05, -2.5272138373111375e-05, -0.013016700744628906, -0.0001468658447265625, -1.52587890625e-05, -9.1552734375e-05, -3.814697265625e-06, -1.2956069707870483, -5.960462772236497e-07, -6.4849853515625e-05, -0.00028228759765625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.0002727508544921875, -3.576278118089249e-07, -0.016485214233398438, 0.0, -0.00029754638671875, -0.0003223419189453125, 0.0, -0.07644462585449219, -0.0001659393310546875, -0.0008087158203125, 0.0, -0.006168365478515625, -3.2782554626464844e-05, -0.0046845669858157635, 0.0, -0.00026141625130549073, -3.814697265625e-06, -0.05169391632080078, -2.47955322265625e-05, -7.62939453125e-06, -0.0007305145263671875, -1.71661376953125e-05, 0.0, -0.02594757080078125, 0.0, -0.9161702394485474, -4.0531076592742465e-06, -0.8552484512329102, 0.0, -0.01031494140625, -0.0005645751953125, -5.7220458984375e-06, -0.00020503997802734375, -1.1920928244535389e-07, -0.00490570068359375, -3.814697265625e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.000217437744140625, -0.0002307891845703125, -0.00014495849609375, -0.00031280517578125, -0.009857416152954102, -3.576278118089249e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.01071929931640625, 0.0, -5.53131103515625e-05, -4.172325134277344e-06, -7.605552673339844e-05, -1.33514404296875e-05, -0.05086040496826172, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.04048001766204834, -7.629365427419543e-06, -0.5398178100585938, -0.28148555755615234, -0.000457763671875, -3.814697265625e-06, -0.00747227668762207, -0.00011598730634432286, -0.0002079010009765625, -0.351593017578125, -6.866455078125e-05, -0.13859939575195312, -3.814697265625e-06, -0.00045013427734375, -0.000598907470703125, -4.1961669921875e-05, -0.031617164611816406, -1.9073486328125e-06, -0.0018682479858398438, -0.000301361083984375, -0.00017547607421875, -4.76837158203125e-05, -3.814697265625e-06, -0.047736287117004395, -4.208087921142578e-05, -0.00032806396484375, -9.5367431640625e-06, -0.0001621246337890625, 0.0, -0.39806032180786133, -2.3841855067985307e-07, -0.0030832290649414062, -0.006685853004455566, -0.11495590209960938, -0.018466949462890625, -1.9073486328125e-06, -3.814697265625e-06, -0.0062236785888671875, -3.814697265625e-06, -3.814697265625e-06, -0.0077457427978515625, -1.9073486328125e-06, -0.04539597034454346, -1.0848032616195269e-05, -0.48953068256378174, -2.09808349609375e-05], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template5", "hole2": "PRIEST"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.7500927815748355}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "append", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 37, 125, "targets", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.append(player.minions)\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.<UNK>()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.7709795236587524, 0.0, -1.2671575546264648, 0.0, -1.9073486328125e-06, -0.00109100341796875, -5.91278076171875e-05, -0.0061779022216796875, 0.0, -2.6702880859375e-05, -1.9073486328125e-06, -0.11099052429199219, -5.7220458984375e-06, -0.06172657012939453, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.029900550842285156, -4.172316494077677e-06, -0.7480945587158203, -0.22816944122314453, -0.000331878662109375, -1.9073486328125e-06, -0.0030301809310913086, -0.00013494203449226916, -4.38690185546875e-05, -0.5352153778076172, -6.866455078125e-05, -0.15586566925048828, -3.814697265625e-06, -0.0003528594970703125, -0.0006847381591796875, -5.340576171875e-05, -0.037581443786621094, -1.9073486328125e-06, -0.0018301010131835938, -0.0003509521484375, -0.000171661376953125, -4.9591064453125e-05, -3.814697265625e-06, -0.047904133796691895, -4.208087921142578e-05, -0.0003452301025390625, -9.5367431640625e-06, -0.0001678466796875, 0.0, -0.4045448303222656, -2.3841855067985307e-07, -0.0031957626342773438, -0.006027936935424805, -0.11375808715820312, -0.012810707092285156, -1.9073486328125e-06, -3.814697265625e-06, -0.0069103240966796875, -3.814697265625e-06, -3.814697265625e-06, -0.007883071899414062, -1.9073486328125e-06, -0.046421170234680176, -1.2278545909794047e-05, -0.4805943965911865, -2.09808349609375e-05], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "append"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.764304915097249}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Flare", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 19, 125, "minion", "<EOS>", "deathrattle", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in minion.deathrattle:\n            minion.die(self)\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -1.1349468231201172, -9.5367431640625e-05, -1.0728830375228426e-06, -0.00010371208190917969, -3.4570607567729894e-06, -2.622600959512056e-06, -0.5824099779129028, -5.602679812000133e-05, -0.006267547607421875, 0.0, -3.0159948437358253e-05, -1.1920928244535389e-07, 0.0, -4.00543212890625e-05, 0.0, -9.059880540007725e-06, -8.344646857949556e-07, 0.0, -5.161762237548828e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -7.653236389160156e-05, -7.987004210008308e-06, -0.13698673248291016, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220440794480965e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -4.589557647705078e-05, -2.5272138373111375e-05, -0.013016700744628906, -0.0001468658447265625, -1.52587890625e-05, -9.1552734375e-05, -3.814697265625e-06, -1.2956069707870483, -5.960462772236497e-07, -6.4849853515625e-05, -0.00028228759765625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.0002727508544921875, -3.576278118089249e-07, -0.016485214233398438, 0.0, -0.00029754638671875, -0.0003223419189453125, 0.0, -0.07644462585449219, -0.0001659393310546875, -0.0008087158203125, 0.0, -0.006168365478515625, -3.2782554626464844e-05, -0.0046845669858157635, 0.0, -0.00026141625130549073, -3.814697265625e-06, -0.05169391632080078, -2.47955322265625e-05, -7.62939453125e-06, -0.0007305145263671875, -1.71661376953125e-05, 0.0, -0.02594757080078125, 0.0, -0.9161702394485474, -4.0531076592742465e-06, -0.8552484512329102, 0.0, -0.01031494140625, -0.0005645751953125, -5.7220458984375e-06, -0.00020503997802734375, -1.1920928244535389e-07, -0.00490570068359375, -3.814697265625e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.000217437744140625, -0.0002307891845703125, -0.00014495849609375, -0.00031280517578125, -0.009857416152954102, -3.576278118089249e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.01071929931640625, 0.0, -5.53131103515625e-05, -4.172325134277344e-06, -7.605552673339844e-05, -1.33514404296875e-05, -0.05086040496826172, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.04048001766204834, -7.629365427419543e-06, -0.9242630004882812, 0.0, -0.11063575744628906, 0.0, -0.39175987243652344, -1.3708998267247807e-05, -0.19305956363677979, 0.0, -0.012483596801757812, -3.24249267578125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, -3.814697265625e-06, -0.00080108642578125, 0.0, -0.21183514595031738, -0.00038117883377708495, -0.6898401975631714, 0.0, 0.0, -0.0033254623413085938, 0.0, -0.00151824951171875, 0.0], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template5", "hole2": "PRIEST"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "deathrattle"}, "_type": "For", "body": [{"value": {"args": [{"id": "self", "_type": "Name"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.796837794250138}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 37, 125, "targets", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.bounce()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.7709795236587524, 0.0, -0.845524787902832, 0.0, -1.33514404296875e-05, -0.0001735687255859375, -2.6702880859375e-05, -0.0012531280517578125, 0.0, -2.86102294921875e-05, -3.933906555175781e-06, -0.06213212013244629, -5.7220458984375e-06, -0.10306262969970703, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.029360651969909668, -3.4570634852570947e-06, -0.7882919311523438, -0.15590667724609375, -0.00028228759765625, -1.9073486328125e-06, -0.0031626224517822266, -0.00012373649224173278, -4.76837158203125e-05, -0.5935516357421875, -6.866455078125e-05, -0.14038848876953125, -3.814697265625e-06, -0.0003814697265625, -0.000682830810546875, -4.9591064453125e-05, -0.03566551208496094, -1.9073486328125e-06, -0.0017757415771484375, -0.0003452301025390625, -0.0001697540283203125, -4.76837158203125e-05, -3.814697265625e-06, -0.04768097400665283, -4.398822784423828e-05, -0.000347137451171875, -9.5367431640625e-06, -0.0001735687255859375, 0.0, -0.39771413803100586, -2.3841855067985307e-07, -0.0032100677490234375, -0.006050825119018555, -0.12154388427734375, -0.014284133911132812, -1.9073486328125e-06, -3.814697265625e-06, -0.0064334869384765625, -3.814697265625e-06, -3.814697265625e-06, -0.008699417114257812, -1.9073486328125e-06, -0.0492020845413208, -1.2397755199344829e-05, -1.3649460077285767, -0.0003719329833984375], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "extend"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "bounce"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.227737346451953}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Flare", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "targets", "<EOS>", "extend", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "Draw", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        targets.extend(player.minions)\n        for minion in game.other_player.minions:\n            minion.add_buff(Buff(Draw()))\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -0.5960378646850586, -3.814697265625e-05, -4.410734163684538e-06, -5.483625955093885e-06, -2.622600504764705e-06, -4.768370445162873e-07, -0.07916033267974854, -3.814697265625e-06, -0.001102447509765625, 0.0, -0.005462646484375, 0.0, -1.7642974853515625e-05, 0.0, 0.0, -0.0001392364501953125, 0.0, -7.152543730626348e-06, -3.576278118089249e-07, -1.9073486328125e-06, -2.491474151611328e-05, -1.1920928244535389e-07, 0.0, -7.081031799316406e-05, -4.768367489305092e-06, -0.29681968688964844, -9.5367431640625e-05, -1.9073486328125e-06, 0.0, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.960462203802308e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.76837158203125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.52587890625e-05, 0.0, -4.208087921142578e-05, -2.5033725250978023e-05, -0.016422271728515625, -0.0001354217529296875, -1.52587890625e-05, -9.34600830078125e-05, -3.814697265625e-06, -1.481896996498108, -5.960462772236497e-07, -6.866455078125e-05, -0.0002689361572265625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.000274658203125, -3.576278118089249e-07, -0.016594886779785156, 0.0, -0.0002956390380859375, -0.0003223419189453125, 0.0, -0.07564640045166016, -0.0001659393310546875, -0.0008068084716796875, 0.0, -0.00620269775390625, -3.2782554626464844e-05, -0.004690289031714201, 0.0, -0.0002616546116769314, -3.814697265625e-06, -0.06321144104003906, -2.47955322265625e-05, -7.62939453125e-06, -0.000675201416015625, -1.71661376953125e-05, 0.0, -0.024904251098632812, 0.0, -0.7709795236587524, 0.0, -0.845524787902832, 0.0, -1.33514404296875e-05, -0.0001735687255859375, -2.6702880859375e-05, -0.0012531280517578125, 0.0, -2.86102294921875e-05, -3.933906555175781e-06, -0.06213212013244629, -5.7220458984375e-06, -0.10306262969970703, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.029360651969909668, -3.4570634852570947e-06, -0.6820602416992188, 0.0, -0.41903114318847656, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.3036918640136719, -6.675719760096399e-06, -0.005008220206946135, 0.0, -0.08301281183958054, -2.0265579223632812e-06, -0.0002536773681640625, -0.001495361328125, 0.0, -1.9073486328125e-06, -0.001422882080078125, -7.62939453125e-06, -3.62396240234375e-05, -0.0093231201171875, 0.0, -0.02269279956817627, -0.0012540175812318921, -1.057294487953186, -2.09808349609375e-05, -7.2479248046875e-05, -0.000896453857421875, -5.7220458984375e-06, -0.0001220703125, 0.0, -0.01503896713256836, -0.00078582763671875, -0.003681182861328125, -0.38573169708251953, -5.53131103515625e-05, -0.8422999382019043, -0.01640983484685421], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Flare", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "targets", "_type": "Name"}, "_type": "Attribute", "attr": "extend"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}, "_type": "For", "body": [{"value": {"args": [{"args": [{"hole0": "Draw", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.337764670477831}, {"choice_history": [55, 124, 221, 63, 103, "Flare", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Flare", "<EOS>", "2", "<EOS>", "PRIEST", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 60, 93, 208, 37, 125, "targets", "<EOS>", 14, 101, 11, 94, 19, 125, "copy", "<EOS>", "copy", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 65, 107, 19, 125, "minion", "<EOS>", 14, 102, 19, 125, "<UNK>", "<EOS>", 208, 37, 125, "targets", "<EOS>", 216, 54, 197, "<UNK>", "<EOS>", 16, 118, 195, 201, 194, "m", "<EOS>", 11, 94, 19, 125, "m", "<EOS>", "<UNK>", "<EOS>", 221, 64, 106, 14, 99, 11, 94, 19, 125, "minion", "<EOS>", "bounce", "<EOS>"], "inferred_code": "class Flare(SpellCard):\n\n    def __init__(self):\n        super().__init__('Flare', 2, CHARACTER_CLASS.PRIEST, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        targets = copy.copy(game.other_player.minions)\n        <UNK>.summon(player, game, len(player.minions))\n        for minion in <UNK>(targets, <UNK>=lambda m: m.<UNK>):\n            minion.bounce()\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -6.103515625e-05, -1.33514404296875e-05, -2.8013790142722428e-05, -0.0007335473783314228, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -6.544584903167561e-05, -8.630752563476562e-05, 0.0, -7.62939453125e-05, -1.1349468231201172, -9.5367431640625e-05, -1.0728830375228426e-06, -0.00010371208190917969, -3.4570607567729894e-06, -2.622600959512056e-06, -0.5824099779129028, -5.602679812000133e-05, -0.006267547607421875, 0.0, -3.0159948437358253e-05, -1.1920928244535389e-07, 0.0, -4.00543212890625e-05, 0.0, -9.059880540007725e-06, -8.344646857949556e-07, 0.0, -5.161762237548828e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -7.653236389160156e-05, -7.987004210008308e-06, -0.13698673248291016, -7.05718994140625e-05, -1.9073486328125e-06, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -3.814697265625e-06, 0.0, -5.7220440794480965e-06, 0.0, -2.47955322265625e-05, 0.0, -2.86102294921875e-05, -4.57763671875e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -4.589557647705078e-05, -2.5272138373111375e-05, -0.013016700744628906, -0.0001468658447265625, -1.52587890625e-05, -9.1552734375e-05, -3.814697265625e-06, -1.2956069707870483, -5.960462772236497e-07, -6.4849853515625e-05, -0.00028228759765625, -1.52587890625e-05, 0.0, -7.62939453125e-05, 0.0, -0.0002727508544921875, -3.576278118089249e-07, -0.016485214233398438, 0.0, -0.00029754638671875, -0.0003223419189453125, 0.0, -0.07644462585449219, -0.0001659393310546875, -0.0008087158203125, 0.0, -0.006168365478515625, -3.2782554626464844e-05, -0.0046845669858157635, 0.0, -0.00026141625130549073, -3.814697265625e-06, -0.05169391632080078, -2.47955322265625e-05, -7.62939453125e-06, -0.0007305145263671875, -1.71661376953125e-05, 0.0, -0.02594757080078125, 0.0, -0.9161702394485474, -4.0531076592742465e-06, -0.8552484512329102, 0.0, -0.01031494140625, -0.0005645751953125, -5.7220458984375e-06, -0.00020503997802734375, -1.1920928244535389e-07, -0.00490570068359375, -3.814697265625e-06, -4.00543212890625e-05, -1.1920928244535389e-07, -0.000217437744140625, -0.0002307891845703125, -0.00014495849609375, -0.00031280517578125, -0.009857416152954102, -3.576278118089249e-07, -1.9073486328125e-06, -2.288818359375e-05, -1.9073486328125e-06, -0.01071929931640625, 0.0, -5.53131103515625e-05, -4.172325134277344e-06, -7.605552673339844e-05, -1.33514404296875e-05, -0.05086040496826172, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-05, -0.04048001766204834, -7.629365427419543e-06, -0.5398178100585938, -0.28148555755615234, -0.000457763671875, -3.814697265625e-06, -0.00747227668762207, -0.00011598730634432286, -0.0002079010009765625, -0.351593017578125, -6.866455078125e-05, -0.13859939575195312, -3.814697265625e-06, -0.00045013427734375, -0.000598907470703125, -4.1961669921875e-05, -0.031617164611816406, -1.9073486328125e-06, -0.0018682479858398438, -0.000301361083984375, -0.00017547607421875, -4.76837158203125e-05, -3.814697265625e-06, -0.047736287117004395, -4.208087921142578e-05, -0.00032806396484375, -9.5367431640625e-06, -0.0001621246337890625, 0.0, -0.39806032180786133, -2.3841855067985307e-07, -0.0030832290649414062, -0.006685853004455566, -0.11495590209960938, -0.018466949462890625, -1.9073486328125e-06, -3.814697265625e-06, -0.0062236785888671875, -3.814697265625e-06, -3.814697265625e-06, -0.0077457427978515625, -1.9073486328125e-06, -0.04539597034454346, -1.0848032616195269e-05, -1.2957106828689575, -0.00040435791015625], "model_output": {"body": [{"name": "Flare", "body": [{"hole1": 2, "hole0": "Flare", "_type": "Template5", "hole2": "PRIEST"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"id": "targets", "_type": "Name"}], "value": {"args": [{"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "minions"}], "func": {"value": {"id": "copy", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "minion", "_type": "Name"}, "iter": {"args": [{"id": "targets", "_type": "Name"}], "keywords": [{"value": {"args": {"args": [{"arg": "m", "_type": "arg"}], "_type": "arguments"}, "body": {"value": {"id": "m", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Lambda"}, "arg": "<UNK>", "_type": "keyword"}], "func": {"id": "<UNK>", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"value": {"func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "bounce"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.556656158955207}, {"choice_history": [55, 124, 221, 62], "inferred_code": "break\n", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -17.65901756286621], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -17.659025192260742}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -1.9073486328125e-06, -23.149112701416016], "model_output": {"body": [], "_type": "Module"}, "score": -23.14911651611328}]}
{"gold_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.EPIC)\n\n    def create_weapon(self, player):\n        return Weapon(7, 1, effects=[Effect(CharacterAttack(And(IsHero(),\n            TargetIsMinion())), [ActionTag(IncreaseDurability(),\n            WeaponSelector()), ActionTag(IncreaseWeaponAttack(-1),\n            WeaponSelector()), ActionTag(Give(BuffUntil(ChangeAttack(1),\n            AttackCompleted())), HeroSelector())])])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=IsMinion())))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -0.9525594711303711, -0.0016307830810546875, -0.0004371403774712235, -0.0031790733337402344, -0.3337583541870117, -0.0016471147537231445, -0.00028228759765625, -0.20723004639148712, -5.125999450683594e-05, -0.13473892211914062, -0.06873321533203125, -0.000843048095703125, -1.9073486328125e-06, -0.000584466615691781, -0.007358551025390625, -2.503394853192731e-06, -0.0140533447265625, -0.0001163482666015625, -3.62396240234375e-05, -0.002010345458984375, -2.47955322265625e-05, -0.26421546936035156, -1.9073486328125e-06, -0.004452228546142578, -0.0007454156875610352, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001500248908996582, -3.099436753473128e-06, -0.851231575012207, -2.288818359375e-05, -0.010239720344543457, -0.0051157474517822266, -0.0002498626708984375, -0.0068454742431640625, -5.7220458984375e-06, -7.224082219181582e-05, -0.00010489867418073118, -0.34849822521209717, -3.64774459740147e-05], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.37617698861137}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -0.9525594711303711, -0.0016307830810546875, -0.0004371403774712235, -0.0031790733337402344, -0.3337583541870117, -0.0016471147537231445, -0.00028228759765625, -0.20723004639148712, -5.125999450683594e-05, -0.13473892211914062, -0.06873321533203125, -0.000843048095703125, -1.9073486328125e-06, -0.000584466615691781, -0.007358551025390625, -2.503394853192731e-06, -0.0140533447265625, -0.0001163482666015625, -3.62396240234375e-05, -0.002010345458984375, -2.47955322265625e-05, -0.26421546936035156, -1.9073486328125e-06, -0.004452228546142578, -0.0007454156875610352, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001500248908996582, -3.099436753473128e-06, -0.5898227691650391, -0.0003986358642578125, -8.96453857421875e-05, 0.0, -0.00937652587890625, -1.9073486328125e-06, -0.00011014743358828127, -5.841247457283316e-06, -0.6524283289909363, -1.0132789611816406e-05], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.40599809060901}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -1.1478099822998047, -1.1444091796875e-05, -0.0001163482666015625, 0.0, -0.03788292407989502, -0.00013744831085205078, -9.5367431640625e-06, -0.3166799545288086, -3.0517578125e-05, -0.001373291015625, -0.8335332870483398, -0.0001773834228515625, -0.0016836058348417282, -3.814697265625e-06, -0.6494836807250977, -0.000728607177734375, -0.0006659189239144325, -1.5974044799804688e-05, -0.02631378173828125, -3.814697265625e-06, -0.004205464851111174, -2.2411306417779997e-05, 0.0, -0.03563690185546875, -3.814697265625e-06, -2.0265579223632812e-05, -1.4424220353248529e-05, -0.20986485481262207, -5.006777428206988e-06], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 1, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.419647705400585}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>", 73, 146, "7", "<EOS>", "1", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(7, 1)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -0.9525594711303711, -0.0016307830810546875, -0.0004371403774712235, -0.0031790733337402344, -0.3337583541870117, -0.0016471147537231445, -0.00028228759765625, -0.20723004639148712, -5.125999450683594e-05, -0.13473892211914062, -0.06873321533203125, -0.000843048095703125, -1.9073486328125e-06, -0.000584466615691781, -0.007358551025390625, -2.503394853192731e-06, -0.0140533447265625, -0.0001163482666015625, -3.62396240234375e-05, -0.002010345458984375, -2.47955322265625e-05, -0.26421546936035156, -1.9073486328125e-06, -0.004452228546142578, -0.0007454156875610352, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001500248908996582, -3.099436753473128e-06, -0.5898227691650391, -0.0003986358642578125, -8.96453857421875e-05, 0.0, -0.00937652587890625, -1.9073486328125e-06, -0.00011014743358828127, -5.841247457283316e-06, -0.736415684223175, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.48997543226092}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "combo", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 37, 125, "self", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, combo=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.die(self)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -3.0857133865356445, 0.0, -0.0757293701171875, 0.0, -0.0275726318359375, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -0.0007228851318359375, -3.0517578125e-05, -5.161762237548828e-05, -2.47955322265625e-05, -0.0117875337600708, -0.00017523765563964844, -0.05328369140625, -0.0001087188720703125, 0.0, 0.0, -1.9073486328125e-05, 0.0, -1.1563301086425781e-05, -4.768370445162873e-07, -5.9604644775390625e-06, -2.9802276912960224e-06, -0.9140235185623169, 0.0, -3.814697265625e-06, -0.013503074645996094, 0.0, -5.2094459533691406e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "arg": "combo", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": "die", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"id": "self", "_type": "Name"}]}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.851796491350193}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=IsMinion())))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -1.1759026050567627, -2.384185791015625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.612040018197149e-05, -0.0006899837171658874, -0.10738193988800049, -5.364416665543104e-06, -5.7220458984375e-06, -0.003917694091796875, 0.0, -0.4714641571044922, -4.768370445162873e-07, -0.0018062591552734375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004407167434692383, -2.622600959512056e-06, -0.010077476501464844, -0.9018306732177734, -0.0024700164794921875, -0.00048613533726893365, -0.0038285255432128906, -0.34379327297210693, -0.0016309935599565506, -0.000335693359375, -0.26680147647857666, -5.3524967370321974e-05, -0.121490478515625, -0.06014442443847656, -0.0008392333984375, -1.9073486328125e-06, -0.0005690882680937648, -0.0069561004638671875, -2.503394853192731e-06, -0.013965606689453125, -0.00011444091796875, -4.1961669921875e-05, -0.0020093917846679688, -2.47955322265625e-05, -0.2702312469482422, -1.9073486328125e-06, -0.004463672637939453, -0.0007435083389282227, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001458287239074707, -3.099436753473128e-06, -0.8509902954101562, -2.288818359375e-05, -0.0098191499710083, -0.005104184150695801, -0.0002460479736328125, -0.006778717041015625, -5.7220458984375e-06, -7.224082219181582e-05, -0.00010835537250386551, -0.3522595167160034, -3.707347059389576e-05], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.986767941722633}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -1.1759026050567627, -2.384185791015625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.612040018197149e-05, -0.0006899837171658874, -0.10738193988800049, -5.364416665543104e-06, -5.7220458984375e-06, -0.003917694091796875, 0.0, -0.4714641571044922, -4.768370445162873e-07, -0.0018062591552734375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004407167434692383, -2.622600959512056e-06, -0.010077476501464844, -0.9018306732177734, -0.0024700164794921875, -0.00048613533726893365, -0.0038285255432128906, -0.34379327297210693, -0.0016309935599565506, -0.000335693359375, -0.26680147647857666, -5.3524967370321974e-05, -0.121490478515625, -0.06014442443847656, -0.0008392333984375, -1.9073486328125e-06, -0.0005690882680937648, -0.0069561004638671875, -2.503394853192731e-06, -0.013965606689453125, -0.00011444091796875, -4.1961669921875e-05, -0.0020093917846679688, -2.47955322265625e-05, -0.2702312469482422, -1.9073486328125e-06, -0.004463672637939453, -0.0007435083389282227, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001458287239074707, -3.099436753473128e-06, -0.5898551940917969, -0.0003986358642578125, -8.7738037109375e-05, 0.0, -0.009328842163085938, -1.9073486328125e-06, -0.00011074344365624711, -5.841247457283316e-06, -0.6613194346427917, -1.2040138244628906e-05], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.0224441275423715}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -1.1759026050567627, -2.384185791015625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.612040018197149e-05, -0.0006899837171658874, -0.10738193988800049, -5.364416665543104e-06, -5.7220458984375e-06, -0.003917694091796875, 0.0, -0.4714641571044922, -4.768370445162873e-07, -0.0018062591552734375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004407167434692383, -2.622600959512056e-06, -0.010077476501464844, -1.2033281326293945, -1.1444091796875e-05, -0.000118255615234375, -1.9073486328125e-06, -0.03756284713745117, -0.00014889240264892578, -1.1444091796875e-05, -0.3079509735107422, -2.86102294921875e-05, -0.001354217529296875, -0.8075981140136719, -0.000171661376953125, -0.001728881848976016, -3.814697265625e-06, -0.6695871353149414, -0.0007419586181640625, -0.0006494673434644938, -1.5974044799804688e-05, -0.02569580078125, -3.814697265625e-06, -0.0041145081631839275, -2.2411306417779997e-05, 0.0, -0.035378456115722656, -3.814697265625e-06, -2.0265579223632812e-05, -1.4424220353248529e-05, -0.22484707832336426, -5.125986263010418e-06], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 1, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.077807893239537}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>", 73, 146, "7", "<EOS>", "1", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=Null)))\n\n    def create_minion(self, player):\n        return Minion(7, 1)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -1.1759026050567627, -2.384185791015625e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -3.612040018197149e-05, -0.0006899837171658874, -0.10738193988800049, -5.364416665543104e-06, -5.7220458984375e-06, -0.003917694091796875, 0.0, -0.4714641571044922, -4.768370445162873e-07, -0.0018062591552734375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004407167434692383, -2.622600959512056e-06, -0.010077476501464844, -0.9018306732177734, -0.0024700164794921875, -0.00048613533726893365, -0.0038285255432128906, -0.34379327297210693, -0.0016309935599565506, -0.000335693359375, -0.26680147647857666, -5.3524967370321974e-05, -0.121490478515625, -0.06014442443847656, -0.0008392333984375, -1.9073486328125e-06, -0.0005690882680937648, -0.0069561004638671875, -2.503394853192731e-06, -0.013965606689453125, -0.00011444091796875, -4.1961669921875e-05, -0.0020093917846679688, -2.47955322265625e-05, -0.2702312469482422, -1.9073486328125e-06, -0.004463672637939453, -0.0007435083389282227, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001458287239074707, -3.099436753473128e-06, -0.5898551940917969, -0.0003986358642578125, -8.7738037109375e-05, 0.0, -0.009328842163085938, -1.9073486328125e-06, -0.00011074344365624711, -5.841247457283316e-06, -0.7268471121788025, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.08795988414942}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 73, 146, "7", "<EOS>", "1", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=IsMinion(), condition=IsMinion())))\n\n    def create_minion(self, player):\n        return Minion(7, 1)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -0.9525594711303711, -0.0016307830810546875, -0.0004371403774712235, -0.0031790733337402344, -0.3337583541870117, -0.0016471147537231445, -0.00028228759765625, -0.20723004639148712, -5.125999450683594e-05, -0.13473892211914062, -0.06873321533203125, -0.000843048095703125, -1.9073486328125e-06, -0.000584466615691781, -0.007358551025390625, -2.503394853192731e-06, -0.0140533447265625, -0.0001163482666015625, -3.62396240234375e-05, -0.002010345458984375, -2.47955322265625e-05, -0.26421546936035156, -1.9073486328125e-06, -0.004452228546142578, -0.0007454156875610352, -0.000217437744140625, -2.86102294921875e-05, -9.72747802734375e-05, -0.001500248908996582, -3.099436753473128e-06, -0.851231575012207, -2.288818359375e-05, -0.010239720344543457, -0.0051157474517822266, -0.0002498626708984375, -0.0068454742431640625, -5.7220458984375e-06, -7.224082219181582e-05, -0.00010489867418073118, -1.2236253023147583, -4.768370445162873e-07], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}, {"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.251268065105101}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 44, 168, "Give", "<EOS>", "<UNK>", "Attack", "<EOS>", "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>", 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(<UNK>Attack(1)),\n            MinionSelector(condition=Null, players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -0.9525594711303711, -0.0016307830810546875, -0.0004371403774712235, -0.0031790733337402344, -0.3337583541870117, -0.0016471147537231445, -0.00028228759765625, -0.20723004639148712, -5.125999450683594e-05, -0.13473892211914062, -0.06873321533203125, -0.000843048095703125, -1.9073486328125e-06, -0.000584466615691781, -0.007358551025390625, -2.503394853192731e-06, -0.0140533447265625, -0.0001163482666015625, -3.62396240234375e-05, -0.002010345458984375, -2.47955322265625e-05, -1.5249719619750977, -0.0034198760986328125, -7.05718994140625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.86102294921875e-05, -0.4371519088745117, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -0.0076525211334228516, -1.8119790183845907e-05, 0.0, -0.11295223236083984, -1.9073486328125e-06, -6.532669067382812e-05, -3.3378044463461265e-05, -0.28238439559936523, -5.113947918289341e-05], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole1": "<UNK>Attack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"keywords": [{"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}, {"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.251328746261798}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Kill", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Kill(), MinionSelector(\n            Attack<UNK>Than<UNK>EqualTo(1), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -1.5735292434692383, -0.001796722412109375, -0.844364583492279, -0.0018780202371999621, -0.3379936218261719, -3.24249267578125e-05, -7.62939453125e-06, 0.0, -0.0021632909774780273, -2.288818359375e-05, 0.0, -0.0124969482421875, -0.1388988494873047, -2.47955322265625e-05, -0.0001010894775390625, 0.0, -0.21060152351856232, -0.050588011741638184, -0.43551868200302124, -0.10003358870744705, -0.04095848277211189, -0.008860349655151367, -8.344650268554688e-06, -7.82012939453125e-05, -0.00022125244140625, -4.00543212890625e-05, -0.06058604642748833, -5.7220458984375e-06, -0.0002880096435546875, 0.0, -0.272372841835022, -1.728534698486328e-05, -1.9073486328125e-06, -0.010085105895996094, -3.814697265625e-06, -3.2782554626464844e-05, -1.7642851162236184e-05, -0.1082848310470581, -9.179088920063805e-06], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"hole0": "Kill", "_type": "Template38"}, {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.365137013621698}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "7", "<EOS>", "1", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(1))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(7, 1)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -1.1478099822998047, -1.1444091796875e-05, -0.0001163482666015625, 0.0, -0.03788292407989502, -0.00013744831085205078, -9.5367431640625e-06, -0.3166799545288086, -3.0517578125e-05, -0.001373291015625, -0.8335332870483398, -0.0001773834228515625, -0.0016836058348417282, -3.814697265625e-06, -0.6494836807250977, -0.000728607177734375, -0.0006659189239144325, -1.5974044799804688e-05, -0.02631378173828125, -3.814697265625e-06, -0.004205464851111174, -2.2411306417779997e-05, 0.0, -0.03563690185546875, -3.814697265625e-06, -2.0265579223632812e-05, -1.4424220353248529e-05, -1.6645927429199219, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 1, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.874370705939739}, {"choice_history": [55, 124, 221, 63, 103, "Gorehowl", "<EOS>", 208, 37, 125, "Weapon", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Gorehowl", "<EOS>", 39, 130, "7", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "1", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "7", "<EOS>", "7", "<EOS>"], "inferred_code": "class Gorehowl(WeaponCard):\n\n    def __init__(self):\n        super().__init__('Gorehowl', 7, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(1()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector())]), SelfSelector())\n            )\n\n    def create_minion(self, player):\n        return Minion(7, 7)\n", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -1.1444091796875e-05, -1.33514404296875e-05, -3.814697265625e-06, -0.0002985746832564473, -0.011195098981261253, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0007963180541992188, -5.745887756347656e-05, -1.9073486328125e-06, -6.4849853515625e-05, -0.867375373840332, 0.0, -3.099436753473128e-06, -4.768370445162873e-07, 0.0, -2.09808349609375e-05, 0.0, -3.266303247073665e-05, -2.6345251171733253e-05, -3.4332275390625e-05, -3.4332275390625e-05, 0.0, -1.9073486328125e-06, -0.0020751953125, -4.1961669921875e-05, 0.0, -7.62939453125e-06, 0.0, -7.033323527139146e-06, -3.254413604736328e-05, -2.1457672119140625e-06, -4.768370445162873e-07, -0.08523750305175781, -7.82012939453125e-05, -9.5367431640625e-06, -1.0848005331354216e-05, -0.016366004943847656, -4.38690185546875e-05, 0.0, -0.0008999062702059746, -1.7642903912928887e-05, 0.0, 0.0, -4.57763671875e-05, 0.0, -1.621236151549965e-05, -5.006789797334932e-05, -0.5750973224639893, -1.1920928244535389e-07, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.00020515918731689453, -6.425174069590867e-05, -0.10306274890899658, -2.1457672119140625e-06, -1.9073486328125e-06, -0.00559234619140625, 0.0, -0.47303009033203125, -2.3841855067985307e-07, -0.001735687255859375, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.0004674196243286133, -1.9073468138230965e-06, -0.00899505615234375, -1.1478099822998047, -1.1444091796875e-05, -0.0001163482666015625, 0.0, -0.03788292407989502, -0.00013744831085205078, -9.5367431640625e-06, -0.3166799545288086, -3.0517578125e-05, -0.001373291015625, -0.686070442199707, -0.000598907470703125, -2.09808349609375e-05, 0.0, -0.8996115922927856, -0.00123511569108814, -6.103515625e-05, -0.3798398971557617, -5.7220458984375e-06, -0.14998263120651245, -0.11173882335424423, -0.0001583099365234375, -0.000286102294921875, -5.7220458984375e-06, 0.0, -0.24790775775909424, -1.52587890625e-05, -3.576272320060525e-06, -0.0048618316650390625, -0.07754039764404297, -0.0004215240478515625, -0.00013625621795654297, -0.00010120868682861328, -0.003957033157348633, -0.0062808990478515625, 0.0, -0.00960409827530384, -4.1961669921875e-05, -3.24249267578125e-05, 0.0, -0.0001538989454274997, -3.147101233480498e-05, 0.0, -0.2732410430908203, 0.0, -0.045789241790771484, -4.0531034755986184e-05, -1.1920928244535389e-07, -0.19580078125, -7.62939453125e-06, -1.4662741705251392e-05, -1.2993727978027891e-05, -0.1871037483215332, -6.556489552167477e-06], "model_output": {"body": [{"name": "Gorehowl", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Gorehowl", "_type": "Str"}, {"n": 7, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"args": [{"hole0": "1", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 7, "_type": "Template11"}], "bases": [{"id": "WeaponCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.93998687984363}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -5.7220458984375e-06, -21.50309181213379], "model_output": {"body": [], "_type": "Module"}, "score": -21.50309944152832}]}
{"gold_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, False, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -0.04530489444732666, 0.0, 0.0, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.075552376685664e-05, -0.3799210786819458, -0.0002331733558094129, -5.340576171875e-05, -1.33514404296875e-05, -8.463859558105469e-06, -9.5367431640625e-06, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.000179290771484375, 0.0, -0.0067615509033203125, -5.555152893066406e-05, -0.001514434814453125, -0.0003948211669921875, -1.883486947917845e-05, -8.344646857949556e-07, 1.1709164482454071e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.46582771642214027}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -0.04530489444732666, 0.0, 0.0, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.075552376685664e-05, -1.1762133836746216, -9.5367431640625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.4901146641932428e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.00016021728515625, 0.0, -0.005359649658203125, -5.936622619628906e-05, -0.00125885009765625, -0.00037384033203125, -1.7642802049522288e-05, -9.536738616588991e-07, -1.98667748918524e-09, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.26020432802612}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -4.11798620223999, -7.62939453125e-06, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -0.0001277923583984375, -2.2411095415009186e-05, -0.1466846466064453, -7.62939453125e-06, -4.9591064453125e-05, -1.9073486328125e-05, -2.467625745339319e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001506805419921875, 0.0, -0.005257606506347656, -6.318092346191406e-05, -0.0013523101806640625, -0.0003757476806640625, -1.704677015368361e-05, -9.536738616588991e-07, -9.556027862345218e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.303455008123237}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Hound", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 82, 170, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 0, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -3.8586883544921875, -0.0013551712036132812, -4.57763671875e-05, -1.52587890625e-05, 0.0, -4.9591064453125e-05, -6.878376007080078e-05, -0.00012981891632080078, -2.0265579223632812e-06, -0.03394889831542969, -5.7220458984375e-05, -2.86102294921875e-05, -1.2636161045520566e-05, -0.0013873650459572673, -1.33514404296875e-05, -3.24249267578125e-05, -0.36647966504096985, -3.814697265625e-06, -1.9073486328125e-06, -1.33514404296875e-05, -7.62939453125e-06, 0.0, -1.9073486328125e-06, -6.675708846159978e-06, -0.3174872398376465, 0.0, 0.0, -7.62939453125e-06, -9.5367431640625e-06, -1.9073486328125e-06, -1.71661376953125e-05, -1.3112935448589269e-05, -0.025714993476867676, -6.949891394469887e-05, -0.0003414154052734375, -5.53131103515625e-05, -3.0875205993652344e-05, -1.1920928244535389e-07, -6.4849853515625e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002269744873046875, -1.9073468138230965e-06, -0.0009860992431640625, -3.4570634852570947e-06, -0.0076885223388671875, -2.6702880859375e-05, -0.0014905929565429688, -8.2254373410251e-06, -1.9073486328125e-06, -0.0003795623779296875, -1.9073486328125e-06, -0.00010752674279501662, -2.4437606043647975e-05, -4.38690185546875e-05, -0.011116266250610352, -4.768370445162873e-07, -8.7738037109375e-05, -0.24326801300048828, -2.6702880859375e-05, -3.933828338631429e-05, -8.284817158710212e-05, -5.483530185301788e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": 1, "_type": "Template34"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.87801775179544}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.PALADIN, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -4.777690410614014, -4.768370445162873e-07, -3.4332275390625e-05, 0.0, -1.1444091796875e-05, 0.0, -4.76837158203125e-05, -4.386805812828243e-05, -0.11429989337921143, -9.5367431640625e-06, -5.7220458984375e-05, -2.288818359375e-05, -2.5272298444178887e-05, -1.1444091796875e-05, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001506805419921875, 0.0, -0.005401611328125, -5.936622619628906e-05, -0.00121307373046875, -0.0003795623779296875, -1.7285183275816962e-05, -9.536738616588991e-07, 1.1721533610398183e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.930751336012904}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "FREE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            FREE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -0.04530489444732666, 0.0, 0.0, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.075552376685664e-05, -4.9582014083862305, -2.0265579223632812e-06, -3.0517578125e-05, -9.5367431640625e-06, -9.536741345073096e-06, -1.1444091796875e-05, -3.62396240234375e-05, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.09808349609375e-05, 0.0, -0.0001735687255859375, 0.0, -0.005402565002441406, -5.745887756347656e-05, -0.001308441162109375, -0.0003795623779296875, -1.8596454538055696e-05, -9.536738616588991e-07, -3.5959271826868644e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "FREE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.0422675737685125}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -4.86749792098999, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.447716102935374e-05, -0.3989907503128052, -7.748603820800781e-06, -4.38690185546875e-05, -3.4332275390625e-05, -2.0980805857107043e-05, -9.5367431640625e-06, -2.288818359375e-05, -5.7220458984375e-06, -1.9073486328125e-06, -3.814697265625e-06, -3.814697265625e-06, -7.62939453125e-06, 0.0, -2.47955322265625e-05, 0.0, -0.000156402587890625, 0.0, -0.005112648010253906, -6.318092346191406e-05, -0.0012683868408203125, -0.0003795623779296875, -1.7523592759971507e-05, -9.536738616588991e-07, -7.171987590481876e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.305005919783397}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -4.852602481842041, -4.6372413635253906e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -6.544376083184034e-05, -0.454748272895813, -9.655952453613281e-06, -3.814697265625e-05, -2.09808349609375e-05, -1.7285328794969246e-05, -9.5367431640625e-06, -2.288818359375e-05, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -7.62939453125e-06, 0.0, -2.288818359375e-05, 0.0, -0.000152587890625, 0.0, -0.00522613525390625, -6.139278411865234e-05, -0.0012874603271484375, -0.0003757476806640625, -1.704677015368361e-05, -9.536738616588991e-07, -7.171987590481876e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.346002351458409}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 82, 170, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, MINION_TYPE.BEAST)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -3.8586883544921875, -0.0013551712036132812, -4.57763671875e-05, -1.52587890625e-05, 0.0, -4.9591064453125e-05, -6.878376007080078e-05, -0.00012981891632080078, -2.0265579223632812e-06, -0.03394889831542969, -5.7220458984375e-05, -2.86102294921875e-05, -1.2636161045520566e-05, -0.0013873650459572673, -1.33514404296875e-05, -3.24249267578125e-05, -1.3829127550125122, -5.7220458984375e-06, -1.52587890625e-05, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -1.9073486328125e-06, -8.463837730232626e-06, -0.16093873977661133, 0.0, 0.0, -7.62939453125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -1.71661376953125e-05, -1.4185804502631072e-05, -0.028303146362304688, -6.258473149500787e-05, -0.000263214111328125, -8.20159912109375e-05, -3.504753112792969e-05, -1.1920928244535389e-07, -5.340576171875e-05, 0.0, -2.47955322265625e-05, 0.0, -0.0002574920654296875, -2.264974000354414e-06, -0.0009479522705078125, -3.099436753473128e-06, -0.007758140563964844, -2.86102294921875e-05, -0.0014791488647460938, -8.2254373410251e-06, -1.9073486328125e-06, -0.000415802001953125, -1.9073486328125e-06, -0.00010538098285906017, -2.4318398573086597e-05, -4.57763671875e-05, -0.010993242263793945, -4.768370445162873e-07, -8.7738037109375e-05, -0.24082469940185547, -2.6702880859375e-05, -3.898067006957717e-05, -8.320577762788162e-05, -5.423928814707324e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": 1, "_type": "Template34"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.737962423154229}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -4.852602481842041, -4.6372413635253906e-05, -3.814697265625e-06, 0.0, -1.71661376953125e-05, 0.0, -2.47955322265625e-05, -6.544376083184034e-05, -1.0215102434158325, -6.854531238786876e-05, -6.866455078125e-05, -7.62939453125e-06, -1.2159347534179688e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.000171661376953125, 0.0, -0.006622314453125, -5.745887756347656e-05, -0.00154876708984375, -0.000396728515625, -1.8119628293788992e-05, -8.344646857949556e-07, -4.789111471836804e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.914539109975962}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -4.86749792098999, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -3.62396240234375e-05, -5.447716102935374e-05, -1.1197463274002075, -0.00011503692803671584, -4.38690185546875e-05, -1.52587890625e-05, -1.060962586052483e-05, -1.1444091796875e-05, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.47955322265625e-05, 0.0, -0.0001811981201171875, 0.0, -0.006458282470703125, -5.745887756347656e-05, -0.001407623291015625, -0.000400543212890625, -1.895407694973983e-05, -8.344646857949556e-07, -2.1103687686263584e-09, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.027376306039045}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Hound", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.\n            COMMON, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -0.0008678436279296875, -5.7220458984375e-06, -2.47955322265625e-05, -0.021989822387695312, -3.0517578125e-05, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -7.033347174001392e-06, -3.635883331298828e-05, -5.173683166503906e-05, -3.814697265625e-06, -0.0016269683837890625, -4.00543212890625e-05, -3.814697265625e-06, -7.271765298355604e-06, -0.0006836230168119073, -3.814697265625e-06, -1.9073486328125e-06, -0.0004667035536840558, 0.0, 0.0, 0.0, -1.9073486328125e-05, 0.0, -2.09808349609375e-05, -3.981518239015713e-05, -0.04530489444732666, 0.0, 0.0, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -1.71661376953125e-05, -3.075552376685664e-05, -0.3799210786819458, -0.0002331733558094129, -5.340576171875e-05, -1.33514404296875e-05, -8.463859558105469e-06, -9.5367431640625e-06, -2.86102294921875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.7220458984375e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -2.6702880859375e-05, 0.0, -0.000179290771484375, 0.0, -5.62966251373291, -2.86102294921875e-05, -0.0075740814208984375, -0.0003261566162109375, -5.912571577937342e-05, -9.536738616588991e-07, -1.2044642971886788e-07, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Hound", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.094733367601506}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 74, 153, "Hound", "<EOS>", "1", "<EOS>", "FREE", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.FREE,\n            minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -0.0005950927734375, -1.1444091796875e-05, -1.8715853002504446e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -1.1444091796875e-05, -1.9073486328125e-06, -0.00021693939925171435, -2.741813204920618e-06, -5.91278076171875e-05, -7.120898246765137, -0.019887924194335938, -3.576272320060525e-06, -0.024106111377477646, -2.3841312213335186e-07, -1.1920928244535389e-07, -0.053101181983947754, -4.0531158447265625e-06, -0.0003259180230088532, -2.9325485229492188e-05, -1.33514404296875e-05, -3.814697265625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -3.4332275390625e-05, -5.960462772236497e-07, -0.02587604522705078, -4.053113570989808e-06, -0.0879373550415039, -2.288818359375e-05, -1.585470454301685e-05, -9.298280929215252e-06, -7.381636351055931e-07, -1.0728830375228426e-06, -0.04626654461026192, -1.2755334864777979e-05, -3.24249267578125e-05, -4.00543212890625e-05, -0.0001354217529296875, -1.9073486328125e-06], "model_output": {"body": [{"name": "Hound", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template14", "hole0": "Hound", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "hole1": 1, "hole3": "minion_type", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.384056362819294}, {"choice_history": [55, 124, 221, 63, 103, "Hound", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Hound", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Hound(MinionCard):\n\n    def __init__(self):\n        super().__init__('Hound', 1, CHARACTER_CLASS.ALL, CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 1, charge=True)\n", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -3.0517578125e-05, -3.4332275390625e-05, -0.0002231597900390625, -5.364412118069595e-06, -0.0034498744644224644, -2.86102294921875e-05, -0.000400543212890625, 0.0, -1.7642971215536818e-05, -7.867813110351562e-05, -1.1444091796875e-05, -1.52587890625e-05, -7.912937164306641, -0.013505935668945312, -0.05460093542933464, -9.560451144352555e-05, 2.384222170803696e-07, -4.60137271147687e-05, -0.03486371040344238, -6.198883056640625e-06, -0.012524604797363281, -9.5367431640625e-06, -4.637131132767536e-05, -5.960462772236497e-07, -2.325075547560118e-05, 0.0, -0.031220903620123863, -5.960462772236497e-07, -0.0001373291015625, -1.1444091796875e-05, -0.0001239776611328125, -1.9073486328125e-06], "model_output": {"body": [{"name": "Hound", "body": [{"hole1": 1, "hole0": "Hound", "_type": "Template6", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.064498951692372}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-7.62939453125e-06, -4.00543212890625e-05, -20.356403350830078], "model_output": {"body": [], "_type": "Module"}, "score": -20.3564510345459}]}
{"gold_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Random", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -0.26604747772216797, -0.00025022029876708984, 0.0, -0.058936119079589844, -0.000682830810546875, -0.001522064208984375, -0.00023090839385986328, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.007288575172424316, -1.7642974853515625e-05, -5.7220458984375e-06, -0.000629425048828125, -1.9073486328125e-06, -0.17318403720855713, -0.0006002154550515115, -1.3232229321147315e-05, -8.20159912109375e-05, -7.62939453125e-06, -1.621246337890625e-05, -1.7881377516459906e-06, -0.0006626842659898102, -3.48086905432865e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "RandomPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.7418251604104853}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Hero", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -1.9644622802734375, -0.0023441314697265625, -5.960462772236497e-07, -0.026841163635253906, -2.86102294921875e-05, -1.9073486328125e-06, -0.2701900899410248, -0.0002390107256360352, -2.300739288330078e-05, -0.0001811981201171875, -3.814697265625e-06, -9.059906005859375e-06, -3.099436753473128e-06, -0.0007218121900223196, -6.294118065852672e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "HeroSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.4967051999250884}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -0.26604747772216797, -0.00025022029876708984, 0.0, -0.058936119079589844, -0.000682830810546875, -0.001522064208984375, -0.00023090839385986328, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.007288575172424316, -1.7642974853515625e-05, -5.7220458984375e-06, -0.000629425048828125, -1.9073486328125e-06, -2.476670742034912, -0.006174683570861816, -5.7220458984375e-06, -4.9591064453125e-05, -1.1444091796875e-05, -1.3947487786936108e-05, -9.536738616588991e-07, -0.000577330298256129, -4.744450416183099e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0507743953461386}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Character", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Random", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4),\n            CharacterSelector(Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -2.6223182678222656, -0.00879669189453125, -6.556510470545618e-06, -0.17840194702148438, -0.000385284423828125, -0.0023183822631835938, -0.0001888275146484375, 0.0, -2.86102294921875e-05, -3.814697265625e-06, -0.0258711576461792, -1.454353241570061e-05, -7.62939453125e-06, -0.0008449554443359375, -1.9073486328125e-06, -0.33672547340393066, -0.0004924478125758469, -1.1205671398784034e-05, -6.866455078125e-05, -5.7220458984375e-06, -1.633167266845703e-05, -1.9073468138230965e-06, -0.0006906984490342438, -3.445106995059177e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "RandomPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "CharacterSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.408827955098218}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Random", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.MAGE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -3.057889699935913, -0.0003052949905395508, -0.009168465621769428, -0.007118386682122946, -5.7220458984375e-06, -0.000682830810546875, -1.9073486328125e-06, -0.001026892219670117, -3.361657581990585e-05, -0.26903820037841797, -0.0002504587173461914, -1.1920928244535389e-07, -0.04705524444580078, -0.0008220672607421875, -0.00147247314453125, -0.0002518892288208008, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -0.007072925567626953, -1.7642974853515625e-05, -5.7220458984375e-06, -0.000698089599609375, -1.9073486328125e-06, -0.1666274070739746, -0.000596997095271945, -1.3232229321147315e-05, -8.0108642578125e-05, -7.62939453125e-06, -1.621246337890625e-05, -1.7881377516459906e-06, -0.0006265638512559235, -3.695445047924295e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "RandomPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "MAGE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.688913350257387}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Random", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -3.1596171855926514, -3.218650817871094e-05, -0.004245451185852289, -0.00020180172577966005, -1.1444091796875e-05, -8.392333984375e-05, 0.0, -0.005183656234294176, -1.728522875055205e-05, -0.2697521448135376, -0.00023305416107177734, 0.0, -0.060337066650390625, -0.000644683837890625, -0.0011606216430664062, -0.0002614259719848633, 0.0, -1.52587890625e-05, -3.814697265625e-06, -0.005767703056335449, -1.7642974853515625e-05, -5.7220458984375e-06, -0.000629425048828125, -1.9073486328125e-06, -0.16894888877868652, -0.0006204813835211098, -1.3232229321147315e-05, -7.82012939453125e-05, -7.62939453125e-06, -1.621246337890625e-05, -1.7881377516459906e-06, -0.0006282327813096344, -3.4212658647447824e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "RandomPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7965439260443645}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -0.26604747772216797, -0.00025022029876708984, 0.0, -0.058936119079589844, -0.000682830810546875, -0.001522064208984375, -0.00023090839385986328, -1.9073486328125e-06, -1.33514404296875e-05, -1.9073486328125e-06, -0.007288575172424316, -1.7642974853515625e-05, -5.7220458984375e-06, -0.000629425048828125, -1.9073486328125e-06, -3.6820597648620605, -0.0005050893523730338, -8.583065209677443e-06, -8.7738037109375e-05, -9.5367431640625e-06, -1.406669707648689e-05, -1.5497195136049413e-06, -0.0006586312083527446, -5.304718797560781e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "UserPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.250620543446985}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Is", "Damaged", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (IsDamaged())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -0.26604747772216797, -0.00025022029876708984, 0.0, -3.3382625579833984, -0.0003070831298828125, -1.9073486328125e-06, -0.30849647521972656, -0.34498947858810425, -4.6491513785440475e-06, -0.000125885009765625, -1.9073486328125e-06, -6.5565118347876705e-06, -4.410734163684538e-06, -0.001186609035357833, -5.721913476008922e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "IsDamaged", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.491334914548474}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Hero", "Selector", "<EOS>", 208, 49, 174, "Is", "Damaged", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), HeroSelector(\n            IsDamaged())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -1.9644622802734375, -0.0023441314697265625, -5.960462772236497e-07, -0.026841163635253906, -2.86102294921875e-05, -1.9073486328125e-06, -1.9910458326339722, -0.6863011717796326, -7.271740287251305e-06, -0.0001888275146484375, -1.9073486328125e-06, -6.5565118347876705e-06, -5.960446742392378e-06, -0.0011405942495912313, -7.939067290863022e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "IsDamaged", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "HeroSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.904048679232972}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -0.26604747772216797, -0.00025022029876708984, 0.0, -3.3382625579833984, -0.0003070831298828125, -1.9073486328125e-06, -1.5651016235351562, -0.00019860002794303, -7.748603820800781e-06, -0.0001373291015625, -1.9073486328125e-06, -1.0848045349121094e-05, -2.622600959512056e-06, -0.0007028579129837453, -5.805374530609697e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.402683314736464}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Hero", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -3.1596171855926514, -3.218650817871094e-05, -0.004245451185852289, -0.00020180172577966005, -1.1444091796875e-05, -8.392333984375e-05, 0.0, -0.005183656234294176, -1.728522875055205e-05, -1.8127256631851196, -0.0023326873779296875, -5.960462772236497e-07, -0.02631092071533203, -2.6702880859375e-05, -1.9073486328125e-06, -0.3063341975212097, -0.000251170655246824, -1.919269561767578e-05, -0.0001888275146484375, -3.814697265625e-06, -9.059906005859375e-06, -3.099436753473128e-06, -0.0007237195386551321, -6.44908141111955e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "HeroSelector", "hole3": "Damage", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.436360626218118}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Hero", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.MAGE, battlecry=Battlecry(Damage(4), HeroSelector(\n            EnemyPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -3.057889699935913, -0.0003052949905395508, -0.009168465621769428, -0.007118386682122946, -5.7220458984375e-06, -0.000682830810546875, -1.9073486328125e-06, -0.001026892219670117, -3.361657581990585e-05, -2.1159000396728516, -0.0038281679153442383, -7.152555099310121e-07, -0.02637767791748047, -3.814697265625e-05, -1.9073486328125e-06, -0.2835448086261749, -0.0002565341128502041, -2.300739288330078e-05, -0.0001773834228515625, -3.814697265625e-06, -8.940696716308594e-06, -3.2186455882765586e-06, -0.0007138251676224172, -6.341798871289939e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "HeroSelector", "hole3": "Damage", "hole2": "MAGE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.62514606404136}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Character", "Selector", "<EOS>", 208, 49, 174, "Is", "Damaged", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4),\n            CharacterSelector(IsDamaged())))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -0.09720420837402344, -0.001006599864922464, -0.0006208272534422576, -1.1563301086425781e-05, -3.814697265625e-06, -0.0057070255279541016, -8.344646857949556e-07, -0.10842502117156982, -2.384185791015625e-06, -0.0036344388499855995, -4.7205852752085775e-05, -1.52587890625e-05, -0.0001964569091796875, 0.0, -0.0012736053904518485, -2.6464205802767538e-05, -2.6223182678222656, -0.00879669189453125, -6.556510470545618e-06, -2.071645736694336, -0.00016021728515625, -1.9073486328125e-06, -0.425458699464798, -0.31052181124687195, -6.079655122448457e-06, -0.00018310546875, -1.9073486328125e-06, -6.437302545236889e-06, -5.125986263010418e-06, -0.0013564821565523744, -5.9603295085253194e-05], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "IsDamaged", "_type": "Template38"}], "_type": "Template8", "hole0": "Injured Blademaster", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 3, "hole5": "CharacterSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.672121106811915}, {"choice_history": [55, 124, 221, 63, 103, "Injured", "Blademaster", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 180, "Injured", " ", "Blademaster", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "4", "<EOS>", "7", "<EOS>"], "inferred_code": "class InjuredBlademaster(MinionCard):\n\n    def __init__(self):\n        super().__init__('Injured Blademaster', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 7)\n", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -1.52587890625e-05, -5.340576171875e-05, -5.7220458984375e-06, -0.0016971721779555082, -0.000957030919380486, -0.00011419619113439694, -3.4332275390625e-05, -1.1444091796875e-05, 0.0, -9.059864169103093e-06, -5.900859832763672e-05, -3.361701965332031e-05, -8.0108642578125e-05, -0.0008697509765625, -5.91278076171875e-05, -1.5616416931152344e-05, -1.7881377516459906e-06, -7.62939453125e-06, -0.00011444091796875, -3.4332275390625e-05, -0.0007722375448793173, -2.47952248173533e-05, -3.814697265625e-06, -0.008370399475097656, -5.246298789978027, -3.6358302168082446e-05, -0.00014209726941771805, -2.1457672119140625e-06, -1.9073486328125e-05, -0.006471514701843262, -1.6689286894688848e-06, -0.12117862701416016, -1.311301275563892e-06, -0.3500775694847107, -1.609315222594887e-05, -0.09685254096984863, -5.7220458984375e-06, 0.0, -0.0015392303466796875, -1.33514404296875e-05, -3.8146995393617544e-06, -5.960462772236497e-07, -0.00012564547068905085, -0.00017415361071471125], "model_output": {"body": [{"name": "InjuredBlademaster", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Injured Blademaster", "hole1": 3, "hole5": "PlayerSelector", "hole3": "Draw", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 7, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.836377072510061}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.86102294921875e-05, -4.38690185546875e-05, -21.467639923095703], "model_output": {"body": [], "_type": "Module"}, "score": -21.46771240234375}]}
{"gold_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(AfterAdded(), ActionTag(Damage(\n            1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=None)))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 208, 49, 174, "Is", "Minion", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsMinion()), ActionTag\n            (Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -2.023599863052368, -0.09420430660247803, -0.0010277032852172852, -6.29425048828125e-05, -0.1308450698852539, -3.814697265625e-06, -0.04326026886701584, -0.4316882789134979, -2.0265579223632812e-06, -0.0019378662109375, -3.4332275390625e-05, -1.1444091796875e-05, -9.5367431640625e-06, 0.0, -0.01215207576751709, -0.00020599365234375, -1.9073486328125e-06, -0.000335693359375, -0.0019550323486328125, -0.0023021697998046875, -0.0003005291800945997, -1.9073486328125e-06, -0.0001773834228515625, -0.0012378692626953125, -0.002197265625, -3.814697265625e-06, -0.025141596794128418, -0.005198121070861816, -1.33514404296875e-05, -0.17923831939697266, -0.0048465728759765625, -7.62939453125e-06, -0.004384040832519531, -9.5367431640625e-06, -0.0005474090576171875, -0.0002593994140625, -0.002647876739501953, -2.8848648071289062e-05, 0.0, -0.0046138763427734375, -6.67572021484375e-05, -0.013184547424316406, 0.0, -0.0027179718017578125, -4.38690185546875e-05, -0.0021021366119384766, -0.00033603841438889503, -0.00021648406982421875, -0.0010128021240234375, -4.00543212890625e-05, -0.024567604064941406, -7.152555099310121e-07, -0.004250526428222656, -0.0012226104736328125, -0.0004215240478515625, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"hole0": "IsMinion", "_type": "Template38"}], "hole2": "CardUsed"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.2740343659975224}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(ManaCost(1)),\n            ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7877554893493652, -0.006424567196518183, -4.00543212890625e-05, -0.0010623931884765625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.1595784425735474, -0.10476982593536377, -0.00035500526428222656, -0.004512786865234375, -0.0004787445068359375, -1.9073486328125e-06, -0.0003065243363380432, -2.562999725341797e-05, -0.010344505310058594, -0.003810882568359375, -0.00078582763671875, -3.814697265625e-06, 0.0, -0.025325417518615723, -3.24249267578125e-05, -2.0265579223632812e-06, -0.0014200210571289062, -0.017210006713867188, -0.000606536865234375, -0.001141468994319439, -1.1444091796875e-05, -0.0003719329833984375, -0.000156402587890625, -0.002620697021484375, -3.814697265625e-06, -0.026599407196044922, -0.0021970272064208984, -2.86102294921875e-05, -0.6635007858276367, -0.0025606155395507812, -7.62939453125e-06, -0.0018978118896484375, -7.62939453125e-06, -0.0007572174072265625, -0.0007190704345703125, -0.00503385066986084, -3.635883331298828e-05, 0.0, -0.0053958892822265625, -6.103515625e-05, -0.012540817260742188, 0.0, -0.0029840469360351562, -4.38690185546875e-05, -0.0019458532333374023, -0.000315297394990921, -0.00020313262939453125, -0.000904083251953125, -4.38690185546875e-05, -0.022378921508789062, -7.152555099310121e-07, -0.005095481872558594, -0.0012950897216796875, -0.0003681182861328125, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.5764018895429217}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -1.842032790184021, -0.03546133637428284, -0.0005865782732143998, -0.000423431396484375, -0.003147125244140625, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -0.7950901985168457, -0.08031165599822998, -0.0005933046340942383, -0.011005401611328125, -0.0001373291015625, 0.0, -0.0002331361174583435, -3.135204315185547e-05, -0.004546165466308594, -0.003299713134765625, -0.0004863739013671875, -3.814697265625e-06, 0.0, -0.017186403274536133, -3.24249267578125e-05, -2.0265579223632812e-06, -0.0006351470947265625, -0.011644363403320312, -0.000560760498046875, -0.0008624526672065258, -1.33514404296875e-05, -0.000339508056640625, -0.000148773193359375, -0.002605438232421875, -3.814697265625e-06, -0.02715146541595459, -0.0022525787353515625, -2.6702880859375e-05, -0.6452350616455078, -0.00244903564453125, -9.5367431640625e-06, -0.0019674301147460938, -7.62939453125e-06, -0.0007534027099609375, -0.0007305145263671875, -0.004805088043212891, -3.826618194580078e-05, 0.0, -0.005639076232910156, -6.29425048828125e-05, -0.012521743774414062, 0.0, -0.0030889511108398438, -4.57763671875e-05, -0.0019840002059936523, -0.0003178007318638265, -0.00021266937255859375, -0.00089263916015625, -4.57763671875e-05, -0.022933006286621094, -8.344646857949556e-07, -0.0051250457763671875, -0.001300811767578125, -0.000370025634765625, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}], "hole2": "SpellCast"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.800794716735595}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(ManaCost(1)),\n            ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker())))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7877554893493652, -0.006424567196518183, -4.00543212890625e-05, -0.0010623931884765625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.1595784425735474, -0.10476982593536377, -0.00035500526428222656, -0.004512786865234375, -0.0004787445068359375, -1.9073486328125e-06, -0.0003065243363380432, -2.562999725341797e-05, -0.010344505310058594, -0.003810882568359375, -0.00078582763671875, -3.814697265625e-06, 0.0, -0.025325417518615723, -3.24249267578125e-05, -2.0265579223632812e-06, -0.0014200210571289062, -0.017210006713867188, -0.000606536865234375, -0.001141468994319439, -1.1444091796875e-05, -0.0003719329833984375, -0.000156402587890625, -0.002620697021484375, -3.814697265625e-06, -0.026599407196044922, -0.0021970272064208984, -2.86102294921875e-05, -0.76214599609375, -1.33514404296875e-05, -3.62396240234375e-05, -0.04047107696533203, -1.9073486328125e-06, -0.0016536712646484375, -0.00124359130859375, -0.21678781509399414, -1.5497207641601562e-05, 0.0, -0.0002765655517578125, -5.7220458984375e-06, -0.010892868041992188, 0.0, -0.0002841949462890625, -3.24249267578125e-05, -0.0016080141067504883, -0.00018226951942779124, -0.00010526180267333984], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.884061167613936}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7368779182434082, -0.00015926251944620162, -2.86102294921875e-05, -0.008843421936035156, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.5145493745803833, -0.02646183967590332, -0.00017404556274414062, -0.0002002716064453125, -3.62396240234375e-05, -2.288818359375e-05, -0.013271331787109375, -7.62939453125e-06, -0.31935596466064453, -1.9073486328125e-06, -0.36002349853515625, -7.62939453125e-06, -3.814697265625e-06, -0.0007982254028320312, -9.5367431640625e-06, -5.7220458984375e-06, 0.0, -0.001603841781616211, -0.0001392364501953125, -1.1920928244535389e-07, -0.0003261566162109375, -0.0019369125366210938, -0.004443168640136719, -0.0003669613506644964, -3.814697265625e-06, -0.00042724609375, -0.0004978179931640625, -0.0016231536865234375, -1.9073486328125e-06, -0.03885090351104736, -0.004391670227050781, -1.71661376953125e-05, -0.16021156311035156, -0.008759498596191406, -7.62939453125e-06, -0.004820823669433594, -7.62939453125e-06, -0.0005359649658203125, -0.000518798828125, -0.002335071563720703, -3.075599670410156e-05, 0.0, -0.004988670349121094, -6.103515625e-05, -0.013978958129882812, 0.0, -0.003208160400390625, -4.38690185546875e-05, -0.002218484878540039, -0.0003301977412775159, -0.00020122528076171875, -0.0008792877197265625, -3.814697265625e-05, -0.024261474609375, -8.344646857949556e-07, -0.004424095153808594, -0.0012073516845703125, -0.0004215240478515625, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9593003936464513}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Card", "Used", "<EOS>", 208, 49, 174, "Is", "Spell", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(CardUsed(IsSpell()), ActionTag(\n            Damage(1), CharacterSelector(players=EnemyPlayer(), picker=\n            RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -2.023599863052368, -0.09420430660247803, -0.0010277032852172852, -6.29425048828125e-05, -0.1308450698852539, -3.814697265625e-06, -0.04326026886701584, -1.1838006973266602, -4.482268923311494e-05, -8.7738037109375e-05, -4.76837158203125e-05, -0.000102996826171875, -9.5367431640625e-06, 0.0, -0.0003612041473388672, -6.866455078125e-05, 0.0, -0.00029754638671875, -0.0024585723876953125, -0.0037384033203125, -0.0006548753008246422, -1.9073486328125e-06, -0.0001926422119140625, -0.0010318756103515625, -0.0025577545166015625, -1.9073486328125e-06, -0.03067779541015625, -0.009432673454284668, -1.52587890625e-05, -0.1835651397705078, -0.004619598388671875, -7.62939453125e-06, -0.004858970642089844, -9.5367431640625e-06, -0.0005741119384765625, -0.000247955322265625, -0.002670764923095703, -2.6941299438476562e-05, 0.0, -0.00457763671875, -6.4849853515625e-05, -0.012946128845214844, 0.0, -0.0025053024291992188, -4.1961669921875e-05, -0.002084970474243164, -0.0003340121475048363, -0.00021266937255859375, -0.001071929931640625, -4.00543212890625e-05, -0.024343490600585938, -7.152555099310121e-07, -0.004299163818359375, -0.001220703125, -0.0004215240478515625, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"hole0": "IsSpell", "_type": "Template38"}], "hole2": "CardUsed"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.028689336537809}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(ManaCost(1)),\n            ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7368779182434082, -0.00015926251944620162, -2.86102294921875e-05, -0.008843421936035156, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.8055144548416138, -0.08600246906280518, -0.0003491640090942383, -0.0016384124755859375, -0.001407623291015625, 0.0, -0.00023528188467025757, -2.9325485229492188e-05, -0.0038099288940429688, -0.0024852752685546875, -0.0005550384521484375, -3.814697265625e-06, 0.0, -0.016923069953918457, -2.86102294921875e-05, -2.0265579223632812e-06, -0.0007114410400390625, -0.012898445129394531, -0.0005664825439453125, -0.0008762208744883537, -1.52587890625e-05, -0.000335693359375, -0.0001506805419921875, -0.0024929046630859375, -3.814697265625e-06, -0.02797532081604004, -0.002318263053894043, -2.6702880859375e-05, -0.6582679748535156, -0.0022335052490234375, -7.62939453125e-06, -0.001644134521484375, -7.62939453125e-06, -0.0008544921875, -0.0008068084716796875, -0.006098151206970215, -4.017353057861328e-05, 0.0, -0.005576133728027344, -6.103515625e-05, -0.012383460998535156, 0.0, -0.0030355453491210938, -4.38690185546875e-05, -0.0019344091415405273, -0.00031422468600794673, -0.00021064281463623047, -0.000858306884765625, -4.57763671875e-05, -0.02273845672607422, -8.344646857949556e-07, -0.0051593780517578125, -0.0013065338134765625, -0.0003662109375, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.12760038743761}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(SpellCast(ManaCost(1)),\n            ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker())))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -1.842032790184021, -0.03546133637428284, -0.0005865782732143998, -0.000423431396484375, -0.003147125244140625, -5.7220458984375e-06, -4.1961669921875e-05, 0.0, -0.7950901985168457, -0.08031165599822998, -0.0005933046340942383, -0.011005401611328125, -0.0001373291015625, 0.0, -0.0002331361174583435, -3.135204315185547e-05, -0.004546165466308594, -0.003299713134765625, -0.0004863739013671875, -3.814697265625e-06, 0.0, -0.017186403274536133, -3.24249267578125e-05, -2.0265579223632812e-06, -0.0006351470947265625, -0.011644363403320312, -0.000560760498046875, -0.0008624526672065258, -1.33514404296875e-05, -0.000339508056640625, -0.000148773193359375, -0.002605438232421875, -3.814697265625e-06, -0.02715146541595459, -0.0022525787353515625, -2.6702880859375e-05, -0.7846841812133789, -1.33514404296875e-05, -3.814697265625e-05, -0.03783893585205078, -1.9073486328125e-06, -0.001560211181640625, -0.0013408660888671875, -0.21531438827514648, -1.7404556274414062e-05, 0.0, -0.00028228759765625, -5.7220458984375e-06, -0.010782241821289062, 0.0, -0.0002899169921875, -3.24249267578125e-05, -0.0016270875930786133, -0.00018179271137341857, -0.00010907649993896484], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}], "hole2": "SpellCast"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.144377595090873}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "<UNK>", "Attack", "Equal", "To", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>AttackEqualTo(1)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7368779182434082, -0.00015926251944620162, -2.86102294921875e-05, -0.008843421936035156, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.0475188493728638, -0.3355775773525238, -0.419921875, -0.08793938159942627, -0.000152587890625, -6.29425048828125e-05, -0.0003185272216796875, 0.0, -0.0009314692579209805, -4.601478576660156e-05, -0.003907203674316406, -0.0050411224365234375, -0.000823974609375, -3.814697265625e-06, 0.0, -0.05084717273712158, -2.86102294921875e-05, -1.1920928244535389e-07, -0.0015573501586914062, -0.014296531677246094, -0.0004425048828125, -0.0008988012559711933, -1.52587890625e-05, -0.00037384033203125, -0.0001506805419921875, -0.002429962158203125, -5.7220458984375e-06, -0.026895761489868164, -0.0022802352905273438, -2.47955322265625e-05, -0.6470499038696289, -0.00225830078125, -7.62939453125e-06, -0.0016918182373046875, -7.62939453125e-06, -0.0008220672607421875, -0.000865936279296875, -0.005775809288024902, -4.017353057861328e-05, 0.0, -0.005553245544433594, -6.67572021484375e-05, -0.012253761291503906, 0.0, -0.003078460693359375, -4.38690185546875e-05, -0.0019840002059936523, -0.0003158939362037927, -0.00022590160369873047, -0.00087738037109375, -4.76837158203125e-05, -0.02322673797607422, -8.344646857949556e-07, -0.0053272247314453125, -0.00130462646484375, -0.000370025634765625, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>AttackEqualTo", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.151937704620984}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(ManaCost(1)),\n            ActionTag(Damage(1), CharacterSelector(players=EnemyPlayer(),\n            picker=RandomPicker())))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7368779182434082, -0.00015926251944620162, -2.86102294921875e-05, -0.008843421936035156, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.8055144548416138, -0.08600246906280518, -0.0003491640090942383, -0.0016384124755859375, -0.001407623291015625, 0.0, -0.00023528188467025757, -2.9325485229492188e-05, -0.0038099288940429688, -0.0024852752685546875, -0.0005550384521484375, -3.814697265625e-06, 0.0, -0.016923069953918457, -2.86102294921875e-05, -2.0265579223632812e-06, -0.0007114410400390625, -0.012898445129394531, -0.0005664825439453125, -0.0008762208744883537, -1.52587890625e-05, -0.000335693359375, -0.0001506805419921875, -0.0024929046630859375, -3.814697265625e-06, -0.02797532081604004, -0.002318263053894043, -2.6702880859375e-05, -0.7696371078491211, -1.33514404296875e-05, -3.4332275390625e-05, -0.03924751281738281, -1.9073486328125e-06, -0.001789093017578125, -0.001331329345703125, -0.2298722267150879, -1.7404556274414062e-05, 0.0, -0.000286102294921875, -5.7220458984375e-06, -0.010805130004882812, 0.0, -0.0002899169921875, -3.24249267578125e-05, -0.0016404390335083008, -0.00018107748473994434, -0.00010907649993896484], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.458899225138111}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "<UNK>", "Attack", "Equal", "To", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionSummoned(\n            <UNK>AttackEqualTo(1)), ActionTag(Damage(1), CharacterSelector(\n            players=EnemyPlayer(), picker=RandomPicker())))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7368779182434082, -0.00015926251944620162, -2.86102294921875e-05, -0.008843421936035156, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -1.0475188493728638, -0.3355775773525238, -0.419921875, -0.08793938159942627, -0.000152587890625, -6.29425048828125e-05, -0.0003185272216796875, 0.0, -0.0009314692579209805, -4.601478576660156e-05, -0.003907203674316406, -0.0050411224365234375, -0.000823974609375, -3.814697265625e-06, 0.0, -0.05084717273712158, -2.86102294921875e-05, -1.1920928244535389e-07, -0.0015573501586914062, -0.014296531677246094, -0.0004425048828125, -0.0008988012559711933, -1.52587890625e-05, -0.00037384033203125, -0.0001506805419921875, -0.002429962158203125, -5.7220458984375e-06, -0.026895761489868164, -0.0022802352905273438, -2.47955322265625e-05, -0.7832136154174805, -1.33514404296875e-05, -3.814697265625e-05, -0.03918647766113281, -1.9073486328125e-06, -0.0017414093017578125, -0.0013446807861328125, -0.22320318222045898, -1.7404556274414062e-05, 0.0, -0.000286102294921875, -5.7220458984375e-06, -0.010715484619140625, 0.0, -0.0002956390380859375, -3.24249267578125e-05, -0.0017071962356567383, -0.00018155440920963883, -0.00011861324310302734], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>AttackEqualTo", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.5008449462482005}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(IsType(MINION_TYPE\n            .PIRATE)), ActionTag(Damage(1), CharacterSelector(players=\n            EnemyPlayer(), picker=RandomPicker(), condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7877554893493652, -0.006424567196518183, -4.00543212890625e-05, -0.0010623931884765625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -2.078714370727539, -0.04327213764190674, -5.936622619628906e-05, -0.0006084442138671875, -2.47955322265625e-05, -1.9073486328125e-05, -0.007899284362792969, -7.62939453125e-06, -0.36669063568115234, -1.9073486328125e-06, -0.40500831604003906, -7.62939453125e-06, -3.814697265625e-06, -0.0005893707275390625, -1.33514404296875e-05, -5.7220458984375e-06, 0.0, -0.0014265775680541992, -0.0001354217529296875, -1.1920928244535389e-07, -0.0003376007080078125, -0.0019083023071289062, -0.0044097900390625, -0.00038029858842492104, -3.814697265625e-06, -0.0004444122314453125, -0.00046539306640625, -0.00168609619140625, -1.9073486328125e-06, -0.041988492012023926, -0.004387855529785156, -1.71661376953125e-05, -0.17402172088623047, -0.009477615356445312, -7.62939453125e-06, -0.0048656463623046875, -7.62939453125e-06, -0.00054168701171875, -0.0005168914794921875, -0.002285480499267578, -3.075599670410156e-05, 0.0, -0.004925727844238281, -5.91278076171875e-05, -0.014025688171386719, 0.0, -0.0031833648681640625, -4.38690185546875e-05, -0.002218484878540039, -0.00033043615985661745, -0.00020122528076171875, -0.00087738037109375, -3.62396240234375e-05, -0.023939132690429688, -8.344646857949556e-07, -0.0044193267822265625, -0.0012054443359375, -0.00041961669921875, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.693763616364201}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(\n            Attack<UNK>Than<UNK>Than<UNK>EqualTo(1)), ActionTag(Damage(1),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(),\n            condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7877554893493652, -0.006424567196518183, -4.00543212890625e-05, -0.0010623931884765625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.594356656074524, -0.008301854133605957, -0.004430259577929974, -0.10075914859771729, -0.45719945430755615, -0.29867422580718994, -0.3592003583908081, -0.018754005432128906, -6.67572021484375e-05, -1.1444091796875e-05, -0.0001811981201171875, 0.0, -0.007761021144688129, -0.0001430511474609375, -0.011823654174804688, -0.003780364990234375, -0.0009670257568359375, -7.62939453125e-06, -1.9073486328125e-06, -0.03972733020782471, -1.9073486328125e-05, -1.1920928244535389e-07, -0.01737499237060547, -0.013271331787109375, -0.0004978179931640625, -0.0009146695956587791, -1.52587890625e-05, -0.0005712509155273438, -0.00019073486328125, -0.0026531219482421875, -5.7220458984375e-06, -0.023268461227416992, -0.0021780729293823242, -2.47955322265625e-05, -0.5831518173217773, -0.0029726028442382812, -9.5367431640625e-06, -0.0026531219482421875, -9.5367431640625e-06, -0.0006771087646484375, -0.0008296966552734375, -0.003954410552978516, -3.838539123535156e-05, 0.0, -0.0053005218505859375, -6.103515625e-05, -0.012440681457519531, 0.0, -0.002979278564453125, -4.38690185546875e-05, -0.00201261043548584, -0.0003172047436237335, -0.00020122528076171875, -0.0010585784912109375, -4.38690185546875e-05, -0.023088455200195312, -7.152555099310121e-07, -0.005185127258300781, -0.001285552978515625, -0.000377655029296875, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.101428929935075}, {"choice_history": [55, 124, 221, 63, 103, "Knife", "Juggler", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Knife", " ", "Juggler", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 77, 157, "3", "<EOS>", "2", "<EOS>", "Minion", "Placed", "<EOS>", 208, 32, 101, 19, 125, "Attack", "<UNK>", "Than", "<UNK>", "Equal", "To", "<EOS>", 208, 39, 130, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 218, 54, 197, "players", "<EOS>", 26, 174, "Enemy", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "Random", "Picker", "<EOS>", 54, 197, "condition", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class KnifeJuggler(MinionCard):\n\n    def __init__(self):\n        super().__init__('Knife Juggler', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(3, 2, effects=[Effect(MinionPlaced(\n            Attack<UNK>Than<UNK>EqualTo(1)), ActionTag(Damage(1),\n            CharacterSelector(players=EnemyPlayer(), picker=RandomPicker(),\n            condition=Null)))])\n", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -3.814697265625e-06, -0.010321217589080334, -0.00976794958114624, -0.05612025409936905, -1.9073486328125e-06, -2.47955322265625e-05, 0.0, -3.576278118089249e-07, -8.213520050048828e-05, -4.172325134277344e-06, -2.47955322265625e-05, -0.013268470764160156, -0.00074005126953125, -0.0001951265730895102, -1.0371208190917969e-05, -6.29425048828125e-05, -1.1444091796875e-05, -0.00018799315148498863, -1.311301275563892e-06, -0.000274656864348799, -1.52587890625e-05, -0.15075302124023438, -0.007328987121582031, -4.768369876728684e-07, -1.9907753085135482e-05, -5.7576173276174814e-05, -2.646424763952382e-05, -0.4409373998641968, -0.7877554893493652, -0.006424567196518183, -4.00543212890625e-05, -0.0010623931884765625, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -1.594356656074524, -0.008301854133605957, -0.004430259577929974, -0.10075914859771729, -1.1702321767807007, -0.01945030689239502, -0.000141143798828125, -3.0517578125e-05, -0.0001430511474609375, 0.0, -0.002586298156529665, -6.878376007080078e-05, -0.006455421447753906, -0.005469322204589844, -0.001026153564453125, -7.62939453125e-06, -1.9073486328125e-06, -0.04173767566680908, -2.09808349609375e-05, -1.1920928244535389e-07, -0.017583847045898438, -0.013616561889648438, -0.0004520416259765625, -0.0008919411338865757, -1.52587890625e-05, -0.00048065185546875, -0.0001697540283203125, -0.002513885498046875, -5.7220458984375e-06, -0.02380657196044922, -0.0023020505905151367, -2.47955322265625e-05, -0.6210966110229492, -0.0026884078979492188, -9.5367431640625e-06, -0.002269744873046875, -9.5367431640625e-06, -0.000701904296875, -0.0008716583251953125, -0.00444638729095459, -3.826618194580078e-05, 0.0, -0.0054035186767578125, -6.103515625e-05, -0.012410163879394531, 0.0, -0.003002166748046875, -4.38690185546875e-05, -0.00201261043548584, -0.00031696638325229287, -0.00020694732666015625, -0.0009899139404296875, -4.38690185546875e-05, -0.022966384887695312, -8.344646857949556e-07, -0.005222320556640625, -0.00128936767578125, -0.0003757476806640625, 0.0], "model_output": {"body": [{"name": "KnifeJuggler", "body": [{"hole1": 2, "hole0": "Knife Juggler", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template2", "hole0": 3, "hole4": [{"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "EnemyPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "RandomPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"value": "Null", "_type": "NameConstant"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole3": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Attack<UNK>Than<UNK>EqualTo", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionPlaced"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.1891638220262095}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.6702880859375e-05, -1.9073486328125e-06, -22.284664154052734], "model_output": {"body": [], "_type": "Module"}, "score": -22.284692764282227}]}
{"gold_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(3\n            ), CharacterSelector(condition=IsDamaged(), picker=RandomPicker\n            ())))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 70, 140, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "<UNK>", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(0\n            ), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -1.087120771408081, 0.0, -0.0062122344970703125, -0.04100322723388672, -4.756385533255525e-05, -7.152555099310121e-07, -0.0007443841896019876, -5.364303069654852e-05, -0.039871592074632645, -0.07779145240783691, -1.9073486328125e-06, -0.644325852394104, -0.0032417147886008024, 0.0, -0.000213623046875, 0.0, -0.2183355689048767, -2.0265579223632812e-06, -0.03304755687713623, -1.1444091796875e-05, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template0", "hole0": 0, "hole4": [{"n": 0, "_type": "Num"}], "hole1": 5, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "TurnStarted"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.867816920355608}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 70, 140, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "<UNK>", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(0\n            ), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -1.041788101196289, -0.030382156372070312, -3.2186362659558654e-05, -5.960462772236497e-07, -0.0005568749038502574, -7.319222640944645e-05, -0.10764823108911514, -0.19331181049346924, -1.9073486328125e-06, -1.0319768190383911, -0.00039147381903603673, 0.0, -0.0005168914794921875, 0.0, -0.10482180118560791, -1.9073486328125e-06, -0.04801499843597412, -7.62939453125e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"_type": "Template0", "hole0": 0, "hole4": [{"n": 0, "_type": "Num"}], "hole1": 5, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "TurnStarted"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8130577344380185}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Lightwell", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "EPIC", "<EOS>", 70, 140, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "<UNK>", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ALL, CARD_RARITY.EPIC)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(0\n            ), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -1.7650327682495117, -0.0002155303955078125, -7.247662142617628e-05, -1.1205629562027752e-05, -4.2438456148374826e-05, -1.1920922133867862e-06, -0.08327341079711914, 0.0, -0.5585227012634277, -2.6464460461284034e-05, -0.00672149658203125, -0.19140243530273438, -1.8596565496409312e-05, -2.861018856492592e-06, -0.00012158981553511694, -0.00015031300426926464, -0.009478488937020302, -0.4490966796875, 0.0, -0.45291614532470703, -0.0033671902492642403, -1.9073486328125e-06, -0.0005588531494140625, -1.9073486328125e-06, -0.09680627286434174, -1.9073486328125e-06, -0.015096664428710938, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole3": "EPIC", "hole0": "Lightwell", "_type": "Template7", "hole2": "ALL"}, {"_type": "Template0", "hole0": 0, "hole4": [{"n": 0, "_type": "Num"}], "hole1": 5, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "TurnStarted"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.107640100094386}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 86, 179, "Lightwell", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", "LEGENDARY", "<EOS>", 70, 140, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "<UNK>", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ALL, CARD_RARITY.\n            LEGENDARY)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Heal(0\n            ), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -1.7650327682495117, -0.0002155303955078125, -7.247662142617628e-05, -1.1205629562027752e-05, -4.2438456148374826e-05, -1.1920922133867862e-06, -0.08327341079711914, 0.0, -0.9085946083068848, 0.0, -0.15496826171875, -0.20406436920166016, -1.0967229172820225e-05, -1.9073468138230965e-06, -0.00012385594891384244, -0.00010907154501182958, -0.009503023698925972, -0.3939814567565918, 0.0, -0.4115861654281616, -0.002976963296532631, 0.0, -0.0005512237548828125, -1.9073486328125e-06, -0.1334666609764099, -1.9073486328125e-06, -0.020145177841186523, -1.71661376953125e-05, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole3": "LEGENDARY", "hole0": "Lightwell", "_type": "Template7", "hole2": "ALL"}, {"_type": "Template0", "hole0": 0, "hole4": [{"n": 0, "_type": "Num"}], "hole1": 5, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "TurnStarted"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.5634351531418815}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "ALL", "<EOS>", 70, 140, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.ALL, CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Give(\n            Buff(<UNK>Attack())), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -1.087120771408081, 0.0, -0.0062122344970703125, -0.04100322723388672, -4.756385533255525e-05, -7.152555099310121e-07, -0.0007443841896019876, -5.364303069654852e-05, -0.039871592074632645, -0.07779145240783691, -1.9073486328125e-06, -0.7642217874526978, -0.0027632713317871094, -1.9073486328125e-06, -0.6118392944335938, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -0.20402181148529053, -0.4130983352661133, -0.000179290771484375, -0.018724441528320312, -5.7220458984375e-05, -0.28427743911743164, -0.5070993900299072, 0.0, -0.012575625441968441, 0.0, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "ALL"}, {"_type": "Template0", "hole0": 0, "hole4": [{"args": [{"hole0": "<UNK>Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 5, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnStarted"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.7875313732872655}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 70, 140, "0", "<EOS>", "5", "<EOS>", "Turn", "Started", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "<UNK>", "Attack", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnStarted(), ActionTag(Give(\n            Buff(<UNK>Attack())), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -1.041788101196289, -0.030382156372070312, -3.2186362659558654e-05, -5.960462772236497e-07, -0.0005568749038502574, -7.319222640944645e-05, -0.10764823108911514, -0.19331181049346924, -1.9073486328125e-06, -0.4625483751296997, -0.00036656856536865234, -1.9073486328125e-06, -0.28327178955078125, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.49352312088012695, -0.14979183673858643, -0.000263214111328125, -0.1019439697265625, -3.24249267578125e-05, -0.3980777859687805, -0.6191436052322388, 0.0, -0.024672627449035645, 0.0, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"_type": "Template0", "hole0": 0, "hole4": [{"args": [{"hole0": "<UNK>Attack", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "hole1": 5, "hole5": "SelfSelector", "hole3": "Give", "hole2": "TurnStarted"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.160978698153315}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give(character()), SelfSelector())), Aura(Give(\n            character()), SelfSelector())])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -0.3526182174682617, -9.5367431640625e-06, -0.4142988324165344, -0.4866318702697754, -0.0002307891845703125, 0.0, -0.1594151258468628, -2.9802317840221804e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -0.6250166893005371, -5.841255187988281e-06, -0.001194000244140625, -0.0191497802734375, -3.62396240234375e-05, -2.288818359375e-05, 0.0, -0.7017508745193481, -0.006262779235839844, 0.0, -0.2781515121459961, -1.33514404296875e-05, -0.5453758239746094, -0.4774519205093384, -0.03716278076171875, -1.9073486328125e-06, -0.2925717830657959, -4.172325134277344e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.7379832182687664}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Turn", "Ended", "<EOS>", 208, 49, 174, "Has", "character", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector())), Effect(TurnEnded(Hascharacter()), ActionTag(\n            Give(character()), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -1.3250255584716797, -0.0004177093505859375, -0.09450626373291016, -0.04763031005859375, -0.00026702880859375, -0.16314423084259033, 0.0, -0.00223541259765625, -0.0005035400390625, -0.22035299241542816, -1.1920928244535389e-07, -0.0024356842041015625, -1.1444091796875e-05, -0.0009816880337893963, -1.9073486328125e-06, 0.0, -9.1552734375e-05, -8.20159912109375e-05, -2.47955322265625e-05, 0.0, -0.09128451347351074, -2.3841855067985307e-07, -7.62939453125e-06, -0.6068840026855469, -0.033771514892578125, -5.14984130859375e-05, 0.0, -0.9354943037033081, -0.0020247697830200195, -5.7220458984375e-06, -1.9073486328125e-05, -0.000171661376953125, -1.1444091796875e-05, -0.3141637444496155, -0.016041111201047897, -2.47955322265625e-05, -0.0010128021240234375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.00011324882507324219, -6.4849853515625e-05, -4.172325134277344e-06, -0.002796173095703125, -0.19533157348632812, -1.1444091796875e-05, -0.000186920166015625, 0.0, -0.022365566343069077, -0.0008814334869384766, -3.814697265625e-06, -0.30814647674560547, -1.1444091796875e-05, -0.22022013366222382, -0.468644380569458, -0.000125885009765625, 0.0, -0.09670984745025635, -2.861022494471399e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Hascharacter", "_type": "Template38"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.514868585733005}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Turn", "Ended", "<EOS>", 208, 49, 174, "Has", "character", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give(character()), SelfSelector())), Effect(TurnEnded\n            (Hascharacter()), ActionTag(Give(character()), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -0.3526182174682617, -9.5367431640625e-06, -0.4142988324165344, -0.4866318702697754, -0.0002307891845703125, 0.0, -0.1594151258468628, -2.9802317840221804e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.051180362701416, -1.1920928244535389e-07, -8.0108642578125e-05, -0.009649276733398438, -0.0046329498291015625, -0.0002040863037109375, -1.9073486328125e-06, -0.9148664474487305, -0.0009881258010864258, -1.9073486328125e-06, -0.0001010894775390625, -0.0020961761474609375, -4.00543212890625e-05, -0.7423349618911743, -0.019851865246891975, -4.1961669921875e-05, -0.0003833770751953125, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00010943412780761719, -5.7220458984375e-05, -4.172325134277344e-06, -0.0038013458251953125, -0.2161111831665039, -1.1444091796875e-05, -0.0002002716064453125, 0.0, -0.017652148380875587, -0.0007174015045166016, -3.814697265625e-06, -0.33576107025146484, -1.1444091796875e-05, -0.26350054144859314, -0.45028841495513916, -0.00011444091796875, 0.0, -0.09289920330047607, -2.861022494471399e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Hascharacter", "_type": "Template38"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.881517785475403}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Character", "Attack", "<EOS>", 208, 49, 174, "Is", "Hero", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give(character()), SelfSelector())), Effect(\n            CharacterAttack(IsHero()), ActionTag(Give(character()),\n            SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -0.3526182174682617, -9.5367431640625e-06, -0.4142988324165344, -0.4866318702697754, -0.0002307891845703125, 0.0, -0.1594151258468628, -2.9802317840221804e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.051180362701416, -1.1920928244535389e-07, -8.0108642578125e-05, -0.009649276733398438, -0.0046329498291015625, -0.0002040863037109375, -1.9073486328125e-06, -1.207498550415039, -0.17647898197174072, -0.0001201629638671875, -0.013734817504882812, -0.04707145690917969, -2.6702880859375e-05, -0.015803813934326172, -0.1209648847579956, -3.0517578125e-05, -0.0002803802490234375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -4.7206878662109375e-05, -1.9073486328125e-05, -2.861022494471399e-06, -0.0080718994140625, -0.0762948989868164, -7.62939453125e-06, -0.000213623046875, 0.0, -0.01890074647963047, -0.0017186403274536133, -5.7220458984375e-06, -0.35540199279785156, -9.5367431640625e-06, -0.5673923492431641, -0.5366342067718506, -0.0005016326904296875, 0.0, -0.10259485244750977, -3.099440846199286e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "IsHero", "_type": "Template38"}], "func": {"id": "CharacterAttack", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.069399461954895}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Character", "Attack", "<EOS>", 208, 49, 174, "Is", "Hero", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "Frozen", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give(character()), SelfSelector())), Effect(\n            CharacterAttack(IsHero()), ActionTag(Give(Frozen()),\n            SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -0.3526182174682617, -9.5367431640625e-06, -0.4142988324165344, -0.4866318702697754, -0.0002307891845703125, 0.0, -0.1594151258468628, -2.9802317840221804e-06, 0.0, -2.47955322265625e-05, -3.814697265625e-06, -1.71661376953125e-05, 0.0, -1.051180362701416, -1.1920928244535389e-07, -8.0108642578125e-05, -0.009649276733398438, -0.0046329498291015625, -0.0002040863037109375, -1.9073486328125e-06, -1.207498550415039, -0.17647898197174072, -0.0001201629638671875, -0.013734817504882812, -0.04707145690917969, -2.6702880859375e-05, -0.015803813934326172, -0.1209648847579956, -3.0517578125e-05, -0.0002803802490234375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -4.7206878662109375e-05, -1.9073486328125e-05, -2.861022494471399e-06, -0.0080718994140625, -0.0762948989868164, -7.62939453125e-06, -0.000213623046875, 0.0, -0.01890074647963047, -0.0017186403274536133, -5.7220458984375e-06, -0.35540199279785156, -9.5367431640625e-06, -1.2049802541732788, -0.0007331309607252479, -0.006153106689453125, 0.0, -0.011144280433654785, -2.861022494471399e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "IsHero", "_type": "Template38"}], "func": {"id": "CharacterAttack", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Frozen", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.0852869546407}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Turn", "Ended", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "character", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector())), Effect(TurnEnded(), ActionTag(Give(character(\n            )), SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -1.3250255584716797, -0.0004177093505859375, -0.09450626373291016, -0.04763031005859375, -0.00026702880859375, -0.16314423084259033, 0.0, -0.00223541259765625, -0.0005035400390625, -0.22035299241542816, -1.1920928244535389e-07, -0.0024356842041015625, -1.1444091796875e-05, -0.0009816880337893963, -1.9073486328125e-06, 0.0, -9.1552734375e-05, -8.20159912109375e-05, -2.47955322265625e-05, 0.0, -0.09128451347351074, -2.3841855067985307e-07, -7.62939453125e-06, -0.7877979278564453, -2.09808349609375e-05, -0.28816163539886475, -0.002015233039855957, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.001998305320739746, -7.62939453125e-05, -4.0531158447265625e-06, -0.000354766845703125, -0.016887664794921875, -9.5367431640625e-06, -0.0001220703125, 0.0, -1.089677095413208, -0.0035309791564941406, -3.814697265625e-06, -0.46078014373779297, -3.814697265625e-06, -0.2840964198112488, -0.6910912990570068, -0.0005092620849609375, 0.0, -0.1976407766342163, -4.649161837733118e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "TurnEnded", "_type": "Template38"}, {"args": [{"args": [{"hole0": "character", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.114385342565605}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Turn", "Ended", "<EOS>", 208, 49, 174, "Has", "character", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector())), Effect(TurnEnded(Hascharacter()), ActionTag(\n            Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -1.3250255584716797, -0.0004177093505859375, -0.09450626373291016, -0.04763031005859375, -0.00026702880859375, -0.16314423084259033, 0.0, -0.00223541259765625, -0.0005035400390625, -0.22035299241542816, -1.1920928244535389e-07, -0.0024356842041015625, -1.1444091796875e-05, -0.0009816880337893963, -1.9073486328125e-06, 0.0, -9.1552734375e-05, -8.20159912109375e-05, -2.47955322265625e-05, 0.0, -0.09128451347351074, -2.3841855067985307e-07, -7.62939453125e-06, -0.6068840026855469, -0.033771514892578125, -5.14984130859375e-05, 0.0, -0.9354943037033081, -0.0020247697830200195, -5.7220458984375e-06, -1.9073486328125e-05, -0.000171661376953125, -1.1444091796875e-05, -0.3141637444496155, -0.016041111201047897, -2.47955322265625e-05, -0.0010128021240234375, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -0.00011324882507324219, -6.4849853515625e-05, -4.172325134277344e-06, -0.002796173095703125, -0.19533157348632812, -1.1444091796875e-05, -0.000186920166015625, 0.0, -0.022365566343069077, -0.0008814334869384766, -3.814697265625e-06, -1.7530136108398438, -0.0004863739013671875, -0.1327342987060547, -0.025177001953125, -0.0002346038818359375, -0.09612834453582764, 0.0, -0.0034465789794921875, -0.0004940032958984375, -0.13725803792476654, -1.1920928244535389e-07, -0.0030727386474609375, -1.52587890625e-05, -0.0010491606080904603, -3.814697265625e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "Hascharacter", "_type": "Template38"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.574121503150778}, {"choice_history": [55, 124, 221, 63, 103, "Lightwell", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 84, 177, "Lightwell", "<EOS>", "2", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "0", "<EOS>", "5", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 49, 174, "Turn", "Ended", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class Lightwell(MinionCard):\n\n    def __init__(self):\n        super().__init__('Lightwell', 2, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def create_minion(self, player):\n        return Minion(0, 5, effects=[Effect(TurnEnded(player=BothPlayer()),\n            ActionTag(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector())), Effect(TurnEnded(), ActionTag(Heal(2),\n            PlayerSelector()))])\n", "score_history": [0.0, -9.5367431640625e-06, -3.814697265625e-06, -1.52587890625e-05, -3.814697265625e-06, -0.00861695408821106, -0.4651654064655304, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.0007921457290649414, -4.38690185546875e-05, -2.0265579223632812e-06, -1.9073486328125e-05, -0.24096012115478516, -9.1552734375e-05, -1.8954096958623268e-05, -9.179100743494928e-06, -1.9431096006883308e-05, -1.0967194612021558e-05, -0.5376994609832764, -4.00543212890625e-05, -0.5900802612304688, -2.6702880859375e-05, -1.07287787614041e-05, -5.960462772236497e-07, -3.719300730153918e-05, -3.1351610232377425e-05, -0.06011176109313965, -2.2649763195659034e-05, -0.0003795623779296875, -9.918212890625e-05, -0.1595315933227539, -9.5367431640625e-06, -3.24249267578125e-05, -0.00047206878662109375, 0.0, -0.0007039308547973633, -1.9073486328125e-06, -4.76837158203125e-05, -0.011742591857910156, -0.05647850036621094, -0.0002841949462890625, 0.0, -0.010003805160522461, -0.043853044509887695, -1.9073486328125e-06, -0.0001678466796875, -1.33514404296875e-05, -2.47955322265625e-05, -0.0013352632522583008, 0.0, -5.7220458984375e-06, 0.0, -0.0005645751953125, -3.814697265625e-06, 0.0, -3.814697265625e-05, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.00045752525329589844, -5.340576171875e-05, -2.622604142743512e-06, -9.5367431640625e-05, -0.04946136474609375, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.09747683256864548, -0.0033265352249145508, -1.9073486328125e-06, -1.3250255584716797, -0.0004177093505859375, -0.09450626373291016, -0.04763031005859375, -0.00026702880859375, -0.16314423084259033, 0.0, -0.00223541259765625, -0.0005035400390625, -0.22035299241542816, -1.1920928244535389e-07, -0.0024356842041015625, -1.1444091796875e-05, -0.0009816880337893963, -1.9073486328125e-06, 0.0, -9.1552734375e-05, -8.20159912109375e-05, -2.47955322265625e-05, 0.0, -0.09128451347351074, -2.3841855067985307e-07, -7.62939453125e-06, -0.7877979278564453, -2.09808349609375e-05, -0.28816163539886475, -0.002015233039855957, -3.814697265625e-06, -1.9073486328125e-05, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -0.001998305320739746, -7.62939453125e-05, -4.0531158447265625e-06, -0.000354766845703125, -0.016887664794921875, -9.5367431640625e-06, -0.0001220703125, 0.0, -1.7498486042022705, -0.041500914841890335, -3.814697265625e-06, -0.0007457733154296875, -3.814697265625e-06, -0.9168203473091125, -7.152555099310121e-07, -0.5686359405517578, -1.9073486328125e-06, -0.11636054515838623, -2.0265579223632812e-06, 0.0], "model_output": {"body": [{"name": "Lightwell", "body": [{"hole1": 2, "hole0": "Lightwell", "_type": "Template5", "hole2": "WARRIOR"}, {"hole1": 5, "hole3": {"elts": [{"args": [{"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "TurnEnded", "_type": "Template38"}, {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.780971492049751}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -9.5367431640625e-06, -22.618995666503906], "model_output": {"body": [], "_type": "Module"}, "score": -22.61900520324707}]}
{"gold_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 157, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.PIRATE)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -0.18532085418701172, -2.3841766960686073e-07, -8.463859558105469e-06, -0.00041553983464837074, -7.867813110351562e-06, -0.00643312931060791, -0.027342796325683594, -7.49826431274414e-05, -0.00284576416015625, -0.14474010467529297, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.06534016132354736, -0.00013172626495361328, -3.743171691894531e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0001773834228515625, 0.0, -0.00310516357421875, -7.62939453125e-06, -0.1390848159790039, -1.9073486328125e-06, -1.1444091796875e-05, -2.6702880859375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.002031564712524414, -0.000186920166015625, -1.1920928244535389e-07, -1.71661376953125e-05, -0.0036478042602539062, -0.000881195068359375, -0.0001068115234375, -1.9073486328125e-05, -0.0003110170364379883, -0.001089930534362793, -1.9073486328125e-06, -0.0010063876397907734, -2.47955322265625e-05, -0.0004291534423828125, -1.9073486328125e-06, -0.00020980754925403744, -7.17630609869957e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template2", "hole0": 1, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.1245349021496267}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 70, 140, "1", "<EOS>", "3", "<EOS>", "Spell", "Cast", "<EOS>", "Give", "<EOS>", 208, 46, 171, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -1.298919677734375, -0.019860267639160156, -8.701375918462873e-06, -3.933904736186378e-06, -0.311208575963974, -5.352497100830078e-05, -0.08964954316616058, -0.0014722347259521484, -5.960462772236497e-07, -0.07019677013158798, -4.88758041683468e-06, -1.52587890625e-05, -1.9819145202636719, -0.00408172607421875, -0.0010538101196289062, -5.14984130859375e-05, -0.02446115016937256, -7.271766662597656e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template0", "hole0": 1, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole1": 3, "hole5": "SelfSelector", "hole3": "Give", "hole2": "SpellCast"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.939182198489817}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 157, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.MECH)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -0.18532085418701172, -2.3841766960686073e-07, -8.463859558105469e-06, -0.00041553983464837074, -7.867813110351562e-06, -0.00643312931060791, -0.027342796325683594, -7.49826431274414e-05, -0.00284576416015625, -0.14474010467529297, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.06534016132354736, -0.00013172626495361328, -3.743171691894531e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0001773834228515625, 0.0, -0.00310516357421875, -7.62939453125e-06, -3.003864288330078, -1.1920928244535389e-07, -7.62939453125e-06, -0.000217437744140625, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.02167201042175293, -0.0001697540283203125, -3.576278118089249e-07, -2.09808349609375e-05, -0.008587837219238281, -0.0010395050048828125, -9.34600830078125e-05, -1.52587890625e-05, -0.0002881288528442383, -0.001122117042541504, -1.9073486328125e-06, -0.0010544247925281525, -2.6702880859375e-05, -0.0001544952392578125, -1.9073486328125e-06, -0.0002257816377095878, -7.259756966959685e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template2", "hole0": 1, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.014009409192475}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 157, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 49, 174, "1", "Mana", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(1Mana()),\n            ActionTag(Give(ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -0.18532085418701172, -2.3841766960686073e-07, -8.463859558105469e-06, -0.00041553983464837074, -7.867813110351562e-06, -0.00643312931060791, -0.027342796325683594, -7.49826431274414e-05, -0.00284576416015625, -2.3544979095458984, -2.09808349609375e-05, -0.6791666746139526, -0.24230118095874786, -0.0012688282877206802, -0.001270294189453125, -4.38690185546875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.006995790638029575, -0.000270843505859375, -4.291534423828125e-06, -3.24249267578125e-05, -0.0018968582153320312, -0.0006465911865234375, -0.00011265277862548828, -5.7220458984375e-05, -0.0002747774124145508, -0.0017206668853759766, -3.814697265625e-06, -0.0015377160161733627, -3.24249267578125e-05, -0.000408172607421875, -1.9073486328125e-06, -0.0002801410446409136, -8.511432679370046e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template2", "hole0": 1, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole3": [{"hole0": "1Mana", "_type": "Template38"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.0547680680769815}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 157, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 43, 163, "1", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(Buff(\n            ChangeAttack(1))), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -0.18532085418701172, -2.3841766960686073e-07, -8.463859558105469e-06, -0.00041553983464837074, -7.867813110351562e-06, -0.00643312931060791, -0.027342796325683594, -7.49826431274414e-05, -0.00284576416015625, -3.3833045959472656, -0.0018529891967773438, -0.0002269744873046875, -2.09808349609375e-05, -0.01644134521484375, -0.0047168731689453125, -1.1444091796875e-05, -1.1444091796875e-05, 0.0, -0.02534066140651703, -0.0001583099365234375, -2.503394853192731e-06, -0.0001277923583984375, -0.003498077392578125, -0.0016937255859375, -0.000213623046875, -0.0001049041748046875, -0.0003739595413208008, -0.001291036605834961, -9.5367431640625e-06, -0.0008445046842098236, -3.814697265625e-05, -0.0001068115234375, -1.9073486328125e-06, -0.00015389779582619667, -7.22402473911643e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template2", "hole0": 1, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole3": [{"hole0": 1, "_type": "Template28"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.202367469873224}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 157, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.BEAST)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -0.18532085418701172, -2.3841766960686073e-07, -8.463859558105469e-06, -0.00041553983464837074, -7.867813110351562e-06, -0.00643312931060791, -0.027342796325683594, -7.49826431274414e-05, -0.00284576416015625, -0.14474010467529297, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.06534016132354736, -0.00013172626495361328, -3.743171691894531e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0001773834228515625, 0.0, -0.00310516357421875, -7.62939453125e-06, -3.3326845169067383, -2.0265579223632812e-06, -2.09808349609375e-05, -6.29425048828125e-05, -1.1444091796875e-05, -1.9073486328125e-06, 0.0, -0.011512994766235352, -8.58306884765625e-05, -1.1920928244535389e-07, -3.0517578125e-05, -0.0034265518188476562, -0.0007762908935546875, -8.022785186767578e-05, -1.9073486328125e-05, -0.0003224611282348633, -0.0010031461715698242, -1.9073486328125e-06, -0.0009354627691209316, -2.6702880859375e-05, -0.0003261566162109375, -1.9073486328125e-06, -0.00021636401652358472, -8.20147615741007e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template2", "hole0": 1, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.327000440674475}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 157, "1", "<EOS>", "3", "<EOS>", "Minion", "Summoned", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(MinionSummoned(IsType(\n            MINION_TYPE.MURLOC)), ActionTag(Give(ChangeAttack(1)),\n            SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -0.18532085418701172, -2.3841766960686073e-07, -8.463859558105469e-06, -0.00041553983464837074, -7.867813110351562e-06, -0.00643312931060791, -0.027342796325683594, -7.49826431274414e-05, -0.00284576416015625, -0.14474010467529297, -1.9073486328125e-06, -1.9073486328125e-05, 0.0, -0.06534016132354736, -0.00013172626495361328, -3.743171691894531e-05, -1.9073486328125e-06, -5.7220458984375e-05, 0.0, -0.0001773834228515625, 0.0, -0.00310516357421875, -7.62939453125e-06, -3.5560617446899414, 0.0, -0.00142669677734375, -5.7220458984375e-05, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -0.01922321319580078, -0.0001220703125, -2.3841855067985307e-07, -2.6702880859375e-05, -0.008786201477050781, -0.00081634521484375, -9.72747802734375e-05, -1.33514404296875e-05, -0.000270843505859375, -0.0010892152786254883, -1.9073486328125e-06, -0.0008148117922246456, -3.0517578125e-05, -4.9591064453125e-05, -3.814697265625e-06, -0.00014054591883905232, -7.128632569219917e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template2", "hole0": 1, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole3": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "hole2": "MinionSummoned"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.564476300949025}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 156, "1", "<EOS>", "3", "<EOS>", "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -1.7997360229492188, 1.1920928955078125e-07, -7.080780778778717e-05, -0.005950150545686483, -2.2172922399477102e-05, -1.432254433631897, -0.10564887523651123, -4.88758041683468e-06, -1.1444091796875e-05, -0.57989501953125, -7.43865966796875e-05, -4.38690185546875e-05, 0.0, -0.08307574689388275, -0.000331878662109375, -1.621246337890625e-05, -0.022701263427734375, -0.0041942596435546875, -0.0086517333984375, -0.00013375282287597656, -3.814697265625e-05, -0.0008908510208129883, -0.00124359130859375, -5.7220458984375e-06, -0.0017846501432359219, -1.1444091796875e-05, -0.0007476806640625, -3.814697265625e-06, -0.0002944441221188754, -8.725924999453127e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole4": [{"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "hole0": 1, "_type": "Template2", "hole2": "SpellCast"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.5872239498603165}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 77, 156, "1", "<EOS>", "3", "<EOS>", "Spell", "Cast", "<EOS>", 208, 46, 171, "1", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ChangeAttack(1))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -0.40314674377441406, -1.7997360229492188, 1.1920928955078125e-07, -7.080780778778717e-05, -0.005950150545686483, -2.2172922399477102e-05, -1.432254433631897, -0.10564887523651123, -4.88758041683468e-06, -1.1444091796875e-05, -0.9078950881958008, -0.0002536773681640625, -9.918212890625e-05, -7.641315460205078e-05], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole4": [{"hole0": 1, "_type": "Template35"}], "hole0": 1, "_type": "Template2", "hole2": "SpellCast"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.791322583932896}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 70, 140, "1", "<EOS>", "3", "<EOS>", "Spell", "Cast", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "1", "<EOS>", "condition", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(), ActionTag(Give(\n            ManaChange(-1)), condition()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -1.298919677734375, -0.019860267639160156, -8.701375918462873e-06, -3.933904736186378e-06, -0.311208575963974, -5.352497100830078e-05, -0.08964954316616058, -0.0014722347259521484, -5.960462772236497e-07, -0.07019677013158798, -4.88758041683468e-06, -1.52587890625e-05, -0.24195003509521484, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -0.9847544431686401, -0.0790015459060669, -0.0012584850192070007, -7.05718994140625e-05, -0.0039119720458984375, -0.001598358154296875, -0.0002689361572265625, -9.1552734375e-05, -1.52587890625e-05, -0.0008658238220959902, -2.682209014892578e-05, -0.8465626239776611, -0.8393748998641968], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template0", "hole0": 1, "hole4": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 1, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "condition", "hole3": "Give", "hole2": "SpellCast"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.927330529433476}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(IsType(MINION_TYPE.\n            MURLOC)), ActionTag(Give(ChangeAttack(1)), SelfSelector())),\n            Effect(SpellCast(IsType(MINION_TYPE.PIRATE)), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -2.844329833984375, -1.52587890625e-05, -5.602827513939701e-06, -3.4570634852570947e-06, -0.000256776693277061, -1.1920928244535389e-07, -0.0003744341083802283, -8.344639354618266e-06, -0.0006237030029296875, -5.53131103515625e-05, -0.04317951202392578, -0.0018672943115234375, -8.20159912109375e-05, -9.34600830078125e-05, -1.9073486328125e-06, -0.0009905099868774414, -9.298297300119884e-06, -0.0002117156982421875, -0.00035858154296875, -0.017900466918945312, -5.53131103515625e-05, -1.9073486328125e-06, -0.0027533769607543945, -0.002943277359008789, 0.0, -0.10214424133300781, -0.01062774658203125, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.5452725887298584, -0.0001589059829711914, -1.3589859008789062e-05, 0.0, -0.00031280517578125, -1.1444091796875e-05, -0.0004024505615234375, 0.0, -0.006115913391113281, -1.33514404296875e-05, -0.9268245697021484, 0.0, -0.014051437377929688, -8.392333984375e-05, -1.9073486328125e-06, 0.0, -0.03901338577270508, -8.7738037109375e-05, -2.0265579223632812e-06, -0.000244140625, -0.002117156982421875, -0.0019321441650390625, -0.0002480745315551758, -1.1444091796875e-05, -0.00018513202667236328, -0.0016689300537109375, -3.814697265625e-06, -0.0019439522875472903, -2.09808349609375e-05, -0.0017242431640625, -1.9073486328125e-06, -0.0002424710983177647, -5.900801261304878e-05, 0.0, -6.866455078125e-05, -0.0007495880126953125, -0.0001926422119140625, 0.0, -0.010152459144592285, -2.7775740818469785e-05, -0.009868621826171875, -0.0001773834228515625, -0.0003032684326171875, -4.00543212890625e-05, -1.9073486328125e-06, -0.20253407955169678, -0.010359883308410645, 0.0, -0.09918212890625, -0.0036649703979492188, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.2794860601425171, -8.416175842285156e-05, -7.867813110351562e-06, 0.0, -0.0003070831298828125, -1.52587890625e-05, -0.000331878662109375, 0.0, -0.005991935729980469, -1.1444091796875e-05, -0.8732786178588867, -3.814697265625e-06, -0.0026226043701171875, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.0048329830169677734, -4.9591064453125e-05, -1.9073486328125e-06, -6.67572021484375e-05, -0.0020046234130859375, -0.0028896331787109375, -0.00021946430206298828, -1.33514404296875e-05, -0.0002480745315551758, -0.0019028186798095703, -5.7220458984375e-06, -0.0021059575956314802, -2.09808349609375e-05, -0.0005168914794921875, -1.9073486328125e-06, -0.00021648357505910099, -5.3763025789521635e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.222526141102172}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.ALL, CARD_RARITY.\n            COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(IsType(MINION_TYPE.\n            PIRATE)), ActionTag(Give(ChangeAttack(1)), SelfSelector())),\n            Effect(SpellCast(IsType(MINION_TYPE.PIRATE)), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -0.08805155754089355, 0.0, -2.844329833984375, -1.52587890625e-05, -5.602827513939701e-06, -3.4570634852570947e-06, -0.000256776693277061, -1.1920928244535389e-07, -0.0003744341083802283, -8.344639354618266e-06, -0.0006237030029296875, -5.53131103515625e-05, -0.04317951202392578, -0.0018672943115234375, -8.20159912109375e-05, -9.34600830078125e-05, -1.9073486328125e-06, -0.0009905099868774414, -9.298297300119884e-06, -0.0002117156982421875, -0.00035858154296875, -0.017900466918945312, -5.53131103515625e-05, -1.9073486328125e-06, -0.0027533769607543945, -0.002943277359008789, 0.0, -0.10214424133300781, -0.01062774658203125, -1.71661376953125e-05, -5.7220458984375e-06, 0.0, -0.5452725887298584, -0.0001589059829711914, -1.3589859008789062e-05, 0.0, -0.00031280517578125, -1.1444091796875e-05, -0.0004024505615234375, 0.0, -0.006115913391113281, -1.33514404296875e-05, -1.014460563659668, -1.9073486328125e-06, -0.00066375732421875, -4.1961669921875e-05, -1.9073486328125e-06, 0.0, -0.003929615020751953, -5.7220458984375e-05, -1.9073486328125e-06, -5.340576171875e-05, -0.0015201568603515625, -0.0012359619140625, -0.00021564960479736328, -1.9073486328125e-05, -0.00020611286163330078, -0.0020061731338500977, -7.62939453125e-06, -0.0023689335212111473, -1.9073486328125e-05, -0.0027599334716796875, -1.9073486328125e-06, -0.0002329344133613631, -5.8769666793523356e-05, 0.0, -7.05718994140625e-05, -0.0007343292236328125, -0.00017547607421875, 0.0, -0.011363863945007324, -2.8014157578581944e-05, -0.0105133056640625, -0.0001697540283203125, -0.0002880096435546875, -4.00543212890625e-05, -1.9073486328125e-06, -0.21368157863616943, -0.010385632514953613, 0.0, -0.097991943359375, -0.003482818603515625, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.27762746810913086, -8.416175842285156e-05, -7.867813110351562e-06, 0.0, -0.00030517578125, -1.52587890625e-05, -0.000339508056640625, 0.0, -0.005944252014160156, -1.1444091796875e-05, -0.8809099197387695, -3.814697265625e-06, -0.0026378631591796875, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.0048406124114990234, -5.14984130859375e-05, -1.9073486328125e-06, -6.67572021484375e-05, -0.0020036697387695312, -0.0028934478759765625, -0.00021946430206298828, -1.33514404296875e-05, -0.0002480745315551758, -0.0019066333770751953, -5.7220458984375e-06, -0.0021460119169205427, -2.09808349609375e-05, -0.001811981201171875, -1.9073486328125e-06, -0.0002235168794868514, -5.650475941365585e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "ALL"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.280633278904098}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "WARRIOR", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(IsType(MINION_TYPE.\n            MURLOC)), ActionTag(Give(ChangeAttack(1)), SelfSelector())),\n            Effect(SpellCast(IsType(MINION_TYPE.PIRATE)), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -0.04714775085449219, -3.0517578125e-05, -3.576277322281385e-06, -0.00016331110964529216, -0.00011444091796875, -3.933906555175781e-06, -6.07981564826332e-06, -2.3841855067985307e-07, -2.7473514080047607, -1.9073486328125e-06, -0.20950984954833984, -1.1444091796875e-05, -8.10620349511737e-06, -9.536738616588991e-07, -0.00017583268345333636, 0.0, -0.00031888438388705254, -5.483620952873025e-06, -0.0002918243408203125, -5.14984130859375e-05, -0.08343696594238281, -0.0008544921875, -7.82012939453125e-05, -9.34600830078125e-05, -1.9073486328125e-06, -0.0009461641311645508, -8.106212590064388e-06, -0.00019073486328125, -0.0001373291015625, -0.014909744262695312, -5.340576171875e-05, -1.9073486328125e-06, -0.0024439096450805664, -0.0031137466430664062, 0.0, -0.10942268371582031, -0.009099006652832031, -2.09808349609375e-05, -5.7220458984375e-06, 0.0, -0.5859661102294922, -0.0001723766326904297, -1.3589859008789062e-05, 0.0, -0.0003147125244140625, -9.5367431640625e-06, -0.0004291534423828125, 0.0, -0.006140708923339844, -1.33514404296875e-05, -0.9087715148925781, 0.0, -0.013503074645996094, -8.7738037109375e-05, -1.9073486328125e-06, 0.0, -0.03698587417602539, -8.58306884765625e-05, -2.0265579223632812e-06, -0.0002422332763671875, -0.0021047592163085938, -0.0019016265869140625, -0.0002480745315551758, -1.1444091796875e-05, -0.00018513202667236328, -0.0016498565673828125, -3.814697265625e-06, -0.0019649327732622623, -2.09808349609375e-05, -0.00174713134765625, -1.9073486328125e-06, -0.0002424710983177647, -5.9246423916192725e-05, 0.0, -6.866455078125e-05, -0.0006389617919921875, -0.0001621246337890625, 0.0, -0.010034441947937012, -2.9802298740833066e-05, -0.009778976440429688, -0.0001773834228515625, -0.000308990478515625, -4.00543212890625e-05, -1.9073486328125e-06, -0.20147359371185303, -0.01031792163848877, 0.0, -0.09982490539550781, -0.0036993026733398438, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.27864646911621094, -8.416175842285156e-05, -7.867813110351562e-06, 0.0, -0.0003070831298828125, -1.52587890625e-05, -0.000331878662109375, 0.0, -0.005999565124511719, -1.1444091796875e-05, -0.8744001388549805, -3.814697265625e-06, -0.0025539398193359375, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.0048177242279052734, -4.9591064453125e-05, -1.9073486328125e-06, -6.67572021484375e-05, -0.0020036697387695312, -0.0028858184814453125, -0.00021946430206298828, -1.33514404296875e-05, -0.0002480745315551758, -0.0019028186798095703, -5.7220458984375e-06, -0.002107864711433649, -2.09808349609375e-05, -0.00054168701171875, -1.9073486328125e-06, -0.00021851013298146427, -5.38822278031148e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"hole1": 1, "hole0": "Mana Wyrm", "_type": "Template4", "hole2": "WARRIOR"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.307678886653747}, {"choice_history": [55, 124, 221, 63, 103, "Mana", "Wyrm", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Mana", " ", "Wyrm", "<EOS>", "1", "<EOS>", "PALADIN", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "1", "<EOS>", "3", "<EOS>", "effects", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 101, 19, 125, "Spell", "Cast", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ManaWyrm(MinionCard):\n\n    def __init__(self):\n        super().__init__('Mana Wyrm', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 3, effects=[Effect(SpellCast(IsType(MINION_TYPE.\n            MURLOC)), ActionTag(Give(ChangeAttack(1)), SelfSelector())),\n            Effect(SpellCast(IsType(MINION_TYPE.PIRATE)), ActionTag(Give(\n            ChangeAttack(1)), SelfSelector()))])\n", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.00020656836568377912, -5.1855990022886544e-05, -0.00029465247644111514, -1.9073486328125e-06, -1.71661376953125e-05, -1.9073486328125e-06, -2.0265579223632812e-06, -1.33514404296875e-05, -1.9073486328125e-06, -9.5367431640625e-06, -3.117380142211914, -2.86102294921875e-05, -1.3947486877441406e-05, -0.00016402862092945725, -2.110004425048828e-05, 0.0, -1.228179462486878e-05, 0.0, -0.35322248935699463, 0.0, -0.004781960975378752, -7.152555099310121e-07, -2.6702880859375e-05, 0.0, -0.0007781982421875, 0.0, -3.4332275390625e-05, 0.0, -0.20269203186035156, -1.1920928244535389e-07, -0.012516021728515625, -7.43865966796875e-05, -9.298271834268235e-06, -2.3841855067985307e-07, -0.0007380188326351345, 0.0, -0.0012904400937259197, -8.225420970120467e-06, -0.002101898193359375, -0.00011444091796875, -0.05249595642089844, -0.0001010894775390625, -2.86102294921875e-05, -0.000392913818359375, -1.9073486328125e-06, -0.0006734132766723633, -7.510169325541938e-06, -0.0002899169921875, -0.000133514404296875, -0.014501571655273438, -4.00543212890625e-05, -1.9073486328125e-06, -0.0027167797088623047, -0.004300832748413086, 0.0, -0.09099388122558594, -0.002559661865234375, -5.7220458984375e-06, -5.7220458984375e-06, 0.0, -0.5606064796447754, -0.0002067089080810547, -5.841255187988281e-06, 0.0, -0.000179290771484375, -9.5367431640625e-06, -0.000453948974609375, 0.0, -0.008733749389648438, -1.52587890625e-05, -0.9162206649780273, 0.0, -0.009599685668945312, -9.1552734375e-05, -3.814697265625e-06, 0.0, -0.03411054611206055, -8.20159912109375e-05, -2.0265579223632812e-06, -0.00026702880859375, -0.0020875930786132812, -0.0024051666259765625, -0.0002480745315551758, -1.1444091796875e-05, -0.00018894672393798828, -0.001667022705078125, -3.814697265625e-06, -0.0018943611066788435, -2.09808349609375e-05, -0.002132415771484375, -1.9073486328125e-06, -0.00024318632495123893, -5.996165418764576e-05, 0.0, -7.62939453125e-05, -0.000377655029296875, -0.00012969970703125, 0.0, -0.0085374116897583, -3.0398339731618762e-05, -0.0069522857666015625, -0.00017547607421875, -0.000347137451171875, -3.814697265625e-05, -1.9073486328125e-06, -0.1898958683013916, -0.010178565979003906, 0.0, -0.1019277572631836, -0.0037641525268554688, -5.7220458984375e-06, -3.814697265625e-06, 0.0, -0.279018759727478, -8.416175842285156e-05, -7.867813110351562e-06, 0.0, -0.000301361083984375, -1.52587890625e-05, -0.00032806396484375, 0.0, -0.006072044372558594, -1.1444091796875e-05, -0.8602476119995117, -3.814697265625e-06, -0.0024013519287109375, -6.103515625e-05, -1.9073486328125e-06, 0.0, -0.004750967025756836, -4.9591064453125e-05, -1.9073486328125e-06, -6.67572021484375e-05, -0.0020074844360351562, -0.0028781890869140625, -0.00021946430206298828, -1.33514404296875e-05, -0.0002480745315551758, -0.0018932819366455078, -5.7220458984375e-06, -0.0021497076377272606, -2.09808349609375e-05, -0.0016021728515625, -1.9073486328125e-06, -0.0002235168794868514, -5.62663481105119e-05, 0.0], "model_output": {"body": [{"name": "ManaWyrm", "body": [{"_type": "Template3", "hole0": "Mana Wyrm", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 1, "hole3": "minion_type", "hole2": "PALADIN"}, {"hole1": 3, "hole3": {"elts": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "SpellCast", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 1}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 1, "_type": "Template10", "hole2": "effects"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.894631335066343}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -3.814697265625e-06, -22.18737030029297], "model_output": {"body": [], "_type": "Module"}, "score": -22.187376022338867}]}
{"gold_code": "class MogushanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -0.001468658447265625, -1.9073486328125e-05, -4.768324288306758e-06, -9.536738616588991e-07, -1.2397689715726301e-05, -2.3841830625315197e-06, -0.0011489391326904297, -1.0609570381348021e-05, -0.000705718994140625, -0.0001373291015625, -0.0001201629638671875, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.12078625616027239}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -2.2535266876220703, -1.966952368093189e-05, -0.00013088865671306849, 0.0, -0.0010585784912109375, -2.47955322265625e-05, -4.529910256678704e-06, -8.344646857949556e-07, -1.168244216387393e-05, -2.3841830625315197e-06, -0.0011069774627685547, -9.536697689327411e-06, -0.0006542205810546875, -0.0001373291015625, -0.0001201629638671875, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 1, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.2612724954746}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "7", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 7, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -6.653191566467285, -5.829305519000627e-05, -0.000926454144064337, -2.0265579223632812e-06, -0.0013217926025390625, -7.62939453125e-05, -3.576271865313174e-07, -9.536738616588991e-07, -1.2397689715726301e-05, -3.933898824470816e-06, -0.0012978315353393555, -9.775113539944869e-06, -0.0006008148193359375, -0.0002231597900390625, -0.0001468658447265625, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 7, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.66233673460647}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWardenWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -6.647776126861572, -4.67293502879329e-05, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -2.503394853192731e-06, -4.780292510986328e-05, -1.1920928244535389e-07, -1.52587890625e-05, -0.0006809234619140625, -0.0001506805419921875, -2.2649508537142538e-05, -7.987022399902344e-06, -0.0007801055908203125, -0.001768350601196289, -0.09623575210571289, -6.794924956921022e-06, -0.00026619163691066206, 0.0, -0.0014591217041015625, -2.288818359375e-05, -4.768317012349144e-06, -8.344646857949556e-07, -1.2874520507466514e-05, -2.145764938177308e-06, -0.0011966228485107422, -9.894321920000948e-06, -0.0007038116455078125, -0.000133514404296875, -0.000118255615234375, 0.0], "model_output": {"body": [{"name": "Mogu'shanWardenWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.753577185962847}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shan<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -6.67416524887085, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -0.001468658447265625, -1.9073486328125e-05, -4.768324288306758e-06, -9.536738616588991e-07, -1.2397689715726301e-05, -2.3841830625315197e-06, -0.0011489391326904297, -1.0609570381348021e-05, -0.000705718994140625, -0.0001373291015625, -0.0001201629638671875, 0.0], "model_output": {"body": [{"name": "Mogu'shan<UNK>", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.793686779335758}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "spell_damage", "<EOS>", 21, 130, "1", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, spell_damage=1)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -0.001468658447265625, -1.9073486328125e-05, -4.768324288306758e-06, -9.536738616588991e-07, -1.2397689715726301e-05, -2.3841830625315197e-06, -7.862709045410156, -1.311301275563892e-06, -0.000823974609375, -0.00011444091796875, -0.0009530498646199703, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"n": 1, "_type": "Num"}, "hole0": 1, "_type": "Template10", "hole2": "spell_damage"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.983265318501026}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 81, 167, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, p):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -7.979308128356934, -5.7220458984375e-06, -0.00012242794036865234, -2.7418097943154862e-06, -3.814697265625e-06, -0.0001010894775390625, -5.7220458984375e-06, -7.832049595890567e-05, -0.00010466027742950246, -1.52587890625e-05, -0.051221251487731934, -9.536738616588991e-07, -3.814697265625e-05, -0.0023221969604492188, -0.0003719329833984375, -2.276848681503907e-05, -0.00195791432633996, -7.116541382856667e-05, -1.2040087312925607e-05, -0.03722822666168213, -6.079655122448457e-06, -3.62396240234375e-05, -3.0517578125e-05, -0.000202178955078125, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template31", "hole2": "taunt"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.190424759395682}, {"choice_history": [55, 124, 221, 63, 103, "<UNK>", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class <UNK>Warden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -8.089234352111816, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -0.001468658447265625, -1.9073486328125e-05, -4.768324288306758e-06, -9.536738616588991e-07, -1.2397689715726301e-05, -2.3841830625315197e-06, -0.0011489391326904297, -1.0609570381348021e-05, -0.000705718994140625, -0.0001373291015625, -0.0001201629638671875, 0.0], "model_output": {"body": [{"name": "<UNK>Warden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.209226632086711}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 73, 146, "1", "<EOS>", "7", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -8.357921600341797, -5.53131103515625e-05, -1.9073486328125e-06, -2.3841830625315197e-06, -4.529942543740617e-06, -1.561634780955501e-05], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.475156611867305}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, stealth=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -0.001468658447265625, -1.9073486328125e-05, -4.768324288306758e-06, -9.536738616588991e-07, -1.2397689715726301e-05, -2.3841830625315197e-06, -8.365158081054688, -2.0265579223632812e-06, -0.000423431396484375, -0.00028228759765625, -0.0002079010009765625, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.484737224005357}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 85, 178, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -8.443890571594238, -0.0049800872802734375, -0.0008076773956418037, -3.0517576306010596e-05, -1.728534698486328e-05, -1.9073486328125e-06, -0.03008854389190674, -4.6253204345703125e-05, -0.01105046272277832, 0.0, -0.0019063949584960938, -1.33514404296875e-05, -7.271732101798989e-06, -1.1920928244535389e-07, -2.932505594799295e-05, -5.960462772236497e-07, -0.0021578073501586914, -5.006777428206988e-06, -0.0007114410400390625, -0.0001163482666015625, -0.00014495849609375, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template6", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.499529225913243}, {"choice_history": [55, 124, 221, 63, 103, "Force", "Tank", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class ForceTankWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=True)\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -7.775237083435059, -0.7275087833404541, -0.12331785261631012, -6.9141146923357155e-06, 0.0, -1.52587890625e-05, 0.0, -5.960462772236497e-07, -3.2782554626464844e-05, 0.0, -9.5367431640625e-06, -0.0008697509765625, -0.0001354217529296875, -2.3841574147809297e-05, -7.987022399902344e-06, -0.00061798095703125, -0.0004999637603759766, -0.1011277437210083, -6.675716122117592e-06, -0.0002576090337242931, 0.0, -0.0014019012451171875, -2.09808349609375e-05, -4.887529939878732e-06, -9.536738616588991e-07, -1.2278481335670222e-05, -2.3841830625315197e-06, -0.0012328624725341797, -1.1205610462639015e-05, -0.0007076263427734375, -0.0001430511474609375, -0.000118255615234375, 0.0], "model_output": {"body": [{"name": "ForceTankWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.733366501566081}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 70, 140, "1", "<EOS>", "7", "<EOS>", "Turn", "Ended", "<EOS>", "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", "Self", "Selector", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, effects=[Effect(TurnEnded(), ActionTag(Heal(1),\n            SelfSelector()))])\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -7.543098449707031, -0.028894424438476562, -7.629394076502649e-06, -0.000542493537068367, -1.9430961401667446e-05, -0.00045437371591106057, -0.6024736166000366, -0.0062896013259887695, -8.618831634521484e-05, -0.08968445658683777, -0.000729825347661972, -1.9073486328125e-06, -0.04674816131591797, 0.0, -0.620474636554718, -1.9073486328125e-06, -0.029943345114588737, -2.562999725341797e-05, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"_type": "Template0", "hole0": 1, "hole4": [{"n": 1, "_type": "Num"}], "hole1": 7, "hole5": "SelfSelector", "hole3": "Heal", "hole2": "TurnEnded"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.086631338203688}, {"choice_history": [55, 124, 221, 63, 103, "Mogu'shan", "Warden", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Mogu'shan", " ", "Warden", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", 72, 145, "1", "<EOS>", "7", "<EOS>", "taunt", "<EOS>", 14, 101, 19, 125, "Deathrattle", "<EOS>", 209, 32, 101, 19, 125, "Heal", "<EOS>", 208, 39, 130, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>"], "inferred_code": "class Mogu'shanWarden(MinionCard):\n\n    def __init__(self):\n        super().__init__(\"Mogu'shan Warden\", 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(1, 7, taunt=Deathrattle(Heal(1), MinionSelector(\n            condition=IsMinion())))\n", "score_history": [0.0, -2.09808349609375e-05, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0007939761853776872, -0.0012647256953641772, -0.0013168969890102744, -1.9073486328125e-06, -1.52587890625e-05, 0.0, -7.152555099310121e-07, -8.213520050048828e-05, 0.0, -1.33514404296875e-05, -0.0006923675537109375, -0.000141143798828125, -2.276871418871451e-05, -7.987022399902344e-06, -5.14984130859375e-05, -2.5153160095214844e-05, -0.1124410629272461, -6.675716122117592e-06, -0.00024330410815309733, 0.0, -0.001468658447265625, -1.9073486328125e-05, -4.768324288306758e-06, -9.536738616588991e-07, -1.2397689715726301e-05, -2.3841830625315197e-06, -0.0011489391326904297, -1.0609570381348021e-05, -7.339504241943359, -0.000213623046875, -0.000728607177734375, -5.7220458984375e-06, -0.0055065155029296875, -4.482168878894299e-05, -0.017950057983398438, -0.1531085968017578, -0.0001068115234375, -1.52587890625e-05, -1.9073486328125e-06, -1.551087737083435, -0.02459140121936798, -4.38690185546875e-05, -0.038542747497558594, -1.9073486328125e-06, -0.318830281496048, -3.576278118089249e-07, -0.641697883605957, -0.00433349609375, -0.0002956390380859375, 0.0, -0.054831504821777344, -1.52587890625e-05, 0.0, -0.02443981170654297, -0.000247955322265625, -2.6702880859375e-05, -0.30792438983917236, -4.768370445162873e-07, -0.2726173400878906, -7.62939453125e-06, -0.010083198547363281, -0.08997452259063721, 0.0], "model_output": {"body": [{"name": "Mogu'shanWarden", "body": [{"hole1": 4, "hole0": "Mogu'shan Warden", "_type": "Template4", "hole2": "ALL"}, {"hole1": 7, "hole3": {"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "Heal", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Deathrattle", "_type": "Name"}, "_type": "Call"}, "hole0": 1, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -10.976603319798926}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -2.09808349609375e-05, -21.572057723999023], "model_output": {"body": [], "_type": "Module"}, "score": -21.572078704833984}]}
{"gold_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n\n        class Gain2(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Gain 2 mana crystals', 0, CHARACTER_CLASS\n                    .DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                if player.max_mana < 8:\n                    player.max_mana += 2\n                    player.mana += 2\n                else:\n                    player.max_mana = 10\n                    player.mana += 2\n\n\n        class Draw3(ChoiceCard):\n\n            def __init__(self):\n                super().__init__('Draw three cards', 0, CHARACTER_CLASS.\n                    DRUID, CARD_RARITY.COMMON, False)\n\n            def use(self, player, game):\n                player.draw()\n                player.draw()\n                player.draw()\n        option = player.agent.choose_option([Gain2(), Draw3()], player)\n        option.use(player, game)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Nourish", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3007127310847864e-05, -0.0010843012714758515, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.007110476493835449, -1.3470632438838948e-05, -3.62396240234375e-05, -0.0557403564453125, -0.1576070785522461, -0.000213623046875, -2.2649765014648438e-06, -0.0005805492401123047, -0.0002924968139268458, -3.2544132409384474e-05, -0.13322079181671143, -0.0001209901092806831, -0.0004558563232421875, -3.814697265625e-06, -0.0004769563674926758, -2.3126602172851562e-05, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.924701690673828e-05, -2.6821824576472864e-05, -2.033903121948242, -0.001888275146484375, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.0108642578125e-05, 0.0, -0.04785728454589844, 0.0, -0.0001809436798794195, -3.576278118089249e-07, -0.00034308433532714844, -5.960462772236497e-07, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.933906555175781e-06, -0.00017391436267644167], "model_output": {"body": [{"name": "Nourish", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template5", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.4419297121064574}, {"choice_history": [55, 124, 221, 63, 103, "Nourish", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Nourish", "<EOS>", "5", "<EOS>", "PALADIN", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.PALADIN, CARD_RARITY\n            .RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3007127310847864e-05, -0.0010843012714758515, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.007110476493835449, -1.3470632438838948e-05, -3.62396240234375e-05, -0.0557403564453125, -0.1576070785522461, -0.000213623046875, -2.2649765014648438e-06, -0.0005805492401123047, -0.0002924968139268458, -3.2544132409384474e-05, -2.1530332565307617, -2.622604142743512e-06, -0.000209808349609375, -1.9073486328125e-06, -0.0005093812942504883, -3.2782554626464844e-05, -1.9073486328125e-05, -2.6702880859375e-05, -7.62939453125e-06, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.733966827392578e-05, -2.7417858291300945e-05, -2.055593490600586, -0.0023956298828125, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -8.20159912109375e-05, 0.0, -0.05178642272949219, 0.0, -0.00019250484183430672, -3.576278118089249e-07, -0.0003565549850463867, -5.960462772236497e-07, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -3.933906555175781e-06, -0.0001742719323374331], "model_output": {"body": [{"name": "Nourish", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template5", "hole2": "PALADIN"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.487578411254162}, {"choice_history": [55, 124, 221, 63, 103, "Nourish", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "5", "<EOS>", 222, 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 26, 174, "Mana", "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = Mana<UNK>()\n            <UNK>.summon(player, game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3007127310847864e-05, -0.0010843012714758515, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.007110476493835449, -1.3470632438838948e-05, -3.62396240234375e-05, -0.0557403564453125, -0.1576070785522461, -0.000213623046875, -2.2649765014648438e-06, -0.0005805492401123047, -0.0002924968139268458, -3.2544132409384474e-05, -0.13322079181671143, -0.0001209901092806831, -0.0004558563232421875, -3.814697265625e-06, -0.0004769563674926758, -2.3126602172851562e-05, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.924701690673828e-05, -2.6821824576472864e-05, -0.6286020278930664, -0.0040111541748046875, -3.814697265625e-06, 0.0, 0.0, -0.0005817413330078125, 0.0, -0.02435302734375, 0.0, -6.770858453819528e-05, -8.344646857949556e-07, -0.0004172325134277344, -3.576278118089249e-07, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -0.00023029123258311301, -1.9001827239990234, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -0.040274977684020996, -4.768370445162873e-07, -0.0001506805419921875, -9.5367431640625e-06, -0.0001888275146484375, 0.0, -0.0009260177612304688, -9.059880540007725e-06, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0002200547605752945, -7.867811291362159e-06, -0.0001659393310546875, 0.0, -0.5549418330192566, -0.00042846883297897875, -0.016704559326171875, -0.008568763732910156, -7.62939453125e-06, -0.0001621246337890625, -1.52587890625e-05, 0.0, -0.008675813674926758, -9.536697689327411e-06, -0.0063419342041015625, -3.814697265625e-06, -0.23347234725952148, -0.35249564051628113, -0.0001726150221657008, -0.00041866302490234375, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0068950653076171875, 0.0, -0.012409687042236328, -2.3841855067985307e-07, -0.003994107246398926, 0.0, -0.000102996826171875, -0.0002155303955078125, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.6579751968383789, 0.0, -6.687641143798828e-05, -2.6821824576472864e-05, -0.042672157287597656, -4.57763671875e-05, -3.814697265625e-05, 0.0, -0.012585997581481934, -1.633156898606103e-05, -1.9073486328125e-06, -2.47955322265625e-05, -1.9073486328125e-06, -0.00020599365234375, 0.0, -3.445148468017578e-05, -1.9073468138230965e-06, -0.0003203153028152883, -3.933906555175781e-06], "model_output": {"body": [{"name": "Nourish", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template5", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"hole0": "Mana<UNK>", "_type": "Template38"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.87815447006178}, {"choice_history": [55, 124, 221, 63, 103, "Nourish", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "5", "<EOS>", 222, 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 26, 174, "Mana", "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        for i in range(0, 5):\n            <UNK> = Mana<UNK>()\n            <UNK>.summon(player, player.game, len(player.minions))\n", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3007127310847864e-05, -0.0010843012714758515, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.007110476493835449, -1.3470632438838948e-05, -3.62396240234375e-05, -0.0557403564453125, -0.1576070785522461, -0.000213623046875, -2.2649765014648438e-06, -0.0005805492401123047, -0.0002924968139268458, -3.2544132409384474e-05, -0.13322079181671143, -0.0001209901092806831, -0.0004558563232421875, -3.814697265625e-06, -0.0004769563674926758, -2.3126602172851562e-05, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.924701690673828e-05, -2.6821824576472864e-05, -0.6286020278930664, -0.0040111541748046875, -3.814697265625e-06, 0.0, 0.0, -0.0005817413330078125, 0.0, -0.02435302734375, 0.0, -6.770858453819528e-05, -8.344646857949556e-07, -0.0004172325134277344, -3.576278118089249e-07, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -0.00023029123258311301, -1.9001827239990234, -3.814697265625e-06, -8.96453857421875e-05, 0.0, -0.040274977684020996, -4.768370445162873e-07, -0.0001506805419921875, -9.5367431640625e-06, -0.0001888275146484375, 0.0, -0.0009260177612304688, -9.059880540007725e-06, -3.24249267578125e-05, -1.9073486328125e-06, 0.0, -0.0002200547605752945, -7.867811291362159e-06, -0.0001659393310546875, 0.0, -0.5549418330192566, -0.00042846883297897875, -0.016704559326171875, -0.008568763732910156, -7.62939453125e-06, -0.0001621246337890625, -1.52587890625e-05, 0.0, -0.008675813674926758, -9.536697689327411e-06, -0.0063419342041015625, -3.814697265625e-06, -0.23347234725952148, -0.35249564051628113, -0.0001726150221657008, -0.00041866302490234375, 0.0, -7.62939453125e-06, -7.62939453125e-06, -3.814697265625e-06, -1.9073486328125e-06, -0.0068950653076171875, 0.0, -0.012409687042236328, -2.3841855067985307e-07, -0.003994107246398926, 0.0, -0.000102996826171875, -0.0002155303955078125, 0.0, -7.62939453125e-06, -1.1920928244535389e-07, -0.7439517974853516, 0.0, -1.71661376953125e-05, 0.0, -0.008652687072753906, -1.1920928244535389e-07, -0.0007083415985107422, -2.5033950805664062e-05, -0.0007085800170898438, -9.34600830078125e-05, -4.00543212890625e-05, -1.9073486328125e-06, -0.000492095947265625, -2.50339189733495e-06, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -0.000156402587890625, 0.0, -0.00010311603546142578, -2.622600959512056e-06, -0.0007576940697617829, -2.0265579223632812e-06], "model_output": {"body": [{"name": "Nourish", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template5", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"hole0": "Mana<UNK>", "_type": "Template38"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.91987807928048}, {"choice_history": [55, 124, 221, 63, 103, "Nourish", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 67, 112, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 221, 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "2", "<EOS>", 222, 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 26, 174, "Mana", "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "option", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "option", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if len(player.minions) < 7:\n            for i in range(0, 2):\n                <UNK> = Mana<UNK>()\n                <UNK>.summon(player, player.game, len(player.minions))\n        elif len(player.minions) < 7:\n            super().use(player, game)\n            option.use(player, game)\n            option.use(player, game)\n", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3007127310847864e-05, -0.0010843012714758515, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.007110476493835449, -1.3470632438838948e-05, -3.62396240234375e-05, -0.0557403564453125, -0.1576070785522461, -0.000213623046875, -2.2649765014648438e-06, -0.0005805492401123047, -0.0002924968139268458, -3.2544132409384474e-05, -0.13322079181671143, -0.0001209901092806831, -0.0004558563232421875, -3.814697265625e-06, -0.0004769563674926758, -2.3126602172851562e-05, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.924701690673828e-05, -2.6821824576472864e-05, -0.6286020278930664, -0.0040111541748046875, -3.814697265625e-06, 0.0, 0.0, -0.0005817413330078125, 0.0, -0.02435302734375, 0.0, -6.770858453819528e-05, -8.344646857949556e-07, -0.0004172325134277344, -3.576278118089249e-07, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -0.00023029123258311301, -0.19075584411621094, -0.0019245147705078125, -0.04947662353515625, -0.00183868408203125, -0.036529541015625, -1.9073486328125e-06, -0.0001220703125, -5.7220458984375e-06, -0.0011544227600097656, -4.780211747856811e-05, -2.86102294921875e-05, -0.0023021697998046875, -1.52587890625e-05, -0.06083202362060547, 0.0, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0017921924591064453, -2.0265579223632812e-06, -7.62939453125e-05, -0.0017681121826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.04401130974292755, -0.00015079975128173828, -0.01921558380126953, -0.7275991439819336, -0.0001392364501953125, -4.76837158203125e-05, 0.0, -0.026897549629211426, -2.3841855067985307e-07, -0.04086875915527344, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.000664830207824707, -8.940672159951646e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0010688392212614417, -5.006789251638111e-06, -0.0034494400024414062, -3.814697265625e-06, -0.8234506249427795, -9.536738616588991e-07, -0.030496597290039062, -0.021526336669921875, -1.1444091796875e-05, -8.0108642578125e-05, -1.1444091796875e-05, -1.9073486328125e-06, -0.012274384498596191, -1.6569983927183785e-05, -0.015176773071289062, 0.0, -0.17578907310962677, -0.4365302622318268, -0.0002820491208694875, -0.000415802001953125, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.0077533721923828125, 0.0, -0.014070749282836914, -4.0531158447265625e-06, -0.004339337348937988, 0.0, -0.000152587890625, -5.91278076171875e-05, 0.0, -9.5367431640625e-06, -1.1920928244535389e-07, -0.3365201950073242, 0.0, -1.9073486328125e-05, 0.0, -0.008280754089355469, -1.1920928244535389e-07, -0.0006573200225830078, -2.5033950805664062e-05, -0.0006608963012695312, -8.96453857421875e-05, -4.76837158203125e-05, -1.9073486328125e-06, -0.0005599260330200195, -2.622600959512056e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.000164031982421875, 0.0, -0.00010883808135986328, -2.7418097943154862e-06, -0.0007576941279694438, -2.0265579223632812e-06, -0.00043487548828125, -0.011530876159667969, -0.0021266937255859375, -0.0018901824951171875, -3.814697265625e-06, -0.005687713623046875, -3.814697265625e-06, -0.0006885528564453125, -2.09808349609375e-05, -0.0005710124969482422, -3.099436753473128e-06, -8.20159912109375e-05, -0.006632804870605469, -1.9073486328125e-05, -0.09152412414550781, 0.0, -6.592273712158203e-05, -5.125986263010418e-06, -0.0006092782714404166, -2.1457672119140625e-06, -6.4849853515625e-05, -0.000278472900390625, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, -0.01627584733068943, -5.543231964111328e-05, -1.8245582580566406, -0.18351459503173828, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.0007305145263671875, 0.0, -0.07701040059328079, -2.038461752817966e-05, -0.0001735687255859375, 0.0, -9.5367431640625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -7.85567972343415e-05, -0.26190853118896484, -0.0002803802490234375, -0.0001354217529296875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.16470623016357422, 0.0, -0.3573431968688965, -4.649161837733118e-06, -0.08610820770263672, -1.9073486328125e-06, -7.62939453125e-06, -0.002079010009765625, 0.0, -0.0002117156982421875, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -6.389459304045886e-05, -0.1547870635986328, -0.0002994537353515625, -6.866455078125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.1767416000366211, 0.0, -0.3620462417602539, -6.675719760096399e-06, -0.05738258361816406, -1.9073486328125e-06, -7.62939453125e-06, -0.0012569427490234375, 0.0, -0.000244140625, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -7.748603820800781e-06, -6.282197136897594e-05], "model_output": {"body": [{"name": "Nourish", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template5", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 2, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"hole0": "Mana<UNK>", "_type": "Template38"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}], "orelse": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"id": "option", "_type": "Name"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"id": "option", "_type": "Name"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.970060818103107}, {"choice_history": [55, 124, 221, 63, 103, "Nourish", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Nourish", "<EOS>", "5", "<EOS>", "DRUID", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 67, 112, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 221, 65, 107, 19, 125, "i", "<EOS>", 14, 101, 19, 125, "range", "<EOS>", 209, 39, 130, "0", "<EOS>", 39, 130, "5", "<EOS>", 222, 60, 93, 208, 37, 125, "<UNK>", "<EOS>", 26, 174, "Mana", "<UNK>", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "<UNK>", "<EOS>", "summon", "<EOS>", 210, 37, 125, "player", "<EOS>", 29, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 19, 125, "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "option", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "option", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>"], "inferred_code": "class Nourish(SpellCard):\n\n    def __init__(self):\n        super().__init__('Nourish', 5, CHARACTER_CLASS.DRUID, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if len(player.minions) < 7:\n            for i in range(0, 5):\n                <UNK> = Mana<UNK>()\n                <UNK>.summon(player, player.game, len(player.minions))\n        elif len(player.minions) < 7:\n            super().use(player, game)\n            option.use(player, game)\n            option.use(player, game)\n", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -5.7220458984375e-06, -1.1444091796875e-05, -7.62939453125e-06, -2.3007127310847864e-05, -0.0010843012714758515, 0.0, -0.000152587890625, -1.9073486328125e-06, -0.007110476493835449, -1.3470632438838948e-05, -3.62396240234375e-05, -0.0557403564453125, -0.1576070785522461, -0.000213623046875, -2.2649765014648438e-06, -0.0005805492401123047, -0.0002924968139268458, -3.2544132409384474e-05, -0.13322079181671143, -0.0001209901092806831, -0.0004558563232421875, -3.814697265625e-06, -0.0004769563674926758, -2.3126602172851562e-05, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -1.1682510375976562e-05, 0.0, -9.5367431640625e-06, -1.9073486328125e-06, 0.0, -3.814697265625e-06, -5.924701690673828e-05, -2.6821824576472864e-05, -0.6286020278930664, -0.0040111541748046875, -3.814697265625e-06, 0.0, 0.0, -0.0005817413330078125, 0.0, -0.02435302734375, 0.0, -6.770858453819528e-05, -8.344646857949556e-07, -0.0004172325134277344, -3.576278118089249e-07, -9.5367431640625e-06, -3.814697265625e-05, 0.0, -4.57763671875e-05, 0.0, -1.33514404296875e-05, -1.9073486328125e-06, -3.933906555175781e-06, -0.00023029123258311301, -0.19075584411621094, -0.0019245147705078125, -0.04947662353515625, -0.00183868408203125, -0.036529541015625, -1.9073486328125e-06, -0.0001220703125, -5.7220458984375e-06, -0.0011544227600097656, -4.780211747856811e-05, -2.86102294921875e-05, -0.0023021697998046875, -1.52587890625e-05, -0.06083202362060547, 0.0, -5.7220458984375e-06, -2.3841830625315197e-06, -0.0017921924591064453, -2.0265579223632812e-06, -7.62939453125e-05, -0.0017681121826171875, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.04401130974292755, -0.00015079975128173828, -0.01921558380126953, -0.7275991439819336, -0.0001392364501953125, -4.76837158203125e-05, 0.0, -0.026897549629211426, -2.3841855067985307e-07, -0.04086875915527344, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.000664830207824707, -8.940672159951646e-06, -1.9073486328125e-05, -7.62939453125e-06, 0.0, -0.0010688392212614417, -5.006789251638111e-06, -0.0034494400024414062, -3.814697265625e-06, -1.2289321422576904, -0.00026782992063090205, -0.044058799743652344, -0.07034015655517578, -1.52587890625e-05, -0.000118255615234375, -7.62939453125e-06, 0.0, -0.007634758949279785, -1.728522875055205e-05, -0.02198028564453125, -1.9073486328125e-06, -0.20578254759311676, -0.4121010899543762, -0.00032186496537178755, -0.000518798828125, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -3.814697265625e-06, -1.1444091796875e-05, -0.0074920654296875, 0.0, -0.0167313814163208, -4.0531158447265625e-06, -0.0047866106033325195, 0.0, -0.000156402587890625, -5.91278076171875e-05, 0.0, -9.5367431640625e-06, -1.1920928244535389e-07, -0.3627643585205078, 0.0, -2.09808349609375e-05, 0.0, -0.00852203369140625, -1.1920928244535389e-07, -0.0006582736968994141, -2.5033950805664062e-05, -0.000652313232421875, -9.34600830078125e-05, -4.9591064453125e-05, -1.9073486328125e-06, -0.0005713701248168945, -2.7418097943154862e-06, -1.9073486328125e-06, -3.0517578125e-05, 0.0, -0.0001621246337890625, 0.0, -0.00010788440704345703, -2.861018856492592e-06, -0.0007507799891754985, -2.0265579223632812e-06, -0.00043487548828125, -0.011560440063476562, -0.00211334228515625, -0.00189208984375, -3.814697265625e-06, -0.005680084228515625, -3.814697265625e-06, -0.0007038116455078125, -2.09808349609375e-05, -0.0005786418914794922, -3.2186455882765586e-06, -8.20159912109375e-05, -0.006641387939453125, -1.9073486328125e-05, -0.09154415130615234, 0.0, -6.687641143798828e-05, -5.125986263010418e-06, -0.0006092782714404166, -2.1457672119140625e-06, -6.4849853515625e-05, -0.000278472900390625, -1.71661376953125e-05, -6.103515625e-05, -3.814697265625e-06, -0.015411341562867165, -5.543231964111328e-05, -1.8288946151733398, -0.18330955505371094, -5.340576171875e-05, -3.814697265625e-06, -7.62939453125e-05, -5.7220458984375e-06, 0.0, -0.000732421875, 0.0, -0.07712970674037933, -2.0503824998741038e-05, -0.0001735687255859375, 0.0, -9.5367431640625e-06, -8.58306884765625e-05, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.0517578125e-05, -1.9073486328125e-06, -1.3589859008789062e-05, -7.8199191193562e-05, -0.26183414459228516, -0.0002803802490234375, -0.0001354217529296875, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -0.16462326049804688, 0.0, -0.35797739028930664, -4.649161837733118e-06, -0.08616447448730469, -1.9073486328125e-06, -7.62939453125e-06, -0.0020694732666015625, 0.0, -0.0002155303955078125, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -5.841255187988281e-06, -6.365618901327252e-05, -0.15467357635498047, -0.000301361083984375, -6.866455078125e-05, -3.814697265625e-06, -3.814697265625e-06, 0.0, -0.17705345153808594, 0.0, -0.3630542755126953, -6.675719760096399e-06, -0.05733776092529297, -1.9073486328125e-06, -7.62939453125e-06, -0.0012493133544921875, 0.0, -0.0002460479736328125, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -7.748603820800781e-06, -6.270277663134038e-05], "model_output": {"body": [{"name": "Nourish", "body": [{"hole1": 5, "hole0": "Nourish", "_type": "Template5", "hole2": "DRUID"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"target": {"id": "i", "_type": "Name"}, "iter": {"args": [{"n": 0, "_type": "Num"}, {"n": 5, "_type": "Num"}], "func": {"id": "range", "_type": "Name"}, "_type": "Call"}, "_type": "For", "body": [{"targets": [{"id": "<UNK>", "_type": "Name"}], "value": {"hole0": "Mana<UNK>", "_type": "Template38"}, "_type": "Assign"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "<UNK>", "_type": "Name"}, "_type": "Attribute", "attr": "summon"}, "_type": "Call"}, "_type": "Expr"}]}], "orelse": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"id": "option", "_type": "Name"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"id": "option", "_type": "Name"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.480570402356093}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -4.38690185546875e-05, -22.75984764099121], "model_output": {"body": [], "_type": "Module"}, "score": -22.7598934173584}]}
{"gold_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.add_aura(AuraUntil(ManaChange(-3), CardSelector(condition=\n            IsSpell()), SpellCast()))\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 209, 40, 134, "card_drawn", "<EOS>", 37, 125, "reduce_cost", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -1.1527843475341797, -0.030422210693359375, -0.005396842956542969, -0.011230826377868652, -0.0001837008458096534, -0.000530242919921875, -0.00028228759765625, -1.52587890625e-05, -0.3226527273654938, -0.000269258045591414, -0.006588935852050781, -0.24984073638916016, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014056205749511719, 0.0, -0.029630661010742188, -3.814697265625e-06, -0.0035648345947265625, -9.5367431640625e-06, -0.00112152099609375, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.007651567459106445, -0.001856088638305664, -0.0016994476318359375, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028876063879579306, -0.0018123388290405273, -2.503394853192731e-06, -0.0012359619140625, -0.000896453857421875, -0.010145187377929688, -0.000583648681640625, -6.29425048828125e-05, -0.0001010894775390625, -0.0626828670501709, -8.869168959790841e-05, -0.006392478942871094, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002288818359375, -1.9073486328125e-06, -0.001911163330078125, 0.0, -2.89676299871644e-05, 0.0, -0.0006237030029296875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027167689404450357, -0.00037384033203125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0018711090087890625, 0.0, -0.0012074708938598633, -2.145764938177308e-06, -0.007659667171537876, -0.0001068115234375, -0.2082681655883789, -0.012264251708984375, -9.1552734375e-05, -0.012533174827694893, -0.0004253387451171875, -0.00228118896484375, -1.9073486328125e-06, -0.008324623107910156, -7.05718994140625e-05, -0.0016155242919921875, -7.62939453125e-06, -4.57763671875e-05, -0.068206787109375, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006351470947265625, 0.0, -0.0023784637451171875, -1.1801719665527344e-05, -0.01479958463460207, -1.9073486328125e-06], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.241538126334703}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 209, 40, 134, "card_drawn", "<EOS>", 37, 125, "reduce_cost", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.MAGE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -1.4166855812072754, -3.6954863844584906e-06, -0.05664348602294922, 0.0, -2.0384788513183594e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001678466796875, 0.0, -7.748564530629665e-05, -1.1920928244535389e-07, -9.5367431640625e-06, -9.167194366455078e-05, 0.0, -3.814697265625e-06, -5.7339664635946974e-05, -2.9086875656503253e-05, -1.0836105346679688, -0.022897720336914062, -0.006031990051269531, -0.011975288391113281, -0.00017559458501636982, -0.0006084442138671875, -0.0002899169921875, -1.33514404296875e-05, -0.3112477958202362, -0.00027569360099732876, -0.006768226623535156, -0.2349863052368164, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014471054077148438, 0.0, -0.031110763549804688, -3.814697265625e-06, -0.0035724639892578125, -9.5367431640625e-06, -0.001125335693359375, -2.6702880859375e-05, -0.0001583099365234375, -4.00543212890625e-05, 0.0, -0.00770115852355957, -0.0018351078033447266, -0.001689910888671875, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028762815054506063, -0.0017684698104858398, -2.503394853192731e-06, -0.0012187957763671875, -0.00087738037109375, -0.010006904602050781, -0.0005855560302734375, -6.29425048828125e-05, -9.918212890625e-05, -0.06306612491607666, -8.881089888745919e-05, -0.00725555419921875, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002307891845703125, -1.9073486328125e-06, -0.0018672943115234375, 0.0, -2.9563663701992482e-05, 0.0, -0.0006046295166015625, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -0.0002715576847549528, -0.0003795623779296875, -5.7220458984375e-06, -3.0517578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.001712799072265625, 0.0, -0.0011931657791137695, -2.145764938177308e-06, -0.007433407939970493, -0.0001049041748046875, -0.21240615844726562, -0.012278556823730469, -9.1552734375e-05, -0.012517380528151989, -0.0004253387451171875, -0.0022754669189453125, -1.9073486328125e-06, -0.008326530456542969, -7.05718994140625e-05, -0.0015811920166015625, -7.62939453125e-06, -4.38690185546875e-05, -0.06827354431152344, -3.24249267578125e-05, -1.9073486328125e-06, -0.000621795654296875, 0.0, -0.0023822784423828125, -1.1801719665527344e-05, -0.014814605005085468, -1.9073486328125e-06], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.908858615034191}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "WARRIOR", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 209, 40, 134, "card_drawn", "<EOS>", 37, 125, "reduce_cost", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -1.7940173149108887, -0.00012981891632080078, -0.011662483215332031, 0.0, -2.396106719970703e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.00018310546875, 0.0, -7.557839853689075e-05, -2.3841855067985307e-07, -2.09808349609375e-05, -8.976459503173828e-05, 0.0, -9.5367431640625e-06, -5.054471694165841e-05, -4.458378680283204e-05, -1.0679407119750977, -0.020607948303222656, -0.0052509307861328125, -0.010463237762451172, -0.00015616344171576202, -0.0004634857177734375, -0.0002727508544921875, -1.33514404296875e-05, -0.33123722672462463, -0.0002668745000846684, -0.007137298583984375, -0.2196044921875, 0.0, -1.9073486328125e-06, -0.00017547607421875, -1.1444091796875e-05, 0.0, -0.014031410217285156, 0.0, -0.02934741973876953, -3.814697265625e-06, -0.0035533905029296875, -9.5367431640625e-06, -0.001132965087890625, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.0076525211334228516, -0.001863718032836914, -0.0017108917236328125, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028932092245668173, -0.0017970800399780273, -2.503394853192731e-06, -0.0012454986572265625, -0.000888824462890625, -0.010524749755859375, -0.000579833984375, -6.4849853515625e-05, -0.000102996826171875, -0.06344246864318848, -8.881089888745919e-05, -0.0052490234375, -9.5367431640625e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000263214111328125, -1.9073486328125e-06, -0.00206756591796875, 0.0, -2.8490801923908293e-05, 0.0, -0.0006542205810546875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027358424267731607, -0.000301361083984375, -7.62939453125e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0022678375244140625, 0.0, -0.0012427568435668945, -2.145764938177308e-06, -0.008033626712858677, -0.0001125335693359375, -0.2097644805908203, -0.012414932250976562, -9.1552734375e-05, -0.01253510918468237, -0.000423431396484375, -0.00228118896484375, -1.9073486328125e-06, -0.008322715759277344, -7.05718994140625e-05, -0.0013370513916015625, -9.5367431640625e-06, -4.76837158203125e-05, -0.07348823547363281, -3.4332275390625e-05, -1.9073486328125e-06, -0.0006580352783203125, 0.0, -0.0024156570434570312, -1.1801719665527344e-05, -0.014922250993549824, -1.9073486328125e-06], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "WARRIOR"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.226766691908971}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "Preparation", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 209, 40, 134, "card_drawn", "<EOS>", 37, 125, "reduce_cost", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(Preparation):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -1.1527843475341797, -0.030422210693359375, -0.005396842956542969, -0.011230826377868652, -0.0001837008458096534, -0.000530242919921875, -0.00028228759765625, -1.52587890625e-05, -1.7564982175827026, -0.000269258045591414, -0.006588935852050781, -0.24984073638916016, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014056205749511719, 0.0, -0.029630661010742188, -3.814697265625e-06, -0.0035648345947265625, -9.5367431640625e-06, -0.00112152099609375, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.007651567459106445, -0.001856088638305664, -0.0016994476318359375, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028876063879579306, -0.0018123388290405273, -2.503394853192731e-06, -0.0012359619140625, -0.000896453857421875, -0.010145187377929688, -0.000583648681640625, -6.29425048828125e-05, -0.0001010894775390625, -0.0626828670501709, -8.869168959790841e-05, -0.006392478942871094, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002288818359375, -1.9073486328125e-06, -0.001911163330078125, 0.0, -2.89676299871644e-05, 0.0, -0.0006237030029296875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027167689404450357, -0.00037384033203125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0018711090087890625, 0.0, -0.0012074708938598633, -2.145764938177308e-06, -0.007659667171537876, -0.0001068115234375, -0.2082681655883789, -0.012264251708984375, -9.1552734375e-05, -0.012533174827694893, -0.0004253387451171875, -0.00228118896484375, -1.9073486328125e-06, -0.008324623107910156, -7.05718994140625e-05, -0.0016155242919921875, -7.62939453125e-06, -4.57763671875e-05, -0.068206787109375, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006351470947265625, 0.0, -0.0023784637451171875, -1.1801719665527344e-05, -0.01479958463460207, -1.9073486328125e-06], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "Preparation", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.675383616551912}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 86, 179, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", "EPIC", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 209, 40, 134, "card_drawn", "<EOS>", 37, 125, "reduce_cost", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.EPIC)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.draw()\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -2.31317138671875, -2.47955322265625e-05, -8.916457591112703e-05, -9.059905096364673e-06, -2.6940982934320346e-05, 0.0, -0.2727257013320923, 0.0, -0.1290881633758545, -1.1920928244535389e-07, -0.004894256591796875, 0.0, -4.029273986816406e-05, -2.0265579223632812e-06, 0.0, -0.0002727508544921875, 0.0, -0.0001043079246301204, 0.0, -1.1444091796875e-05, -4.208087921142578e-05, 0.0, -5.7220458984375e-06, -4.363059997558594e-05, -2.8848460715380497e-05, -0.8765792846679688, -0.054096221923828125, -0.006035804748535156, -0.0118333101272583, -0.00021111872047185898, -0.0004825592041015625, -0.0003261566162109375, -1.33514404296875e-05, -0.29817914962768555, -0.00027116487035527825, -0.0073642730712890625, -0.23751449584960938, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.015141487121582031, 0.0, -0.0342254638671875, -3.814697265625e-06, -0.0035495758056640625, -9.5367431640625e-06, -0.0011157989501953125, -2.6702880859375e-05, -0.000156402587890625, -4.00543212890625e-05, 0.0, -0.007775545120239258, -0.001802682876586914, -0.001678466796875, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.002906560664996505, -0.0018810033798217773, -2.503394853192731e-06, -0.0012912750244140625, -0.000934600830078125, -0.009365081787109375, -0.0005779266357421875, -6.4849853515625e-05, -9.918212890625e-05, -0.061183393001556396, -8.845327101880684e-05, -0.006321907043457031, -7.62939453125e-06, -1.9073486328125e-06, -3.814697265625e-06, -0.000209808349609375, -1.9073486328125e-06, -0.0017833709716796875, 0.0, -2.801397567964159e-05, 0.0, -0.0006122589111328125, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -6.866455078125e-05, -0.00027167689404450357, -0.0004177093505859375, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0017547607421875, 0.0, -0.0011979341506958008, -2.0265558760002023e-06, -0.007624620106071234, -0.0001049041748046875, -0.2140970230102539, -0.012267112731933594, -9.1552734375e-05, -0.012503519654273987, -0.00042724609375, -0.0022678375244140625, -1.9073486328125e-06, -0.008319854736328125, -7.05718994140625e-05, -0.0016307830810546875, -7.62939453125e-06, -4.57763671875e-05, -0.06914138793945312, -3.24249267578125e-05, -1.9073486328125e-06, -0.000629425048828125, 0.0, -0.0023813247680664062, -1.1801719665527344e-05, -0.014631380327045918, -1.9073486328125e-06], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole3": "EPIC", "hole0": "Preparation", "_type": "Template7", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.717496049945559}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 208, 37, 125, "new_minon", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>(Buff(ManaChange(-3)))\n        player.hand.append(new_minon)\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -0.4437570571899414, -0.000942230224609375, 0.0, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001220703125, -1.9073486328125e-06, -1.430511474609375e-05, 0.0, -0.00018358230590820312, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -7.736658153589815e-05, -0.016153335571289062, -1.1444091796875e-05, -0.0001659393310546875, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.23274898529052734, 0.0, -0.0019474029541015625, -3.576278118089249e-07, -0.027812600135803223, -0.000110626220703125, -0.059871673583984375, -0.006691932678222656, -1.1231870651245117, -0.000110626220703125, 0.0, -0.863404393196106, -0.000645756721496582, -8.20159912109375e-05, -0.000469207763671875, -1.71661376953125e-05, -0.0001811981201171875, 0.0, -0.003859157906845212, -0.0029186010360717773, -2.0265579223632812e-06, -0.0002193450927734375, -0.0045833587646484375, -0.000720977783203125, -0.0003490447998046875, -0.000133514404296875, -0.0001544952392578125, -0.023478209972381592, -8.440017700195312e-05, -0.002170562744140625, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.0001392364501953125, -1.9073486328125e-06, -0.013588905334472656, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.0482025146484375, -4.291534423828125e-06, -0.7960044741630554, -3.349781036376953e-05, -0.0407407283782959, 0.0, -1.9073486328125e-05, -0.012067794799804688, 0.0, -0.8838310241699219, -3.0517578125e-05], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "new_minon", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "append"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.580061189914815}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>(self.target.calculate_attack())\n        self.target.add_buff(Buff(ManaChange(-3)))\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -0.4437570571899414, -0.000942230224609375, 0.0, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001220703125, -1.9073486328125e-06, -1.430511474609375e-05, 0.0, -0.00018358230590820312, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -7.736658153589815e-05, -0.016153335571289062, -1.1444091796875e-05, -0.0001659393310546875, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.23274898529052734, 0.0, -0.0019474029541015625, -3.576278118089249e-07, -0.027812600135803223, -0.000110626220703125, -0.059871673583984375, -0.006691932678222656, -0.39455223083496094, -0.03009319305419922, -3.814697265625e-06, -0.0884695053100586, 0.0, -0.0011692047119140625, 0.0, -1.3415699005126953, -1.3470649719238281e-05, -0.004450201988220215, -2.1219253540039062e-05, -0.500210165977478, -1.9073486328125e-06, -0.0047626495361328125, -1.33514404296875e-05, -3.814697265625e-06, -0.00051116943359375, -5.7220458984375e-06, 0.0, -0.003513336181640625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.5727758407592773, -1.9073486328125e-05, -0.016161203384399414, -5.841255187988281e-06, -0.17492163181304932, -9.5367431640625e-06, -0.0002765655517578125, -0.5963277816772461, -0.16274356842041016, -2.09808349609375e-05, 0.0, -0.002354860305786133, -0.00019299983978271484, -0.0081787109375, -8.96453857421875e-05, -3.814697265625e-05, -3.62396240234375e-05, 0.0, -0.004998206626623869, -0.0014042854309082031, -2.0265579223632812e-06, -0.0003814697265625, -0.0009326934814453125, -0.0318145751953125, -0.0004119873046875, -0.0001201629638671875, -7.05718994140625e-05, -0.04736530780792236, -0.00010120868682861328], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.7497022117867544}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "increase_armor", "<EOS>", 208, 39, 130, "3", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.hero.increase_armor(3)\n        player.opponent.increase_armor(3)\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -0.4437570571899414, -0.000942230224609375, 0.0, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001220703125, -1.9073486328125e-06, -1.430511474609375e-05, 0.0, -0.00018358230590820312, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -7.736658153589815e-05, -0.016153335571289062, -1.1444091796875e-05, -0.0001659393310546875, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -1.5752878189086914, 0.0, -1.9073486328125e-05, -3.814697265625e-06, -0.06072235107421875, -1.1801719665527344e-05, -0.27373507618904114, -3.933906555175781e-06, -0.5166643857955933, 0.0, -0.000362396240234375, -0.012566566467285156, 0.0, -0.09418560564517975, 0.0, -0.13684368133544922, -1.9073486328125e-05, -3.814697265625e-06, -0.12042045593261719, -9.5367431640625e-06, 0.0, -0.0007419586181640625, 0.0, -5.7220458984375e-06, -1.1444091796875e-05, -0.025159835815429688, -1.5974044799804688e-05, -0.3870917558670044, -1.430511474609375e-05, -0.9560871124267578, 0.0, -0.00301361083984375, -0.1989145278930664, -1.9073486328125e-06, -0.06676477938890457, 0.0], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 3, "_type": "Num"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "increase_armor"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.858073343374585}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "append", "<EOS>", 208, 37, 125, "new_minon", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>(Buff(ManaChange(-3)))\n        player.opponent.append(new_minon)\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -0.4437570571899414, -0.000942230224609375, 0.0, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001220703125, -1.9073486328125e-06, -1.430511474609375e-05, 0.0, -0.00018358230590820312, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -7.736658153589815e-05, -0.016153335571289062, -1.1444091796875e-05, -0.0001659393310546875, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.23274898529052734, 0.0, -0.0019474029541015625, -3.576278118089249e-07, -0.027812600135803223, -0.000110626220703125, -0.059871673583984375, -0.006691932678222656, -1.1231870651245117, -0.000110626220703125, 0.0, -0.863404393196106, -0.000645756721496582, -8.20159912109375e-05, -0.000469207763671875, -1.71661376953125e-05, -0.0001811981201171875, 0.0, -0.003859157906845212, -0.0029186010360717773, -2.0265579223632812e-06, -0.0002193450927734375, -0.0045833587646484375, -0.000720977783203125, -0.0003490447998046875, -0.000133514404296875, -0.0001544952392578125, -0.023478209972381592, -8.440017700195312e-05, -0.002170562744140625, -1.9073486328125e-06, 0.0, -1.33514404296875e-05, -0.0001392364501953125, -1.9073486328125e-06, -0.013588905334472656, -3.814697265625e-06, -1.9073486328125e-05, -1.33514404296875e-05, -0.0482025146484375, -4.291534423828125e-06, -0.8544179797172546, -1.1920928244535389e-07, -0.5914623737335205, 0.0, -8.96453857421875e-05, -0.04867267608642578, 0.0, -0.8503923416137695, -2.288818359375e-05], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"id": "new_minon", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "append"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.192392103458509}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 43, 163, "5", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n        player.<UNK>(self.target.calculate_attack())\n        self.target.add_buff(Buff(ChangeAttack(5)))\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -0.4437570571899414, -0.000942230224609375, 0.0, 0.0, -1.33514404296875e-05, -1.71661376953125e-05, -1.9073486328125e-06, -0.0001220703125, -1.9073486328125e-06, -1.430511474609375e-05, 0.0, -0.00018358230590820312, 0.0, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -3.24249267578125e-05, -7.736658153589815e-05, -0.016153335571289062, -1.1444091796875e-05, -0.0001659393310546875, -4.38690185546875e-05, -1.71661376953125e-05, -3.814697265625e-06, -0.23274898529052734, 0.0, -0.0019474029541015625, -3.576278118089249e-07, -0.027812600135803223, -0.000110626220703125, -0.059871673583984375, -0.006691932678222656, -0.39455223083496094, -0.03009319305419922, -3.814697265625e-06, -0.0884695053100586, 0.0, -0.0011692047119140625, 0.0, -1.3415699005126953, -1.3470649719238281e-05, -0.004450201988220215, -2.1219253540039062e-05, -0.500210165977478, -1.9073486328125e-06, -0.0047626495361328125, -1.33514404296875e-05, -3.814697265625e-06, -0.00051116943359375, -5.7220458984375e-06, 0.0, -0.003513336181640625, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -0.5727758407592773, -1.9073486328125e-05, -0.016161203384399414, -5.841255187988281e-06, -0.17492163181304932, -9.5367431640625e-06, -0.0002765655517578125, -1.030287742614746, -0.0007333755493164062, -0.28503894805908203, -2.288818359375e-05], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 5, "_type": "Template28"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.20819973651389}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 209, 40, 134, "card_drawn", "<EOS>", 37, 125, "reduce_cost", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hand", "<EOS>", "<UNK>", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>('card_drawn', reduce_cost)\n        player.<UNK>(player.hand.<UNK>())\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -1.1527843475341797, -0.030422210693359375, -0.005396842956542969, -0.011230826377868652, -0.0001837008458096534, -0.000530242919921875, -0.00028228759765625, -1.52587890625e-05, -0.3226527273654938, -0.000269258045591414, -0.006588935852050781, -0.24984073638916016, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014056205749511719, 0.0, -0.029630661010742188, -3.814697265625e-06, -0.0035648345947265625, -9.5367431640625e-06, -0.00112152099609375, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.007651567459106445, -0.001856088638305664, -0.0016994476318359375, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028876063879579306, -0.0018123388290405273, -2.503394853192731e-06, -0.0012359619140625, -0.000896453857421875, -0.010145187377929688, -0.000583648681640625, -6.29425048828125e-05, -0.0001010894775390625, -0.0626828670501709, -8.869168959790841e-05, -0.006392478942871094, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002288818359375, -1.9073486328125e-06, -0.001911163330078125, 0.0, -2.89676299871644e-05, 0.0, -0.0006237030029296875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027167689404450357, -0.00037384033203125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0018711090087890625, 0.0, -0.0012074708938598633, -2.145764938177308e-06, -0.007659667171537876, -0.0001068115234375, -0.2082681655883789, -0.012264251708984375, -9.1552734375e-05, -0.012533174827694893, -0.0004253387451171875, -0.00228118896484375, -1.9073486328125e-06, -0.008324623107910156, -7.05718994140625e-05, -0.0016155242919921875, -7.62939453125e-06, -4.57763671875e-05, -2.7323617935180664, -1.9073486328125e-06, -1.9073486328125e-06, -0.0721139907836914, 0.0, -0.024001121520996094, -8.344646857949556e-07, -0.037220120429992676, -1.71661376953125e-05, -0.07319831848144531, -0.003925323486328125, -0.6091508865356445, -0.04461383819580078, -1.9073486328125e-06, -0.20087337493896484, 0.0, -0.0004138946533203125, 0.0, -0.3207530975341797, -6.890296936035156e-05, -1.4098081588745117, -5.8174078731099144e-05, -0.7265917062759399, -0.0010213851928710938], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "card_drawn", "_type": "Str"}, {"id": "reduce_cost", "_type": "Name"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.411667912525317}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Spell", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "new_minon", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>(Effect(TurnEnded(player=CurrentPlayer()), ActionTag(\n            Give(ManaChange(-3)), CardSelector(condition=IsSpell()))))\n        new_minon.add_buff(Buff(ManaChange(-3)))\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -1.1527843475341797, -0.030422210693359375, -0.005396842956542969, -0.011230826377868652, -0.0001837008458096534, -0.000530242919921875, -0.00028228759765625, -1.52587890625e-05, -0.3226527273654938, -0.000269258045591414, -0.006588935852050781, -0.24984073638916016, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014056205749511719, 0.0, -0.029630661010742188, -3.814697265625e-06, -0.0035648345947265625, -9.5367431640625e-06, -0.00112152099609375, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.007651567459106445, -0.001856088638305664, -0.0016994476318359375, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028876063879579306, -0.0018123388290405273, -2.503394853192731e-06, -0.0012359619140625, -0.000896453857421875, -0.010145187377929688, -0.000583648681640625, -6.29425048828125e-05, -0.0001010894775390625, -0.0626828670501709, -8.869168959790841e-05, -0.006392478942871094, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002288818359375, -1.9073486328125e-06, -0.001911163330078125, 0.0, -2.89676299871644e-05, 0.0, -0.0006237030029296875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027167689404450357, -0.00037384033203125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0018711090087890625, 0.0, -0.0012074708938598633, -2.145764938177308e-06, -0.007659667171537876, -0.0001068115234375, -1.6811933517456055, -0.06798171997070312, -0.8776998519897461, -8.0108642578125e-05, 0.0, -0.12339961528778076, -5.841255187988281e-06, -0.00066375732421875, -0.00551605224609375, -0.27062416076660156, -0.000553131103515625, -1.9073486328125e-06, -0.39130091667175293, -0.0320049524307251, -5.7220458984375e-05, -0.001224517822265625, -0.0014095306396484375, -1.9073486328125e-06, -0.10293781757354736, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.5185685157775879, -0.000558018684387207, -3.4332275390625e-05, -0.0001316070556640625, -3.0517578125e-05, -3.814697265625e-06, 0.0, -0.00315093994140625, -0.0002613067626953125, -4.076957702636719e-05, -1.33514404296875e-05, -0.0003662109375, -2.288818359375e-05, -4.1961669921875e-05, 0.0, -0.7481739521026611, -0.45050048828125, 0.0, -0.12177276611328125, -0.00083160400390625, -1.33514404296875e-05, 0.0, -0.5332489609718323, -0.0007636546506546438, -8.225431884056889e-06, -0.00030517578125, -0.0020542144775390625, -0.000217437744140625, -0.00020599365234375, -0.0001697540283203125, -3.814697265625e-06, -0.06214892864227295, -0.0001802444166969508, -0.010057449340820312, -0.000148773193359375, -0.0003108978271484375, -7.62939453125e-06, -0.0015796422958374023, -0.0014591217041015625, 0.0, -0.0002613067626953125, -0.00011444091796875, -4.1961669921875e-05, -0.0003529787063598633, -6.914137884450611e-06, -0.018518447875976562, -1.52587890625e-05, -0.009600400924682617, -0.3945246934890747, -0.002968907356262207, -0.000202178955078125, -4.00543212890625e-05, -3.814697265625e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000335693359375, -0.5441665649414062, 0.0, -1.350816249847412, -1.1920928244535389e-07, -0.02036762237548828, -1.9073486328125e-06, -0.0006580352783203125, -0.00045013427734375, -4.9591064453125e-05, -5.7220458984375e-06, 0.0, -0.04072451591491699, -0.0034227371215820312, -0.0007114410400390625, -0.0002002716064453125, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.004842754919081926, -0.0018694400787353516, -1.1920928244535389e-07, -0.0038738250732421875, -0.01829814910888672, -0.0010223388671875, -0.0001354217529296875, -8.392333984375e-05, -1.1444091796875e-05, -0.02284131944179535, -0.00015044212341308594], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"hole0": "CurrentPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsSpell", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "new_minon", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.365415358666013}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Minion", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "new_minon", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>(Effect(TurnEnded(player=CurrentPlayer()), ActionTag(\n            Give(ManaChange(-3)), CardSelector(condition=IsMinion()))))\n        new_minon.add_buff(Buff(ManaChange(-3)))\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -1.1527843475341797, -0.030422210693359375, -0.005396842956542969, -0.011230826377868652, -0.0001837008458096534, -0.000530242919921875, -0.00028228759765625, -1.52587890625e-05, -0.3226527273654938, -0.000269258045591414, -0.006588935852050781, -0.24984073638916016, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014056205749511719, 0.0, -0.029630661010742188, -3.814697265625e-06, -0.0035648345947265625, -9.5367431640625e-06, -0.00112152099609375, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.007651567459106445, -0.001856088638305664, -0.0016994476318359375, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028876063879579306, -0.0018123388290405273, -2.503394853192731e-06, -0.0012359619140625, -0.000896453857421875, -0.010145187377929688, -0.000583648681640625, -6.29425048828125e-05, -0.0001010894775390625, -0.0626828670501709, -8.869168959790841e-05, -0.006392478942871094, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002288818359375, -1.9073486328125e-06, -0.001911163330078125, 0.0, -2.89676299871644e-05, 0.0, -0.0006237030029296875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027167689404450357, -0.00037384033203125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0018711090087890625, 0.0, -0.0012074708938598633, -2.145764938177308e-06, -0.007659667171537876, -0.0001068115234375, -1.6811933517456055, -0.06798171997070312, -0.8776998519897461, -8.0108642578125e-05, 0.0, -0.12339961528778076, -5.841255187988281e-06, -0.00066375732421875, -0.00551605224609375, -0.27062416076660156, -0.000553131103515625, -1.9073486328125e-06, -0.39130091667175293, -0.0320049524307251, -5.7220458984375e-05, -0.001224517822265625, -0.0014095306396484375, -1.9073486328125e-06, -0.10293781757354736, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.5185685157775879, -0.000558018684387207, -3.4332275390625e-05, -0.0001316070556640625, -3.0517578125e-05, -3.814697265625e-06, 0.0, -0.00315093994140625, -0.0002613067626953125, -4.076957702636719e-05, -1.33514404296875e-05, -0.0003662109375, -2.288818359375e-05, -4.1961669921875e-05, 0.0, -0.7481739521026611, -0.45050048828125, 0.0, -0.12177276611328125, -0.00083160400390625, -1.33514404296875e-05, 0.0, -0.5332489609718323, -0.0007636546506546438, -8.225431884056889e-06, -0.00030517578125, -0.0020542144775390625, -0.000217437744140625, -0.00020599365234375, -0.0001697540283203125, -3.814697265625e-06, -0.06214892864227295, -0.0001802444166969508, -0.010057449340820312, -0.000148773193359375, -0.0003108978271484375, -7.62939453125e-06, -0.0015796422958374023, -0.0014591217041015625, 0.0, -0.0002613067626953125, -0.00011444091796875, -4.1961669921875e-05, -0.0003529787063598633, -6.914137884450611e-06, -0.018518447875976562, -1.52587890625e-05, -0.009600400924682617, -1.144027829170227, -0.0003185272216796875, -0.0003948211669921875, -5.91278076171875e-05, -1.52587890625e-05, -7.43865966796875e-05, -3.814697265625e-06, -0.0001678466796875, -0.1558094024658203, 0.0, -1.4214558601379395, 0.0, -0.023817062377929688, -1.9073486328125e-06, -0.0008411407470703125, -0.0003509521484375, -6.4849853515625e-05, -5.7220458984375e-06, 0.0, -0.08442974090576172, -0.005082130432128906, -0.000652313232421875, -0.0002079010009765625, -7.62939453125e-06, -4.1961669921875e-05, 0.0, -0.004758589901030064, -0.0020946264266967773, -2.0265579223632812e-06, -0.00484466552734375, -0.03067779541015625, -0.0011157989501953125, -0.000141143798828125, -7.62939453125e-05, -1.1444091796875e-05, -0.02119143307209015, -0.00015223026275634766], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"hole0": "CurrentPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsMinion", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "new_minon", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.855415811977977}, {"choice_history": [55, 124, 221, 63, 103, "Preparation", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 84, 177, "Preparation", "<EOS>", "0", "<EOS>", "ROGUE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 224, 66, 108, "reduce_cost", "<EOS>", 195, 201, 194, "this", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 19, 125, "card", "<EOS>", "add_buff", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "player", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "Effect", "<EOS>", 209, 32, 100, 19, 125, "Turn", "Ended", "<EOS>", 216, 54, 197, "player", "<EOS>", 26, 174, "Current", "Player", "<EOS>", 32, 101, 19, 125, "Action", "Tag", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 32, 101, 19, 125, "Mana", "Change", "<EOS>", 208, 50, 192, 90, 21, 130, "3", "<EOS>", 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Is", "Spell", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hand", "<EOS>", "append", "<EOS>", 208, 32, 99, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "calculate_attack", "<EOS>"], "inferred_code": "class Preparation(SpellCard):\n\n    def __init__(self):\n        super().__init__('Preparation', 0, CHARACTER_CLASS.ROGUE,\n            CARD_RARITY.RARE)\n\n    def use(self, player, game):\n\n        def reduce_cost(this):\n            card.add_buff(Buff(ManaChange(-3)))\n        super().use(player, game)\n        player.<UNK>(Effect(TurnEnded(player=CurrentPlayer()), ActionTag(\n            Give(ManaChange(-3)), CardSelector(condition=IsSpell()))))\n        player.hand.append(self.target.calculate_attack())\n", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -3.24249267578125e-05, -1.1444091796875e-05, -3.814697265625e-06, -6.568216485902667e-05, -0.00022852403344586492, 0.0, -5.14984130859375e-05, -1.9073486328125e-06, -2.491474151611328e-05, -9.775161743164062e-06, -1.9073486328125e-06, -0.0001220703125, -0.2551116943359375, -8.58306884765625e-05, -1.3351351299206726e-05, -0.00012505054473876953, -4.410734163684538e-06, -3.4570634852570947e-06, -0.7070364952087402, -3.814697265625e-06, -0.004405975341796875, -1.9073486328125e-06, -2.7894973754882812e-05, -1.1920928244535389e-07, -1.9073486328125e-06, -0.0001010894775390625, 0.0, -7.343276229221374e-05, -1.1920928244535389e-07, -1.1444091796875e-05, -6.496906280517578e-05, 0.0, -3.814697265625e-06, -4.816054934053682e-05, -2.3484131816076115e-05, -1.1527843475341797, -0.030422210693359375, -0.005396842956542969, -0.011230826377868652, -0.0001837008458096534, -0.000530242919921875, -0.00028228759765625, -1.52587890625e-05, -0.3226527273654938, -0.000269258045591414, -0.006588935852050781, -0.24984073638916016, 0.0, -1.9073486328125e-06, -0.0001735687255859375, -1.1444091796875e-05, 0.0, -0.014056205749511719, 0.0, -0.029630661010742188, -3.814697265625e-06, -0.0035648345947265625, -9.5367431640625e-06, -0.00112152099609375, -2.6702880859375e-05, -0.00016021728515625, -4.00543212890625e-05, 0.0, -0.007651567459106445, -0.001856088638305664, -0.0016994476318359375, -5.7220458984375e-05, -3.814697265625e-05, -9.918212890625e-05, 0.0, -0.0028876063879579306, -0.0018123388290405273, -2.503394853192731e-06, -0.0012359619140625, -0.000896453857421875, -0.010145187377929688, -0.000583648681640625, -6.29425048828125e-05, -0.0001010894775390625, -0.0626828670501709, -8.869168959790841e-05, -0.006392478942871094, -7.62939453125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -0.0002288818359375, -1.9073486328125e-06, -0.001911163330078125, 0.0, -2.89676299871644e-05, 0.0, -0.0006237030029296875, 0.0, -1.33514404296875e-05, -4.00543212890625e-05, 0.0, -3.814697265625e-06, -1.9073486328125e-06, -1.9073486328125e-06, 0.0, -7.05718994140625e-05, -0.00027167689404450357, -0.00037384033203125, -5.7220458984375e-06, -3.24249267578125e-05, -1.9073486328125e-05, -7.62939453125e-06, -1.9073486328125e-06, -0.0018711090087890625, 0.0, -0.0012074708938598633, -2.145764938177308e-06, -0.007659667171537876, -0.0001068115234375, -1.6811933517456055, -0.06798171997070312, -0.8776998519897461, -8.0108642578125e-05, 0.0, -0.12339961528778076, -5.841255187988281e-06, -0.00066375732421875, -0.00551605224609375, -0.27062416076660156, -0.000553131103515625, -1.9073486328125e-06, -0.39130091667175293, -0.0320049524307251, -5.7220458984375e-05, -0.001224517822265625, -0.0014095306396484375, -1.9073486328125e-06, -0.10293781757354736, 0.0, -2.288818359375e-05, -1.9073486328125e-06, -0.5185685157775879, -0.000558018684387207, -3.4332275390625e-05, -0.0001316070556640625, -3.0517578125e-05, -3.814697265625e-06, 0.0, -0.00315093994140625, -0.0002613067626953125, -4.076957702636719e-05, -1.33514404296875e-05, -0.0003662109375, -2.288818359375e-05, -4.1961669921875e-05, 0.0, -0.7481739521026611, -0.45050048828125, 0.0, -0.12177276611328125, -0.00083160400390625, -1.33514404296875e-05, 0.0, -0.5332489609718323, -0.0007636546506546438, -8.225431884056889e-06, -0.00030517578125, -0.0020542144775390625, -0.000217437744140625, -0.00020599365234375, -0.0001697540283203125, -3.814697265625e-06, -0.06214892864227295, -0.0001802444166969508, -0.010057449340820312, -0.000148773193359375, -0.0003108978271484375, -7.62939453125e-06, -0.0015796422958374023, -0.0014591217041015625, 0.0, -0.0002613067626953125, -0.00011444091796875, -4.1961669921875e-05, -0.0003529787063598633, -6.914137884450611e-06, -0.018518447875976562, -1.52587890625e-05, -0.009600400924682617, -0.3945246934890747, -0.002968907356262207, -0.000202178955078125, -4.00543212890625e-05, -3.814697265625e-05, -2.86102294921875e-05, -3.814697265625e-06, -0.000335693359375, -0.8695211410522461, -1.9073486328125e-06, -3.814697265625e-06, -9.5367431640625e-06, -0.13310718536376953, -1.1920928244535389e-07, -0.9613298177719116, -5.960462772236497e-07, -0.4643862247467041, 0.0, -9.5367431640625e-05, -0.5772514343261719, -0.3997001647949219, -0.00966644287109375, -3.814697265625e-06, -0.03028106689453125, -5.7220458984375e-06, -0.0015392303466796875, 0.0, -0.41472721099853516, -2.0265579223632812e-06, -0.003334522247314453, -5.9604644775390625e-06, -0.4299139976501465, 0.0], "model_output": {"body": [{"name": "Preparation", "body": [{"hole1": 0, "hole0": "Preparation", "_type": "Template5", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"name": "reduce_cost", "args": {"args": [{"arg": "this", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "card", "_type": "Name"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"args": [{"keywords": [{"value": {"hole0": "CurrentPlayer", "_type": "Template38"}, "arg": "player", "_type": "keyword"}], "func": {"id": "TurnEnded", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"args": [{"op": {"_type": "USub"}, "_type": "UnaryOp", "operand": {"n": 3, "_type": "Num"}}], "func": {"id": "ManaChange", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"keywords": [{"value": {"hole0": "IsSpell", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ActionTag", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Effect", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "calculate_attack"}, "_type": "Call"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hand"}, "_type": "Attribute", "attr": "append"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -13.645548981829997}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-3.62396240234375e-05, -1.33514404296875e-05, -22.077381134033203], "model_output": {"body": [], "_type": "Module"}, "score": -22.077430725097656}]}
{"gold_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.COMMON)\n\n    def _reveal(self, minion):\n        minion.set_health_to(1)\n        super().reveal()\n\n    def activate(self, player):\n        player.game.current_player.bind('minion_played', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player.unbind('minion_played', self._reveal)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.4906425476074219, 0.0, -0.0068950653076171875, -3.7550926208496094e-05, -0.01107025146484375, -0.0001354217529296875, -0.019826054573059082, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04294013977050781, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07480812072753906, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.1597834825515747, -3.933906555175781e-06, -0.19095909595489502, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.715339720249176, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10729026794433594, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.4871702194213867, 0.0, -0.00662994384765625, -3.7550926208496094e-05], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.917684401610181}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5298377275466919, -1.1920928244535389e-07, -1.0369396209716797, 0.0, -0.09006607532501221, -1.9073486328125e-06, -0.000133514404296875, -0.0016613006591796875, -1.52587890625e-05, -0.07593631744384766, -0.000133514404296875, -0.006556510925292969, -3.814697265625e-06, -0.1914982795715332, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016941070556640625, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.636897087097168, 0.0, -0.11774158477783203, 0.0, -0.11805391311645508, -9.5367431640625e-06, -0.0002460479736328125, -0.0001983642578125, -3.814697265625e-06, -0.23530398309230804, -0.000179290771484375, -0.010822296142578125, -1.9073486328125e-06, -0.2630811929702759, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.0450286865234375, -1.9073486328125e-06, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.2632617950439453, 0.0, -0.6700992584228516, 0.0, -0.04868018627166748, -7.62939453125e-06, -0.0002193450927734375, -0.000156402587890625, -3.814697265625e-06, -0.2830021381378174, -0.0001678466796875, -0.014906883239746094, -1.9073486328125e-06, -0.27386677265167236, -3.8146954466355965e-06, -0.0004730224609375, -4.9591064453125e-05, -0.0782318115234375, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048160552978515625, -1.1920928244535389e-07, -0.08614158630371094, -0.000804901123046875, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.058402061462402344, 0.0, -0.0044097900390625, -1.9073486328125e-06, -0.0034008026123046875, -2.3841855067985307e-07, -0.10026919841766357, -3.814697265625e-06, -0.19717073440551758, 0.0, -0.006817817687988281, -2.6702880859375e-05, -1.9073486328125e-06, -0.7186456918716431, -0.0008296966552734375, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091510772705078, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.4906606674194336, 0.0, -0.006894111633300781, -3.7550926208496094e-05, -0.011068344116210938, -0.0001354217529296875, -0.019826054573059082, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04294013977050781, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07479095458984375, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.15977489948272705, -3.933906555175781e-06, -0.19095337390899658, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.7153473496437073, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10728931427001953, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.4871711730957031, 0.0, -0.00662994384765625, -3.7550926208496094e-05], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -11.988404962459121}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.9052295684814453, -0.0002371072769165039, -0.024436593055725098, 0.0, -0.14904296398162842, -3.814697265625e-06, -0.00028228759765625, -0.0002498626708984375, -3.814697265625e-06, -0.16603265702724457, -0.0001678466796875, -0.006400108337402344, -1.9073486328125e-06, -0.21009886264801025, -2.9802317840221804e-06, -7.43865966796875e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.03667640686035156, -1.9073486328125e-06, 0.0, -0.0003452301025390625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.18271827697753906, 0.0, -0.7713451385498047, 0.0, -0.04694259166717529, -7.62939453125e-06, -0.0002231597900390625, -0.0001506805419921875, -3.814697265625e-06, -0.292069673538208, -0.000164031982421875, -0.015939712524414062, -1.9073486328125e-06, -0.27950775623321533, -3.8146954466355965e-06, -0.0004787445068359375, -5.340576171875e-05, -0.0767965316772461, -6.866455078125e-05, -2.6702880859375e-05, -0.0001220703125, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.0004978179931640625, -1.1920928244535389e-07, -0.08717727661132812, -0.0007991790771484375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.059319496154785156, 0.0, -0.00438690185546875, -1.9073486328125e-06, -0.0034303665161132812, -2.3841855067985307e-07, -0.1002739667892456, -3.814697265625e-06, -0.19708776473999023, 0.0, -0.006825447082519531, -2.6702880859375e-05, -1.9073486328125e-06, -0.7184872627258301, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19096946716308594, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.47955322265625e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0019941329956054688, 0.0, -0.4906272888183594, 0.0, -0.0068988800048828125, -3.7550926208496094e-05, -0.01107025146484375, -0.0001354217529296875, -0.019825100898742676, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04293060302734375, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07490348815917969, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.15981590747833252, -3.933906555175781e-06, -0.1909705400466919, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.715330183506012, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10729312896728516, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.4871702194213867, 0.0, -0.00662994384765625, -3.7550926208496094e-05], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -12.008854474165723}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5298377275466919, -1.1920928244535389e-07, -1.0369396209716797, 0.0, -0.09006607532501221, -1.9073486328125e-06, -0.000133514404296875, -0.0016613006591796875, -1.52587890625e-05, -0.07593631744384766, -0.000133514404296875, -0.006556510925292969, -3.814697265625e-06, -0.1914982795715332, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016941070556640625, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.9175920486450195, -0.0002428293228149414, -0.024032235145568848, 0.0, -0.1472851037979126, -3.814697265625e-06, -0.0002841949462890625, -0.0002422332763671875, -3.814697265625e-06, -0.16094540059566498, -0.0001678466796875, -0.0062198638916015625, -1.9073486328125e-06, -0.20930683612823486, -2.9802317840221804e-06, -7.62939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.03712654113769531, -1.9073486328125e-06, 0.0, -0.000324249267578125, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.20111942291259766, 0.0, -0.7715787887573242, 0.0, -0.046607255935668945, -7.62939453125e-06, -0.0002231597900390625, -0.000152587890625, -3.814697265625e-06, -0.28806519508361816, -0.0001659393310546875, -0.015538215637207031, -1.9073486328125e-06, -0.2773534059524536, -3.8146954466355965e-06, -0.0004749298095703125, -5.340576171875e-05, -0.07722949981689453, -6.866455078125e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.000492095947265625, -1.1920928244535389e-07, -0.08645248413085938, -0.0008029937744140625, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.059173583984375, 0.0, -0.004390716552734375, -1.9073486328125e-06, -0.003429412841796875, -2.3841855067985307e-07, -0.10024058818817139, -3.814697265625e-06, -0.19708776473999023, 0.0, -0.006824493408203125, -2.6702880859375e-05, -1.9073486328125e-06, -0.718555212020874, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19115257263183594, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.00460052490234375, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0019941329956054688, 0.0, -0.4906482696533203, 0.0, -0.00689697265625, -3.7550926208496094e-05, -0.01107025146484375, -0.0001354217529296875, -0.019825100898742676, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04293060302734375, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07488250732421875, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.15980541706085205, -3.933906555175781e-06, -0.19096386432647705, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.7153387665748596, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10729217529296875, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.4871692657470703, 0.0, -0.00662994384765625, -3.7550926208496094e-05], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -12.11105403605989}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.4906425476074219, 0.0, -0.0068950653076171875, -3.7550926208496094e-05, -0.01107025146484375, -0.0001354217529296875, -0.019826054573059082, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04294013977050781, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07480812072753906, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.1597834825515747, -3.933906555175781e-06, -0.19095909595489502, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.715339720249176, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10729026794433594, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.9842777252197266, -0.0002498626708984375, -8.022784459171817e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -12.408454741568697}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5298377275466919, -1.1920928244535389e-07, -1.0369396209716797, 0.0, -0.09006607532501221, -1.9073486328125e-06, -0.000133514404296875, -0.0016613006591796875, -1.52587890625e-05, -0.07593631744384766, -0.000133514404296875, -0.006556510925292969, -3.814697265625e-06, -0.1914982795715332, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016941070556640625, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.636897087097168, 0.0, -0.11774158477783203, 0.0, -0.11805391311645508, -9.5367431640625e-06, -0.0002460479736328125, -0.0001983642578125, -3.814697265625e-06, -0.23530398309230804, -0.000179290771484375, -0.010822296142578125, -1.9073486328125e-06, -0.2630811929702759, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.0450286865234375, -1.9073486328125e-06, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.2632617950439453, 0.0, -0.6700992584228516, 0.0, -0.04868018627166748, -7.62939453125e-06, -0.0002193450927734375, -0.000156402587890625, -3.814697265625e-06, -0.2830021381378174, -0.0001678466796875, -0.014906883239746094, -1.9073486328125e-06, -0.27386677265167236, -3.8146954466355965e-06, -0.0004730224609375, -4.9591064453125e-05, -0.0782318115234375, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048160552978515625, -1.1920928244535389e-07, -0.08614158630371094, -0.000804901123046875, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.058402061462402344, 0.0, -0.0044097900390625, -1.9073486328125e-06, -0.0034008026123046875, -2.3841855067985307e-07, -0.10026919841766357, -3.814697265625e-06, -0.19717073440551758, 0.0, -0.006817817687988281, -2.6702880859375e-05, -1.9073486328125e-06, -0.7186456918716431, -0.0008296966552734375, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091510772705078, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.4906606674194336, 0.0, -0.006894111633300781, -3.7550926208496094e-05, -0.011068344116210938, -0.0001354217529296875, -0.019826054573059082, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04294013977050781, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07479095458984375, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.15977489948272705, -3.933906555175781e-06, -0.19095337390899658, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.7153473496437073, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10728931427001953, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.9842767715454102, -0.0002498626708984375, -8.022784459171817e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -12.479173395069004}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.9052295684814453, -0.0002371072769165039, -0.024436593055725098, 0.0, -0.14904296398162842, -3.814697265625e-06, -0.00028228759765625, -0.0002498626708984375, -3.814697265625e-06, -0.16603265702724457, -0.0001678466796875, -0.006400108337402344, -1.9073486328125e-06, -0.21009886264801025, -2.9802317840221804e-06, -7.43865966796875e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.03667640686035156, -1.9073486328125e-06, 0.0, -0.0003452301025390625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.18271827697753906, 0.0, -0.7713451385498047, 0.0, -0.04694259166717529, -7.62939453125e-06, -0.0002231597900390625, -0.0001506805419921875, -3.814697265625e-06, -0.292069673538208, -0.000164031982421875, -0.015939712524414062, -1.9073486328125e-06, -0.27950775623321533, -3.8146954466355965e-06, -0.0004787445068359375, -5.340576171875e-05, -0.0767965316772461, -6.866455078125e-05, -2.6702880859375e-05, -0.0001220703125, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.0004978179931640625, -1.1920928244535389e-07, -0.08717727661132812, -0.0007991790771484375, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.0001468658447265625, -1.9073486328125e-06, -0.059319496154785156, 0.0, -0.00438690185546875, -1.9073486328125e-06, -0.0034303665161132812, -2.3841855067985307e-07, -0.1002739667892456, -3.814697265625e-06, -0.19708776473999023, 0.0, -0.006825447082519531, -2.6702880859375e-05, -1.9073486328125e-06, -0.7184872627258301, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19096946716308594, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.47955322265625e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.0019941329956054688, 0.0, -0.4906272888183594, 0.0, -0.0068988800048828125, -3.7550926208496094e-05, -0.01107025146484375, -0.0001354217529296875, -0.019825100898742676, -0.000518798828125, -3.24249267578125e-05, -0.000362396240234375, -1.71661376953125e-05, -4.1604042053222656e-05, 0.0, 0.0, -0.00030422210693359375, -1.1920928244535389e-07, -0.04293060302734375, -0.000232696533203125, 0.0, -3.814697265625e-06, 0.0, -0.0002460479736328125, -1.9073486328125e-06, -0.07490348815917969, 0.0, -0.0017871856689453125, -1.9073486328125e-06, -0.00222015380859375, -4.768370445162873e-07, -0.15981590747833252, -3.933906555175781e-06, -0.1909705400466919, 0.0, -0.004134178161621094, -2.86102294921875e-05, -1.9073486328125e-06, -0.715330183506012, -0.0008077621459960938, -2.86102294921875e-05, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.000225067138671875, -1.9073486328125e-06, -0.0027608871459960938, -3.576278118089249e-07, -0.10729312896728516, -1.1444091796875e-05, -7.62939453125e-06, -5.7220458984375e-06, -0.005032539367675781, -2.47955322265625e-05, 0.0, -2.09808349609375e-05, 0.0, -0.0019435882568359375, 0.0, -0.984278678894043, -0.0002498626708984375, -8.022784459171817e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -12.499625767798555}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "die", "<EOS>", 208, 38, 127, "Null", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.target.die(Null)\n            super().reveal()\n            super().reveal()\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.979945182800293, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014625072479248047, -5.722029527532868e-06, -9.1552734375e-05, -0.20563697814941406, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.016058921813964844, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.010970115661621094, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.03005853109061718, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006969451904297, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043063640594482, -0.00010633104102453217, -0.0023908615112304688, -0.0016021728515625, -1.9073486328125e-05, 0.0, -0.04594993591308594, 0.0, -0.17396950721740723, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.031622886657714844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897923946380615, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301333665847778, -1.1920928244535389e-07, -0.4373760223388672, -4.0531158447265625e-06, -1.6986509561538696, 0.0, -2.47955322265625e-05, -1.0648670196533203, -4.1961669921875e-05, -0.0006709098815917969, -8.34464663057588e-06, -0.0001125335693359375, -0.0003643035888671875, -1.9073486328125e-06, -0.026092529296875, -0.00035858154296875, 0.0, -0.000102996826171875, 0.0, -0.0008087973110377789, -7.748586540401448e-06, -0.0007803440093994141, -3.814697265625e-06, -3.24249267578125e-05, -5.14984130859375e-05, -1.9073486328125e-06, -0.42148494720458984, -9.72747802734375e-05, -5.7220458984375e-06, -6.29425048828125e-05, 0.0, -0.0006043891189619899, -5.006785613659304e-06, -0.000825047492980957, -1.52587890625e-05], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"value": "Null", "_type": "NameConstant"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "die"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -16.98090648522669}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.979945182800293, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014625072479248047, -5.722029527532868e-06, -9.1552734375e-05, -0.20563697814941406, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.016058921813964844, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.010970115661621094, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.03005853109061718, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006969451904297, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043063640594482, -0.00010633104102453217, -0.0023908615112304688, -0.0016021728515625, -1.9073486328125e-05, 0.0, -0.04594993591308594, 0.0, -0.17396950721740723, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.031622886657714844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897923946380615, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301333665847778, -1.1920928244535389e-07, -1.0387296676635742, 0.0, -0.0899803638458252, -1.9073486328125e-06, -0.000133514404296875, -0.0016689300537109375, -1.52587890625e-05, -0.07597827911376953, -0.000133514404296875, -0.006548881530761719, -3.814697265625e-06, -0.19139814376831055, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016794204711914062, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.6403408050537109, 0.0, -0.11835765838623047, 0.0, -0.11859869956970215, -9.5367431640625e-06, -0.0002460479736328125, -0.0002002716064453125, -3.814697265625e-06, -0.23495422303676605, -0.000179290771484375, -0.010797500610351562, -1.9073486328125e-06, -0.26315510272979736, -2.861022494471399e-06, -7.82012939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.04516792297363281, -1.9073486328125e-06, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.26267528533935547, 0.0, -0.6690359115600586, 0.0, -0.04905414581298828, -7.62939453125e-06, -0.0002193450927734375, -0.000156402587890625, -3.814697265625e-06, -0.28275251388549805, -0.0001678466796875, -0.014901161193847656, -1.9073486328125e-06, -0.2739931344985962, -3.8146954466355965e-06], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -17.73482527702152}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "1", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.target.change_attack(1)\n            super().reveal()\n            self.player.trigger('<UNK>', mirror)\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.979945182800293, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014625072479248047, -5.722029527532868e-06, -9.1552734375e-05, -0.20563697814941406, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.016058921813964844, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.010970115661621094, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.03005853109061718, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006969451904297, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043063640594482, -0.00010633104102453217, -0.0023908615112304688, -0.0016021728515625, -1.9073486328125e-05, 0.0, -0.04594993591308594, 0.0, -0.17396950721740723, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.031622886657714844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897923946380615, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301333665847778, -1.1920928244535389e-07, -0.4373760223388672, -4.0531158447265625e-06, -1.76681387424469, 0.0, -1.9073486328125e-05, -0.4787254333496094, -3.814697265625e-06, -0.48422056436538696, -4.601478576660156e-05, -0.0012502670288085938, -6.29425048828125e-05, -1.9073486328125e-06, -0.034610748291015625, -0.00026702880859375, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.000987091800197959, -8.821463779895566e-06, -0.000989079475402832, -7.62939453125e-06, -2.6702880859375e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.49363136291503906, -3.0517578125e-05, 0.0, -0.09337139129638672, 0.0, -0.000152587890625, -1.1444091796875e-05, -0.4356738328933716, 0.0, -0.4794893264770508, 0.0, -0.04604804515838623, -5.7220458984375e-06, -0.000255584716796875, -0.0001583099365234375, -3.814697265625e-06, -0.25420165061950684, -0.000133514404296875, -0.014756202697753906, -1.9073486328125e-06, -0.2411872148513794, -4.88758041683468e-06], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "change_attack"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -18.59210481028743}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "change_attack", "<EOS>", 208, 39, 130, "1", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.target.change_attack(1)\n            super().reveal()\n            self.player.trigger('<UNK>', mirror)\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5298377275466919, -1.1920928244535389e-07, -1.0369396209716797, 0.0, -0.09006607532501221, -1.9073486328125e-06, -0.000133514404296875, -0.0016613006591796875, -1.52587890625e-05, -0.07593631744384766, -0.000133514404296875, -0.006556510925292969, -3.814697265625e-06, -0.1914982795715332, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016941070556640625, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.636897087097168, 0.0, -0.11774158477783203, 0.0, -0.11805391311645508, -9.5367431640625e-06, -0.0002460479736328125, -0.0001983642578125, -3.814697265625e-06, -0.23530398309230804, -0.000179290771484375, -0.010822296142578125, -1.9073486328125e-06, -0.2630811929702759, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.0450286865234375, -1.9073486328125e-06, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.2632617950439453, 0.0, -0.6700992584228516, 0.0, -0.04868018627166748, -7.62939453125e-06, -0.0002193450927734375, -0.000156402587890625, -3.814697265625e-06, -0.2830021381378174, -0.0001678466796875, -0.014906883239746094, -1.9073486328125e-06, -0.27386677265167236, -3.8146954466355965e-06, -0.0004730224609375, -4.9591064453125e-05, -0.0782318115234375, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048160552978515625, -1.1920928244535389e-07, -0.08614158630371094, -0.000804901123046875, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.058402061462402344, 0.0, -0.0044097900390625, -1.9073486328125e-06, -0.0034008026123046875, -2.3841855067985307e-07, -0.10026919841766357, -3.814697265625e-06, -0.19717073440551758, 0.0, -0.006817817687988281, -2.6702880859375e-05, -1.9073486328125e-06, -0.7186456918716431, -0.0008296966552734375, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091510772705078, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.9799127578735352, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014626026153564453, -5.722029527532868e-06, -9.1552734375e-05, -0.20562171936035156, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.01605987548828125, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.0109710693359375, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.030058762058615685, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006778717041016, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043073177337646, -0.00010633104102453217, -0.0023908615112304688, -0.0016040802001953125, -1.9073486328125e-05, 0.0, -0.04595184326171875, 0.0, -0.17397665977478027, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.03162193298339844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897971630096436, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301343202590942, -1.1920928244535389e-07, -0.4373779296875, -4.0531158447265625e-06, -1.7668133974075317, 0.0, -1.9073486328125e-05, -0.4787254333496094, -3.814697265625e-06, -0.48422104120254517, -4.601478576660156e-05, -0.0012502670288085938, -6.29425048828125e-05, -1.9073486328125e-06, -0.034610748291015625, -0.00026702880859375, -1.9073486328125e-06, -4.1961669921875e-05, 0.0, -0.000987091800197959, -8.821463779895566e-06, -0.000989079475402832, -7.62939453125e-06, -2.6702880859375e-05, -7.82012939453125e-05, -1.9073486328125e-06, -0.49363040924072266, -3.0517578125e-05, 0.0, -0.09337139129638672, 0.0, -0.000152587890625, -1.1444091796875e-05, -0.4356728792190552, 0.0, -0.4794893264770508, 0.0, -0.046047091484069824, -5.7220458984375e-06, -0.000255584716796875, -0.0001583099365234375, -3.814697265625e-06, -0.25420165061950684, -0.000133514404296875, -0.014756202697753906, -1.9073486328125e-06, -0.2411872148513794, -4.88758041683468e-06], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 1, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "change_attack"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -18.66279889922351}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Mana", "Change", "<EOS>", "1", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            self.target.add_buff(Buff(ManaChange(1)))\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.979945182800293, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014625072479248047, -5.722029527532868e-06, -9.1552734375e-05, -0.20563697814941406, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.016058921813964844, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.010970115661621094, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.03005853109061718, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006969451904297, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043063640594482, -0.00010633104102453217, -0.0023908615112304688, -0.0016021728515625, -1.9073486328125e-05, 0.0, -0.04594993591308594, 0.0, -0.17396950721740723, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.031622886657714844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897923946380615, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301333665847778, -1.1920928244535389e-07, -1.0387296676635742, 0.0, -0.0899803638458252, -1.9073486328125e-06, -0.000133514404296875, -0.0016689300537109375, -1.52587890625e-05, -0.07597827911376953, -0.000133514404296875, -0.006548881530761719, -3.814697265625e-06, -0.19139814376831055, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016794204711914062, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.9128913879394531, -0.0002428293228149414, -0.024170517921447754, 0.0, -0.1482090950012207, -3.814697265625e-06, -0.0002841949462890625, -0.000244140625, -3.814697265625e-06, -0.16105197370052338, -0.0001678466796875, -0.006218910217285156, -1.9073486328125e-06, -0.20946085453033447, -2.9802317840221804e-06, -7.82012939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.0372772216796875, -1.9073486328125e-06, 0.0, -0.0003261566162109375, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.20058155059814453, 0.0, -0.6217594146728516, -1.537799835205078e-05, -1.5300055742263794, -1.9073486328125e-06, -0.00121307373046875, -0.36200714111328125, -0.034084320068359375, -0.00863716285675764, -0.00019500954658724368, -0.02658080868422985, -0.016500061377882957, -1.2636161045520566e-05, -0.00303650856949389, -1.311301275563892e-06], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole1": "ManaChange", "hole0": "Buff", "_type": "Template32", "hole2": 1}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -19.05476682670622}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Mana", "Change", "<EOS>", "1", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            minion.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.target.add_buff(Buff(ManaChange(1)))\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -1.3119722604751587, -1.2040138244628906e-05, -0.005373954772949219, -1.1920928244535389e-07, -0.27350592613220215, -1.9073486328125e-06, -0.0003299713134765625, -0.002254486083984375, -7.62939453125e-06, -0.06648170202970505, -0.0001621246337890625, -0.0029392242431640625, -1.9073486328125e-06, -0.17889976501464844, -2.741813204920618e-06, -4.00543212890625e-05, -5.7220458984375e-06, -4.38690185546875e-05, -0.0216064453125, -1.9073486328125e-06, 0.0, -0.0004329681396484375, 0.0, -9.34600830078125e-05, 0.0, -0.6465005874633789, 0.0, -0.1282663345336914, 0.0, -0.11647582054138184, -9.5367431640625e-06, -0.000244140625, -0.0001964569091796875, -3.814697265625e-06, -0.24258862435817719, -0.000179290771484375, -0.011124610900878906, -1.9073486328125e-06, -0.2699371576309204, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.7220458984375e-05, -0.04450416564941406, -1.9073486328125e-06, 0.0, -0.0002689361572265625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.23653697967529297, 0.0, -0.6749591827392578, 0.0, -0.04897809028625488, -7.62939453125e-06, -0.0002193450927734375, -0.000152587890625, -3.814697265625e-06, -0.2850072383880615, -0.0001678466796875, -0.015095710754394531, -1.9073486328125e-06, -0.2759920358657837, -3.8146954466355965e-06, -0.0004749298095703125, -5.14984130859375e-05, -0.07778358459472656, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048732757568359375, -1.1920928244535389e-07, -0.08661651611328125, -0.00080108642578125, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.05857372283935547, 0.0, -0.004405975341796875, -1.9073486328125e-06, -0.0034055709838867188, -2.3841855067985307e-07, -0.10029590129852295, -3.814697265625e-06, -0.19718313217163086, 0.0, -0.0068206787109375, -2.6702880859375e-05, -1.9073486328125e-06, -0.71857750415802, -0.0008287429809570312, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091129302978516, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.979945182800293, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014625072479248047, -5.722029527532868e-06, -9.1552734375e-05, -0.20563697814941406, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.016058921813964844, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.010970115661621094, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.03005853109061718, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006969451904297, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043063640594482, -0.00010633104102453217, -0.0023908615112304688, -0.0016021728515625, -1.9073486328125e-05, 0.0, -0.04594993591308594, 0.0, -0.17396950721740723, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.031622886657714844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897923946380615, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301333665847778, -1.1920928244535389e-07, -1.0387296676635742, 0.0, -0.0899803638458252, -1.9073486328125e-06, -0.000133514404296875, -0.0016689300537109375, -1.52587890625e-05, -0.07597827911376953, -0.000133514404296875, -0.006548881530761719, -3.814697265625e-06, -0.19139814376831055, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016794204711914062, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.6403408050537109, 0.0, -0.11835765838623047, 0.0, -0.11859869956970215, -9.5367431640625e-06, -0.0002460479736328125, -0.0002002716064453125, -3.814697265625e-06, -0.23495422303676605, -0.000179290771484375, -0.010797500610351562, -1.9073486328125e-06, -0.26315510272979736, -2.861022494471399e-06, -7.82012939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.04516792297363281, -1.9073486328125e-06, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.26267528533935547, 0.0, -0.7188968658447266, -1.5497207641601562e-05, -1.487610936164856, -1.9073486328125e-06, -0.001117706298828125, -0.37056732177734375, -0.03366374969482422, -0.008426635526120663, -0.00019882354536093771, -0.026346681639552116, -0.016346752643585205, -1.2636161045520566e-05, -0.0030616424046456814, -1.4305104514278355e-06], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole1": "ManaChange", "hole0": "Buff", "_type": "Template32", "hole2": 1}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -19.11079623634192}, {"choice_history": [55, 124, 221, 63, 103, "Repentance", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Repentance", "<EOS>", "1", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 222, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "minion", "<EOS>", 221, 67, 111, 15, 104, 14, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 205, 8, 208, 39, 130, "7", "<EOS>", 225, 60, 93, 208, 37, 125, "mirror", "<EOS>", 14, 101, 11, 94, 19, 125, "minion", "<EOS>", "copy", "<EOS>", 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 64, 106, 14, 101, 11, 94, 19, 125, "mirror", "<EOS>", "<UNK>", "<EOS>", 208, 32, 101, 19, 125, "len", "<EOS>", 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "minions", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "minion", "<EOS>", "player", "<EOS>", "trigger", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 37, 125, "mirror", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "add_buff", "<EOS>", 208, 44, 168, "Buff", "<EOS>", "Mana", "Change", "<EOS>", "1", "<EOS>"], "inferred_code": "class Repentance(SecretCard):\n\n    def __init__(self):\n        super().__init__('Repentance', 1, CHARACTER_CLASS.MAGE, CARD_RARITY\n            .COMMON)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n            self.player.trigger('<UNK>', mirror)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n        self.player = Null\n\n    def _reveal(self, minion):\n        if len(self.player.minions) < 7:\n            mirror = minion.copy(self.player)\n            mirror.<UNK>(len(self.player.minions))\n            self.player.trigger('<UNK>', mirror)\n            minion.player.trigger('<UNK>', mirror)\n            self.target.add_buff(Buff(ManaChange(1)))\n", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -4.57763671875e-05, -7.62939453125e-06, -3.814697265625e-05, -3.433168603805825e-05, -0.005839203950017691, -3.814697265625e-06, -0.0005397796630859375, -7.62939453125e-06, -0.00032460689544677734, -0.0007935762405395508, -5.14984130859375e-05, -0.055098533630371094, -0.014307022094726562, -0.0003795623779296875, -0.00021445745369419456, -1.311301275563892e-06, -0.0002346038818359375, -0.00069427490234375, -1.9073486328125e-06, -0.0008583029266446829, -3.6716461181640625e-05, -0.020605087280273438, -0.6490545272827148, -0.0398101806640625, -0.00013541258522309363, -3.409384225960821e-05, -0.00012062085443176329, -2.0265579223632812e-06, -0.015379190444946289, -3.099440846199286e-06, -0.22801780700683594, -1.9073486328125e-06, -4.38690185546875e-05, -2.288818359375e-05, -0.0002346038818359375, -8.58306884765625e-05, -1.9073486328125e-06, -5.53131103515625e-05, -1.9073486328125e-06, -0.0006799697875976562, 0.0, -0.1478748321533203, -0.000293731689453125, -9.703636169433594e-05, -1.1920928244535389e-07, -0.000148773193359375, -0.0006847381591796875, -0.008532285690307617, -1.8596476365928538e-05, -1.52587890625e-05, -0.0688314437866211, -1.9073486328125e-06, -0.000102996826171875, -3.576278118089249e-07, 0.0, -0.01943802833557129, -0.0003156187594868243, -0.008152961730957031, -0.0014171600341796875, -0.0004119873046875, -0.022918701171875, -7.62939453125e-06, -0.008050918579101562, -5.7220458984375e-05, -0.0001277923583984375, -0.0030879974365234375, -0.0018124580383300781, -1.1920928244535389e-07, -1.1444091796875e-05, -0.02141284942626953, -2.288818359375e-05, -0.029314041137695312, -0.00017547607421875, -0.000335693359375, -5.7220458984375e-06, -0.008825302124023438, -2.2649765014648438e-06, -0.00012814998626708984, 0.0, -0.03030567057430744, -4.744526813738048e-05, -0.0013980865478515625, -0.0006256103515625, -3.4332275390625e-05, -3.62396240234375e-05, -1.9073486328125e-06, -0.005883089266717434, -1.7881377516459906e-06, -0.1693572998046875, -0.00165557861328125, -1.52587890625e-05, -0.0001811981201171875, -0.0015611648559570312, -5.7220458984375e-06, -0.7151879072189331, -0.00010895341983996332, -0.0024614334106445312, -0.0014667510986328125, -1.9073486328125e-05, 0.0, -0.043384552001953125, 0.0, -0.16399455070495605, -2.0027138816658407e-05, -0.0047217607498168945, -3.576278118089249e-07, -2.6702880859375e-05, -0.0006084442138671875, 0.0, -0.03133106231689453, 0.0, -0.000274658203125, -1.9073486328125e-06, -0.000885009765625, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.0790872573852539, -3.814697265625e-06, -0.4679960012435913, 0.0, -0.003437042236328125, 0.0, -5.7220458984375e-06, -0.0331268310546875, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01670527458190918, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018865585327148438, -0.00012969970703125, -0.0036106109619140625, 0.0, -0.0018873214721679688, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.0027832977939397097, -6.079673767089844e-06, -0.0017833709716796875, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.288818359375e-05, 0.0, -0.06999588012695312, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5298377275466919, -1.1920928244535389e-07, -1.0369396209716797, 0.0, -0.09006607532501221, -1.9073486328125e-06, -0.000133514404296875, -0.0016613006591796875, -1.52587890625e-05, -0.07593631744384766, -0.000133514404296875, -0.006556510925292969, -3.814697265625e-06, -0.1914982795715332, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016941070556640625, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.636897087097168, 0.0, -0.11774158477783203, 0.0, -0.11805391311645508, -9.5367431640625e-06, -0.0002460479736328125, -0.0001983642578125, -3.814697265625e-06, -0.23530398309230804, -0.000179290771484375, -0.010822296142578125, -1.9073486328125e-06, -0.2630811929702759, -2.861022494471399e-06, -7.62939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.0450286865234375, -1.9073486328125e-06, 0.0, -0.0002593994140625, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.2632617950439453, 0.0, -0.6700992584228516, 0.0, -0.04868018627166748, -7.62939453125e-06, -0.0002193450927734375, -0.000156402587890625, -3.814697265625e-06, -0.2830021381378174, -0.0001678466796875, -0.014906883239746094, -1.9073486328125e-06, -0.27386677265167236, -3.8146954466355965e-06, -0.0004730224609375, -4.9591064453125e-05, -0.0782318115234375, -6.67572021484375e-05, -2.6702880859375e-05, -0.0001201629638671875, -1.9073486328125e-06, -5.8770179748535156e-05, 0.0, 0.0, -0.00048160552978515625, -1.1920928244535389e-07, -0.08614158630371094, -0.000804901123046875, 0.0, -1.9073486328125e-06, -1.9073486328125e-06, -0.00014495849609375, -1.9073486328125e-06, -0.058402061462402344, 0.0, -0.0044097900390625, -1.9073486328125e-06, -0.0034008026123046875, -2.3841855067985307e-07, -0.10026919841766357, -3.814697265625e-06, -0.19717073440551758, 0.0, -0.006817817687988281, -2.6702880859375e-05, -1.9073486328125e-06, -0.7186456918716431, -0.0008296966552734375, -2.09808349609375e-05, -1.9073486328125e-06, -2.6702880859375e-05, -1.9073486328125e-06, -0.0002269744873046875, -1.9073486328125e-06, -0.0027828216552734375, -3.576278118089249e-07, -0.19091510772705078, -1.1444091796875e-05, -9.5367431640625e-06, -5.7220458984375e-06, -0.004601478576660156, -2.288818359375e-05, -1.9073486328125e-06, -2.09808349609375e-05, 0.0, -0.001995086669921875, 0.0, -0.9799127578735352, -0.0002498626708984375, -8.988379704533145e-05, -2.3841855067985307e-07, -0.0001659393310546875, -0.0010166168212890625, -0.014626026153564453, -5.722029527532868e-06, -9.1552734375e-05, -0.20562171936035156, -1.9073486328125e-06, -0.00010764598846435547, -1.1920928244535389e-07, -1.9073486328125e-06, -0.018492817878723145, -0.00017534247308503836, -0.01605987548828125, -0.0022411346435546875, -0.000469207763671875, -0.024248123168945312, -5.7220458984375e-06, -0.006352424621582031, -3.814697265625e-05, -0.0001239776611328125, -0.0027370452880859375, -0.0018764734268188477, -1.1920928244535389e-07, -1.33514404296875e-05, -0.01849079132080078, -2.09808349609375e-05, -0.0282440185546875, -0.000202178955078125, -0.0003337860107421875, -3.814697265625e-06, -0.0109710693359375, -2.2649765014648438e-06, -0.00013387203216552734, 0.0, -0.030058762058615685, -4.756447742693126e-05, -0.00133514404296875, -0.0006389617919921875, -3.62396240234375e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.00572860985994339, -1.6689286894688848e-06, -0.17006778717041016, -0.0016307830810546875, -1.52587890625e-05, -0.0001850128173828125, -0.0015697479248046875, -5.7220458984375e-06, -0.7043073177337646, -0.00010633104102453217, -0.0023908615112304688, -0.0016040802001953125, -1.9073486328125e-05, 0.0, -0.04595184326171875, 0.0, -0.17397665977478027, -1.9788720237556845e-05, -0.004987835884094238, -3.576278118089249e-07, -2.47955322265625e-05, -0.0006694793701171875, 0.0, -0.03162193298339844, 0.0, -0.00028896331787109375, -1.9073486328125e-06, -0.0008869171142578125, 0.0, -0.00038909912109375, -2.09808349609375e-05, -1.9073486328125e-06, -1.52587890625e-05, -3.814697265625e-06, 0.0, -0.07878494262695312, -3.814697265625e-06, -0.46897971630096436, 0.0, -0.0034847259521484375, 0.0, -5.7220458984375e-06, -0.032958030700683594, -0.0001430511474609375, -0.000286102294921875, 0.0, -0.01667952537536621, -1.1801701475633308e-05, -1.1444091796875e-05, -0.0004253387451171875, -7.62939453125e-06, -0.018856048583984375, -0.0001277923583984375, -0.0036067962646484375, 0.0, -0.0018901824951171875, -9.655952453613281e-06, -0.0005322694778442383, 0.0, -0.002792950253933668, -6.079673767089844e-06, -0.001739501953125, -3.4332275390625e-05, -1.9073486328125e-06, -3.814697265625e-06, -2.47955322265625e-05, 0.0, -0.07057857513427734, 0.0, -0.00023651123046875, -1.9073486328125e-06, -0.5301343202590942, -1.1920928244535389e-07, -1.0387277603149414, 0.0, -0.08997941017150879, -1.9073486328125e-06, -0.000133514404296875, -0.0016689300537109375, -1.52587890625e-05, -0.07597827911376953, -0.000133514404296875, -0.006548881530761719, -3.814697265625e-06, -0.19139814376831055, -2.622604142743512e-06, -3.814697265625e-05, -5.7220458984375e-06, -4.1961669921875e-05, -0.016794204711914062, -1.9073486328125e-06, 0.0, -0.000385284423828125, 0.0, -9.72747802734375e-05, 0.0, -0.9128904342651367, -0.0002428293228149414, -0.024170517921447754, 0.0, -0.1482090950012207, -3.814697265625e-06, -0.0002841949462890625, -0.000244140625, -3.814697265625e-06, -0.16105197370052338, -0.0001678466796875, -0.006218910217285156, -1.9073486328125e-06, -0.20946085453033447, -2.9802317840221804e-06, -7.82012939453125e-05, -7.62939453125e-06, -5.53131103515625e-05, -0.0372772216796875, -1.9073486328125e-06, 0.0, -0.0003261566162109375, -1.9073486328125e-06, -2.86102294921875e-05, -1.9073486328125e-06, -0.20058059692382812, 0.0, -0.6217594146728516, -1.537799835205078e-05, -1.5300055742263794, -1.9073486328125e-06, -0.00121307373046875, -0.36200809478759766, -0.034084320068359375, -0.00863716285675764, -0.00019500954658724368, -0.02658080868422985, -0.016500061377882957, -1.2636161045520566e-05, -0.0030366203282028437, -1.311301275563892e-06], "model_output": {"body": [{"name": "Repentance", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": "Repentance", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"comparators": [{"n": 7, "_type": "Num"}], "left": {"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}, "_type": "Compare", "ops": [{"_type": "Lt"}]}, "body": [{"targets": [{"id": "mirror", "_type": "Name"}], "value": {"args": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "func": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "copy"}, "_type": "Call"}, "_type": "Assign"}, {"value": {"args": [{"args": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "minions"}], "func": {"id": "len", "_type": "Name"}, "_type": "Call"}], "func": {"value": {"id": "mirror", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"s": "<UNK>", "_type": "Str"}, {"id": "mirror", "_type": "Name"}], "func": {"value": {"value": {"id": "minion", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "trigger"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"hole1": "ManaChange", "hole0": "Buff", "_type": "Template32", "hole2": 1}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "add_buff"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -19.12545816637806}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-0.0003414154052734375, -0.0001239776611328125, -20.2080135345459], "model_output": {"body": [], "_type": "Module"}, "score": -20.208478927612305}]}
{"gold_code": "class ShadowOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.EPIC, False)\n\n    def create_minion(self, p):\n        return Minion(0, 1)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "opponent", "<UNK>", "Damage", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(opponent<UNK>Damage(),\n            PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -1.4860343933105469, -3.814697265625e-06, -0.0001430511474609375, -0.00040435791015625, 0.0, -0.0027494430541992188, -9.5367431640625e-06, -0.04555511474609375, -0.39052581787109375, -4.57763671875e-05, -0.6846781373023987, -0.029969817027449608, -0.24703940749168396, -0.0002964718150906265, -0.000118255615234375, 0.0, -0.3720238208770752, -0.0004178285598754883, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": "opponent<UNK>Damage", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.199570952042784}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "Shadow", "Attack", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Aura(ShadowAttack(), SelfSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.6822338104248047, 0.0, -0.0023615360260009766, -9.5367431640625e-06, -0.004642486572265625, -0.15625476837158203, -0.00014495849609375, -0.0003204345703125, -1.9073486328125e-06, -0.19570358097553253, -0.5600441098213196, -0.004164337646216154, -3.814697265625e-06, -0.0002346038818359375, -0.13724899291992188, -5.7220458984375e-06, -0.044730186462402344, 0.0, -0.00096893310546875, -1.9073486328125e-06, -0.00549626350402832, -0.0008373260498046875, 0.0, -0.00482940673828125, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -0.44121646881103516, -9.5367431640625e-06, -0.000118255615234375, -0.17116737365722656, -2.288818359375e-05, -1.436743140220642, -1.2826706171035767, -0.0012151002883911133, -0.006069183349609375, 0.0, -0.14243267476558685, -1.633167266845703e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "ShadowAttack", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.512264752179696}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Battlecry(Remove<UNK>Attack(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.6822338104248047, 0.0, -0.0023615360260009766, -9.5367431640625e-06, -0.004642486572265625, -0.15625476837158203, -0.00014495849609375, -0.0003204345703125, -1.9073486328125e-06, -0.19570358097553253, -0.5600441098213196, -0.004164337646216154, -3.814697265625e-06, -0.0002346038818359375, -0.13724899291992188, -5.7220458984375e-06, -0.044730186462402344, 0.0, -0.00096893310546875, -1.9073486328125e-06, -0.00549626350402832, -0.0008373260498046875, 0.0, -0.00482940673828125, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.4004735946655273, -3.445148468017578e-05, -1.52587890625e-05, -0.04837608337402344, -5.7220458984375e-06, -0.4756549000740051, -0.40097665786743164, -0.9720706343650818, -2.09808349609375e-05, -0.000347137451171875, 0.0, -0.30140256881713867, -1.33514404296875e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.62997452297838}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "opponent", "<UNK>", "Damage", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Aura(opponent<UNK>Damage(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.6822338104248047, 0.0, -0.0023615360260009766, -9.5367431640625e-06, -0.004642486572265625, -0.15625476837158203, -0.00014495849609375, -0.0003204345703125, -1.9073486328125e-06, -0.19570358097553253, -0.5600441098213196, -0.004164337646216154, -3.814697265625e-06, -0.0002346038818359375, -0.13724899291992188, -5.7220458984375e-06, -0.044730186462402344, 0.0, -0.00096893310546875, -1.9073486328125e-06, -0.00549626350402832, -0.0008373260498046875, 0.0, -0.00482940673828125, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -0.44121646881103516, -9.5367431640625e-06, -0.000118255615234375, -0.17116737365722656, -2.288818359375e-05, -1.0915228128433228, -0.6793034672737122, -1.2489508390426636, -5.81740569032263e-05, -4.38690185546875e-05, 0.0, -0.12534642219543457, -5.7220458984375e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "opponent<UNK>Damage", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.788400509668797}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "opponent", "<UNK>", "Target", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Aura(opponent<UNK>Target(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.6822338104248047, 0.0, -0.0023615360260009766, -9.5367431640625e-06, -0.004642486572265625, -0.15625476837158203, -0.00014495849609375, -0.0003204345703125, -1.9073486328125e-06, -0.19570358097553253, -0.5600441098213196, -0.004164337646216154, -3.814697265625e-06, -0.0002346038818359375, -0.13724899291992188, -5.7220458984375e-06, -0.044730186462402344, 0.0, -0.00096893310546875, -1.9073486328125e-06, -0.00549626350402832, -0.0008373260498046875, 0.0, -0.00482940673828125, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -0.44121646881103516, -9.5367431640625e-06, -0.000118255615234375, -0.17116737365722656, -2.288818359375e-05, -1.0915228128433228, -0.6793034672737122, -0.9937561750411987, -0.10631406307220459, -0.00217437744140625, 0.0, -0.3050963878631592, -0.0002155303955078125, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "opponent<UNK>Target", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.821500518709733}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Battlecry(Remove<UNK>Attack(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -1.0837244987487793, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -7.95125961303711e-05, -6.437280717364047e-06, -0.05084860324859619, -1.9073486328125e-05, -2.86102294921875e-05, -0.0020923614501953125, 0.0, -0.10994446277618408, -6.79492904964718e-06, -7.43865966796875e-05, -3.814697265625e-06, -0.000431060791015625, -3.814697265625e-06, -0.15587234497070312, 0.0, -0.3209667205810547, 0.0, -0.25035667419433594, -1.1444091796875e-05, -3.814624506048858e-05, -4.768370445162873e-07, -0.00039520280552096665, 0.0, -0.11782395839691162, -4.44650613644626e-05, -0.0041675567626953125, -0.0007915496826171875, -0.29108619689941406, 0.0, -0.000225067138671875, -0.6839876174926758, 0.0, -0.002348184585571289, -9.5367431640625e-06, -0.00543212890625, -0.15486907958984375, -0.000148773193359375, -0.000324249267578125, -1.9073486328125e-06, -0.1978970319032669, -0.5617906451225281, -0.00418353034183383, -3.814697265625e-06, -0.0002346038818359375, -0.1375436782836914, -5.7220458984375e-06, -0.04514908790588379, 0.0, -0.000980377197265625, -1.9073486328125e-06, -0.005379915237426758, -0.000835418701171875, 0.0, -0.004970550537109375, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.4047164916992188, -3.445148468017578e-05, -1.52587890625e-05, -0.04842948913574219, -5.7220458984375e-06, -0.4759451448917389, -0.4011858105659485, -0.9725249409675598, -2.09808349609375e-05, -0.0003490447998046875, 0.0, -0.30150270462036133, -1.33514404296875e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.040083087720973}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 11, 94, 19, 125, "Aura", "<EOS>", "<UNK>", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura.<UNK>(<UNK>Heal(2), MinionSelector(\n            )), Battlecry(Remove<UNK>Attack(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.7146005630493164, -4.57763671875e-05, -0.001163482666015625, 0.0, -0.07881367206573486, -1.9073486328125e-06, -0.02495884895324707, -0.013871550559997559, -0.26679229736328125, -0.00362396240234375, -2.288818359375e-05, -0.011239051818847656, 0.0, -0.23084139823913574, -0.5889410376548767, -0.4831148386001587, -1.9073486328125e-06, -0.13405895233154297, -1.9073486328125e-06, -0.17475737631320953, -2.3841855067985307e-07, -0.008417129516601562, 0.0, -0.25604772567749023, -0.001239776611328125, 0.0, -0.0056056976318359375, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.6521978378295898, -1.537799835205078e-05, -1.52587890625e-05, -0.05303192138671875, -3.814697265625e-06, -0.4941587448120117, -0.7301893830299377, -1.0405691862106323, -2.47955322265625e-05, -0.00018310546875, 0.0, -0.2524075508117676, -1.1444091796875e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "<UNK>Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"value": {"id": "Aura", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.451301613707379}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 11, 94, 19, 125, "Aura", "<EOS>", "<UNK>", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Heal", "Amount", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura.<UNK>(<UNK>HealAmount(1),\n            MinionSelector()), Battlecry(Remove<UNK>Attack(),\n            PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.7146005630493164, -4.57763671875e-05, -0.001163482666015625, 0.0, -0.07881367206573486, -1.9073486328125e-06, -0.02495884895324707, -0.013871550559997559, -0.26679229736328125, -0.00362396240234375, -2.288818359375e-05, -0.011239051818847656, 0.0, -0.23084139823913574, -0.5889410376548767, -1.0699859857559204, -0.0035859346389770508, -0.002208709716796875, -0.4514656066894531, -5.7220458984375e-06, -0.05894695967435837, -1.9073486328125e-06, -0.028046607971191406, -1.9073486328125e-06, -0.04058980941772461, -0.008052825927734375, 0.0, -0.0038242340087890625, -1.71661376953125e-05, -1.33514404296875e-05, 0.0, -0.4761791229248047, -1.1563301086425781e-05, -1.71661376953125e-05, -0.07479667663574219, -3.814697265625e-06, -0.5085004568099976, -0.6004217863082886, -0.9492235779762268, -2.6702880859375e-05, -0.0001430511474609375, 0.0, -0.1881096363067627, -1.33514404296875e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>HealAmount", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"value": {"id": "Aura", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.62940122361885}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Battlecry(Remove<UNK>Attack(), MinionSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.6822338104248047, 0.0, -0.0023615360260009766, -9.5367431640625e-06, -0.004642486572265625, -0.15625476837158203, -0.00014495849609375, -0.0003204345703125, -1.9073486328125e-06, -0.19570358097553253, -0.5600441098213196, -0.004164337646216154, -3.814697265625e-06, -0.0002346038818359375, -0.13724899291992188, -5.7220458984375e-06, -0.044730186462402344, 0.0, -0.00096893310546875, -1.9073486328125e-06, -0.00549626350402832, -0.0008373260498046875, 0.0, -0.00482940673828125, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -1.4004735946655273, -3.445148468017578e-05, -1.52587890625e-05, -0.04837608337402344, -5.7220458984375e-06, -0.4756549000740051, -0.40097665786743164, -0.9720706343650818, -2.09808349609375e-05, -0.000347137451171875, 0.0, -1.4423766136169434, -0.0005702972412109375, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.771505513578965}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Aura", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Spell", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Aura", "<EOS>", 209, 49, 174, "opponent", "Cat", "Form", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura(<UNK>SpellDamage(1), MinionSelector\n            ()), Aura(opponentCatForm(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.6822338104248047, 0.0, -0.0023615360260009766, -9.5367431640625e-06, -0.004642486572265625, -0.15625476837158203, -0.00014495849609375, -0.0003204345703125, -1.9073486328125e-06, -0.19570358097553253, -0.5600441098213196, -0.004164337646216154, -3.814697265625e-06, -0.0002346038818359375, -0.13724899291992188, -5.7220458984375e-06, -0.044730186462402344, 0.0, -0.00096893310546875, -1.9073486328125e-06, -0.00549626350402832, -0.0008373260498046875, 0.0, -0.00482940673828125, -4.1961669921875e-05, -1.1444091796875e-05, 0.0, -0.44121646881103516, -9.5367431640625e-06, -0.000118255615234375, -0.17116737365722656, -2.288818359375e-05, -1.0915228128433228, -1.9421312808990479, -0.13723517954349518, -0.0001316070556640625, -0.0005092620849609375, -1.9073486328125e-06, -0.9859088659286499, -0.0012627840042114258, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "<UNK>SpellDamage", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}, {"args": [{"hole0": "opponentCatForm", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.801821404487207}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "PALADIN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 11, 94, 19, 125, "Aura", "<EOS>", "<UNK>", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.PALADIN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura.<UNK>(<UNK>Heal(2), MinionSelector(\n            )), Battlecry(Remove<UNK>Attack(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -1.0837244987487793, -1.9073486328125e-06, -9.5367431640625e-06, -3.814697265625e-06, -1.9073486328125e-05, -3.814697265625e-06, -7.95125961303711e-05, -6.437280717364047e-06, -0.05084860324859619, -1.9073486328125e-05, -2.86102294921875e-05, -0.0020923614501953125, 0.0, -0.10994446277618408, -6.79492904964718e-06, -7.43865966796875e-05, -3.814697265625e-06, -0.000431060791015625, -3.814697265625e-06, -0.15587234497070312, 0.0, -0.3209667205810547, 0.0, -0.25035667419433594, -1.1444091796875e-05, -3.814624506048858e-05, -4.768370445162873e-07, -0.00039520280552096665, 0.0, -0.11782395839691162, -4.44650613644626e-05, -0.0041675567626953125, -0.0007915496826171875, -0.29108619689941406, 0.0, -0.000225067138671875, -0.7129316329956055, -4.57763671875e-05, -0.0011768341064453125, 0.0, -0.0780259370803833, -1.9073486328125e-06, -0.025186777114868164, -0.013894438743591309, -0.2678556442260742, -0.003612518310546875, -2.288818359375e-05, -0.011213302612304688, 0.0, -0.23151206970214844, -0.5886428952217102, -0.4833858013153076, -1.9073486328125e-06, -0.1336374282836914, -1.9073486328125e-06, -0.17391490936279297, -2.3841855067985307e-07, -0.00836944580078125, 0.0, -0.2557806968688965, -0.00119781494140625, 0.0, -0.005817413330078125, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.655609130859375, -1.537799835205078e-05, -1.52587890625e-05, -0.05267906188964844, -3.814697265625e-06, -0.49407705664634705, -0.7275326251983643, -1.0432461500167847, -2.47955322265625e-05, -0.0001850128173828125, 0.0, -0.25377321243286133, -1.1444091796875e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "PALADIN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "<UNK>Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"value": {"id": "Aura", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -9.852631710675581}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 11, 94, 19, 125, "Aura", "<EOS>", "<UNK>", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Target", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura.<UNK>(<UNK>Heal(2), MinionSelector(\n            )), Battlecry(Remove<UNK>Target(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.7146005630493164, -4.57763671875e-05, -0.001163482666015625, 0.0, -0.07881367206573486, -1.9073486328125e-06, -0.02495884895324707, -0.013871550559997559, -0.26679229736328125, -0.00362396240234375, -2.288818359375e-05, -0.011239051818847656, 0.0, -0.23084139823913574, -0.5889410376548767, -0.4831148386001587, -1.9073486328125e-06, -0.13405895233154297, -1.9073486328125e-06, -0.17475737631320953, -2.3841855067985307e-07, -0.008417129516601562, 0.0, -0.25604772567749023, -0.001239776611328125, 0.0, -0.0056056976318359375, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.6521978378295898, -1.537799835205078e-05, -1.52587890625e-05, -0.05303192138671875, -3.814697265625e-06, -0.4941587448120117, -0.7301893830299377, -1.2082141637802124, -0.5381841659545898, -0.0065517425537109375, 0.0, -0.1927703619003296, -2.288818359375e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "<UNK>Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"value": {"id": "Aura", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Target", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -10.103848853964642}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 11, 94, 19, 125, "Aura", "<EOS>", "<UNK>", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "Target", "Target", "<EOS>", 49, 174, "Player", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura.<UNK>(<UNK>Heal(2), MinionSelector(\n            )), Battlecry(RemoveTargetTarget(), PlayerSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.7146005630493164, -4.57763671875e-05, -0.001163482666015625, 0.0, -0.07881367206573486, -1.9073486328125e-06, -0.02495884895324707, -0.013871550559997559, -0.26679229736328125, -0.00362396240234375, -2.288818359375e-05, -0.011239051818847656, 0.0, -0.23084139823913574, -0.5889410376548767, -0.4831148386001587, -1.9073486328125e-06, -0.13405895233154297, -1.9073486328125e-06, -0.17475737631320953, -2.3841855067985307e-07, -0.008417129516601562, 0.0, -0.25604772567749023, -0.001239776611328125, 0.0, -0.0056056976318359375, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.6521978378295898, -1.537799835205078e-05, -1.52587890625e-05, -0.05303192138671875, -3.814697265625e-06, -0.4941587448120117, -1.6524182558059692, -0.8229914903640747, -0.1691838502883911, -0.002933502197265625, 0.0, -0.14014661312103271, -7.43865966796875e-05, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "<UNK>Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"value": {"id": "Aura", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, {"args": [{"hole0": "RemoveTargetTarget", "_type": "Template38"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -10.215664246935681}, {"choice_history": [55, 124, 221, 63, 103, "Shadow", "of", "Of", "Nothing", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Shadow", " ", "of", " ", "Nothing", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "SHAMAN", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 72, 145, "0", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 209, 32, 101, 11, 94, 19, 125, "Aura", "<EOS>", "<UNK>", "<EOS>", 209, 32, 101, 19, 125, "<UNK>", "Heal", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 32, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Remove", "<UNK>", "Attack", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>"], "inferred_code": "class ShadowofOfNothing(MinionCard):\n\n    def __init__(self):\n        super().__init__('Shadow of Nothing', 0, CHARACTER_CLASS.SHAMAN,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(0, 1, auras=[Aura.<UNK>(<UNK>Heal(2), MinionSelector(\n            )), Battlecry(Remove<UNK>Attack(), MinionSelector())])\n", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -5.14984130859375e-05, -0.0001544952392578125, -9.34600830078125e-05, -0.00011455356434453279, -1.0267385244369507, -0.07238650321960449, -0.023278988897800446, -0.0017034562770277262, -1.9073486328125e-06, -4.57763671875e-05, 0.0, -0.0018918513087555766, -0.0017533302307128906, -2.288818359375e-05, -0.00022125244140625, -0.028908729553222656, -3.814697265625e-06, -2.7775520720751956e-05, -0.00010514259338378906, -3.0517578125e-05, -0.0002288818359375, -1.33514404296875e-05, -0.00024995251442305744, -4.1365623474121094e-05, -0.0003185272216796875, -1.33514404296875e-05, -9.5367431640625e-06, -1.9073486328125e-06, -0.027624130249023438, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, 0.0, -0.00043416020344011486, -0.0001316070556640625, -9.369850158691406e-05, -1.9073486328125e-06, -0.0009059906005859375, -0.000148773193359375, -2.09808349609375e-05, -4.649062975659035e-05, -0.0005769727868027985, -0.0017928326269611716, -4.971027374267578e-05, -0.0010155438212677836, -0.015132904052734375, -4.00543212890625e-05, -7.62939453125e-06, -0.03322061896324158, -2.110004425048828e-05, -1.9073486328125e-06, -2.09808349609375e-05, -1.33514404296875e-05, 0.0, -2.050399598374497e-05, -0.0002709627151489258, -0.6372771263122559, -1.1444091796875e-05, -1.9073486328125e-06, -3.814697265625e-06, -7.62939453125e-06, -1.9073486328125e-06, -6.42538070678711e-05, -7.629365427419543e-06, -0.04854857921600342, -9.5367431640625e-06, -2.09808349609375e-05, -0.0014858245849609375, 0.0, -0.1389390230178833, -4.768371127283899e-06, -7.82012939453125e-05, -3.814697265625e-06, -0.0004901885986328125, -3.814697265625e-06, -0.1694049835205078, 0.0, -0.30684852600097656, 0.0, -0.25093555450439453, -1.1444091796875e-05, -3.71926071238704e-05, -4.768370445162873e-07, -0.00032692719832994044, -1.1920928244535389e-07, -0.1402209997177124, -4.053115480928682e-05, -0.003879547119140625, -0.000782012939453125, -0.2905082702636719, 0.0, -0.0002269744873046875, -0.7146005630493164, -4.57763671875e-05, -0.001163482666015625, 0.0, -0.07881367206573486, -1.9073486328125e-06, -0.02495884895324707, -0.013871550559997559, -0.26679229736328125, -0.00362396240234375, -2.288818359375e-05, -0.011239051818847656, 0.0, -0.23084139823913574, -0.5889410376548767, -0.4831148386001587, -1.9073486328125e-06, -0.13405895233154297, -1.9073486328125e-06, -0.17475737631320953, -2.3841855067985307e-07, -0.008417129516601562, 0.0, -0.25604772567749023, -0.001239776611328125, 0.0, -0.0056056976318359375, -1.9073486328125e-05, -2.09808349609375e-05, 0.0, -0.6521978378295898, -1.537799835205078e-05, -1.52587890625e-05, -0.05303192138671875, -3.814697265625e-06, -0.4941587448120117, -0.7301893830299377, -1.0405691862106323, -2.47955322265625e-05, -0.00018310546875, 0.0, -1.5870575904846191, -0.000446319580078125, 0.0], "model_output": {"body": [{"name": "ShadowofOfNothing", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Shadow of Nothing", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "SHAMAN"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "<UNK>Heal", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"value": {"id": "Aura", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}, "_type": "Call"}, {"args": [{"hole0": "Remove<UNK>Attack", "_type": "Template38"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 0, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -10.786386528868512}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.6702880859375e-05, -6.866455078125e-05, -19.685932159423828], "model_output": {"body": [], "_type": "Module"}, "score": -19.68602752685547}]}
{"gold_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARRIOR, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        if self.target.health > player.effective_spell_damage(2\n            ) or self.target.divine_shield:\n            self.target.damage(player.effective_spell_damage(2), self)\n            player.draw()\n        else:\n            self.target.damage(player.effective_spell_damage(2), self)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "draw", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        game.check_delayed()\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -1.1250447034835815, -0.10310377925634384, -0.018263816833496094, -0.000102996826171875, -2.09808349609375e-05, -0.06035900115966797, -4.76837158203125e-05, 0.0, -0.1625986099243164, 0.0, -0.3211984634399414, 0.0, -0.004849076271057129, -1.9073486328125e-06], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template22"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.0945125783961203}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "game", "<EOS>", "check_delayed", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.check_delayed()\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -1.017608642578125, -3.4332275390625e-05, 0.0, -0.06500053405761719, 0.0, -0.3078269958496094, 0.0, -0.004716992378234863, -1.9073486328125e-06], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "check_delayed"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.1186639406638506}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "4", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.increase_health(4)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -0.4497699737548828, -7.62939453125e-06, -3.814697265625e-06, -4.57763671875e-05, -7.62939453125e-06, -0.17899513244628906, 0.0, -0.2924003601074219, 0.0, -9.655952453613281e-06, -2.0265579223632812e-06, -0.557541012763977, 0.0, -6.29425048828125e-05, -5.14984130859375e-05, -5.7220458984375e-06, -0.7076722383499146, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"n": 4, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.910049948926485}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "increase_health", "<EOS>", 208, 39, 130, "2", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.increase_health(2)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -0.4497699737548828, -7.62939453125e-06, -3.814697265625e-06, -4.57763671875e-05, -7.62939453125e-06, -0.17899513244628906, 0.0, -0.2924003601074219, 0.0, -9.655952453613281e-06, -2.0265579223632812e-06, -0.557541012763977, 0.0, -6.29425048828125e-05, -5.14984130859375e-05, -5.7220458984375e-06, -0.7100372910499573, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "increase_health"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.9124150016265276}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "draw", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n        player.draw()\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -1.1250447034835815, -0.10310377925634384, -0.018263816833496094, -0.000102996826171875, -2.09808349609375e-05, -0.06035900115966797, -4.76837158203125e-05, 0.0, -0.1625986099243164, 0.0, -1.305130958557129, -8.344646857949556e-07, -0.004572510253638029, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 0, "_type": "Template22"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.0781674346119416}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 99, 11, 94, 19, 125, "player", "<EOS>", "draw", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.draw()\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -1.017608642578125, -3.4332275390625e-05, 0.0, -0.06500053405761719, 0.0, -1.3421268463134766, -1.0728830375228426e-06, -0.0037791719660162926, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"func": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "draw"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.152025136249904}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -0.4497699737548828, -7.62939453125e-06, -3.814697265625e-06, -4.57763671875e-05, -7.62939453125e-06, -0.17899513244628906, 0.0, -0.2924003601074219, 0.0, -9.655952453613281e-06, -2.0265579223632812e-06, -1.2190762758255005, -2.0265579223632812e-06, -7.62939453125e-05, -0.07187747955322266, -2.6702880859375e-05, -0.2710551619529724, -1.2516919014160521e-05, -2.86102294921875e-05, 0.0, -0.000156402587890625, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.207028005300913}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 11, 94, 19, 125, "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        game.other_player.hero.damage(player.effective_spell_damage(2), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -0.4497699737548828, -7.62939453125e-06, -3.814697265625e-06, -4.57763671875e-05, -7.62939453125e-06, -1.8090734481811523, -2.09808349609375e-05, -1.71661376953125e-05, -1.1444091796875e-05, -0.10632801055908203, -6.79492904964718e-06, -0.005888462066650391, -1.1920928244535389e-07, -0.008595237508416176, -2.741813204920618e-06, -0.012249469757080078, 0.0, -7.62939453125e-05, -0.00042724609375, -9.5367431640625e-05, -0.26695677638053894, -3.6000747059006244e-05, -2.47955322265625e-05, -1.9073486328125e-06, -8.881092071533203e-05, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"value": {"id": "game", "_type": "Name"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.383210433272886}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 24, 160, "2", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "hero", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n        player.hero.damage(player.effective_spell_damage(2), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -0.1323833465576172, -0.0011196136474609375, -0.41123825311660767, -2.0503786799963564e-05, -0.013029098510742188, -0.0001678466796875, -9.72747802734375e-05, -0.4497699737548828, -7.62939453125e-06, -3.814697265625e-06, -4.57763671875e-05, -7.62939453125e-06, -0.17899513244628906, 0.0, -1.6210880279541016, 0.0, -0.014703631401062012, -2.741813204920618e-06, -0.18447649478912354, -1.9073486328125e-06, -1.71661376953125e-05, -0.001438140869140625, -0.0001239776611328125, -0.22900357842445374, -2.6941112082567997e-05, -3.4332275390625e-05, 0.0, -0.00025177001953125, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}, {"value": {"args": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.40347320203648}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 223, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 39, 130, "2", "<EOS>", 37, 125, "self", "<EOS>", 64, 106, 24, 160, "2", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(2, self)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -0.0398101806640625, -5.7220458984375e-06, -2.1219253540039062e-05, 0.0, -4.38690185546875e-05, -1.9073486328125e-05, -3.814697265625e-06, -5.602834789897315e-06, 0.0, 0.0, -7.62939453125e-06, 0.0, 0.0, -9.5367431640625e-06, -2.1457672119140625e-06, -0.02693653106689453, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -1.1444091796875e-05, 0.0, -1.52587890625e-05, 0.0, -2.1100042431498878e-05, 0.0, -2.491474151611328e-05, 0.0, -1.9073486328125e-05, -0.000362396240234375, -3.814697265625e-06, -1.33514404296875e-05, 0.0, -2.09808349609375e-05, 0.0, -0.000118255615234375, -8.225431884056889e-06, -0.046115875244140625, -0.0002899169921875, -2.1193857192993164, -0.0005035400390625, -1.1444091796875e-05, -6.4849853515625e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.00421905517578125, 0.0, -0.0004329681396484375, -1.1920928244535389e-07, -1.5377991076093167e-05, -1.1920928244535389e-07, -0.05615353584289551, -1.1920928244535389e-07, -1.1444091796875e-05, -0.40561866760253906, -0.0001068115234375, -0.05110658332705498, 0.0, -0.0001316070556640625, -1.9073486328125e-06, -1.33514404296875e-05, 0.0, -0.5888671875, -1.33514404296875e-05, -0.041156768798828125, -0.0018768310546875, -0.0007556869531981647, -2.0503786799963564e-05], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"args": [{"n": 2, "_type": "Num"}, {"id": "self", "_type": "Name"}], "func": {"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Attribute", "attr": "damage"}, "_type": "Call"}, "_type": "Expr"}, {"value": {"hole0": 2, "_type": "Template22"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.4359166666596153}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -3.2596616744995117, -0.000537872314453125, -3.814697265625e-06, 0.0, -0.03282737731933594, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -1.3470649719238281e-05, 0.0, -0.0992661714553833, -1.9073486328125e-06, -3.814697265625e-06, -0.023225784301757812, -1.33514404296875e-05, -0.4276717007160187, -7.271740287251305e-06, -1.71661376953125e-05, -1.9073486328125e-06, -0.0005054473876953125, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8952951471352364}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "ROGUE", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "draw", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.ROGUE, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(0), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -0.0485081672668457, -1.9073486328125e-06, -3.850459688692354e-05, 0.0, -0.0001163482666015625, -1.9073486328125e-05, -9.5367431640625e-06, 0.0, -2.09808349609375e-05, 0.0, -3.4332275390625e-05, -1.9073486328125e-06, -1.9073486328125e-05, -1.9073486328125e-06, -0.0004464387893676758, -5.9485435485839844e-05, -3.2596616744995117, -0.000537872314453125, -3.814697265625e-06, 0.0, -0.03282737731933594, 0.0, -1.9073486328125e-05, -1.1920928244535389e-07, -1.3470649719238281e-05, 0.0, -0.0992661714553833, -1.9073486328125e-06, -3.814697265625e-06, -0.023225784301757812, -1.33514404296875e-05, -1.0630602836608887, -0.0018445096211507916, -2.09808349609375e-05, -1.9073486328125e-06, -0.00035381317138671875, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "ROGUE"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 0, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.532373148441927}, {"choice_history": [55, 124, 221, 63, 103, "Slam", "<EOS>", 208, 37, 125, "Spell", "Card", "<EOS>", 222, 80, 165, "Slam", "<EOS>", "2", "<EOS>", "WARLOCK", "<EOS>", "target_func", "<EOS>", 11, 94, 11, 94, 19, 125, "hearthbreaker", "<EOS>", "targeting", "<EOS>", "find_minion_spell_target", "<EOS>", 71, 144, 11, 94, 19, 125, "self", "<EOS>", "target", "<EOS>", "damage", "<EOS>", 209, 45, 169, "2", "<EOS>", 37, 125, "self", "<EOS>"], "inferred_code": "class Slam(SpellCard):\n\n    def __init__(self):\n        super().__init__('Slam', 2, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            COMMON, target_func=hearthbreaker.targeting.\n            find_minion_spell_target)\n\n    def use(self, player, game):\n        super().use(player, game)\n        self.target.damage(player.effective_spell_damage(2), self)\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -5.340576171875e-05, -1.9073486328125e-06, -5.9126061387360096e-05, -0.0006922483444213867, -3.814697265625e-05, -4.57763671875e-05, -1.9073486328125e-06, -1.8477439880371094e-05, -9.322015102952719e-05, -5.7220458984375e-06, -1.9073486328125e-05, -0.0009479522705078125, -0.0001239776611328125, -9.440929716220126e-05, -8.344646857949556e-07, -1.66712561622262e-05, 0.0, -3.259143352508545, 0.0, -4.971026646671817e-05, 0.0, -0.00011444091796875, -2.47955322265625e-05, -9.5367431640625e-06, 0.0, -1.71661376953125e-05, 0.0, -4.76837158203125e-05, -1.9073486328125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0006295442581176758, -7.092952728271484e-05, -3.079538345336914, -0.0006103515625, -3.814697265625e-06, 0.0, -0.03202629089355469, -1.9073486328125e-06, -1.9073486328125e-05, -1.1920928244535389e-07, -1.3470649719238281e-05, 0.0, -0.09789860248565674, -1.9073486328125e-06, -3.814697265625e-06, -0.022528648376464844, -1.33514404296875e-05, -0.4238130450248718, -7.152531907195225e-06, -1.52587890625e-05, -1.9073486328125e-06, -0.0005064010620117188, 0.0], "model_output": {"body": [{"name": "Slam", "body": [{"_type": "Template3", "hole0": "Slam", "hole4": {"value": {"value": {"id": "hearthbreaker", "_type": "Name"}, "_type": "Attribute", "attr": "targeting"}, "_type": "Attribute", "attr": "find_minion_spell_target"}, "hole1": 2, "hole3": "target_func", "hole2": "WARLOCK"}, {"hole1": "damage", "hole0": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "target"}, "_type": "Template1", "hole2": [{"hole0": 2, "_type": "Template33"}, {"id": "self", "_type": "Name"}]}], "bases": [{"id": "SpellCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.91937497658693}, {"choice_history": [55, 124, 221, 62], "inferred_code": "break\n", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -1.33514404296875e-05, -17.036090850830078], "model_output": {"body": [{"_type": "Break"}], "_type": "Module"}, "score": -17.036117553710938}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-3.814697265625e-06, -9.5367431640625e-06, -21.160106658935547], "model_output": {"body": [], "_type": "Module"}, "score": -21.160120010375977}]}
{"gold_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.NONE, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.8345756530761719, -5.340576171875e-05, -5.7220440794480965e-06, -1.919269561767578e-05, -1.4185837244440336e-05, 0.0, -0.007088303565979004, 0.0, -0.0009553432464599609, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001109836230170913, -8.106198947643861e-06, -7.05718994140625e-05, -0.0031528472900390625, -9.5367431640625e-06, -0.02660023234784603, -0.018728796392679214, -0.1587362289428711, -0.0023326873779296875, -7.43865966796875e-05, -7.62939453125e-06, -8.82148651726311e-06, -0.000102996826171875, 0.0, -0.0018873214721679688, -5.7220458984375e-06, -2.6702880859375e-05, -0.048450469970703125, -2.47955322265625e-05, -9.1552734375e-05, -5.7220458984375e-06, -0.00543975830078125, -0.00016021728515625, -1.1444091796875e-05, -2.47955322265625e-05, -3.814697265625e-06, -0.0004825592041015625, -3.814697265625e-06, -4.57763671875e-05, -1.9073486328125e-06, -0.00017452219617553055, -0.00020432472229003906, -8.988380432128906e-05, -0.0007114410400390625, -3.814697265625e-06, -1.1801719665527344e-05, -6.69933797325939e-05, -1.609323408047203e-05, -5.960462772236497e-07], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"_type": "Template3", "hole0": "Spellbreaker", "hole4": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.1150240960976632}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Spellbreaker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), MinionSelector(players=BothPlayer(),\n            picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.9449243545532227, -1.1444091796875e-05, 0.0, -0.000446319580078125, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.00014041972463019192, -2.09808349609375e-05, -2.682209014892578e-05, -1.1920928244535389e-07, -0.00054168701171875, -0.00016021728515625, -0.0008754730224609375, -1.0251998901367188e-05, -0.0004025697708129883, -0.000396728515625, -7.62939453125e-06, -2.2649762740911683e-06, -3.099440846199286e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -0.0006073712720535696, -0.0002339915226912126, -0.0029222960583865643, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -5.14984130859375e-05, -0.0008258819580078125, -0.0002840757369995117, -5.3165931603871286e-05, -0.046920061111450195, -5.364412118069595e-06, -0.0003986358642578125, -5.7220458984375e-06, 0.0, -7.665157318115234e-05, -6.020069122314453e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.000850677490234375, 0.0, -0.31586360931396484, -5.340576171875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0012445449829101562, 0.0, -0.000263214111328125, -0.0001773834228515625, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -7.629378160345368e-06, -0.00029754638671875, -0.0002689361572265625, -1.52587890625e-05, -0.013260985724627972, -0.018943076953291893, -0.34848594665527344, -0.00470733642578125, -0.0001850128173828125, -1.9073486328125e-06, -1.9550314391381107e-05, -8.392333984375e-05, 0.0, -0.0010852813720703125, -3.814697265625e-06, -1.71661376953125e-05, -0.01718616485595703, -1.33514404296875e-05, -0.0001506805419921875, -7.62939453125e-06, -0.004547119140625, -0.0001430511474609375, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-06, -0.0005054473876953125, -3.814697265625e-06, -6.29425048828125e-05, -1.9073486328125e-06, -0.00019550307479221374, -0.00017380714416503906, -0.00022530555725097656, -0.0008792877197265625, -3.814697265625e-06, -1.1682510375976562e-05, -3.6954195820726454e-05, -1.2159329344285652e-05, -2.3841855067985307e-07], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Spellbreaker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.305520134718755}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.8345756530761719, -5.340576171875e-05, -5.7220440794480965e-06, -1.919269561767578e-05, -1.4185837244440336e-05, 0.0, -0.007088303565979004, 0.0, -0.0009553432464599609, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001109836230170913, -8.106198947643861e-06, -7.05718994140625e-05, -0.0031528472900390625, -9.5367431640625e-06, -0.02660023234784603, -0.018728796392679214, -1.9222278594970703, -1.9073486328125e-06, -0.2988321781158447, -0.0020925565622746944, 0.0, -0.05158805847167969, -1.9073486328125e-06, -1.1563301086425781e-05, -7.784063927829266e-05, -2.169608706026338e-05, -4.1723224057932384e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"_type": "Template3", "hole0": "Spellbreaker", "hole4": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.170675240120538}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -0.6644185781478882, -3.576278118089249e-07, -0.03298228234052658, -5.602820692729438e-06, -5.53131103515625e-05, -0.010813713073730469, 0.0, -0.22108152508735657, -2.741813204920618e-06, -0.00020372547442093492, -0.0005323886871337891, 0.0, -0.12445735931396484, -0.07394218444824219, -0.009922981262207031, -0.0005038976669311523, 0.0, -2.47955322265625e-05, 0.0, -0.30247604846954346, -0.00012648063420783728, 0.0, -0.01025390625, 0.0, -0.15888811647891998, -0.0019342839950695634, -4.231898128637113e-05, -0.0003833770751953125, 0.0, -1.3589859008789062e-05, -0.00013612773909699172, -9.536731340631377e-06, -1.0728830375228426e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "UserPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.267162452007881}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Spellbreaker", "<EOS>", 39, 130, "4", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Silence(), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.9449243545532227, -1.1444091796875e-05, 0.0, -0.000446319580078125, -4.57763671875e-05, 0.0, -1.9073486328125e-06, -9.5367431640625e-06, -0.00014041972463019192, -2.09808349609375e-05, -2.682209014892578e-05, -1.1920928244535389e-07, -0.00054168701171875, -0.00016021728515625, -0.0008754730224609375, -1.0251998901367188e-05, -0.0004025697708129883, -0.000396728515625, -7.62939453125e-06, -2.2649762740911683e-06, -3.099440846199286e-06, -1.1444091796875e-05, -1.9073486328125e-06, -4.38690185546875e-05, -3.4332275390625e-05, -0.0006073712720535696, -0.0002339915226912126, -0.0029222960583865643, -3.814697265625e-06, 0.0, -5.7220458984375e-06, -5.14984130859375e-05, -0.0008258819580078125, -0.0002840757369995117, -5.3165931603871286e-05, -0.046920061111450195, -5.364412118069595e-06, -0.0003986358642578125, -5.7220458984375e-06, 0.0, -7.665157318115234e-05, -6.020069122314453e-05, -9.5367431640625e-06, -1.9073486328125e-06, -5.340576171875e-05, 0.0, -0.000850677490234375, 0.0, -0.31586360931396484, -5.340576171875e-05, -1.1444091796875e-05, -1.1444091796875e-05, -0.0012445449829101562, 0.0, -0.000263214111328125, -0.0001773834228515625, -7.62939453125e-06, 0.0, -7.43865966796875e-05, -7.629378160345368e-06, -0.00029754638671875, -0.0002689361572265625, -1.52587890625e-05, -0.013260985724627972, -0.018943076953291893, -1.2246417999267578, -3.814697265625e-06, -0.3745582401752472, -0.0011658662697300315, 0.0, -0.31009864807128906, -3.814697265625e-06, -7.867813110351562e-06, -3.5523738915799186e-05, -2.5629882657085545e-05, -2.503394853192731e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Spellbreaker", "_type": "Str"}, {"n": 4, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.83728252559262}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -1.2302106618881226, -2.145764938177308e-06, -0.028704989701509476, -1.3828182090946939e-05, -7.62939453125e-06, -0.006744384765625, 0.0, -0.39486435055732727, -3.099440846199286e-06, -0.00030064169550314546, -0.0005152225494384766, 0.0, -0.09568309783935547, -0.04569244384765625, -0.010686874389648438, -0.0005820989608764648, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -0.3033570349216461, -0.00013470600242726505, 0.0, -0.011173248291015625, -1.9073486328125e-06, -0.16917656362056732, -0.0020509895402938128, -4.5060722186462954e-05, -0.0003871917724609375, 0.0, -1.3470649719238281e-05, -0.00013457823661156, -9.417522960575297e-06, -1.0728830375228426e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "UserPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.954481189268904}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(),\n            MinionSelector(picker=UserPicker(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.8345756530761719, -5.340576171875e-05, -5.7220440794480965e-06, -1.919269561767578e-05, -1.4185837244440336e-05, 0.0, -0.007088303565979004, 0.0, -0.0009553432464599609, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001109836230170913, -8.106198947643861e-06, -7.05718994140625e-05, -0.0031528472900390625, -9.5367431640625e-06, -0.02660023234784603, -0.018728796392679214, -0.1587362289428711, -0.0023326873779296875, -7.43865966796875e-05, -7.62939453125e-06, -8.82148651726311e-06, -0.000102996826171875, 0.0, -0.0018873214721679688, -5.7220458984375e-06, -2.6702880859375e-05, -3.1470327377319336, -5.7220458984375e-06, -0.0080413818359375, -1.9073486328125e-05, -0.0009535551071166992, -0.0009557008743286133, -0.00036835670471191406, -6.67572021484375e-05, -4.1961669921875e-05, -0.11434173583984375, -1.9073486328125e-06, -0.00061798095703125, -1.9073486328125e-06, -0.00016844271158333868, -0.00023663043975830078, -0.00011837482452392578, -0.00122833251953125, -3.814697265625e-06, -7.987021490407642e-06, -3.576214658096433e-05, -1.9907914975192398e-05, -3.576278118089249e-07], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"_type": "Template3", "hole0": "Spellbreaker", "hole4": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"keywords": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.333266385506185}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 49, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -0.6644185781478882, -3.576278118089249e-07, -0.03298228234052658, -5.602820692729438e-06, -5.53131103515625e-05, -0.010813713073730469, 0.0, -0.22108152508735657, -2.741813204920618e-06, -0.00020372547442093492, -0.0005323886871337891, 0.0, -0.12445735931396484, -0.07394218444824219, -0.009922981262207031, -0.0005038976669311523, 0.0, -2.47955322265625e-05, 0.0, -1.398549199104309, -0.0005230903043411672, 0.0, -0.010271072387695312, -1.9073486328125e-06, -0.16299670934677124, -0.0020021104719489813, -3.945802745874971e-05, -0.000576019287109375, -1.9073486328125e-06, -1.3589859008789062e-05, -0.00014375607133843005, -9.655939720687456e-06, -1.1920922133867862e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "BothPlayer", "_type": "Template38"}, {"hole0": "UserPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.368027260500355}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Spellbreaker", "<EOS>", "4", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Silence", "<EOS>", 49, 174, "Silence", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Silence(), Silence()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.8345756530761719, -5.340576171875e-05, -5.7220440794480965e-06, -1.919269561767578e-05, -1.4185837244440336e-05, 0.0, -0.007088303565979004, 0.0, -0.0009553432464599609, -1.1920928244535389e-07, -9.5367431640625e-06, -0.0001811981201171875, -1.1444091796875e-05, -5.7220458984375e-06, -0.0001109836230170913, -8.106198947643861e-06, -7.05718994140625e-05, -0.0031528472900390625, -9.5367431640625e-06, -0.02660023234784603, -0.018728796392679214, -1.9222278594970703, -1.9073486328125e-06, -1.6337456703186035, -0.22935537993907928, -0.03131675720214844, -0.000156402587890625, -7.62939453125e-06, -0.00013517419574782252, -0.000202178955078125, -4.52994936495088e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"_type": "Template3", "hole0": "Spellbreaker", "hole4": {"args": [{"hole0": "Silence", "_type": "Template38"}, {"hole0": "Silence", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 4, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.712968989814719}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "RARE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Damage(1), MinionSelector\n            (BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -0.6644185781478882, -3.576278118089249e-07, -0.03298228234052658, -5.602820692729438e-06, -5.53131103515625e-05, -0.010813713073730469, 0.0, -1.6498280763626099, -9.655952453613281e-06, -0.0006710290326736867, -0.00017940998077392578, 0.0, -0.2382802963256836, -0.000885009765625, -3.814697265625e-06, -0.6630665063858032, -0.0006887777708470821, 0.0, -0.002292633056640625, 0.0, -1.3470649719238281e-05, -0.0002814135223161429, -7.390974133159034e-06, -9.536738616588991e-07], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.918434431775893}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 49, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, BothPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -1.2302106618881226, -2.145764938177308e-06, -0.028704989701509476, -1.3828182090946939e-05, -7.62939453125e-06, -0.006744384765625, 0.0, -0.39486435055732727, -3.099440846199286e-06, -0.00030064169550314546, -0.0005152225494384766, 0.0, -0.09568309783935547, -0.04569244384765625, -0.010686874389648438, -0.0005820989608764648, 0.0, -3.24249267578125e-05, -1.9073486328125e-06, -1.4018982648849487, -0.0006031989469192922, 0.0, -0.010931015014648438, -1.9073486328125e-06, -0.17057062685489655, -0.00213121366687119, -4.184215504210442e-05, -0.00058746337890625, -1.9073486328125e-06, -1.3589859008789062e-05, -0.00014172980445437133, -9.536731340631377e-06, -1.1920922133867862e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "BothPlayer", "_type": "Template38"}, {"hole0": "UserPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.05492943584386}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 208, 49, 174, "Both", "Player", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Damage(1), MinionSelector\n            (BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -1.2302106618881226, -2.145764938177308e-06, -0.028704989701509476, -1.3828182090946939e-05, -7.62939453125e-06, -0.006744384765625, 0.0, -1.2162187099456787, -5.841255187988281e-06, -0.0010250805644318461, -0.00015652179718017578, 0.0, -0.29967594146728516, -0.0006923675537109375, -3.814697265625e-06, -0.7668263912200928, -0.0007542202947661281, 0.0, -0.0023517608642578125, 0.0, -1.3470649719238281e-05, -0.00030322244856506586, -7.03334626450669e-06, -1.1920922133867862e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"hole0": "BothPlayer", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 1, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.207669354397922}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 188, "Spellbreaker", "<EOS>", "4", "<EOS>", "MAGE", "<EOS>", "Damage", "<EOS>", 208, 39, 130, "4", "<EOS>", "Minion", "Selector", "<EOS>", 210, 38, 127, "Null", "<EOS>", 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "User", "Picker", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.MAGE, battlecry=Battlecry(Damage(4), MinionSelector\n            (Null, EnemyPlayer(), UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -0.5770158767700195, -9.238310303771868e-05, -0.00028644094709306955, -8.34479033073876e-06, -4.0531076592742465e-06, -2.7917749881744385, -1.668929871811997e-05, -0.02948712557554245, -2.4676019165781327e-05, -1.1444091796875e-05, -0.010809898376464844, 0.0, -0.2211635857820511, -4.88758041683468e-06, -0.00025534353335388005, -0.00042366981506347656, 0.0, -0.06942939758300781, -0.09429550170898438, -0.009312629699707031, -0.00045812129974365234, 0.0, -2.86102294921875e-05, -1.9073486328125e-06, -0.31322115659713745, -0.00012707660789601505, 0.0, -0.013317108154296875, -1.9073486328125e-06, -0.16845397651195526, -0.001943343784660101, -4.363025072962046e-05, -0.0003814697265625, -1.9073486328125e-06, -1.3470649719238281e-05, -0.00013481661153491586, -9.417522051080596e-06, -1.0728830375228426e-06], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole6": [{"value": "Null", "_type": "NameConstant"}, {"hole0": "EnemyPlayer", "_type": "Template38"}, {"hole0": "UserPicker", "_type": "Template38"}], "_type": "Template8", "hole0": "Spellbreaker", "hole4": [{"n": 4, "_type": "Num"}], "hole1": 4, "hole5": "MinionSelector", "hole3": "Damage", "hole2": "MAGE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.379098976617911}, {"choice_history": [55, 124, 221, 63, 103, "Spellbreaker", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 180, "Spellbreaker", " ", "Silence", "<EOS>", "4", "<EOS>", "FREE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "4", "<EOS>", "3", "<EOS>"], "inferred_code": "class Spellbreaker(MinionCard):\n\n    def __init__(self):\n        super().__init__('Spellbreaker Silence', 4, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(4, 3)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -0.000171661376953125, -5.7220458984375e-06, -5.7220458984375e-06, -1.263618378288811e-05, -0.00370712555013597, -5.7220458984375e-06, -4.76837158203125e-05, 0.0, -9.179114385915454e-06, -8.678436279296875e-05, -4.029273986816406e-05, -0.0001087188720703125, -0.5700283050537109, -0.00016021728515625, -5.125998541188892e-06, -2.145764938177308e-06, -2.86102294921875e-05, -0.00017547607421875, -8.20159912109375e-05, -2.4080276489257812e-05, 0.0, -2.86102294921875e-05, -0.5017938613891602, -3.896615743637085, -0.00047015902237035334, -0.34112536907196045, -0.14091968536376953, -1.9073486328125e-06, -0.00026354938745498657, 0.0, -0.07135927677154541, -1.1920928244535389e-07, -0.06455890834331512, 0.0, -0.015790581703186035, -0.000225067138671875, 0.0, -0.0011138916015625, -3.814697265625e-06, -5.841243819304509e-06, -9.536738616588991e-07, -7.772043318254873e-05, 0.0], "model_output": {"body": [{"name": "Spellbreaker", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Spellbreaker Silence", "hole1": 4, "hole5": "PlayerSelector", "hole3": "Draw", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 4, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.60907563643331}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -20.07887840270996], "model_output": {"body": [], "_type": "Module"}, "score": -20.07889175415039}]}
{"gold_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(Buff(Taunt())),\n            MinionSelector(Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 39, 130, "2", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Adjacent", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(2),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -2.817936897277832, -1.9073486328125e-06, -0.1540599912405014, -2.300739288330078e-05, -0.0005298636388033628, -0.00021719932556152344, -0.00027414379292167723, -0.0015010833740234375, -0.0022401809692382812, -5.340576171875e-05, -0.1530972719192505, -2.2649765014648438e-06, -0.0016918182373046875, -4.9591064453125e-05, -0.12841688096523285, -0.00022195283963810652, -0.11505126953125, -2.09808349609375e-05, -0.00019858291489072144, 0.0, -0.00011455607454990968, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"n": 2, "_type": "Num"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "Adjacent", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.183782481922435}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "Give", "<EOS>", 208, 32, 101, 19, 125, "Taunt", "Health", "<EOS>", 208, 39, 130, "1", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 26, 174, "Adjacent", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give(TauntHealth(1)),\n            MinionSelector(condition=Adjacent())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -1.0487165451049805, -0.0003645175020210445, -0.0002574920654296875, -0.019029617309570312, -0.0009288787841796875, -4.00543212890625e-05, -1.52587890625e-05, -0.026391055434942245, -2.2006003856658936, -2.8371809094096534e-05, -1.52587890625e-05, -0.9781808853149414, 0.0, -0.024815090000629425, -0.014255762100219727, -0.0004828927048947662, -0.0004143714904785156, -0.00023743716883473098, -0.0023479461669921875, -0.0013828277587890625, -3.814697265625e-05, -0.010057806968688965, -5.841255187988281e-06, -0.0028400421142578125, -2.09808349609375e-05, -0.029000669717788696, -0.000977754476480186, -0.0026760101318359375, -7.62939453125e-06, -0.0007874243310652673, 0.0, -0.0005011571338400245, -1.9073486328125e-06], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"n": 1, "_type": "Num"}], "func": {"id": "TauntHealth", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "Give", "hole7": [{"value": {"hole0": "Adjacent", "_type": "Template38"}, "arg": "condition", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.550321541876883}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.MECH)))),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.1238329410552979, -5.7220440794480965e-06, -0.2655677795410156, -0.010501861572265625, -2.145764938177308e-06, -0.0030765533447265625, -0.000514984130859375, -3.814697265625e-06, -0.5508737564086914, 0.0, -1.9073486328125e-06, 0.0, -0.2621641159057617, -0.0002841949462890625, 0.0, -0.002307891845703125, -3.814697265625e-06, -0.00012420836719684303, 0.0, -2.491461236786563e-05, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.732563698709093}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.0466663837432861, -2.944469088106416e-05, -0.1586517095565796, -0.03363227844238281, -2.861018856492592e-06, -0.006305694580078125, -0.000335693359375, -5.7220458984375e-06, -0.8478517532348633, 0.0, -1.9073486328125e-06, 0.0, -0.41856908798217773, -0.00023651123046875, 0.0, -0.001583099365234375, -1.9073486328125e-06, -0.00011669908417388797, 0.0, -2.5033818019437604e-05, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.027288879276277}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.BEAST)))),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.9333746433258057, -1.4662741705251392e-05, -0.13814806938171387, -0.009626388549804688, -3.3378546504536644e-06, -0.00157928466796875, -0.0003795623779296875, -7.62939453125e-06, -0.44822216033935547, 0.0, -1.9073486328125e-06, 0.0, -0.12663781642913818, -0.0003299713134765625, 0.0, -0.00235748291015625, -1.9073486328125e-06, -9.905801562126726e-05, 0.0, -2.229204801551532e-05, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.174079266473875}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "Player", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.MECH)))),\n            PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.1238329410552979, -5.7220440794480965e-06, -1.481698989868164, -0.0007343292236328125, -9.536738616588991e-07, -0.0004730224609375, -0.0004291534423828125, -1.9073486328125e-06, -0.17964649200439453, 0.0, -1.9073486328125e-06, 0.0, -0.11800742149353027, -0.0001125335693359375, 0.0, -0.002910614013671875, -5.7220458984375e-06, -6.401333666872233e-05, 0.0, -2.9086852009641007e-05, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "PlayerSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.4212279022078675}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.0466663837432861, -2.944469088106416e-05, -0.1586517095565796, -0.03363227844238281, -2.861018856492592e-06, -0.006305694580078125, -0.000335693359375, -5.7220458984375e-06, -1.883540153503418, 0.0, -4.38690185546875e-05, -1.9073486328125e-06, -0.0005352497100830078, -8.332727884408087e-05, -1.1920928244535389e-07, -0.0004730224609375, -5.7220458984375e-06, -3.2782001653686166e-05, 0.0, -0.00011133754014736041, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.643730369981526}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.PIRATE)))),\n            MinionSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -2.764906167984009, -1.8119757442036644e-05, -0.05340862274169922, -0.003108978271484375, -2.0265558760002023e-06, -0.0029201507568359375, -0.000789642333984375, -3.814697265625e-06, -0.3037834167480469, 0.0, -1.9073486328125e-06, 0.0, -0.18139219284057617, -0.0002193450927734375, 0.0, -0.001659393310546875, -3.814697265625e-06, -0.00024458751431666315, 0.0, -3.6000885302200913e-05, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.825771273962793}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Player", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            PlayerSelector(players=BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.0466663837432861, -2.944469088106416e-05, -1.9539941549301147, -0.0012569427490234375, -7.152555099310121e-07, -0.00083160400390625, -0.0003566741943359375, -3.814697265625e-06, -0.3302459716796875, 0.0, -1.9073486328125e-06, 0.0, -0.20934712886810303, -0.0001316070556640625, 0.0, -0.0021190643310546875, -5.7220458984375e-06, -6.747018051100895e-05, 0.0, -2.9086852009641007e-05, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "PlayerSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.058360785052621}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "adjacent", "Taunt", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            MinionSelector(condition=Battlecry(adjacentTaunt(),\n            MinionSelector())))), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -1.1076539754867554, -0.00020229816436767578, -1.5497195136049413e-06, -0.001422882080078125, -8.392333984375e-05, -7.62939453125e-06, -0.07477331161499023, -1.1920928244535389e-07, -0.14274215698242188, -4.9591064453125e-05, -3.814697265625e-06, 0.0, -0.2069108486175537, -3.576278118089249e-07, -0.09624481201171875, -0.19823265075683594, -3.814697265625e-06, -0.5247610211372375, -1.6226396560668945, -9.560585021972656e-05, -3.814697265625e-05, 0.0, -0.13497304916381836, -0.0001220703125, 0.0, -0.0005583763122558594, -0.0004863739013671875, -1.311301275563892e-06, -0.0025320053100585938, -0.000823974609375, -7.62939453125e-06, -0.5232295989990234, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.0021451711654663086, -6.818770634708926e-05, 0.0, -0.0005016326904296875, -3.814697265625e-06, -1.2755311217915732e-05, 0.0, -8.666290523251519e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"hole0": "adjacentTaunt", "_type": "Template38"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.059520065749716}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 49, 174, "Give", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            MinionSelector(condition=Battlecry(Give(), MinionSelector())))),\n            MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -1.1076539754867554, -0.00020229816436767578, -1.5497195136049413e-06, -0.001422882080078125, -8.392333984375e-05, -7.62939453125e-06, -0.07477331161499023, -1.1920928244535389e-07, -0.14274215698242188, -4.9591064453125e-05, -3.814697265625e-06, 0.0, -0.2069108486175537, -3.576278118089249e-07, -0.09624481201171875, -0.19823265075683594, -3.814697265625e-06, -1.368074655532837, -0.008297336287796497, -1.71661376953125e-05, 0.0, -0.34616732597351074, -0.002376556396484375, 0.0, -0.00021338462829589844, -0.0006198883056640625, -1.4305104514278355e-06, -0.0020160675048828125, -0.000942230224609375, -1.33514404296875e-05, -1.0918169021606445, 0.0, -3.62396240234375e-05, -3.814697265625e-06, -0.003638386493548751, -8.606909977970645e-05, 0.0, -0.0004749298095703125, -3.814697265625e-06, -1.5973913832567632e-05, 0.0, -8.690149843459949e-05, -1.9073486328125e-06], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"hole0": "Give", "_type": "Template38"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.071295392558277}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "taunt", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            MinionSelector(taunt=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.0466663837432861, -2.944469088106416e-05, -0.1586517095565796, -0.03363227844238281, -2.861018856492592e-06, -0.006305694580078125, -0.000335693359375, -5.7220458984375e-06, -2.3350706100463867, 0.0, -0.019056320190429688, -5.7220458984375e-06, -0.14224517345428467, -0.00017452239990234375, -1.1920928244535389e-07, -0.0006561279296875, -5.7220458984375e-06, -5.364273602026515e-05, 0.0, -0.000133149151224643, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "taunt", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.256303989073089}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.DRAGON)))),\n            MinionSelector(players=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.0466663837432861, -2.944469088106416e-05, -0.1586517095565796, -0.03363227844238281, -2.861018856492592e-06, -0.006305694580078125, -0.000335693359375, -5.7220458984375e-06, -0.8478517532348633, 0.0, -1.9073486328125e-06, 0.0, -1.7477145195007324, -0.00016856192087288946, -2.3841855067985307e-07, -0.000518798828125, -1.1444091796875e-05, -0.00012683062232099473, 0.0, -0.00011860724043799564, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.355415541070407}, {"choice_history": [55, 124, 221, 63, 103, "Sunfury", "Protector", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Sunfury", " ", "Protector", "<EOS>", "2", "<EOS>", "RARE", "<EOS>", "adjacent", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 100, 19, 125, "Card", "Selector", "<EOS>", 216, 54, 197, "condition", "<EOS>", 14, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "players", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "2", "<EOS>", "3", "<EOS>"], "inferred_code": "class SunfuryProtector(MinionCard):\n\n    def __init__(self):\n        super().__init__('Sunfury Protector', 2, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(adjacent(Count(\n            CardSelector(condition=IsType(MINION_TYPE.MECH)))),\n            MinionSelector(players=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(2, 3)\n", "score_history": [-1.1444091796875e-05, 0.0, -1.1444091796875e-05, -3.4332275390625e-05, -3.814697265625e-06, -0.002771467436105013, -8.868777513271198e-05, -0.07686042040586472, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -1.6569954823353328e-05, -3.6954868846805766e-05, -1.7523765563964844e-05, -2.6702880859375e-05, -0.0003910064697265625, -2.47955322265625e-05, -3.504753112792969e-05, -4.768370445162873e-07, -1.1444091796875e-05, -0.0001373291015625, -1.9073486328125e-06, -7.605421706102788e-05, -1.9073468138230965e-06, -1.71661376953125e-05, -0.004193305969238281, -0.07900428771972656, -2.8132995794294402e-05, -0.00019299902487546206, -5.841255187988281e-06, -4.4345855712890625e-05, -7.04589401721023e-05, -1.0728830375228426e-06, -0.020708288997411728, -5.721893103327602e-05, -0.5902493000030518, -0.03224979341030121, -0.00067901611328125, -0.06426334381103516, -0.11190414428710938, -3.4332275390625e-05, 0.0, -0.28193753957748413, -0.017406493425369263, -4.9591064453125e-05, -0.09370994567871094, -0.04035186767578125, -0.0003185272216796875, -1.9073486328125e-06, -0.40753111243247986, -0.0004391670227050781, -1.1920928244535389e-07, -0.0001583099365234375, -0.0001430511474609375, -7.05718994140625e-05, -0.01237797737121582, -2.2649765014648438e-06, -0.09874343872070312, -8.0108642578125e-05, -3.814697265625e-06, 0.0, -0.572956919670105, -0.0012063980102539062, -1.6927717297221534e-05, -9.1552734375e-05, -9.918212890625e-05, -7.62939453125e-06, -1.1444091796875e-05, 0.0, -0.00127410888671875, -1.6689286894688848e-06, -1.1238329410552979, -5.7220440794480965e-06, -0.2655677795410156, -0.010501861572265625, -2.145764938177308e-06, -0.0030765533447265625, -0.000514984130859375, -3.814697265625e-06, -0.5508737564086914, 0.0, -1.9073486328125e-06, 0.0, -2.1160173416137695, -0.00015377996896859258, -2.3841855067985307e-07, -0.0005340576171875, -1.33514404296875e-05, -0.00015722466923762113, 0.0, -0.00012754691124428064, 0.0], "model_output": {"body": [{"name": "SunfuryProtector", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Sunfury Protector", "hole4": [{"args": [{"keywords": [{"value": {"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}, "arg": "condition", "_type": "keyword"}], "func": {"id": "CardSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "hole1": 2, "hole5": "MinionSelector", "hole3": "adjacent", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "players", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.584658098973897}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.1444091796875e-05, 0.0, -21.740633010864258], "model_output": {"body": [], "_type": "Module"}, "score": -21.740644454956055}]}
{"gold_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            source=CARD_SOURCE.LIST, source_list=[Devilsaur(), Squirrel()])\n            ), MinionSelector(players=BothPlayer(), picker=RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Transform", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "mana", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.342444896697998, -4.434487345861271e-05, -0.00030528928618878126, -3.1948089599609375e-05, -1.1920928955078125e-05, -1.8722712411545217e-05, -3.576278118089249e-07, -0.13361915946006775, -5.9604562920867465e-06, -0.0051528094336390495, -7.390703103737906e-05, -0.00070953369140625, -0.001697540283203125, -0.002002716064453125, -4.1961669921875e-05, -7.62939453125e-06, -0.0007825876818969846, -0.00029540061950683594, -2.1338462829589844e-05, -0.0001506805419921875, -4.9591064453125e-05, -1.1444091796875e-05, -0.01556849479675293, -4.9591064453125e-05, -0.001903533935546875, -2.47955322265625e-05, -0.000446319580078125, -0.0005855560302734375, -7.05718994140625e-05, -3.814697265625e-05, 0.0, -0.005517600104212761, -0.013662219047546387, -3.814697265625e-06, -0.0006542205810546875, -0.0010547637939453125, 0.0, -3.814697265625e-06, 0.0, -0.026628535240888596, -1.7523765563964844e-05, -2.47955322265625e-05, -2.09808349609375e-05, -1.52587890625e-05, -0.4298396110534668, -2.86102294921875e-05, -0.0006389617919921875, -1.1444091796875e-05, -0.009954571723937988, -6.866452167741954e-05, 0.0, -0.008342742919921875, 0.0, -0.05275936797261238, -0.002678272081539035, -0.0008106231689453125, -0.0032394316513091326, -0.0005664825439453125, -5.960462772236497e-07, -0.0028467178344726562, -4.38690185546875e-05, -1.1444091796875e-05, -0.027601242065429688, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.00856781005859375, -0.00012516971037257463, -9.655952453613281e-06, -0.000926971435546875, -1.1444091796875e-05, -9.536728384773596e-07, 0.0, -8.398201316595078e-07, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "mana", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Transform", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.110503006374188}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 181, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Replace", "<EOS>", "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Replace(), MinionSelector\n            (players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -2.8287887573242188, -5.8411060308571905e-05, -2.8133386877016164e-05, -1.1563301086425781e-05, -7.748603820800781e-06, -2.467763624736108e-05, 0.0, -0.08700037002563477, -3.576278118089249e-07, -0.14843516051769257, -1.1920928244535389e-07, -0.008147957734763622, -0.005791068077087402, -2.0265558760002023e-06, -0.075347900390625, -0.0001220703125, 0.0, -0.0006055831909179688, 0.0, -1.9073486328125e-05, -5.7220458984375e-06, -0.11869049072265625, -5.841255187988281e-06, 0.0, -0.0001430511474609375, 0.0, -0.016290664672851562, 0.0, -0.0015106201171875, -3.814697265625e-06, -0.010259866714477539, -0.00031304359436035156, -7.987022399902344e-06, -0.0024356842041015625, -1.52587890625e-05, -4.7683681714261184e-07, 0.0, -1.0968651622533798e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole1": 3, "hole5": "MinionSelector", "hole3": "Replace", "hole7": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.311704662754714}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "Squirrel", "<EOS>", 208, 29, 94, 19, 125, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>Squirrel(CARD_SOURCE\n            .<UNK>), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.1772160530090332, -0.0003010850050486624, -0.0001922829687828198, -1.5854835510253906e-05, -7.62939453125e-06, -6.079824743210338e-06, -5.722029527532868e-06, -0.004633426200598478, -0.0008746152743697166, -0.0802016481757164, -0.24098478257656097, -0.08766268193721771, -0.05561065673828125, -1.3767976760864258, -3.814697265625e-06, -0.00016021728515625, 0.0, -0.25119686126708984, -2.3126602172851562e-05, -0.007464408874511719, -1.9073486328125e-06, -0.01441192626953125, -9.5367431640625e-06, -7.152555099310121e-07, -0.015140533447265625, -2.47955322265625e-05, -2.1457435650518164e-06, 0.0, -5.154171958565712e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}], "hole1": 3, "hole5": "PlayerSelector", "hole3": "<UNK>Squirrel", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.320585402923143}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "Squirrel", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "health", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>Squirrel(Attribute(\n            'health', SelfSelector())), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.1772160530090332, -0.0003010850050486624, -0.0001922829687828198, -1.5854835510253906e-05, -7.62939453125e-06, -6.079824743210338e-06, -5.722029527532868e-06, -0.004633426200598478, -0.0008746152743697166, -0.0802016481757164, -0.24098478257656097, -0.08766268193721771, -0.05561065673828125, -0.3755664825439453, -0.000141143798828125, -1.33514404296875e-05, 0.0, -0.11422450840473175, -1.7404556274414062e-05, -0.0001125335693359375, -0.0011196136474609375, -0.0003185272216796875, -0.6162697076797485, 0.0, -0.08191680908203125, -0.000408172607421875, -0.08282852172851562, -0.0002918243408203125, 0.0, -0.6864237785339355, -1.1444091796875e-05, -3.6954811548639555e-06, -0.019275665283203125, -0.000560760498046875, -0.0002095275849569589, -1.9073486328125e-06, -1.1458585504442453e-05, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"args": [{"s": "health", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "PlayerSelector", "hole3": "<UNK>Squirrel", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.635069421627122}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 180, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -2.9484763145446777, -3.421271321712993e-05, -3.707401265273802e-05, -5.9604644775390625e-06, -2.1338462829589844e-05, -6.676793418591842e-06, -1.1920928244535389e-07, -0.34423720836639404, -4.649158654501662e-06, -0.5142703056335449, -4.374954733066261e-05, -0.020843027159571648, -1.52587890625e-05, -2.3841855067985307e-07, -0.0070972442626953125, -8.96453857421875e-05, -3.671565355034545e-05, 0.0, -6.9097732193768024e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole1": 3, "hole5": "PlayerSelector", "hole3": "Draw", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.8428567139776177}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "Squirrel", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "health", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>Squirrel(Attribute(\n            'health', SelfSelector())), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.1772160530090332, -0.0003010850050486624, -0.0001922829687828198, -1.5854835510253906e-05, -7.62939453125e-06, -6.079824743210338e-06, -5.722029527532868e-06, -0.004633426200598478, -0.0008746152743697166, -0.0802016481757164, -0.24098478257656097, -0.08766268193721771, -0.05561065673828125, -0.3755664825439453, -0.000141143798828125, -1.33514404296875e-05, 0.0, -0.11422450840473175, -1.7404556274414062e-05, -0.0001125335693359375, -0.0011196136474609375, -0.0003185272216796875, -0.6162697076797485, 0.0, -0.08191680908203125, -0.000408172607421875, -0.08282852172851562, -0.0002918243408203125, 0.0, -0.8809218406677246, -0.0001957416534423828, -4.6491513785440475e-06, -0.29906463623046875, -0.000263214111328125, -0.0005308312829583883, -1.9073486328125e-06, -2.4547160137444735e-05, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"args": [{"s": "health", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "<UNK>Squirrel", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.109578551825962}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Transform", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('<UNK>', SelfSelector())),\n            IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.342444896697998, -4.434487345861271e-05, -0.00030528928618878126, -3.1948089599609375e-05, -1.1920928955078125e-05, -1.8722712411545217e-05, -3.576278118089249e-07, -0.13361915946006775, -5.9604562920867465e-06, -0.0051528094336390495, -7.390703103737906e-05, -0.00070953369140625, -0.001697540283203125, -0.002002716064453125, -4.1961669921875e-05, -7.62939453125e-06, -0.0007825876818969846, -0.00029540061950683594, -2.1338462829589844e-05, -0.0001506805419921875, -4.9591064453125e-05, -1.1444091796875e-05, -0.01556849479675293, -4.9591064453125e-05, -0.001903533935546875, -2.47955322265625e-05, -0.000446319580078125, -0.0005855560302734375, -7.05718994140625e-05, -3.814697265625e-05, 0.0, -0.005517600104212761, -0.013662219047546387, -3.814697265625e-06, -0.0006542205810546875, -0.0010547637939453125, 0.0, -3.814697265625e-06, 0.0, -0.026628535240888596, -1.7523765563964844e-05, -2.47955322265625e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.782454490661621, -0.0026351213455200195, -0.5276088714599609, -1.9073486328125e-06, -0.18539047241210938, -5.4001797252567485e-05, 0.0, -0.029494285583496094, 0.0, -0.00340866157785058, -0.003946064505726099, -0.0005550384521484375, -0.003911484964191914, -0.0005931854248046875, -5.960462772236497e-07, -0.0032787322998046875, -4.57763671875e-05, -9.5367431640625e-06, -0.024361610412597656, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.00868844985961914, -0.00012195105955470353, -9.655952453613281e-06, -0.0009517669677734375, -1.1444091796875e-05, -9.536727247905219e-07, 0.0, -2.030748873949051e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "<UNK>", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Transform", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.138953598580429}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "LEGENDARY", "<EOS>", "Transform", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "mana", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.LEGENDARY, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('mana', SelfSelector())),\n            IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.342444896697998, -4.434487345861271e-05, -0.00030528928618878126, -3.1948089599609375e-05, -1.1920928955078125e-05, -1.8722712411545217e-05, -3.576278118089249e-07, -2.2576348781585693, -9.536738616588991e-07, -0.30820226669311523, -3.3616517612244934e-05, -0.00113677978515625, -0.0038022994995117188, -0.0021514892578125, -4.76837158203125e-05, -5.7220458984375e-06, -0.0012442474253475666, -0.00040221214294433594, -1.9311904907226562e-05, -0.0001354217529296875, -5.14984130859375e-05, -1.1444091796875e-05, -0.017470479011535645, -4.57763671875e-05, -0.0020275115966796875, -2.6702880859375e-05, -0.000461578369140625, -0.0005035400390625, -6.866455078125e-05, -3.814697265625e-05, 0.0, -0.005980370566248894, -0.013154864311218262, -3.933906555175781e-06, -0.000621795654296875, -0.0010528564453125, 0.0, -3.814697265625e-06, 0.0, -0.02686571702361107, -1.7523765563964844e-05, -2.47955322265625e-05, -2.288818359375e-05, -1.52587890625e-05, -0.42336785793304443, -2.86102294921875e-05, -0.0006465911865234375, -1.1444091796875e-05, -0.0096893310546875, -6.89029402565211e-05, 0.0, -0.008556365966796875, 0.0, -0.05224021151661873, -0.002640125108882785, -0.0008258819580078125, -0.0032280210871249437, -0.0005702972412109375, -5.960462772236497e-07, -0.0028104782104492188, -4.38690185546875e-05, -1.1444091796875e-05, -0.027807235717773438, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.008605003356933594, -0.00012516971037257463, -9.655952453613281e-06, -0.0009288787841796875, -1.1444091796875e-05, -9.536728384773596e-07, 0.0, -9.58913005888462e-07, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "mana", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Transform", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "LEGENDARY"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.536020083604967}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "Squirrel", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "mana", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", "Minion", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>Squirrel(Attribute(\n            'mana', SelfSelector())), MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.1772160530090332, -0.0003010850050486624, -0.0001922829687828198, -1.5854835510253906e-05, -7.62939453125e-06, -6.079824743210338e-06, -5.722029527532868e-06, -0.004633426200598478, -0.0008746152743697166, -0.0802016481757164, -0.24098478257656097, -0.08766268193721771, -0.05561065673828125, -0.3755664825439453, -0.000141143798828125, -1.33514404296875e-05, 0.0, -0.11422450840473175, -1.7404556274414062e-05, -0.0001125335693359375, -0.0011196136474609375, -0.0003185272216796875, -1.6170397996902466, -1.71661376953125e-05, -0.0011005401611328125, -0.000461578369140625, -0.1527923345565796, -0.00045418739318847656, 0.0, -0.4338732957839966, -0.00017261505126953125, -3.933898824470816e-06, -0.2662210464477539, -0.000225067138671875, -0.00031546669197268784, -1.9073486328125e-06, -1.9664643332362175e-05, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"args": [{"s": "mana", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "<UNK>Squirrel", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.619554752093791}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Transform", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "attack", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('attack', SelfSelector())),\n            IsMinion()])), MinionSelector(picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.342444896697998, -4.434487345861271e-05, -0.00030528928618878126, -3.1948089599609375e-05, -1.1920928955078125e-05, -1.8722712411545217e-05, -3.576278118089249e-07, -0.13361915946006775, -5.9604562920867465e-06, -0.0051528094336390495, -7.390703103737906e-05, -0.00070953369140625, -0.001697540283203125, -0.002002716064453125, -4.1961669921875e-05, -7.62939453125e-06, -0.0007825876818969846, -0.00029540061950683594, -2.1338462829589844e-05, -0.0001506805419921875, -4.9591064453125e-05, -1.1444091796875e-05, -0.01556849479675293, -4.9591064453125e-05, -0.001903533935546875, -2.47955322265625e-05, -0.000446319580078125, -0.0005855560302734375, -7.05718994140625e-05, -3.814697265625e-05, 0.0, -0.005517600104212761, -0.013662219047546387, -3.814697265625e-06, -0.0006542205810546875, -0.0010547637939453125, 0.0, -3.814697265625e-06, 0.0, -0.026628535240888596, -1.7523765563964844e-05, -2.47955322265625e-05, -2.09808349609375e-05, -1.52587890625e-05, -2.863459587097168, -0.00018537044525146484, -0.0243988037109375, -1.9073486328125e-06, -0.12262368202209473, -6.639948696829379e-05, 0.0, -0.0088958740234375, 0.0, -0.03354593366384506, -0.00255715474486351, -0.001010894775390625, -0.0035879486240446568, -0.0006694793701171875, -5.960462772236497e-07, -0.0025005340576171875, -4.1961669921875e-05, -1.1444091796875e-05, -0.026528358459472656, 0.0, -9.5367431640625e-06, -7.62939453125e-06, -0.009008407592773438, -0.0001271962682949379, -7.748603820800781e-06, -0.000919342041015625, -1.1444091796875e-05, -1.0728819006544654e-06, 0.0, -1.7870333977043629e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "attack", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Transform", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.661580436976124}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 180, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "FREE", "<EOS>", "Draw", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.FREE, battlecry=Battlecry(Draw(), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -2.9484763145446777, -3.421271321712993e-05, -3.707401265273802e-05, -5.9604644775390625e-06, -2.1338462829589844e-05, -6.676793418591842e-06, -1.1920928244535389e-07, -1.7181910276412964, -2.264974000354414e-06, -0.03464503586292267, -5.567046900978312e-05, -0.013950466178357601, -1.52587890625e-05, -3.576278118089249e-07, -0.004428863525390625, -6.866455078125e-05, -3.564280632417649e-05, 0.0, -6.561167538166046e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole1": 3, "hole5": "PlayerSelector", "hole3": "Draw", "hole2": "FREE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.727611575421797}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "Overspark", "<EOS>", 208, 29, 94, 19, 125, "CARD_SOURCE", "<EOS>", "<UNK>", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>Overspark(\n            CARD_SOURCE.<UNK>), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.1772160530090332, -0.0003010850050486624, -0.0001922829687828198, -1.5854835510253906e-05, -7.62939453125e-06, -6.079824743210338e-06, -5.722029527532868e-06, -0.004633426200598478, -0.0008746152743697166, -0.0802016481757164, -1.6622017621994019, -0.08766268193721771, -0.05561065673828125, -1.3767976760864258, -3.814697265625e-06, -0.00016021728515625, 0.0, -0.25119686126708984, -2.3126602172851562e-05, -0.007464408874511719, -1.9073486328125e-06, -0.01441192626953125, -9.5367431640625e-06, -7.152555099310121e-07, -0.015140533447265625, -2.47955322265625e-05, -2.1457435650518164e-06, 0.0, -5.154171958565712e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"value": {"id": "CARD_SOURCE", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}], "hole1": 3, "hole5": "PlayerSelector", "hole3": "<UNK>Overspark", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.741802382545984}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 186, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "<UNK>", "Overspark", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "health", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", "Player", "Selector", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(<UNK>Overspark(Attribute(\n            'health', SelfSelector())), PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.1772160530090332, -0.0003010850050486624, -0.0001922829687828198, -1.5854835510253906e-05, -7.62939453125e-06, -6.079824743210338e-06, -5.722029527532868e-06, -0.004633426200598478, -0.0008746152743697166, -0.0802016481757164, -1.6622017621994019, -0.08766268193721771, -0.05561065673828125, -0.3755664825439453, -0.000141143798828125, -1.33514404296875e-05, 0.0, -0.11422450840473175, -1.7404556274414062e-05, -0.0001125335693359375, -0.0011196136474609375, -0.0003185272216796875, -0.6162697076797485, 0.0, -0.08191680908203125, -0.000408172607421875, -0.08282852172851562, -0.0002918243408203125, 0.0, -0.6864237785339355, -1.1444091796875e-05, -3.6954811548639555e-06, -0.019275665283203125, -0.000560760498046875, -0.0002095275849569589, -1.9073486328125e-06, -1.1458585504442453e-05, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"args": [{"s": "health", "_type": "Str"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "PlayerSelector", "hole3": "<UNK>Overspark", "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.056286401249963}, {"choice_history": [55, 124, 221, 63, 103, "Tinkmaster", "Overspark", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 87, 187, "Tinkmaster", " ", "Overspark", "<EOS>", "3", "<EOS>", "RARE", "<EOS>", "Transform", "<EOS>", 208, 32, 100, 19, 125, "Card", "Query", "<EOS>", 216, 54, 197, "conditions", "<EOS>", 17, 120, 209, 32, 101, 19, 125, "Mana", "Cost", "<EOS>", 208, 32, 101, 19, 125, "Attribute", "<EOS>", 209, 40, 134, "<UNK>", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 49, 174, "Enemy", "Player", "<EOS>", 49, 174, "Is", "Minion", "<EOS>", "Minion", "Selector", "<EOS>", 216, 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "3", "<EOS>", "3", "<EOS>"], "inferred_code": "class TinkmasterOverspark(MinionCard):\n\n    def __init__(self):\n        super().__init__('Tinkmaster Overspark', 3, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Transform(CardQuery(\n            conditions=[ManaCost(Attribute('<UNK>', MinionSelector(\n            EnemyPlayer()))), IsMinion()])), MinionSelector(picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(3, 3)\n", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -1.33514404296875e-05, -5.53131103515625e-05, -7.62939453125e-06, -0.0011304186191409826, -0.0013561585219576955, -0.0009071492240764201, 0.0, -5.7220458984375e-06, 0.0, -3.218649908376392e-06, -7.200239633675665e-05, -8.428096771240234e-05, -0.0001506805419921875, -0.0006923675537109375, -5.53131103515625e-05, -4.982948303222656e-05, -2.1457672119140625e-06, -4.00543212890625e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0006051051313988864, -6.556489552167477e-06, -0.0005435943603515625, -0.0017900466918945312, -1.342444896697998, -4.434487345861271e-05, -0.00030528928618878126, -3.1948089599609375e-05, -1.1920928955078125e-05, -1.8722712411545217e-05, -3.576278118089249e-07, -0.13361915946006775, -5.9604562920867465e-06, -0.0051528094336390495, -7.390703103737906e-05, -0.00070953369140625, -0.001697540283203125, -0.002002716064453125, -4.1961669921875e-05, -7.62939453125e-06, -0.0007825876818969846, -0.00029540061950683594, -2.1338462829589844e-05, -0.0001506805419921875, -4.9591064453125e-05, -1.1444091796875e-05, -0.01556849479675293, -4.9591064453125e-05, -0.001903533935546875, -2.47955322265625e-05, -0.000446319580078125, -0.0005855560302734375, -7.05718994140625e-05, -3.814697265625e-05, 0.0, -0.005517600104212761, -0.013662219047546387, -3.814697265625e-06, -0.0006542205810546875, -0.0010547637939453125, 0.0, -3.814697265625e-06, 0.0, -0.026628535240888596, -1.7523765563964844e-05, -2.47955322265625e-05, -2.09808349609375e-05, -1.52587890625e-05, -1.782454490661621, -0.0026351213455200195, -0.8930072784423828, -0.000415802001953125, -0.0001239776611328125, 0.0, -0.051433440297842026, -4.780292510986328e-05, -1.1920928244535389e-07, -0.22229290008544922, -0.03271198272705078, 0.0, -0.15238383412361145, -0.0008367159171029925, -7.748603820800781e-06, -3.24249267578125e-05, 0.0, -0.45569944381713867, -0.48276829719543457, -0.0721125602722168, -0.019942155107855797, -0.00041961669921875, -6.318072337307967e-06, -0.000881195068359375, -4.9591064453125e-05, -5.7220458984375e-06, -0.04167461395263672, 0.0, -1.71661376953125e-05, -3.814697265625e-06, -0.00932323932647705, -9.167192911263555e-05, -2.110004425048828e-05, -0.0010986328125, -1.1444091796875e-05, -9.536727247905219e-07, 0.0, -1.035979948937893e-06, 0.0], "model_output": {"body": [{"name": "TinkmasterOverspark", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"_type": "Template8", "hole0": "Tinkmaster Overspark", "hole4": [{"keywords": [{"value": {"elts": [{"args": [{"args": [{"s": "<UNK>", "_type": "Str"}, {"args": [{"hole0": "EnemyPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Attribute", "_type": "Name"}, "_type": "Call"}], "func": {"id": "ManaCost", "_type": "Name"}, "_type": "Call"}, {"hole0": "IsMinion", "_type": "Template38"}], "_type": "List"}, "arg": "conditions", "_type": "keyword"}], "func": {"id": "CardQuery", "_type": "Name"}, "_type": "Call"}], "hole1": 3, "hole5": "MinionSelector", "hole3": "Transform", "hole7": [{"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "hole2": "RARE"}], "_type": "FunctionDef"}, {"hole1": 3, "hole0": 3, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.78391255360355}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-2.288818359375e-05, -1.9073486328125e-06, -21.289451599121094], "model_output": {"body": [], "_type": "Module"}, "score": -21.28947639465332}]}
{"gold_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and attacker.is_minion(\n            ) and not attacker.removed:\n            attacker.die(self)\n            attacker.game.check_delayed()\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n        self.player = player\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -0.7468271255493164, -0.031327247619628906, -2.50339189733495e-06, -1.4901099348207936e-05, -2.9802240533172153e-06, -1.7523756469017826e-05, -0.007511734496802092, -7.748596544843167e-06, -0.42470645904541016, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001163482666015625, -0.0001316070556640625, -0.0001621246337890625, -1.1444091796875e-05, -0.001801609992980957, -3.814697265625e-06, -0.013767242431640625, 0.0, -1.508321762084961, 0.0, -0.0038633346557617188, -4.52994936495088e-06, -0.01438140869140625, -0.0007877349853515625, -0.04642677307128906, -3.24249267578125e-05, -1.52587890625e-05, -0.00045108795166015625, -1.9073486328125e-06, -5.626678466796875e-05, 0.0, 0.0, -0.0011157989501953125, 0.0, -0.002300262451171875, -5.7220458984375e-06, 0.0, 0.0, -8.96453857421875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.02428150177001953, -5.7220458984375e-06, -0.020854949951171875, -1.33514404296875e-05, -0.006161689758300781, -4.768370445162873e-07, -0.4535181522369385, -2.253030106658116e-05, -0.24580501019954681, -5.7220458984375e-06, -0.0001010894775390625, -3.814697265625e-05, -2.288818359375e-05, -0.09554751217365265, -0.000244140625, -0.000110626220703125, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.000255584716796875, -3.814697265625e-06, -0.0061969757080078125, 0.0, -0.0042095184326171875, -0.0013484954833984375, -0.10595226287841797, -0.0001544952392578125, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.0001652240753173828, 0.0, -1.9073486328125e-06, -0.05599021911621094, 0.0, -0.0003662109375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.000202178955078125, -0.000102996826171875, -1.9073486328125e-06, -0.036468505859375, -3.814697265625e-06, -0.01276397705078125, -1.1444091796875e-05, -0.012523651123046875, -5.960462772236497e-07, -0.5184303522109985, -1.8358061424805783e-05, -0.2315218299627304, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09205373376607895, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.0061626434326171875, 0.0, -0.004265785217285156, -0.0013408660888671875, -0.10636711120605469, -0.000152587890625, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.055980682373046875, 0.0, -0.0003681182861328125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002079010009765625, -0.000102996826171875, -1.9073486328125e-06, -0.03686714172363281, -3.814697265625e-06, -0.012256622314453125, -1.1444091796875e-05, -0.012683987617492676, -5.960462772236497e-07, -0.5198513269424438, -1.8358061424805783e-05, -0.2313685268163681, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09197647869586945, -0.000240325927734375, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.006160736083984375, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.018556347185495}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 76, 155, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = player\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -1.0294694900512695, -0.054230690002441406, -2.2053474822314456e-05, -4.887576324108522e-06, -1.6808358850539662e-05, -4.053113570989808e-06, -0.003945919685065746, -3.218649908376392e-06, -0.003402352100238204, -2.7418063837103546e-05, -0.017226219177246094, -2.288818359375e-05, -3.814697265625e-06, -0.0005016326904296875, -0.000476837158203125, -0.0009136199951171875, -9.5367431640625e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0071315765380859375, 0.0, -2.053168296813965, 0.0, -0.005019187927246094, -3.576277322281385e-06, -0.018217086791992188, -0.0008029937744140625, -0.05191516876220703, -2.09808349609375e-05, -2.6702880859375e-05, -0.00040912628173828125, -1.9073486328125e-06, -6.759166717529297e-05, 0.0, 0.0, -0.0011348724365234375, -1.9073486328125e-06, -0.0022525787353515625, -5.7220458984375e-06, 0.0, 0.0, -0.000148773193359375, -5.7220458984375e-05, -1.9073486328125e-06, -0.02057933807373047, -7.62939453125e-06, -0.02582550048828125, -1.1444091796875e-05, -0.005166053771972656, -4.768370445162873e-07, -0.45561325550079346, -2.2411095415009186e-05, -0.24599884450435638, -5.7220458984375e-06, -0.000102996826171875, -3.814697265625e-05, -2.288818359375e-05, -0.0960872545838356, -0.000244140625, -0.000110626220703125, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.000255584716796875, -3.814697265625e-06, -0.006201744079589844, 0.0, -0.00420379638671875, -0.0013446807861328125, -0.10591602325439453, -0.0001544952392578125, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.05604267120361328, 0.0, -0.0003643035888671875, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002040863037109375, -0.000102996826171875, -1.9073486328125e-06, -0.036472320556640625, -3.814697265625e-06, -0.01274871826171875, -1.1444091796875e-05, -0.012497901916503906, -5.960462772236497e-07, -0.5184484720230103, -1.8358061424805783e-05, -0.2314513772726059, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09204896539449692, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.0061626434326171875, 0.0, -0.00426483154296875, -0.0013408660888671875, -0.10636329650878906, -0.000152587890625, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.05597972869873047, 0.0, -0.0003681182861328125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002079010009765625, -0.000102996826171875, -1.9073486328125e-06, -0.03686714172363281, -3.814697265625e-06, -0.012254714965820312, -1.1444091796875e-05, -0.012683987617492676, -5.960462772236497e-07, -0.5198541879653931, -1.8358061424805783e-05, -0.2313666194677353, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09197552502155304, -0.000240325927734375, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.006160736083984375, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole3": "EPIC", "hole0": "Vaporize", "_type": "Template19", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.467964694757029}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n        self.player = player\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -0.7468271255493164, -0.031327247619628906, -2.50339189733495e-06, -1.4901099348207936e-05, -2.9802240533172153e-06, -1.7523756469017826e-05, -0.007511734496802092, -7.748596544843167e-06, -0.42470645904541016, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001163482666015625, -0.0001316070556640625, -0.0001621246337890625, -1.1444091796875e-05, -0.001801609992980957, -3.814697265625e-06, -0.013767242431640625, 0.0, -1.508321762084961, 0.0, -0.0038633346557617188, -4.52994936495088e-06, -0.01438140869140625, -0.0007877349853515625, -0.04642677307128906, -3.24249267578125e-05, -1.52587890625e-05, -0.00045108795166015625, -1.9073486328125e-06, -5.626678466796875e-05, 0.0, 0.0, -0.0011157989501953125, 0.0, -0.002300262451171875, -5.7220458984375e-06, 0.0, 0.0, -8.96453857421875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.02428150177001953, -5.7220458984375e-06, -0.020854949951171875, -1.33514404296875e-05, -0.006161689758300781, -4.768370445162873e-07, -1.3282549381256104, -2.1457672119140625e-06, -0.22367238998413086, -1.1920928244535389e-07, -0.001148223876953125, -5.53131103515625e-05, -3.814697265625e-06, -0.12813006341457367, -0.0001926422119140625, -9.1552734375e-05, -7.62939453125e-06, -3.62396240234375e-05, 0.0, -0.000209808349609375, -5.7220458984375e-06, -0.0069446563720703125, 0.0, -0.005146026611328125, -0.0014781951904296875, -0.09804534912109375, -0.0001277923583984375, -2.288818359375e-05, -0.00041103363037109375, -9.5367431640625e-06, -0.0001537799835205078, 0.0, -1.9073486328125e-06, -0.05557727813720703, -1.1920928244535389e-07, -0.0003509521484375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002727508544921875, -0.0001010894775390625, -1.9073486328125e-06, -0.036380767822265625, -3.814697265625e-06, -0.013513565063476562, -1.1444091796875e-05, -0.012258529663085938, -5.960462772236497e-07, -0.5144984722137451, -1.8596476365928538e-05, -0.23092888295650482, -5.7220458984375e-06, -0.0001220703125, -3.62396240234375e-05, -2.288818359375e-05, -0.09189318120479584, -0.000240325927734375, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.0061626434326171875, 0.0, -0.0042667388916015625, -0.0013427734375, -0.10630989074707031, -0.000152587890625, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.05597400665283203, 0.0, -0.0003681182861328125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002079010009765625, -0.000102996826171875, -1.9073486328125e-06, -0.036846160888671875, -3.814697265625e-06, -0.012287139892578125, -1.1444091796875e-05, -0.012671589851379395, -5.960462772236497e-07, -0.5197950601577759, -1.8358061424805783e-05, -0.23138092458248138, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09197826683521271, -0.000240325927734375, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.006160736083984375, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.893761931306912}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n        self.player = player\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -0.7468271255493164, -0.031327247619628906, -2.50339189733495e-06, -1.4901099348207936e-05, -2.9802240533172153e-06, -1.7523756469017826e-05, -0.007511734496802092, -7.748596544843167e-06, -0.42470645904541016, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001163482666015625, -0.0001316070556640625, -0.0001621246337890625, -1.1444091796875e-05, -0.001801609992980957, -3.814697265625e-06, -0.013767242431640625, 0.0, -1.508321762084961, 0.0, -0.0038633346557617188, -4.52994936495088e-06, -0.01438140869140625, -0.0007877349853515625, -0.04642677307128906, -3.24249267578125e-05, -1.52587890625e-05, -0.00045108795166015625, -1.9073486328125e-06, -5.626678466796875e-05, 0.0, 0.0, -0.0011157989501953125, 0.0, -0.002300262451171875, -5.7220458984375e-06, 0.0, 0.0, -8.96453857421875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.02428150177001953, -5.7220458984375e-06, -0.020854949951171875, -1.33514404296875e-05, -0.006161689758300781, -4.768370445162873e-07, -0.4535181522369385, -2.253030106658116e-05, -0.24580501019954681, -5.7220458984375e-06, -0.0001010894775390625, -3.814697265625e-05, -2.288818359375e-05, -0.09554751217365265, -0.000244140625, -0.000110626220703125, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.000255584716796875, -3.814697265625e-06, -0.0061969757080078125, 0.0, -0.0042095184326171875, -0.0013484954833984375, -0.10595226287841797, -0.0001544952392578125, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.0001652240753173828, 0.0, -1.9073486328125e-06, -0.05599021911621094, 0.0, -0.0003662109375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.000202178955078125, -0.000102996826171875, -1.9073486328125e-06, -0.036468505859375, -3.814697265625e-06, -0.01276397705078125, -1.1444091796875e-05, -0.012523651123046875, -5.960462772236497e-07, -1.6159473657608032, -2.1457672119140625e-06, -0.27640318870544434, -1.1920928244535389e-07, -0.0014171600341796875, -4.1961669921875e-05, -3.814697265625e-06, -0.1285828948020935, -0.0001983642578125, -7.43865966796875e-05, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -0.0002040863037109375, -5.7220458984375e-06, -0.006913185119628906, 0.0, -0.00518035888671875, -0.0014743804931640625, -0.09841537475585938, -0.0001277923583984375, -2.288818359375e-05, -0.00041103363037109375, -9.5367431640625e-06, -0.0001537799835205078, 0.0, -1.9073486328125e-06, -0.055319786071777344, -1.1920928244535389e-07, -0.0003509521484375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.000278472900390625, -0.0001010894775390625, -1.9073486328125e-06, -0.03662109375, -3.814697265625e-06, -0.013269424438476562, -1.1444091796875e-05, -0.012349128723144531, -5.960462772236497e-07, -0.515547513961792, -1.8596476365928538e-05, -0.23089097440242767, -5.7220458984375e-06, -0.0001220703125, -3.62396240234375e-05, -2.288818359375e-05, -0.09184298664331436, -0.000240325927734375, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006160736083984375, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.187344199280673}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n        self.player = player\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -0.7468271255493164, -0.031327247619628906, -2.50339189733495e-06, -1.4901099348207936e-05, -2.9802240533172153e-06, -1.7523756469017826e-05, -0.007511734496802092, -7.748596544843167e-06, -0.42470645904541016, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001163482666015625, -0.0001316070556640625, -0.0001621246337890625, -1.1444091796875e-05, -0.001801609992980957, -3.814697265625e-06, -0.013767242431640625, 0.0, -1.508321762084961, 0.0, -0.0038633346557617188, -4.52994936495088e-06, -0.01438140869140625, -0.0007877349853515625, -0.04642677307128906, -3.24249267578125e-05, -1.52587890625e-05, -0.00045108795166015625, -1.9073486328125e-06, -5.626678466796875e-05, 0.0, 0.0, -0.0011157989501953125, 0.0, -0.002300262451171875, -5.7220458984375e-06, 0.0, 0.0, -8.96453857421875e-05, -6.4849853515625e-05, -1.9073486328125e-06, -0.02428150177001953, -5.7220458984375e-06, -0.020854949951171875, -1.33514404296875e-05, -0.006161689758300781, -4.768370445162873e-07, -0.4535181522369385, -2.253030106658116e-05, -0.24580501019954681, -5.7220458984375e-06, -0.0001010894775390625, -3.814697265625e-05, -2.288818359375e-05, -0.09554751217365265, -0.000244140625, -0.000110626220703125, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.000255584716796875, -3.814697265625e-06, -0.0061969757080078125, 0.0, -0.0042095184326171875, -0.0013484954833984375, -0.10595226287841797, -0.0001544952392578125, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.0001652240753173828, 0.0, -1.9073486328125e-06, -0.05599021911621094, 0.0, -0.0003662109375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.000202178955078125, -0.000102996826171875, -1.9073486328125e-06, -0.036468505859375, -3.814697265625e-06, -0.01276397705078125, -1.1444091796875e-05, -0.012523651123046875, -5.960462772236497e-07, -0.5184303522109985, -1.8358061424805783e-05, -0.2315218299627304, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09205373376607895, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.0061626434326171875, 0.0, -0.004265785217285156, -0.0013408660888671875, -0.10636711120605469, -0.000152587890625, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.055980682373046875, 0.0, -0.0003681182861328125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002079010009765625, -0.000102996826171875, -1.9073486328125e-06, -0.03686714172363281, -3.814697265625e-06, -0.012256622314453125, -1.1444091796875e-05, -0.012683987617492676, -5.960462772236497e-07, -1.6185756921768188, -2.1457672119140625e-06, -0.2779642343521118, -1.1920928244535389e-07, -0.001422882080078125, -4.1961669921875e-05, -3.814697265625e-06, -0.12844476103782654, -0.0001983642578125, -7.43865966796875e-05, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -0.0002040863037109375, -5.7220458984375e-06, -0.006911277770996094, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.202246448262933}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 225, 84, 177, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -1.9329071044921875, -0.010316848754882812, -0.0067348480224609375, -1.2516897186287679e-05, -1.3709059203392826e-05, -5.960462203802308e-07, -0.0007066772668622434, -0.2687636911869049, -0.0011285701766610146, -0.0059833526611328125, -1.9073486328125e-06, -0.017346978187561035, -7.152555099310121e-07, -1.9073486328125e-05, -0.0001735687255859375, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, 0.0, -0.004937171936035156, 0.0, -2.288818359375e-05, -0.0002499818801879883, -2.3841855067985307e-07, -0.009946823120117188, -0.0001201629638671875, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-05, -9.918212890625e-05, -3.4332275390625e-05, -0.00010454653238411993, -1.1920928244535389e-07, -0.006969451904296875, -4.768370445162873e-07, -1.1444091796875e-05, -8.0108642578125e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.000518798828125, -1.9073486328125e-06, -7.748603820800781e-06, -3.0398352464544587e-05, -0.10524654388427734, -4.00543212890625e-05, -1.4484015703201294, -1.9073486328125e-06, -7.82012939453125e-05, -0.0035085678100585938, -1.9073486328125e-06, -1.1205666851310525e-05, -2.3841855067985307e-07, -3.814697265625e-06, -0.000152587890625, -7.152555099310121e-07, -0.0010204315185546875, -7.2479248046875e-05, 0.0, 0.0, -0.0027103424072265625, -7.62939453125e-06, -1.9073486328125e-06, -0.006072998046875, -7.62939453125e-06, -0.13584613800048828, -3.62396240234375e-05, -0.005200386047363281, -2.3841855067985307e-07, -0.891716718673706, -2.1457672119140625e-06, -0.1937471628189087, -1.1920928244535389e-07, -0.000820159912109375, -3.814697265625e-05, -3.814697265625e-06, -0.13512642681598663, -0.0002040863037109375, -9.5367431640625e-05, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -0.000225067138671875, -5.7220458984375e-06, -0.006943702697753906, 0.0, -0.025545120239257812, -0.0005359649658203125, -0.0694427490234375, -2.288818359375e-05, -1.71661376953125e-05, -0.0006017684936523438, -5.7220458984375e-06, -8.034706115722656e-05, -1.1920928244535389e-07, 0.0, -0.02114582061767578, -1.1920928244535389e-07, -0.000118255615234375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002117156982421875, -8.392333984375e-05, -1.9073486328125e-06, -0.03339958190917969, -3.814697265625e-06, -0.0118255615234375, -1.1444091796875e-05, -0.01430809497833252, -5.960462772236497e-07, -0.4906677007675171, -1.6927575416048057e-05, -0.24220775067806244, -5.7220458984375e-06, -0.0001239776611328125, -3.24249267578125e-05, -2.09808349609375e-05, -0.09123930335044861, -0.0002460479736328125, -9.5367431640625e-05, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006182670593261719, 0.0, -0.02379131317138672, -0.0005283355712890625, -0.07419586181640625, -2.288818359375e-05, -1.71661376953125e-05, -0.0005779266357421875, -5.7220458984375e-06, -8.797645568847656e-05, -1.1920928244535389e-07, 0.0, -0.021898269653320312, -1.1920928244535389e-07, -0.0001239776611328125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0001583099365234375, -8.96453857421875e-05, -3.814697265625e-06, -0.03457069396972656, -3.814697265625e-06, -0.01018524169921875, -1.1444091796875e-05, -0.015067219734191895, -5.960462772236497e-07, -0.49609410762786865, -1.7165990357170813e-05, -0.24174867570400238, -5.7220458984375e-06, -0.0001239776611328125, -3.24249267578125e-05, -2.09808349609375e-05, -0.09127887338399887, -0.000247955322265625, -9.72747802734375e-05, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006178855895996094, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template5", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.240428403949053}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 76, 155, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 19, 125, "player", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "game", "<EOS>", "current_player", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = player\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.game.current_player('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -1.0294694900512695, -0.054230690002441406, -2.2053474822314456e-05, -4.887576324108522e-06, -1.6808358850539662e-05, -4.053113570989808e-06, -0.003945919685065746, -3.218649908376392e-06, -0.003402352100238204, -2.7418063837103546e-05, -0.017226219177246094, -2.288818359375e-05, -3.814697265625e-06, -0.0005016326904296875, -0.000476837158203125, -0.0009136199951171875, -9.5367431640625e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0071315765380859375, 0.0, -2.053168296813965, 0.0, -0.005019187927246094, -3.576277322281385e-06, -0.018217086791992188, -0.0008029937744140625, -0.05191516876220703, -2.09808349609375e-05, -2.6702880859375e-05, -0.00040912628173828125, -1.9073486328125e-06, -6.759166717529297e-05, 0.0, 0.0, -0.0011348724365234375, -1.9073486328125e-06, -0.0022525787353515625, -5.7220458984375e-06, 0.0, 0.0, -0.000148773193359375, -5.7220458984375e-05, -1.9073486328125e-06, -0.02057933807373047, -7.62939453125e-06, -0.02582550048828125, -1.1444091796875e-05, -0.005166053771972656, -4.768370445162873e-07, -0.45561325550079346, -2.2411095415009186e-05, -0.24599884450435638, -5.7220458984375e-06, -0.000102996826171875, -3.814697265625e-05, -2.288818359375e-05, -0.0960872545838356, -0.000244140625, -0.000110626220703125, -7.62939453125e-06, -3.24249267578125e-05, 0.0, -0.000255584716796875, -3.814697265625e-06, -0.006201744079589844, 0.0, -0.00420379638671875, -0.0013446807861328125, -0.10591602325439453, -0.0001544952392578125, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.05604267120361328, 0.0, -0.0003643035888671875, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002040863037109375, -0.000102996826171875, -1.9073486328125e-06, -0.036472320556640625, -3.814697265625e-06, -0.01274871826171875, -1.1444091796875e-05, -0.012497901916503906, -5.960462772236497e-07, -0.5184484720230103, -1.8358061424805783e-05, -0.2314513772726059, -5.7220458984375e-06, -0.0001220703125, -3.814697265625e-05, -2.288818359375e-05, -0.09204896539449692, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.0061626434326171875, 0.0, -0.00426483154296875, -0.0013408660888671875, -0.10636329650878906, -0.000152587890625, -2.47955322265625e-05, -0.0004119873046875, -9.5367431640625e-06, -0.00016427040100097656, 0.0, -1.9073486328125e-06, -0.05597972869873047, 0.0, -0.0003681182861328125, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002079010009765625, -0.000102996826171875, -1.9073486328125e-06, -0.03686714172363281, -3.814697265625e-06, -0.012254714965820312, -1.1444091796875e-05, -0.012683987617492676, -5.960462772236497e-07, -1.6185966730117798, -2.1457672119140625e-06, -0.2779461145401001, -1.1920928244535389e-07, -0.001422882080078125, -4.1961669921875e-05, -3.814697265625e-06, -0.1284467577934265, -0.0001983642578125, -7.43865966796875e-05, -7.62939453125e-06, -3.4332275390625e-05, 0.0, -0.0002040863037109375, -5.7220458984375e-06, -0.006911277770996094, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole3": "EPIC", "hole0": "Vaporize", "_type": "Template19", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"id": "player", "_type": "Name"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "current_player"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.651659653613017}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 76, 155, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "minion", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = Null\n\n    def _reveal(self, minion, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -1.0294694900512695, -0.054230690002441406, -2.2053474822314456e-05, -4.887576324108522e-06, -1.6808358850539662e-05, -4.053113570989808e-06, -0.003945919685065746, -3.218649908376392e-06, -0.003402352100238204, -2.7418063837103546e-05, -0.017226219177246094, -2.288818359375e-05, -3.814697265625e-06, -0.0005016326904296875, -0.000476837158203125, -0.0009136199951171875, -9.5367431640625e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0071315765380859375, 0.0, -0.15105438232421875, -0.0011959075927734375, -0.00013303756713867188, -1.1920928244535389e-07, -0.034796714782714844, -4.1961669921875e-05, -0.023569822311401367, -5.960462772236497e-07, -0.0007457733154296875, -0.0655660629272461, 0.0, -0.0011353492736816406, -4.768370445162873e-07, -3.814697265625e-06, -0.8558557033538818, -6.854493403807282e-05, -0.000217437744140625, -0.07807052135467529, -0.0009297163342125714, -0.0003795623779296875, -0.001888275146484375, -0.0002155303955078125, -0.02238178253173828, -6.29425048828125e-05, -0.0002193450927734375, -0.05943107604980469, -0.2671194076538086, -0.0001659393310546875, -0.02325916290283203, -0.0001583099365234375, -0.025261998176574707, -7.509902934543788e-05, -1.52587890625e-05, -0.3479928970336914, -0.001018524169921875, -0.01294708251953125, -3.814697265625e-06, -0.0027408599853515625, -9.5367431640625e-06, -0.026067733764648438, -0.0003070831298828125, -0.0008984804153442383, -5.364412118069595e-06, -0.0013526678085327148, -3.576278118089249e-07, -0.253692090511322, -6.198883056640625e-06, -0.02742481231689453, -0.0003185272216796875, -0.0070247650146484375, -0.0011882781982421875, -3.24249267578125e-05, -0.001956939697265625, -7.62939453125e-06, -0.0886073112487793, -7.62939453125e-06, -0.007538199424743652, -0.00029191732755862176, -0.018154144287109375, -0.9353342056274414, -0.08496570587158203, -2.09808349609375e-05, -7.62939453125e-06, -0.0001811981201171875, -3.0517578125e-05, -0.0054569244384765625, -3.62396240234375e-05, -0.06629371643066406, -2.47955322265625e-05, -0.8096036911010742, -0.0006008148193359375, -0.058325767517089844, -0.0017547607421875, -0.22839093208312988, -0.0011844635009765625, -0.00029528141021728516, -1.20401346066501e-05, -0.0025745583698153496, -2.7537334972294047e-05, -0.00743493065237999, -1.1920928244535389e-07, -0.018879368901252747, -0.00014019010995980352, -0.018748322501778603, -0.0001330375234829262, -0.06378746032714844, -0.001495361328125, -0.000774383544921875, -0.012265345081686974, 0.0, -0.003559112548828125, -1.9073486328125e-06, -5.7220458984375e-06, -0.06103324890136719, -5.7220458984375e-06, -7.62939453125e-06, -0.0007724761962890625, -5.7220458984375e-06, -0.00199794746004045, -2.3841855067985307e-07, -0.0005637407302856445, 0.0, -0.00562286376953125, -2.86102294921875e-05, -0.01956653594970703, -4.57763671875e-05, -4.76837158203125e-05, -0.0020494461059570312, -1.9073486328125e-06, -9.262561070499942e-05, 0.0, -5.7220458984375e-06, -0.00125885009765625, 0.0, -0.002338409423828125, -5.7220458984375e-06, 0.0, 0.0, -0.000499725341796875, -9.5367431640625e-06, -1.9073486328125e-06, -0.04620552062988281, -3.814697265625e-06, -0.0062541961669921875, -1.9073486328125e-05, -0.011522412300109863, -8.344646857949556e-07, -0.15523791313171387, -1.5139465176616795e-05, -0.20074200630187988, -9.775161743164062e-06, -0.000209808349609375, -2.6702880859375e-05, -9.5367431640625e-06, -0.08040237426757812, -0.000133514404296875, -1.1444091796875e-05, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.00033855438232421875, -1.9073486328125e-06, -0.0064983367919921875, 0.0, -0.0046367645263671875, -0.00139617919921875, -0.1016073226928711, -0.0001468658447265625, -2.6702880859375e-05, -0.000408172607421875, -7.62939453125e-06, -0.0001575946807861328, 0.0, -1.9073486328125e-06, -0.037830352783203125, 0.0, -0.0003719329833984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002002716064453125, -0.0001087188720703125, -1.9073486328125e-06, -0.03777503967285156, -3.814697265625e-06, -0.012907028198242188, -1.1444091796875e-05, -0.012228012084960938, -5.960462772236497e-07, -0.5184561014175415, -1.8715683836489916e-05, -0.23118756711483002, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -2.288818359375e-05, -0.09225903451442719, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006159782409667969, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole3": "EPIC", "hole0": "Vaporize", "_type": "Template19", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.715651984870888}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 225, 84, 177, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -1.9329071044921875, -0.010316848754882812, -0.0067348480224609375, -1.2516897186287679e-05, -1.3709059203392826e-05, -5.960462203802308e-07, -0.0007066772668622434, -0.2687636911869049, -0.0011285701766610146, -0.0059833526611328125, -1.9073486328125e-06, -0.017346978187561035, -7.152555099310121e-07, -1.9073486328125e-05, -0.0001735687255859375, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, 0.0, -0.004937171936035156, 0.0, -2.288818359375e-05, -0.0002499818801879883, -2.3841855067985307e-07, -0.009946823120117188, -0.0001201629638671875, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-05, -9.918212890625e-05, -3.4332275390625e-05, -0.00010454653238411993, -1.1920928244535389e-07, -0.006969451904296875, -4.768370445162873e-07, -1.1444091796875e-05, -8.0108642578125e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.000518798828125, -1.9073486328125e-06, -7.748603820800781e-06, -3.0398352464544587e-05, -0.10524654388427734, -4.00543212890625e-05, -0.2750598192214966, -3.4570634852570947e-06, -0.0001506805419921875, -0.04940223693847656, -1.9073486328125e-06, -0.000767827033996582, -1.0728830375228426e-06, -1.9073486328125e-06, -0.07278013229370117, -8.344650268554688e-06, -5.7220458984375e-05, -0.04410195350646973, -0.000943368359003216, -0.0002231597900390625, -0.0011386871337890625, -0.0001087188720703125, -0.02633190155029297, -6.67572021484375e-05, -0.000244140625, -0.04694843292236328, -0.04764366149902344, -0.0002155303955078125, -0.18665504455566406, -0.0004825592041015625, -0.03918278217315674, -4.362964682513848e-05, -1.71661376953125e-05, -0.28348445892333984, -0.0009975433349609375, -0.0025873184204101562, -7.62939453125e-06, -0.0011997222900390625, -1.9073486328125e-06, -0.031890869140625, -0.0002536773681640625, -0.00079345703125, -8.463859558105469e-06, -0.0014460086822509766, -3.576278118089249e-07, -0.2219262719154358, -6.079673767089844e-06, -0.028038978576660156, -0.0002899169921875, -0.0074329376220703125, -0.0010967254638671875, -4.57763671875e-05, -0.0016078948974609375, -7.62939453125e-06, -0.10098695755004883, -9.5367431640625e-06, -0.008176326751708984, -0.00031634586048312485, -0.009779930114746094, -0.9458379745483398, -0.09074783325195312, -2.288818359375e-05, -7.62939453125e-06, -0.000164031982421875, -2.86102294921875e-05, -0.0048618316650390625, -3.62396240234375e-05, -0.0635528564453125, -2.6702880859375e-05, -0.7169389724731445, -0.000614166259765625, -0.060090065002441406, -0.0011539459228515625, -0.2541712522506714, -0.00125885009765625, -0.0003045797348022461, -1.025199526338838e-05, -0.002309342147782445, -1.931189763126895e-05, -0.0074767121113836765, -1.1920928244535389e-07, -0.019828587770462036, -0.00014591215585824102, -0.019144276157021523, -0.00013720984861720353, -0.065338134765625, -0.0014181137084960938, -0.0007429122924804688, -0.012201426550745964, 0.0, -0.0036573410034179688, -1.9073486328125e-06, -5.7220458984375e-06, -0.06382369995117188, -5.7220458984375e-06, -7.62939453125e-06, -0.0007915496826171875, -5.7220458984375e-06, -0.0019611117895692587, -2.3841855067985307e-07, -0.0005646944046020508, 0.0, -0.09399127960205078, -5.340576171875e-05, -0.043483734130859375, -1.33514404296875e-05, -0.000110626220703125, -0.0034008026123046875, -1.9073486328125e-06, -9.19103404157795e-05, 0.0, -9.5367431640625e-06, -0.0021944046020507812, -1.1920928244535389e-07, -0.0007038116455078125, -9.5367431640625e-06, 0.0, 0.0, -0.0005855560302734375, -1.1444091796875e-05, -1.9073486328125e-06, -0.04446220397949219, -5.7220458984375e-06, -0.0074977874755859375, -2.09808349609375e-05, -0.010014653205871582, -7.152555099310121e-07, -0.15673625469207764, -1.537788011773955e-05, -0.17436230182647705, -9.775161743164062e-06, -0.0001888275146484375, -2.86102294921875e-05, -9.5367431640625e-06, -0.08024489134550095, -0.000133514404296875, -1.1444091796875e-05, -9.5367431640625e-06, -4.38690185546875e-05, 0.0, -0.0003528594970703125, -1.9073486328125e-06, -0.006510734558105469, 0.0, -0.017371177673339844, -0.00061798095703125, -0.06870174407958984, -2.09808349609375e-05, -2.09808349609375e-05, -0.000606536865234375, -5.7220458984375e-06, -9.09566879272461e-05, -1.1920928244535389e-07, 0.0, -0.018462181091308594, -1.1920928244535389e-07, -0.000125885009765625, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.00014495849609375, -9.1552734375e-05, -3.814697265625e-06, -0.03492546081542969, -3.814697265625e-06, -0.011060714721679688, -1.1444091796875e-05, -0.01447594165802002, -5.960462772236497e-07, -0.49933183193206787, -1.7165990357170813e-05, -0.24217675626277924, -5.7220458984375e-06, -0.0001220703125, -3.4332275390625e-05, -2.09808349609375e-05, -0.09156855940818787, -0.000247955322265625, -9.72747802734375e-05, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006176948547363281, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template5", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.848881668641887}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 76, 155, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "minion", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = Null\n\n    def _reveal(self, minion, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -1.0294694900512695, -0.054230690002441406, -2.2053474822314456e-05, -4.887576324108522e-06, -1.6808358850539662e-05, -4.053113570989808e-06, -0.003945919685065746, -3.218649908376392e-06, -0.003402352100238204, -2.7418063837103546e-05, -0.017226219177246094, -2.288818359375e-05, -3.814697265625e-06, -0.0005016326904296875, -0.000476837158203125, -0.0009136199951171875, -9.5367431640625e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0071315765380859375, 0.0, -0.15105438232421875, -0.0011959075927734375, -0.00013303756713867188, -1.1920928244535389e-07, -0.034796714782714844, -4.1961669921875e-05, -0.023569822311401367, -5.960462772236497e-07, -0.0007457733154296875, -0.0655660629272461, 0.0, -0.0011353492736816406, -4.768370445162873e-07, -3.814697265625e-06, -0.8558557033538818, -6.854493403807282e-05, -0.000217437744140625, -0.07807052135467529, -0.0009297163342125714, -0.0003795623779296875, -0.001888275146484375, -0.0002155303955078125, -0.02238178253173828, -6.29425048828125e-05, -0.0002193450927734375, -0.05943107604980469, -0.2671194076538086, -0.0001659393310546875, -0.02325916290283203, -0.0001583099365234375, -0.025261998176574707, -7.509902934543788e-05, -1.52587890625e-05, -0.3479928970336914, -0.001018524169921875, -0.01294708251953125, -3.814697265625e-06, -0.0027408599853515625, -9.5367431640625e-06, -0.026067733764648438, -0.0003070831298828125, -0.0008984804153442383, -5.364412118069595e-06, -0.0013526678085327148, -3.576278118089249e-07, -0.253692090511322, -6.198883056640625e-06, -0.02742481231689453, -0.0003185272216796875, -0.0070247650146484375, -0.0011882781982421875, -3.24249267578125e-05, -0.001956939697265625, -7.62939453125e-06, -0.0886073112487793, -7.62939453125e-06, -0.007538199424743652, -0.00029191732755862176, -0.018154144287109375, -0.9353342056274414, -0.08496570587158203, -2.09808349609375e-05, -7.62939453125e-06, -0.0001811981201171875, -3.0517578125e-05, -0.0054569244384765625, -3.62396240234375e-05, -0.06629371643066406, -2.47955322265625e-05, -0.5985116958618164, -0.0004253387451171875, -0.2846568822860718, -0.0007801055908203125, -0.0013719797134399414, -7.390974587906385e-06, -0.03400611877441406, -4.541872476693243e-05, -0.013713376596570015, -4.768370445162873e-07, -0.26209449768066406, -7.748603820800781e-06, -0.1438751220703125, -0.019275665283203125, -0.0013647079467773438, -0.01514615211635828, 0.0, -0.0014486312866210938, -1.9073486328125e-06, -1.33514404296875e-05, -0.05048370361328125, -5.7220458984375e-06, -7.62939453125e-06, -0.000621795654296875, -5.7220458984375e-06, -0.0016766785411164165, -2.3841855067985307e-07, -0.0005637407302856445, 0.0, -0.005925178527832031, -2.47955322265625e-05, -0.017172813415527344, -5.340576171875e-05, -4.9591064453125e-05, -0.0021800994873046875, -1.9073486328125e-06, -9.584426879882812e-05, 0.0, -5.7220458984375e-06, -0.0013837814331054688, 0.0, -0.002197265625, -5.7220458984375e-06, 0.0, 0.0, -0.00049591064453125, -9.5367431640625e-06, -1.9073486328125e-06, -0.046573638916015625, -3.814697265625e-06, -0.0062465667724609375, -1.9073486328125e-05, -0.011503219604492188, -8.344646857949556e-07, -0.15453505516052246, -1.5258672647178173e-05, -0.20282983779907227, -9.775161743164062e-06, -0.0002117156982421875, -2.6702880859375e-05, -9.5367431640625e-06, -0.08055111020803452, -0.000133514404296875, -1.1444091796875e-05, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.0003376007080078125, -1.9073486328125e-06, -0.006506919860839844, 0.0, -0.004637718200683594, -0.00139617919921875, -0.1017313003540039, -0.0001468658447265625, -2.6702880859375e-05, -0.00040912628173828125, -7.62939453125e-06, -0.0001575946807861328, 0.0, -1.9073486328125e-06, -0.03771400451660156, 0.0, -0.0003719329833984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002002716064453125, -0.0001087188720703125, -1.9073486328125e-06, -0.037784576416015625, -3.814697265625e-06, -0.012905120849609375, -1.1444091796875e-05, -0.012230873107910156, -5.960462772236497e-07, -0.5183941125869751, -1.8715683836489916e-05, -0.2311704009771347, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -2.288818359375e-05, -0.09225796163082123, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.006159782409667969, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole3": "EPIC", "hole0": "Vaporize", "_type": "Template19", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.8512326625886075}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 75, 154, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "minion", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.\n            COMMON)\n        self.player = Null\n\n    def _reveal(self, minion, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -0.7468271255493164, -0.031327247619628906, -2.50339189733495e-06, -1.4901099348207936e-05, -2.9802240533172153e-06, -1.7523756469017826e-05, -0.007511734496802092, -7.748596544843167e-06, -0.42470645904541016, -5.7220458984375e-06, -5.7220458984375e-06, -0.0001163482666015625, -0.0001316070556640625, -0.0001621246337890625, -1.1444091796875e-05, -0.001801609992980957, -3.814697265625e-06, -0.013767242431640625, 0.0, -0.2658357620239258, -0.000885009765625, -0.00017344951629638672, -1.1920928244535389e-07, -0.012409210205078125, -4.00543212890625e-05, -0.021778106689453125, -8.344646857949556e-07, -0.000759124755859375, -0.13248729705810547, 0.0, -0.001528620719909668, -5.960462772236497e-07, -3.814697265625e-06, -0.8044489622116089, -9.107532241614535e-05, -0.0002079010009765625, -0.08747208118438721, -0.0009686675621196628, -0.0003566741943359375, -0.0018157958984375, -0.000209808349609375, -0.022136688232421875, -6.4849853515625e-05, -0.000213623046875, -0.06859874725341797, -0.2917366027832031, -0.0001544952392578125, -0.023454666137695312, -0.0001430511474609375, -0.030709385871887207, -6.41325386823155e-05, -1.52587890625e-05, -0.35334014892578125, -0.0010166168212890625, -0.011758804321289062, -3.814697265625e-06, -0.0026798248291015625, -9.5367431640625e-06, -0.02555084228515625, -0.0002918243408203125, -0.0008488893508911133, -5.006785613659304e-06, -0.0012438297271728516, -3.576278118089249e-07, -0.25157225131988525, -6.198883056640625e-06, -0.027372360229492188, -0.0003223419189453125, -0.006951332092285156, -0.0011806488037109375, -3.24249267578125e-05, -0.00193023681640625, -7.62939453125e-06, -0.088134765625, -7.62939453125e-06, -0.007484793663024902, -0.0002916789671871811, -0.018103599548339844, -0.924159049987793, -0.08404254913330078, -2.09808349609375e-05, -7.62939453125e-06, -0.0001811981201171875, -2.86102294921875e-05, -0.005405426025390625, -3.62396240234375e-05, -0.06631660461425781, -2.47955322265625e-05, -0.8109598159790039, -0.0006008148193359375, -0.05820751190185547, -0.0017528533935546875, -0.2260572910308838, -0.001190185546875, -0.00029337406158447266, -1.20401346066501e-05, -0.0025678821839392185, -2.7537334972294047e-05, -0.00743075180798769, -1.1920928244535389e-07, -0.019043147563934326, -0.00014007090067025274, -0.018740057945251465, -0.0001311301748501137, -0.06363296508789062, -0.001499176025390625, -0.000774383544921875, -0.012293744832277298, 0.0, -0.0035810470581054688, -1.9073486328125e-06, -5.7220458984375e-06, -0.06075477600097656, -5.7220458984375e-06, -7.62939453125e-06, -0.0007762908935546875, -5.7220458984375e-06, -0.0020055768545717, -2.3841855067985307e-07, -0.0005646944046020508, 0.0, -0.0056304931640625, -2.86102294921875e-05, -0.019567489624023438, -4.57763671875e-05, -4.76837158203125e-05, -0.0020503997802734375, -1.9073486328125e-06, -9.262561070499942e-05, 0.0, -5.7220458984375e-06, -0.0012578964233398438, 0.0, -0.002338409423828125, -5.7220458984375e-06, 0.0, 0.0, -0.000499725341796875, -9.5367431640625e-06, -1.9073486328125e-06, -0.04620170593261719, -3.814697265625e-06, -0.006256103515625, -1.9073486328125e-05, -0.011522412300109863, -8.344646857949556e-07, -0.1552112102508545, -1.5139465176616795e-05, -0.20075154304504395, -9.775161743164062e-06, -0.000209808349609375, -2.6702880859375e-05, -9.5367431640625e-06, -0.08040320873260498, -0.000133514404296875, -1.1444091796875e-05, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.00033855438232421875, -1.9073486328125e-06, -0.0064983367919921875, 0.0, -0.0046367645263671875, -0.00139617919921875, -0.1016073226928711, -0.0001468658447265625, -2.6702880859375e-05, -0.000408172607421875, -7.62939453125e-06, -0.0001575946807861328, 0.0, -1.9073486328125e-06, -0.03782939910888672, 0.0, -0.0003719329833984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002002716064453125, -0.0001087188720703125, -1.9073486328125e-06, -0.03777503967285156, -3.814697265625e-06, -0.012907028198242188, -1.1444091796875e-05, -0.012228012084960938, -5.960462772236497e-07, -0.5184561014175415, -1.8715683836489916e-05, -0.23118756711483002, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -2.288818359375e-05, -0.09225903451442719, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006159782409667969, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template18", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "minion", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.966430207263116}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 76, 155, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", "<UNK>", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = Null\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero.<UNK> += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -1.0294694900512695, -0.054230690002441406, -2.2053474822314456e-05, -4.887576324108522e-06, -1.6808358850539662e-05, -4.053113570989808e-06, -0.003945919685065746, -3.218649908376392e-06, -0.003402352100238204, -2.7418063837103546e-05, -0.017226219177246094, -2.288818359375e-05, -3.814697265625e-06, -0.0005016326904296875, -0.000476837158203125, -0.0009136199951171875, -9.5367431640625e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0071315765380859375, 0.0, -0.15105438232421875, -0.0011959075927734375, -0.00013303756713867188, -1.1920928244535389e-07, -0.034796714782714844, -4.1961669921875e-05, -0.023569822311401367, -5.960462772236497e-07, -0.0007457733154296875, -0.0655660629272461, 0.0, -0.0011353492736816406, -4.768370445162873e-07, -3.814697265625e-06, -1.2544801235198975, -3.075599670410156e-05, -0.000164031982421875, -0.032644033432006836, -0.00044959867955185473, -0.00022125244140625, -0.0013294219970703125, -0.0001811981201171875, -0.017606735229492188, -7.82012939453125e-05, -0.0002384185791015625, -0.06457710266113281, -0.2394876480102539, -0.000213623046875, -0.02873992919921875, -0.0002536773681640625, -0.0316239595413208, -6.0437283536884934e-05, -1.52587890625e-05, -0.3029823303222656, -0.000965118408203125, -0.010869979858398438, -3.814697265625e-06, -0.0022258758544921875, -9.5367431640625e-06, -0.024394989013671875, -0.0003414154052734375, -0.0009099245071411133, -5.125993993715383e-06, -0.0012094974517822266, -3.576278118089249e-07, -0.26664242148399353, -6.198883056640625e-06, -0.028594970703125, -0.00034332275390625, -0.006984710693359375, -0.0011882781982421875, -3.24249267578125e-05, -0.0018901824951171875, -7.62939453125e-06, -0.09302854537963867, -7.62939453125e-06, -0.007969379425048828, -0.00029870885191485286, -0.01253509521484375, -0.9101104736328125, -0.08035659790039062, -2.288818359375e-05, -7.62939453125e-06, -0.0001811981201171875, -2.6702880859375e-05, -0.0054473876953125, -3.4332275390625e-05, -0.06736564636230469, -2.47955322265625e-05, -0.8316621780395508, -0.0006046295166015625, -0.05700206756591797, -0.00174713134765625, -0.22837281227111816, -0.001178741455078125, -0.00028955936431884766, -1.215934389620088e-05, -0.0025389189831912518, -2.7537334972294047e-05, -0.007326086983084679, -1.1920928244535389e-07, -0.019327156245708466, -0.00014197824930306524, -0.0190231092274189, -0.00013124938413966447, -0.06371784210205078, -0.0014734268188476562, -0.0007991790771484375, -0.011989235877990723, 0.0, -0.003635406494140625, -1.9073486328125e-06, -5.7220458984375e-06, -0.062397003173828125, -5.7220458984375e-06, -7.62939453125e-06, -0.0007724761962890625, -5.7220458984375e-06, -0.0019731519278138876, -2.3841855067985307e-07, -0.0005685091018676758, 0.0, -0.005626678466796875, -2.6702880859375e-05, -0.0196075439453125, -4.57763671875e-05, -4.76837158203125e-05, -0.002048492431640625, -1.9073486328125e-06, -9.262561070499942e-05, 0.0, -5.7220458984375e-06, -0.0012559890747070312, 0.0, -0.0023441314697265625, -5.7220458984375e-06, 0.0, 0.0, -0.0004978179931640625, -9.5367431640625e-06, -1.9073486328125e-06, -0.04620361328125, -3.814697265625e-06, -0.0062541961669921875, -1.9073486328125e-05, -0.011522412300109863, -8.344646857949556e-07, -0.15520167350769043, -1.5258672647178173e-05, -0.20091581344604492, -9.775161743164062e-06, -0.000209808349609375, -2.6702880859375e-05, -9.5367431640625e-06, -0.08040666580200195, -0.000133514404296875, -1.1444091796875e-05, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.00033855438232421875, -1.9073486328125e-06, -0.006499290466308594, 0.0, -0.0046367645263671875, -0.00139617919921875, -0.10161876678466797, -0.0001468658447265625, -2.6702880859375e-05, -0.00040912628173828125, -7.62939453125e-06, -0.0001575946807861328, 0.0, -1.9073486328125e-06, -0.03782463073730469, 0.0, -0.0003719329833984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002002716064453125, -0.0001087188720703125, -1.9073486328125e-06, -0.037776947021484375, -3.814697265625e-06, -0.012907028198242188, -1.1444091796875e-05, -0.012228012084960938, -5.960462772236497e-07, -0.5184522867202759, -1.8715683836489916e-05, -0.2311866134405136, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -2.288818359375e-05, -0.09225903451442719, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006159782409667969, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole3": "EPIC", "hole0": "Vaporize", "_type": "Template19", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "_type": "Attribute", "attr": "<UNK>"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.009894238345638}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 224, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 222, 76, 155, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", "EPIC", "<EOS>", 60, 93, 208, 29, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", 20, 127, "Null", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.EPIC)\n        self.player = Null\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -0.16388320922851562, -0.01050567626953125, -0.0002288818359375, -0.00014137866673991084, -4.172316494077677e-06, -0.0001392364501953125, -5.91278076171875e-05, -7.62939453125e-06, -6.830657366663218e-05, -1.9550323486328125e-05, -0.015069007873535156, -1.0294694900512695, -0.054230690002441406, -2.2053474822314456e-05, -4.887576324108522e-06, -1.6808358850539662e-05, -4.053113570989808e-06, -0.003945919685065746, -3.218649908376392e-06, -0.003402352100238204, -2.7418063837103546e-05, -0.017226219177246094, -2.288818359375e-05, -3.814697265625e-06, -0.0005016326904296875, -0.000476837158203125, -0.0009136199951171875, -9.5367431640625e-06, -6.67572021484375e-05, -5.7220458984375e-06, -0.0071315765380859375, 0.0, -0.15105438232421875, -0.0011959075927734375, -0.00013303756713867188, -1.1920928244535389e-07, -0.034796714782714844, -4.1961669921875e-05, -0.023569822311401367, -5.960462772236497e-07, -0.0007457733154296875, -0.0655660629272461, 0.0, -0.0011353492736816406, -4.768370445162873e-07, -3.814697265625e-06, -1.2544801235198975, -3.075599670410156e-05, -0.000164031982421875, -0.032644033432006836, -0.00044959867955185473, -0.00022125244140625, -0.0013294219970703125, -0.0001811981201171875, -0.017606735229492188, -7.82012939453125e-05, -0.0002384185791015625, -0.06457710266113281, -0.2394876480102539, -0.000213623046875, -0.02873992919921875, -0.0002536773681640625, -0.0316239595413208, -6.0437283536884934e-05, -1.52587890625e-05, -0.3029823303222656, -0.000965118408203125, -0.010869979858398438, -3.814697265625e-06, -0.0022258758544921875, -9.5367431640625e-06, -0.024394989013671875, -0.0003414154052734375, -0.0009099245071411133, -5.125993993715383e-06, -0.0012094974517822266, -3.576278118089249e-07, -0.26664242148399353, -6.198883056640625e-06, -0.028594970703125, -0.00034332275390625, -0.006984710693359375, -0.0011882781982421875, -3.24249267578125e-05, -0.0018901824951171875, -7.62939453125e-06, -0.09302854537963867, -7.62939453125e-06, -0.007969379425048828, -0.00029870885191485286, -0.01253509521484375, -0.9101104736328125, -0.08035659790039062, -2.288818359375e-05, -7.62939453125e-06, -0.0001811981201171875, -2.6702880859375e-05, -0.0054473876953125, -3.4332275390625e-05, -0.06736564636230469, -2.47955322265625e-05, -0.5811147689819336, -0.0004291534423828125, -0.28576409816741943, -0.0007762908935546875, -0.001286149024963379, -7.390974587906385e-06, -0.03370678424835205, -4.529951547738165e-05, -0.013546095229685307, -4.768370445162873e-07, -0.2580679953098297, -7.748603820800781e-06, -0.14130306243896484, -0.018388748168945312, -0.0013856887817382812, -0.014773884788155556, 0.0, -0.0014896392822265625, -1.9073486328125e-06, -1.33514404296875e-05, -0.05083274841308594, -5.7220458984375e-06, -7.62939453125e-06, -0.000629425048828125, -5.7220458984375e-06, -0.0016632078913971782, -2.3841855067985307e-07, -0.0005675554275512695, 0.0, -0.0059261322021484375, -2.47955322265625e-05, -0.017217636108398438, -5.340576171875e-05, -4.9591064453125e-05, -0.0021810531616210938, -1.9073486328125e-06, -9.584426879882812e-05, 0.0, -5.7220458984375e-06, -0.0013818740844726562, 0.0, -0.0022029876708984375, -5.7220458984375e-06, 0.0, 0.0, -0.0004940032958984375, -9.5367431640625e-06, -1.9073486328125e-06, -0.046576499938964844, -3.814697265625e-06, -0.006244659423828125, -1.9073486328125e-05, -0.011507034301757812, -8.344646857949556e-07, -0.15449213981628418, -1.5258672647178173e-05, -0.20296061038970947, -9.775161743164062e-06, -0.0002117156982421875, -2.6702880859375e-05, -9.5367431640625e-06, -0.08055349439382553, -0.000133514404296875, -1.1444091796875e-05, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.0003376007080078125, -1.9073486328125e-06, -0.00650787353515625, 0.0, -0.004637718200683594, -0.00139617919921875, -0.10173988342285156, -0.0001468658447265625, -2.6702880859375e-05, -0.00040912628173828125, -7.62939453125e-06, -0.0001575946807861328, 0.0, -1.9073486328125e-06, -0.03771018981933594, 0.0, -0.0003719329833984375, -1.52587890625e-05, -1.9073486328125e-06, 0.0, -0.0002002716064453125, -0.0001087188720703125, -1.9073486328125e-06, -0.037784576416015625, -3.814697265625e-06, -0.012905120849609375, -1.1444091796875e-05, -0.012231826782226562, -5.960462772236497e-07, -0.5183902978897095, -1.8715683836489916e-05, -0.2311694473028183, -5.7220458984375e-06, -0.0001201629638671875, -3.814697265625e-05, -2.288818359375e-05, -0.09225796163082123, -0.0002422332763671875, -0.0001049041748046875, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.0002498626708984375, -3.814697265625e-06, -0.006159782409667969, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 3, "hole3": "EPIC", "hole0": "Vaporize", "_type": "Template19", "hole2": "MAGE"}, {"targets": [{"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}], "value": {"value": "Null", "_type": "NameConstant"}, "_type": "Assign"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.098784926554252}, {"choice_history": [55, 124, 221, 63, 103, "Vaporize", "<EOS>", 208, 37, 125, "Secret", "Card", "<EOS>", 225, 84, 177, "Vaporize", "<EOS>", "3", "<EOS>", "MAGE", "<EOS>", 66, 108, "use", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "player", "<EOS>", 194, "game", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "use", "<EOS>", 209, 37, 125, "player", "<EOS>", 37, 125, "game", "<EOS>", 66, 108, "_reveal", "<EOS>", 195, 203, 194, "self", "<EOS>", 194, "attacker", "<EOS>", 194, "target", "<EOS>", 221, 67, 111, 13, 97, 0, 209, 33, 104, 19, 125, "target", "<EOS>", 205, 6, 208, 29, 94, 11, 94, 19, 125, "self", "<EOS>", "player", "<EOS>", "hero", "<EOS>", 50, 192, 89, 11, 94, 19, 125, "attacker", "<EOS>", "<UNK>", "<EOS>", 222, 61, 95, 11, 94, 11, 94, 11, 94, 11, 94, 19, 125, "attacker", "<EOS>", "player", "<EOS>", "game", "<EOS>", "other_player", "<EOS>", "hero", "<EOS>", 56, 21, 130, "3", "<EOS>", 64, 106, 14, 99, 11, 94, 26, 174, "super", "<EOS>", "reveal", "<EOS>", 66, 108, "activate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "bind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>", 66, 108, "deactivate", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "player", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 11, 94, 19, 125, "player", "<EOS>", "opponent", "<EOS>", "unbind", "<EOS>", 209, 40, 134, "character_attack", "<EOS>", 29, 94, 19, 125, "self", "<EOS>", "_reveal", "<EOS>"], "inferred_code": "class Vaporize(SecretCard):\n\n    def __init__(self):\n        super().__init__('Vaporize', 3, CHARACTER_CLASS.MAGE, CARD_RARITY.RARE)\n\n    def use(self, player, game):\n        super().use(player, game)\n\n    def _reveal(self, attacker, target):\n        if target is self.player.hero and not attacker.<UNK>:\n            attacker.player.game.other_player.hero += 3\n            super().reveal()\n\n    def activate(self, player):\n        player.opponent.bind('character_attack', self._reveal)\n\n    def deactivate(self, player):\n        player.opponent.unbind('character_attack', self._reveal)\n", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -0.0001201629638671875, -3.4332275390625e-05, -1.9073486328125e-05, -0.0011547094909474254, -5.292858259053901e-05, -1.52587890625e-05, -0.00020599365234375, -3.814697265625e-06, -0.0019501447677612305, -0.0054721832275390625, -2.288818359375e-05, -1.9329071044921875, -0.010316848754882812, -0.0067348480224609375, -1.2516897186287679e-05, -1.3709059203392826e-05, -5.960462203802308e-07, -0.0007066772668622434, -0.2687636911869049, -0.0011285701766610146, -0.0059833526611328125, -1.9073486328125e-06, -0.017346978187561035, -7.152555099310121e-07, -1.9073486328125e-05, -0.0001735687255859375, -1.9073486328125e-06, -7.748603820800781e-06, 0.0, 0.0, -0.004937171936035156, 0.0, -2.288818359375e-05, -0.0002499818801879883, -2.3841855067985307e-07, -0.009946823120117188, -0.0001201629638671875, 0.0, -3.814697265625e-06, -5.7220458984375e-06, -6.29425048828125e-05, -1.9073486328125e-05, -9.918212890625e-05, -3.4332275390625e-05, -0.00010454653238411993, -1.1920928244535389e-07, -0.006969451904296875, -4.768370445162873e-07, -1.1444091796875e-05, -8.0108642578125e-05, 0.0, -5.7220458984375e-06, -3.814697265625e-06, -0.000518798828125, -1.9073486328125e-06, -7.748603820800781e-06, -3.0398352464544587e-05, -0.10524654388427734, -4.00543212890625e-05, -0.2750598192214966, -3.4570634852570947e-06, -0.0001506805419921875, -0.04940223693847656, -1.9073486328125e-06, -0.000767827033996582, -1.0728830375228426e-06, -1.9073486328125e-06, -0.07278013229370117, -8.344650268554688e-06, -5.7220458984375e-05, -0.04410195350646973, -0.000943368359003216, -0.0002231597900390625, -0.0011386871337890625, -0.0001087188720703125, -0.02633190155029297, -6.67572021484375e-05, -0.000244140625, -0.04694843292236328, -0.04764366149902344, -0.0002155303955078125, -0.18665504455566406, -0.0004825592041015625, -0.03918278217315674, -4.362964682513848e-05, -1.71661376953125e-05, -0.28348445892333984, -0.0009975433349609375, -0.0025873184204101562, -7.62939453125e-06, -0.0011997222900390625, -1.9073486328125e-06, -0.031890869140625, -0.0002536773681640625, -0.00079345703125, -8.463859558105469e-06, -0.0014460086822509766, -3.576278118089249e-07, -0.2219262719154358, -6.079673767089844e-06, -0.028038978576660156, -0.0002899169921875, -0.0074329376220703125, -0.0010967254638671875, -4.57763671875e-05, -0.0016078948974609375, -7.62939453125e-06, -0.10098695755004883, -9.5367431640625e-06, -0.008176326751708984, -0.00031634586048312485, -0.009779930114746094, -0.9458379745483398, -0.09074783325195312, -2.288818359375e-05, -7.62939453125e-06, -0.000164031982421875, -2.86102294921875e-05, -0.0048618316650390625, -3.62396240234375e-05, -0.0635528564453125, -2.6702880859375e-05, -0.6790037155151367, -0.00031280517578125, -0.29440343379974365, -0.0005626678466796875, -0.0024018287658691406, -5.364416665543104e-06, -0.03144800662994385, -4.351137613411993e-05, -0.013900892809033394, -5.960462772236497e-07, -0.2589558959007263, -7.748603820800781e-06, -0.13935470581054688, -0.01890277862548828, -0.0012912750244140625, -0.01507527381181717, 0.0, -0.0015048980712890625, -1.9073486328125e-06, -1.33514404296875e-05, -0.05145454406738281, -5.7220458984375e-06, -7.62939453125e-06, -0.0006351470947265625, -5.7220458984375e-06, -0.0016493796138092875, -2.3841855067985307e-07, -0.0005627870559692383, 0.0, -0.09743690490722656, -4.9591064453125e-05, -0.031810760498046875, -1.52587890625e-05, -0.000118255615234375, -0.003513336181640625, -1.9073486328125e-06, -8.964537119027227e-05, 0.0, -9.5367431640625e-06, -0.0023670196533203125, -1.1920928244535389e-07, -0.000644683837890625, -9.5367431640625e-06, 0.0, 0.0, -0.00064849853515625, -1.1444091796875e-05, -1.9073486328125e-06, -0.045490264892578125, -5.7220458984375e-06, -0.0074214935302734375, -1.9073486328125e-05, -0.0099869966506958, -7.152555099310121e-07, -0.15560603141784668, -1.537788011773955e-05, -0.177634596824646, -9.775161743164062e-06, -0.0001964569091796875, -2.86102294921875e-05, -9.5367431640625e-06, -0.08040408790111542, -0.000133514404296875, -1.1444091796875e-05, -7.62939453125e-06, -4.38690185546875e-05, 0.0, -0.0003509521484375, -1.9073486328125e-06, -0.006524085998535156, 0.0, -0.017479896545410156, -0.0006160736083984375, -0.06891918182373047, -2.09808349609375e-05, -2.09808349609375e-05, -0.000606536865234375, -5.7220458984375e-06, -9.09566879272461e-05, -1.1920928244535389e-07, 0.0, -0.018410682678222656, -1.1920928244535389e-07, -0.000125885009765625, -1.71661376953125e-05, -1.9073486328125e-06, 0.0, -0.00014495849609375, -9.1552734375e-05, -3.814697265625e-06, -0.0349273681640625, -3.814697265625e-06, -0.01105499267578125, -1.1444091796875e-05, -0.014478802680969238, -5.960462772236497e-07, -0.49921929836273193, -1.7165990357170813e-05, -0.2421339601278305, -5.7220458984375e-06, -0.0001220703125, -3.4332275390625e-05, -2.09808349609375e-05, -0.09156736731529236, -0.000247955322265625, -9.72747802734375e-05, -7.62939453125e-06, -3.0517578125e-05, 0.0, -0.00025177001953125, -3.814697265625e-06, -0.006176948547363281, 0.0], "model_output": {"body": [{"name": "Vaporize", "body": [{"hole1": 3, "hole0": "Vaporize", "_type": "Template5", "hole2": "MAGE"}, {"name": "use", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}, {"arg": "game", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"id": "player", "_type": "Name"}, {"id": "game", "_type": "Name"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "use"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "_reveal", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "attacker", "_type": "arg"}, {"arg": "target", "_type": "arg"}], "_type": "arguments"}, "body": [{"test": {"values": [{"comparators": [{"value": {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "hero"}], "left": {"id": "target", "_type": "Name"}, "_type": "Compare", "ops": [{"_type": "Is"}]}, {"op": {"_type": "Not"}, "_type": "UnaryOp", "operand": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "<UNK>"}}], "op": {"_type": "And"}, "_type": "BoolOp"}, "body": [{"target": {"value": {"value": {"value": {"value": {"id": "attacker", "_type": "Name"}, "_type": "Attribute", "attr": "player"}, "_type": "Attribute", "attr": "game"}, "_type": "Attribute", "attr": "other_player"}, "_type": "Attribute", "attr": "hero"}, "op": {"_type": "Add"}, "value": {"n": 3, "_type": "Num"}, "_type": "AugAssign"}, {"value": {"func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "reveal"}, "_type": "Call"}, "_type": "Expr"}], "_type": "If"}], "_type": "FunctionDef"}, {"name": "activate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "bind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "deactivate", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "player", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "character_attack", "_type": "Str"}, {"value": {"id": "self", "_type": "Name"}, "_type": "Attribute", "attr": "_reveal"}], "func": {"value": {"value": {"id": "player", "_type": "Name"}, "_type": "Attribute", "attr": "opponent"}, "_type": "Attribute", "attr": "unbind"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}], "bases": [{"id": "SecretCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -8.121684999845428}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-0.000522613525390625, -9.34600830078125e-05, -18.738723754882812], "model_output": {"body": [], "_type": "Module"}, "score": -18.73933982849121}]}
{"gold_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -0.04570198059082031, -3.814697265625e-05, -2.360340477025602e-05, -8.940656698541716e-06, -0.00012180572957731783, -1.1920928244535389e-07, -0.013365983963012695, -3.814697265625e-06, -0.00023651123046875, -2.47955322265625e-05, -0.0025577545166015625, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.26193819197055035}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltratorInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -1.742828607559204, -0.0007852867711335421, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.794917680963408e-06, -2.682209014892578e-05, 0.0, -3.4332275390625e-05, -0.00433349609375, -0.0001373291015625, -0.00015054999676067382, -8.106231689453125e-06, -0.0003223419189453125, -0.018272876739501953, -3.9339138311333954e-06, -0.0001145550049841404, -4.4345666537992656e-05, -2.0265558760002023e-06, -0.046996116638183594, -3.814697265625e-05, -2.3722612240817398e-05, -9.298280929215252e-06, -0.00011465555871836841, -1.1920928244535389e-07, -0.013594865798950195, -3.814697265625e-06, -0.000232696533203125, -2.6702880859375e-05, -0.0026397705078125, 0.0], "model_output": {"body": [{"name": "WorgenInfiltratorInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.8327715444181578}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -3.132269859313965, -5.91278076171875e-05, -4.9590846174396574e-05, -8.964136941358447e-05, -7.152525540732313e-07, -2.3841855067985307e-07], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.332323908475445}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class WorgenInfiltratorInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -1.742828607559204, -0.0007852867711335421, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.794917680963408e-06, -2.682209014892578e-05, 0.0, -3.4332275390625e-05, -0.00433349609375, -0.0001373291015625, -0.00015054999676067382, -8.106231689453125e-06, -0.0003223419189453125, -0.018272876739501953, -3.9339138311333954e-06, -0.0001145550049841404, -4.4345666537992656e-05, -2.0265558760002023e-06, -3.1067934036254883, -6.103515625e-05, -5.364391108741984e-05, -8.892617915989831e-05, -7.152525540732313e-07, -2.3841855067985307e-07], "model_output": {"body": [{"name": "WorgenInfiltratorInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.876089597271147}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -0.04570198059082031, -3.814697265625e-05, -2.360340477025602e-05, -8.940656698541716e-06, -0.00012180572957731783, -1.1920928244535389e-07, -5.036380767822266, -2.3841855067985307e-07, -0.000263214111328125, -2.288818359375e-05, -0.0011157989501953125, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.283532239516909}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltratorInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator Infiltrator', 1,\n            CHARACTER_CLASS.ALL, CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -1.742828607559204, -0.0007852867711335421, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.794917680963408e-06, -2.682209014892578e-05, 0.0, -3.4332275390625e-05, -0.00433349609375, -0.0001373291015625, -0.00015054999676067382, -8.106231689453125e-06, -0.0003223419189453125, -4.040832996368408, -1.728534698486328e-05, -9.179109838441946e-06, -1.835830153140705e-05, -5.9603193221846595e-05, -5.4597563575953245e-05, -2.264974000354414e-06, -0.056018829345703125, -4.1961669921875e-05, -2.479548675182741e-05, -1.0013530300057027e-05, -8.271705883089453e-05, -2.3841855067985307e-07, -0.014847159385681152, -3.814697265625e-06, -0.000244140625, -2.47955322265625e-05, -0.0024700164794921875, 0.0], "model_output": {"body": [{"name": "WorgenInfiltratorInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.86541666393461}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "False", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -0.04570198059082031, -3.814697265625e-05, -2.360340477025602e-05, -8.940656698541716e-06, -0.00012180572957731783, -1.1920928244535389e-07, -0.013365983963012695, -3.814697265625e-06, -0.00023651123046875, -2.47955322265625e-05, -6.291200637817383, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.550581075271332}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -5.60059928894043, -0.0003185272216796875, -0.00018523407925385982, -1.943111237778794e-05, -5.7220458984375e-06, -7.867813110351562e-06, -1.5497207641601562e-06, -2.622604142743512e-06, -0.00010287761688232422, 0.0, -2.8252539777895436e-05, -2.0503972336882725e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.3426351547241211, -2.6702880859375e-05, -0.44554901123046875, -3.24249267578125e-05, -4.6014120016479865e-05, -7.152555099310121e-07, -0.0002880175015889108, -1.1920928244535389e-07, -0.013212323188781738, -1.9073486328125e-06, -9.34600830078125e-05, -1.71661376953125e-05, -0.0012950897216796875, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"_type": "Template3", "hole0": "Worgen Infiltrator", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.599074373511478}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "<UNK>", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class Worgen<UNK>(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -6.344610691070557, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -0.04570198059082031, -3.814697265625e-05, -2.360340477025602e-05, -8.940656698541716e-06, -0.00012180572957731783, -1.1920928244535389e-07, -0.013365983963012695, -3.814697265625e-06, -0.00023651123046875, -2.47955322265625e-05, -0.0025577545166015625, 0.0], "model_output": {"body": [{"name": "Worgen<UNK>", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.604790186064058}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "charge", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltratorInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, charge=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -1.742828607559204, -0.0007852867711335421, -1.9073486328125e-06, -1.71661376953125e-05, 0.0, -6.794917680963408e-06, -2.682209014892578e-05, 0.0, -3.4332275390625e-05, -0.00433349609375, -0.0001373291015625, -0.00015054999676067382, -8.106231689453125e-06, -0.0003223419189453125, -0.018272876739501953, -3.9339138311333954e-06, -0.0001145550049841404, -4.4345666537992656e-05, -2.0265558760002023e-06, -0.046996116638183594, -3.814697265625e-05, -2.3722612240817398e-05, -9.298280929215252e-06, -0.00011465555871836841, -1.1920928244535389e-07, -5.009241104125977, -2.3841855067985307e-07, -0.000270843505859375, -2.288818359375e-05, -0.0011386871337890625, 0.0], "model_output": {"body": [{"name": "WorgenInfiltratorInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "charge"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.826947455367836}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "windfury", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, windfury=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -0.04570198059082031, -3.814697265625e-05, -2.360340477025602e-05, -8.940656698541716e-06, -0.00012180572957731783, -1.1920928244535389e-07, -6.9346842765808105, -7.152555099310121e-07, -0.0005340576171875, -7.82012939453125e-05, -0.0018939971923828125, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "windfury"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.182940579970811}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MURLOC", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.MURLOC)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -5.60059928894043, -0.0003185272216796875, -0.00018523407925385982, -1.943111237778794e-05, -5.7220458984375e-06, -7.867813110351562e-06, -1.5497207641601562e-06, -2.622604142743512e-06, -0.00010287761688232422, 0.0, -2.8252539777895436e-05, -2.0503972336882725e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -0.3426351547241211, -2.6702880859375e-05, -1.075408935546875, -0.0001201629638671875, -0.0001116942657972686, -9.536697689327411e-06, -1.1920917586394353e-07, -4.768370445162873e-07], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"_type": "Template3", "hole0": "Worgen Infiltrator", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MURLOC"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.214189050308505}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 83, 176, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "Self", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON)\n\n    def create_minion(self, player):\n        return Minion(2, 1, Self=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -0.004642486572265625, -0.0001850128173828125, -0.0001559135998832062, -7.987022399902344e-06, -3.814697265625e-05, -0.00011861319217132404, -5.602844794339035e-06, -9.464855247642845e-05, -3.9219725294969976e-05, -1.7881377516459906e-06, -0.04570198059082031, -3.814697265625e-05, -2.360340477025602e-05, -8.940656698541716e-06, -0.00012180572957731783, -1.1920928244535389e-07, -7.014663219451904, -0.00010502338409423828, -0.002246856689453125, -1.9073486328125e-05, -0.000919342041015625, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"hole1": 1, "hole0": "Worgen Infiltrator", "_type": "Template4", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "Self"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.263702847083771}, {"choice_history": [55, 124, 221, 63, 103, "Worgen", "Infiltrator", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Worgen", " ", "Infiltrator", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "stealth", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class WorgenInfiltrator(MinionCard):\n\n    def __init__(self):\n        super().__init__('Worgen Infiltrator', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, stealth=True)\n", "score_history": [0.0, -3.0517578125e-05, -4.38690185546875e-05, -7.62939453125e-06, -3.814697265625e-06, -0.00015662873920518905, -0.0017586969770491123, -0.19247093796730042, -1.9073486328125e-06, -2.86102294921875e-05, 0.0, -5.483620952873025e-06, -3.24249267578125e-05, 0.0, -2.47955322265625e-05, -5.60059928894043, -0.0003185272216796875, -0.00018523407925385982, -1.943111237778794e-05, -5.7220458984375e-06, -7.867813110351562e-06, -1.5497207641601562e-06, -2.622604142743512e-06, -0.00010287761688232422, 0.0, -2.8252539777895436e-05, -2.0503972336882725e-05, -5.7220458984375e-06, -1.9073486328125e-06, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.447744369506836, -3.814697265625e-06, -0.032103538513183594, -3.4332275390625e-05, -2.6702733521233313e-05, -1.0728830375228426e-06, -0.00019160046940669417, -1.1920928244535389e-07, -0.012659192085266113, -1.9073486328125e-06, -0.000110626220703125, -1.52587890625e-05, -0.00103759765625, 0.0], "model_output": {"body": [{"name": "WorgenInfiltrator", "body": [{"_type": "Template3", "hole0": "Worgen Infiltrator", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 1, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 2, "_type": "Template10", "hole2": "stealth"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.289806399570914}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -3.0517578125e-05, -20.086618423461914], "model_output": {"body": [], "_type": "Module"}, "score": -20.08664894104004}]}
{"gold_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(3),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker()),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "1", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(1))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -0.1631326675415039, -9.1552734375e-05, -0.0013675689697265625, -0.010817527770996094, -0.001178741455078125, -0.007234263699501753, -1.52587890625e-05, -0.0047512054443359375, -0.0001163482666015625, -0.49178922176361084, -6.103515625e-05, -0.06730842590332031, -1.9073486328125e-06, -0.0009301900863647461, -2.1457672119140625e-06, 0.0, -0.0001163482666015625, -1.71661376953125e-05, -1.537799835205078e-05, -1.1920928244535389e-07, -0.00048089027404785156, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 1, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.0285341005225703}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -0.1631326675415039, -9.1552734375e-05, -0.0013675689697265625, -0.010817527770996094, -0.001178741455078125, -0.007234263699501753, -1.52587890625e-05, -0.0047512054443359375, -0.0001163482666015625, -0.9568036794662476, -5.7220458984375e-06, -0.23375988006591797, 0.0, -0.003471851348876953, -2.2649765014648438e-06, 0.0, -0.00012969970703125, -1.52587890625e-05, -1.1563301086425781e-05, -1.1920928244535389e-07, -0.00044655799865722656, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.6624578695197627}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "3", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(3()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -1.950791358947754, -1.9073486328125e-06, -0.2937011420726776, -0.004316204693168402, -0.015657424926757812, 0.0, -0.5112998485565186, 0.0, 0.0, -0.000446319580078125, -7.62939453125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -0.00026535987854003906, -1.1920928244535389e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"hole0": "3", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.055599293803141}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.4863739013671875, -0.0004634857177734375, -0.6263712644577026, -3.302074037492275e-05, -0.000766754150390625, -0.000293731689453125, -0.0002956390380859375, -5.7220458984375e-06, -0.4052622318267822, -0.0002059931866824627, -3.933906555175781e-06, -0.03246784210205078, -0.0001392364501953125, -4.1961669921875e-05, -0.0010623931884765625, -1.33514404296875e-05, -4.1961669921875e-05, 0.0, -0.00021398067474365234, -7.748603820800781e-06, 0.0, -3.24249267578125e-05, -1.52587890625e-05, -0.0014362335205078125, 0.0, -0.0005168914794921875, -1.9073486328125e-06, -0.0008034706115722656, -9.620189666748047e-05, -2.0265579223632812e-06, -0.000141143798828125, -7.62939453125e-06, -5.7220458984375e-06, -3.576278118089249e-07, -0.0001784562919056043, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.606307388982387}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "3", "<EOS>", 49, 174, "Minion", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(3()),\n            MinionSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -1.950791358947754, -1.9073486328125e-06, -0.2937011420726776, -0.004316204693168402, -0.015657424926757812, 0.0, -1.467820167541504, -7.2479248046875e-05, 0.0, -0.001071929931640625, -3.814697265625e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.00027871131896972656, -1.1920928244535389e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"hole0": "3", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "MinionSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.012827358340168}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "5", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(5),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.4863739013671875, -0.0004634857177734375, -0.8447971343994141, -0.00970005989074707, -0.20321273803710938, -0.000209808349609375, -0.00014495849609375, -1.9073486328125e-06, -0.39539408683776855, -0.00038301930180750787, -3.933906555175781e-06, -0.1064748764038086, -5.340576171875e-05, -3.24249267578125e-05, -0.002063751220703125, -1.71661376953125e-05, -3.814697265625e-05, -1.9073486328125e-06, -0.00020241737365722656, -7.748603820800781e-06, 0.0, -3.62396240234375e-05, -2.288818359375e-05, -0.00208282470703125, 0.0, -0.00028228759765625, -1.9073486328125e-06, -0.0009026527404785156, -9.417533874511719e-05, -2.0265579223632812e-06, -0.000148773193359375, -7.62939453125e-06, -5.7220458984375e-06, -3.576278118089249e-07, -0.00019931791757699102, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"hole0": 5, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.10236919144576}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Damage(1),\n            MinionSelector(players=BothPlayer(), picker=UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.4863739013671875, -0.0004634857177734375, -0.6263712644577026, -3.302074037492275e-05, -0.000766754150390625, -0.000293731689453125, -0.0002956390380859375, -5.7220458984375e-06, -1.0995055437088013, -0.0012607574462890625, -2.1457672119140625e-06, -0.00232696533203125, -0.000156402587890625, -9.5367431640625e-06, -0.000278472900390625, -0.00012969970703125, -4.76837158203125e-05, -1.9073486328125e-06, -0.00010776519047794864, -1.728534698486328e-05, 0.0, -1.52587890625e-05, -1.9073486328125e-06, -0.000453948974609375, 0.0, -0.0019855499267578125, -1.9073486328125e-06, -0.0007064342498779297, -0.00011754035949707031, -2.0265579223632812e-06, -0.000125885009765625, -7.62939453125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.00012874603271484375, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.2710059902243955}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 49, 174, "5", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give(5()),\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -1.950791358947754, -1.9073486328125e-06, -2.1775689125061035, -0.0028417303692549467, -0.005870819091796875, 0.0, -0.030085325241088867, -1.9073486328125e-06, 0.0, -0.0003643035888671875, -7.62939453125e-06, -5.7220458984375e-06, -1.1920928244535389e-07, -0.00025773048400878906, -1.1920928244535389e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"hole0": "5", "_type": "Template38"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.446903722725153}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "5", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(5))], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.3051109313964844, -0.0001735687255859375, -0.0025539398193359375, -0.051723480224609375, -9.34600830078125e-05, -0.35108399391174316, -1.9192666513845325e-05, -0.45145130157470703, -0.017050743103027344, -0.00097644206834957, -0.00023591070203110576, -0.011033313348889351, -0.45698729157447815, -1.9073486328125e-06, -0.0895737037062645, -8.666514622746035e-05, -0.6875400543212891, 0.0, -0.00489497184753418, -9.417517503607087e-06, 0.0, -0.000324249267578125, -1.9073486328125e-05, -5.7220458984375e-06, -2.3841855067985307e-07, -0.0003014802932739258, -1.1920928244535389e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"elts": [{"hole0": 1, "_type": "Template37"}, {"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 5}], "_type": "List"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.480256682573476}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 44, 168, "Give", "<EOS>", "Change", "Attack", "<EOS>", "5", "<EOS>", 32, 100, 19, 125, "Minion", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeAttack(5))], MinionSelector(players=BothPlayer(), picker=\n            UserPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.3051109313964844, -0.0001735687255859375, -0.0025539398193359375, -0.051723480224609375, -9.34600830078125e-05, -0.35108399391174316, -1.9192666513845325e-05, -0.45145130157470703, -0.017050743103027344, -0.00097644206834957, -0.00023591070203110576, -0.011033313348889351, -0.45698729157447815, -1.9073486328125e-06, -0.0895737037062645, -8.666514622746035e-05, -0.7002477645874023, -0.0020999908447265625, -0.0001316070556640625, -1.9073486328125e-06, -0.00016868107195477933, -0.0006771087646484375, 0.0, -0.06473541259765625, -3.24249267578125e-05, -1.1444091796875e-05, -0.0006580352783203125, -0.0001697540283203125, -2.09808349609375e-05, 0.0, -0.00022494792938232422, -7.867813110351562e-06, 0.0, -1.33514404296875e-05, -9.5367431640625e-06, -0.0006961822509765625, 0.0, -0.0007228851318359375, -1.9073486328125e-06, -0.0011699199676513672, -0.00012111663818359375, -3.933906555175781e-06, -0.000133514404296875, -7.62939453125e-06, -5.7220458984375e-06, -2.3841855067985307e-07, -0.00015735626220703125, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"elts": [{"hole0": 1, "_type": "Template37"}, {"hole1": "ChangeAttack", "hole0": "Give", "_type": "Template32", "hole2": 5}], "_type": "List"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.559392577292485}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 44, 168, "Give", "<EOS>", "Change", "Health", "<EOS>", "5", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1), Give(\n            ChangeHealth(5))], SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.3051109313964844, -0.0001735687255859375, -0.0025539398193359375, -0.051723480224609375, -9.34600830078125e-05, -0.35108399391174316, -1.9192666513845325e-05, -0.45145130157470703, -0.017050743103027344, -0.00097644206834957, -0.00023591070203110576, -0.011033313348889351, -1.0060681104660034, -9.775161743164062e-06, -0.1402609646320343, -0.0001493692398071289, -0.17573165893554688, 0.0, -0.0028030872344970703, -9.536735888104886e-06, 0.0, -0.0005397796630859375, -1.71661376953125e-05, -7.62939453125e-06, -2.3841855067985307e-07, -0.0002422332763671875, 0.0], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"elts": [{"hole0": 1, "_type": "Template37"}, {"hole1": "ChangeHealth", "hole0": "Give", "_type": "Template32", "hole2": 5}], "_type": "List"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.566351337686385}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 35, 120, 209, 48, 173, "1", "<EOS>", 32, 100, 19, 125, "Character", "Selector", "<EOS>", 217, 54, 197, "players", "<EOS>", 26, 174, "Both", "Player", "<EOS>", 54, 197, "picker", "<EOS>", 26, 174, "User", "Picker", "<EOS>", 49, 174, "Player", "Selector", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry([Damage(1),\n            CharacterSelector(players=BothPlayer(), picker=UserPicker())],\n            PlayerSelector()))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -2.3051109313964844, -0.0001735687255859375, -0.0025539398193359375, -0.051723480224609375, -9.34600830078125e-05, -0.35108399391174316, -1.9192666513845325e-05, -1.1716556549072266, -0.004566192626953125, -0.000164031982421875, -3.814697265625e-06, -0.6887024641036987, -0.00034975982271134853, -3.933906555175781e-06, -0.1445150375366211, -9.5367431640625e-05, -7.62939453125e-05, -0.009235382080078125, -1.52587890625e-05, -1.9073486328125e-05, -1.9073486328125e-06, -0.00022113323211669922, -5.841255187988281e-06, 0.0, -3.62396240234375e-05, -3.4332275390625e-05, -0.003841400146484375, 0.0, -0.000400543212890625, -3.814697265625e-06, -0.0010342597961425781, -0.0001055002212524414, -2.0265579223632812e-06, -0.0020084381103515625, -5.7220458984375e-06, -0.04319727420806885, -2.0265579223632812e-06, -1.1920928244535389e-07, -0.0002593994140625, -9.5367431640625e-06, -7.62939453125e-06, -3.576278118089249e-07, -0.0003510713577270508, -1.1920928244535389e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"elts": [{"hole0": 1, "_type": "Template37"}, {"keywords": [{"value": {"hole0": "BothPlayer", "_type": "Template38"}, "arg": "players", "_type": "keyword"}, {"value": {"hole0": "UserPicker", "_type": "Template38"}, "arg": "picker", "_type": "keyword"}], "func": {"id": "CharacterSelector", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, {"hole0": "PlayerSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.830695035154918}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Attack", "Greater", "Than", "<EOS>", 208, 39, 130, "2", "<EOS>", 49, 174, "Both", "Player", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(2))]), MinionSelector(AttackGreaterThan\n            (2), BothPlayer())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -0.1631326675415039, -9.1552734375e-05, -0.0013675689697265625, -0.010817527770996094, -0.001178741455078125, -0.007234263699501753, -1.52587890625e-05, -0.0047512054443359375, -0.0001163482666015625, -0.9568036794662476, -5.7220458984375e-06, -1.5707101821899414, -0.24628353118896484, -1.52587890625e-05, -1.71661376953125e-05, -0.08635532855987549, -0.027208328247070312, -3.814697265625e-06, -0.011295318603515625, -0.09528160095214844, -0.0001964569091796875, -2.288818359375e-05, -1.9073486328125e-06, -0.9727059602737427, -0.6872930526733398, -0.0006340742111206055, -0.0001571178436279297, -5.7220458984375e-06, -0.00109100341796875, -1.9073486328125e-06, -0.15070191025733948, -9.894371032714844e-06, -0.0055866241455078125, 0.0, -0.1900724172592163, -1.430511474609375e-05, 0.0, -0.0001735687255859375, -3.62396240234375e-05, -1.537799835205078e-05, -7.152555099310121e-07, -0.00012981891632080078, -2.3841855067985307e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"n": 2, "_type": "Num"}], "func": {"id": "AttackGreaterThan", "_type": "Name"}, "_type": "Call"}, {"hole0": "BothPlayer", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.470642403830809}, {"choice_history": [55, 124, 221, 63, 103, "Blackwing", "Corruptor", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Blackwing", " ", "Corruptor", "<EOS>", "5", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "2", "<EOS>", 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 209, 32, 101, 19, 125, "Not", "<EOS>", 208, 49, 174, "3", "<EOS>", 49, 174, "Random", "Picker", "<EOS>", 73, 146, "5", "<EOS>", "4", "<EOS>"], "inferred_code": "class BlackwingCorruptor(MinionCard):\n\n    def __init__(self):\n        super().__init__('Blackwing Corruptor', 5, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(2))]), MinionSelector(Not(3()),\n            RandomPicker())))\n\n    def create_minion(self, player):\n        return Minion(5, 4)\n", "score_history": [0.0, -1.9073486328125e-06, -2.6702880859375e-05, -5.7220458984375e-06, -5.7220458984375e-06, -0.0035481611266732216, -0.0006842655711807311, -0.020258886739611626, -1.9073486328125e-06, -2.288818359375e-05, 0.0, -7.986990567587782e-06, -2.1576881408691406e-05, -1.9788742065429688e-05, -0.00046539306640625, -0.00077056884765625, -2.47955322265625e-05, -2.0265558760002023e-06, -1.740455445542466e-05, -1.9073486328125e-06, -2.288818359375e-05, -0.0020514726638793945, -1.1920928244535389e-07, -0.00979077722877264, 0.0, -0.010828614234924316, -2.3841855067985307e-07, -5.14984130859375e-05, -7.62939453125e-05, -3.814697265625e-06, -1.9073486328125e-06, -2.503394352970645e-05, -1.1920928244535389e-07, -0.0002651214599609375, -0.22611618041992188, -7.05718994140625e-05, -3.0517578125e-05, -3.814697265625e-06, -0.0015163376228883862, -0.0020542144775390625, -0.000308990478515625, -0.1631326675415039, -9.1552734375e-05, -0.0013675689697265625, -0.010817527770996094, -0.001178741455078125, -0.007234263699501753, -1.52587890625e-05, -0.0047512054443359375, -0.0001163482666015625, -0.9568036794662476, -5.7220458984375e-06, -1.5707101821899414, -0.24628353118896484, -1.52587890625e-05, -1.71661376953125e-05, -0.08635532855987549, -0.027208328247070312, -3.814697265625e-06, -0.011295318603515625, -0.09528160095214844, -0.0001964569091796875, -2.288818359375e-05, -1.9073486328125e-06, -1.0148898363113403, -0.0008345842361450195, -9.5367431640625e-06, -0.0037097930908203125, 0.0, -0.7026185989379883, -0.005685548298060894, -0.0008678436279296875, 0.0, -0.5709680318832397, -0.0004525982076302171, -3.850450593745336e-05, -0.0001239776611328125, -2.09808349609375e-05, -5.7220458984375e-06, -1.311301275563892e-06, -0.0003514289855957031, -5.960462772236497e-07], "model_output": {"body": [{"name": "BlackwingCorruptor", "body": [{"_type": "Template3", "hole0": "Blackwing Corruptor", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"args": [{"args": [{"hole0": "3", "_type": "Template38"}], "func": {"id": "Not", "_type": "Name"}, "_type": "Call"}, {"hole0": "RandomPicker", "_type": "Template38"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 5, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 4, "hole0": 5, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.762591348647689}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -1.9073486328125e-06, -21.55543327331543], "model_output": {"body": [], "_type": "Module"}, "score": -21.555435180664062}]}
{"gold_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector(), Not(GreaterThan(Attribute('health',\n            HeroSelector(EnemyPlayer())), value=15))))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "3", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -0.29699623584747314, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.0003815889358520508, -1.1920928244535389e-07, -9.1552734375e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -7.152555099310121e-07, -0.0011348724365234375, -0.004654884338378906, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.01702892780303955, -0.0043065547943115234, -0.00440216064453125, -0.07462215423583984, -8.392333984375e-05, -0.07610130310058594, -0.0021800994873046875, -4.00543212890625e-05, -0.30914244055747986, -3.814697265625e-06, -0.0021572113037109375, -0.000102996826171875, -0.12323587387800217, -0.0005283355712890625, -0.0001316070556640625, -5.14984130859375e-05, -0.0010471203131601214, -0.00010371208190917969, 0.0, -0.00106048583984375, -1.71661376953125e-05, -7.986988748598378e-06, 0.0, -1.1806172551587224e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 3, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -1.418927743591432}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "3", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -1.524928331375122, -9.655952453613281e-06, -6.103515625e-05, -0.0002193450927734375, 0.0, -3.2782554626464844e-05, -7.510177965741605e-05, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, 0.0, -1.52587890625e-05, -9.536738616588991e-07, -0.3308640718460083, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.00042939186096191406, -2.3841855067985307e-07, -6.103515625e-05, -0.0001506805419921875, -3.814697265625e-06, 0.0, -4.398822784423828e-05, -7.152555099310121e-07, -0.0012664794921875, -0.0048465728759765625, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.014907479286193848, -0.004598259925842285, -0.0052318572998046875, -0.07067108154296875, -8.20159912109375e-05, -0.08294486999511719, -0.0021514892578125, -4.00543212890625e-05, -0.31239864230155945, -3.814697265625e-06, -0.002162933349609375, -0.0001010894775390625, -0.12096565216779709, -0.000530242919921875, -0.000133514404296875, -4.76837158203125e-05, -0.0010319810826331377, -0.00010383129119873047, 0.0, -0.00104522705078125, -1.9073486328125e-05, -7.986988748598378e-06, 0.0, -1.1686977813951671e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 3, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.67568774513947}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "3", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -1.8831578493118286, -4.52994936495088e-06, -7.62939453125e-06, 0.0, -0.0003510713577270508, -1.1920928244535389e-07, -5.53131103515625e-05, -0.0001163482666015625, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -8.344646857949556e-07, -0.0014190673828125, -0.00556182861328125, -1.9073486328125e-06, -5.14984130859375e-05, -7.62939453125e-06, -0.01653730869293213, -0.003570079803466797, -0.004581451416015625, -0.06679534912109375, -8.0108642578125e-05, -0.07648468017578125, -0.00197601318359375, -4.00543212890625e-05, -0.3019573390483856, -3.814697265625e-06, -0.002162933349609375, -0.0001049041748046875, -0.11630933731794357, -0.0005397796630859375, -0.000133514404296875, -4.76837158203125e-05, -0.00104175612796098, -0.00010371208190917969, 0.0, -0.00109100341796875, -1.9073486328125e-05, -7.986988748598378e-06, 0.0, -1.1448581062722951e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 3, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.9834211615969863}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(2))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -0.29699623584747314, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.0003815889358520508, -1.1920928244535389e-07, -9.1552734375e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -7.152555099310121e-07, -0.0011348724365234375, -0.004654884338378906, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.01702892780303955, -0.0043065547943115234, -0.00440216064453125, -0.07462215423583984, -8.392333984375e-05, -0.07610130310058594, -0.0021800994873046875, -4.00543212890625e-05, -1.5895847082138062, 0.0, -0.002902984619140625, -0.000247955322265625, -0.5567813515663147, -1.9073486328125e-05, -0.0014591217041015625, -2.09808349609375e-05, -0.001219563651829958, -7.510185241699219e-05, 0.0, -0.0020847320556640625, -1.9073486328125e-05, -5.364402113627875e-06, 0.0, -1.0733157978393137e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.135756432108103}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(2)), Buff(ChangeHealth(3))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -0.29699623584747314, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.0003815889358520508, -1.1920928244535389e-07, -9.1552734375e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -7.152555099310121e-07, -0.0011348724365234375, -0.004654884338378906, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.01702892780303955, -0.0043065547943115234, -0.00440216064453125, -0.07462215423583984, -8.392333984375e-05, -0.07610130310058594, -0.0021800994873046875, -4.00543212890625e-05, -1.5895847082138062, 0.0, -0.002902984619140625, -0.000247955322265625, -0.8717294335365295, -0.0004405975341796875, -0.00018310546875, -2.47955322265625e-05, -0.0005906514124944806, -7.11679458618164e-05, 0.0, -0.0017566680908203125, -1.52587890625e-05, -7.033321708149742e-06, 0.0, -1.275992690352723e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.448892807468603}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "3", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(2))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -0.29699623584747314, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.0003815889358520508, -1.1920928244535389e-07, -9.1552734375e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -7.152555099310121e-07, -0.0011348724365234375, -0.004654884338378906, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.01702892780303955, -0.0043065547943115234, -0.00440216064453125, -0.07462215423583984, -8.392333984375e-05, -0.07610130310058594, -0.0021800994873046875, -4.00543212890625e-05, -0.30914244055747986, -3.814697265625e-06, -0.0021572113037109375, -0.000102996826171875, -2.278186082839966, -2.6702880859375e-05, -0.0012645721435546875, -8.0108642578125e-05, -0.001200169208459556, -0.0001169443130493164, 0.0, -0.000995635986328125, -2.288818359375e-05, -5.483610948431306e-06, 0.0, -1.156740472652018e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 3, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.574642306353546}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "3", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (3)), Buff(ChangeHealth(3))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -1.8440160751342773, -4.38690185546875e-05, -8.344646857949556e-07, -2.384185791015625e-05, 0.0, -7.62939453125e-06, -7.033401743683498e-06, 0.0, -0.0004273652157280594, 0.0, -0.794391393661499, -7.986990567587782e-06, -1.1444091796875e-05, -0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-06, -6.389617919921875e-05, -1.1920922133867862e-06, -0.0019130706787109375, -0.0022840499877929688, -3.814697265625e-06, -0.0001068115234375, -1.71661376953125e-05, -0.03801393136382103, -0.0028104782104492188, -0.0035228729248046875, -0.11689090728759766, -9.918212890625e-05, -0.02460479736328125, -0.0015392303466796875, -5.340576171875e-05, -0.8437504172325134, -1.9073486328125e-06, -0.00193023681640625, -0.0001392364501953125, -0.10681706666946411, -0.0004978179931640625, -0.0001125335693359375, -5.7220458984375e-05, -0.0008773639565333724, -7.343292236328125e-05, 0.0, -0.00096893310546875, -1.33514404296875e-05, -7.74857198848622e-06, 0.0, -1.1090596672147512e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"_type": "Template3", "hole0": "Drakonid Crusher", "hole4": {"args": [{"args": [{"elts": [{"hole0": 3, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.7871619480100662}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(3))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -1.8440160751342773, -4.38690185546875e-05, -8.344646857949556e-07, -2.384185791015625e-05, 0.0, -7.62939453125e-06, -7.033401743683498e-06, 0.0, -0.0004273652157280594, 0.0, -0.794391393661499, -7.986990567587782e-06, -1.1444091796875e-05, -0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-06, -6.389617919921875e-05, -1.1920922133867862e-06, -0.0019130706787109375, -0.0022840499877929688, -3.814697265625e-06, -0.0001068115234375, -1.71661376953125e-05, -0.03801393136382103, -0.0028104782104492188, -0.0035228729248046875, -0.11689090728759766, -9.918212890625e-05, -0.02460479736328125, -0.0015392303466796875, -5.340576171875e-05, -1.0096410512924194, -5.7220458984375e-06, -0.00200653076171875, -0.000213623046875, -0.10751985013484955, -0.000762939453125, -0.00023651123046875, -3.814697265625e-05, -0.0008543467847630382, -6.186962127685547e-05, 0.0, -0.0015964508056640625, -1.33514404296875e-05, -8.702238119440153e-06, 0.0, -1.3236727681942284e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"_type": "Template3", "hole0": "Drakonid Crusher", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.9548759234338604}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(3))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -0.29699623584747314, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.0003815889358520508, -1.1920928244535389e-07, -9.1552734375e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -7.152555099310121e-07, -0.0011348724365234375, -0.004654884338378906, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.01702892780303955, -0.0043065547943115234, -0.00440216064453125, -0.07462215423583984, -8.392333984375e-05, -0.07610130310058594, -0.0021800994873046875, -4.00543212890625e-05, -2.8783609867095947, -1.33514404296875e-05, -0.0019397735595703125, -0.0001621246337890625, -0.19384752213954926, -0.0007696151733398438, -0.0002460479736328125, -3.24249267578125e-05, -0.0008544642478227615, -7.11679458618164e-05, 0.0, -0.002201080322265625, -1.52587890625e-05, -8.821446499496233e-06, 0.0, -1.2760319805238396e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.059861087382835}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "3", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.BEAST, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(3)), Buff(ChangeHealth(3))]),\n            SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -1.524928331375122, -9.655952453613281e-06, -6.103515625e-05, -0.0002193450927734375, 0.0, -3.2782554626464844e-05, -7.510177965741605e-05, -1.9073486328125e-06, 0.0, -5.14984130859375e-05, 0.0, -1.52587890625e-05, -9.536738616588991e-07, -1.7757750749588013, -4.52994936495088e-06, -9.5367431640625e-06, 0.0, -0.0003873109817504883, -2.3841855067985307e-07, -3.814697265625e-05, -0.000118255615234375, -3.814697265625e-06, 0.0, -4.398822784423828e-05, -9.536738616588991e-07, -0.0016155242919921875, -0.00574493408203125, -1.9073486328125e-06, -4.9591064453125e-05, -7.62939453125e-06, -0.01457059383392334, -0.003894209861755371, -0.0054225921630859375, -0.06500816345214844, -7.82012939453125e-05, -0.08221054077148438, -0.0019741058349609375, -3.814697265625e-05, -0.304662823677063, -3.814697265625e-06, -0.002166748046875, -0.000102996826171875, -0.11333828419446945, -0.0005397796630859375, -0.0001373291015625, -4.57763671875e-05, -0.0010212527122348547, -0.00010383129119873047, 0.0, -0.0010814666748046875, -1.9073486328125e-05, -8.106197128654458e-06, 0.0, -1.1448581062722951e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 3, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.098997816852346}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(2))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -1.8440160751342773, -4.38690185546875e-05, -8.344646857949556e-07, -2.384185791015625e-05, 0.0, -7.62939453125e-06, -7.033401743683498e-06, 0.0, -0.0004273652157280594, 0.0, -0.794391393661499, -7.986990567587782e-06, -1.1444091796875e-05, -0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-06, -6.389617919921875e-05, -1.1920922133867862e-06, -0.0019130706787109375, -0.0022840499877929688, -3.814697265625e-06, -0.0001068115234375, -1.71661376953125e-05, -0.03801393136382103, -0.0028104782104492188, -0.0035228729248046875, -0.11689090728759766, -9.918212890625e-05, -0.02460479736328125, -0.0015392303466796875, -5.340576171875e-05, -1.6368507146835327, 0.0, -0.0026092529296875, -0.0003261566162109375, -0.562690019607544, -2.6702880859375e-05, -0.0015316009521484375, -2.288818359375e-05, -0.0016058995388448238, -5.805492401123047e-05, 0.0, -0.0016460418701171875, -1.52587890625e-05, -5.483610948431306e-06, 0.0, -1.2878539564553648e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"_type": "Template3", "hole0": "Drakonid Crusher", "hole4": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.03930454400404}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "2", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (2)), Buff(ChangeHealth(3))]), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -1.8440160751342773, -4.38690185546875e-05, -8.344646857949556e-07, -2.384185791015625e-05, 0.0, -7.62939453125e-06, -7.033401743683498e-06, 0.0, -0.0004273652157280594, 0.0, -0.794391393661499, -7.986990567587782e-06, -1.1444091796875e-05, -0.00011444091796875, -3.814697265625e-06, -1.9073486328125e-06, -6.389617919921875e-05, -1.1920922133867862e-06, -0.0019130706787109375, -0.0022840499877929688, -3.814697265625e-06, -0.0001068115234375, -1.71661376953125e-05, -0.03801393136382103, -0.0028104782104492188, -0.0035228729248046875, -0.11689090728759766, -9.918212890625e-05, -0.02460479736328125, -0.0015392303466796875, -5.340576171875e-05, -1.6368507146835327, 0.0, -0.0026092529296875, -0.0003261566162109375, -0.8659689426422119, -0.0004119873046875, -0.000148773193359375, -3.0517578125e-05, -0.0006812488427385688, -5.602836608886719e-05, 0.0, -0.0015468597412109375, -1.1444091796875e-05, -7.152530088205822e-06, 0.0, -1.2282755051273853e-05, 0.0], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"_type": "Template3", "hole0": "Drakonid Crusher", "hole4": {"args": [{"args": [{"elts": [{"hole0": 2, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 6, "hole3": "battlecry", "hole2": "ALL"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.340564952152704}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Drakonid", " ", "Crusher", "<EOS>", "6", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "6", "<EOS>", "6", "<EOS>", "taunt", "<EOS>", 20, 126, "True", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(6, 6, taunt=True)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -1.8440160751342773, -4.38690185546875e-05, -8.344646857949556e-07, -2.384185791015625e-05, 0.0, -7.62939453125e-06, -7.033401743683498e-06, 0.0, -0.0004273652157280594, 0.0, -0.6038548946380615, -7.390969585685525e-06, -0.0001087188720703125, 0.0, -0.000213623046875, 0.0, -4.00543212890625e-05, -1.1920928244535389e-07, -0.3948403596878052, -5.960462772236497e-07, -0.017061233520507812, -5.14984130859375e-05, -7.033329438854707e-06, -1.0490362910786644e-05, -3.495975397527218e-05, -1.5497195136049413e-06, -3.1099331378936768, -1.8358061424805783e-05, -0.09149932861328125, -1.71661376953125e-05, -0.001178741455078125, -1.52587890625e-05], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"_type": "Template3", "hole0": "Drakonid Crusher", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 6, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 6, "hole3": {"value": true, "_type": "NameConstant"}, "hole0": 6, "_type": "Template10", "hole2": "taunt"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.0643423093275075}, {"choice_history": [55, 124, 221, 63, 103, "Drakonid", "Crusher", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Drakonid", " ", "Crusher", "<EOS>", 39, 130, "6", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "EPIC", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 209, 32, 101, 19, 125, "Give", "<EOS>", 208, 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "15", "opponent", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 73, 146, "6", "<EOS>", "6", "<EOS>"], "inferred_code": "class DrakonidCrusher(MinionCard):\n\n    def __init__(self):\n        super().__init__('Drakonid Crusher', 6, CHARACTER_CLASS.ALL,\n            CARD_RARITY.EPIC, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give(Buff(15opponent())), SelfSelector()))\n\n    def create_minion(self, player):\n        return Minion(6, 6)\n", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -9.5367431640625e-06, -2.6702880859375e-05, -1.9073486328125e-06, -7.4741430580616e-05, -0.0002165798214264214, -0.00038759640301577747, -1.9073486328125e-06, -9.5367431640625e-06, 0.0, -7.64102369430475e-05, -9.322164987679571e-05, -3.933906555175781e-06, -5.7220458984375e-06, -0.17242431640625, -3.0517578125e-05, -3.826618194580078e-05, -4.768370445162873e-07, 0.0, -1.1444091796875e-05, -5.14984130859375e-05, -2.9683074899367057e-05, -7.152555099310121e-07, -2.6702880859375e-05, -0.00077056884765625, -2.86102294921875e-05, 0.0, -0.00017547607421875, -1.33514404296875e-05, 0.0, -5.7220458984375e-06, 0.0, -4.291534423828125e-06, -4.00543212890625e-05, -1.0251998901367188e-05, 0.0, -0.0003948211669921875, -0.0002994537353515625, -2.09808349609375e-05, -5.483625955093885e-06, -2.1219253540039062e-05, -1.001357759378152e-05, -3.814697265625e-06, -2.86102294921875e-05, -1.9073486328125e-06, -7.510159775847569e-06, -6.6756979322235566e-06, -1.9073486328125e-06, 0.0, -0.00019073486328125, -1.9073486328125e-06, -0.00022912025451660156, -0.0002690246037673205, -0.015988796949386597, 0.0, 0.0, -0.00102996826171875, -3.4332275390625e-05, -1.9073486328125e-06, -5.14984130859375e-05, -0.00017844139074441046, -0.3053438663482666, -9.298322765971534e-06, -4.00543212890625e-05, -6.4849853515625e-05, 0.0, -1.9311904907226562e-05, -0.00013411037798505276, 0.0, 0.0, -5.340576171875e-05, 0.0, -1.33514404296875e-05, -8.344646857949556e-07, -0.29699623584747314, -2.622604142743512e-06, -7.62939453125e-06, 0.0, -0.0003815889358520508, -1.1920928244535389e-07, -9.1552734375e-05, -0.000141143798828125, -3.814697265625e-06, 0.0, -4.208087921142578e-05, -7.152555099310121e-07, -0.0011348724365234375, -0.004654884338378906, -1.9073486328125e-06, -5.340576171875e-05, -7.62939453125e-06, -0.01702892780303955, -0.0043065547943115234, -0.00440216064453125, -2.7429981231689453, -0.0009765625, -9.5367431640625e-06, 0.0, -0.027982225641608238, -0.005197643768042326, -7.43865966796875e-05, -0.05902862548828125, -7.62939453125e-06, -0.02326393313705921, -1.3606196641921997, -6.5205356804654e-05, -1.1444091796875e-05, -1.9073486328125e-06, -1.2475405931472778, -1.9192688341718167e-05, 0.0, -0.000148773193359375, -5.7220458984375e-06, -1.430509882993647e-06, -3.576278118089249e-07, -7.39353708922863e-06, -3.576278118089249e-07], "model_output": {"body": [{"name": "DrakonidCrusher", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Drakonid Crusher", "_type": "Str"}, {"n": 6, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "EPIC"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"args": [{"hole0": "15opponent", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 6, "hole0": 6, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.296258861075209}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-1.9073486328125e-06, -1.1444091796875e-05, -21.8000431060791], "model_output": {"body": [], "_type": "Module"}, "score": -21.80005645751953}]}
{"gold_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            False, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -0.01566314697265625, 0.0, -0.0001506805419921875, -4.00543212890625e-05, -6.79492904964718e-06, -1.9073486328125e-06, -7.62939453125e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.0017223358154296875, 0.0, -0.011958122253417969, -7.748603820800781e-06, -0.000392913818359375, -0.0001964569091796875, -5.9245172451483086e-05, -1.1920928244535389e-07, -1.1869415175169706e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -0.060106625606060504}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "COMMON", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.COMMON,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -4.262596130371094, -7.748603820800781e-06, -7.82012939453125e-05, -3.4332275390625e-05, -4.5299530029296875e-06, -1.9073486328125e-06, -0.0001678466796875, -4.00543212890625e-05, -1.1444091796875e-05, -2.288818359375e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.000392913818359375, 0.0, -0.0021228790283203125, 0.0, -0.01194000244140625, -9.655952453613281e-06, -0.00040435791015625, -0.00051116943359375, -7.581411773571745e-05, -1.1920928244535389e-07, -1.1403753887861967e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "COMMON"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.307762146538828}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ROGUE", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ROGUE, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -4.934673309326172, -9.5367431640625e-06, -1.33514404296875e-05, 0.0, -2.86102294921875e-05, 0.0, -0.000499725341796875, -6.079655122448457e-06, -0.008806228637695312, 0.0, -0.000152587890625, -3.0517578125e-05, -6.556510470545618e-06, -1.9073486328125e-06, -7.2479248046875e-05, -2.09808349609375e-05, -7.62939453125e-06, -2.09808349609375e-05, -5.7220458984375e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.0004177093505859375, 0.0, -0.0016880035400390625, 0.0, -0.011890411376953125, -7.748603820800781e-06, -0.0003795623779296875, -0.0001888275146484375, -5.674192289006896e-05, -1.1920928244535389e-07, -1.1026277206838131e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ROGUE"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.976940613891877}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "3", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 3, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -5.660584926605225, -2.3841855067985307e-07, -3.814697265625e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -1.537799835205078e-05, -2.4556857169955038e-05, -0.02168285846710205, -3.814697265625e-06, 0.0, -1.9073486328125e-06, -8.7738037109375e-05, 0.0, -0.00011444091796875, -9.417489309271332e-06, -0.015228271484375, 0.0, -0.000118255615234375, -3.4332275390625e-05, -6.675719760096399e-06, -1.9073486328125e-06, -7.2479248046875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.814697265625e-05, -1.9073486328125e-06, -0.00045013427734375, 0.0, -0.0017375946044921875, 0.0, -0.011906623840332031, -7.748603820800781e-06, -0.0003910064697265625, -0.0002079010009765625, -6.019878856022842e-05, -1.1920928244535389e-07, -1.044088276103139e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 3, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.722958392575684}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -0.01566314697265625, 0.0, -0.0001506805419921875, -4.00543212890625e-05, -6.79492904964718e-06, -1.9073486328125e-06, -7.62939453125e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.0017223358154296875, 0.0, -5.761592864990234, -1.9073486328125e-06, -9.34600830078125e-05, -7.62939453125e-05, -6.389404006768018e-05, -1.1920928244535389e-07, -1.069018617272377e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.809319380027084}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "BEAST", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.BEAST)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -0.01566314697265625, 0.0, -0.0001506805419921875, -4.00543212890625e-05, -6.79492904964718e-06, -1.9073486328125e-06, -7.62939453125e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.0017223358154296875, 0.0, -5.959034442901611, -7.390974587906385e-06, -0.000263214111328125, -0.000213623046875, -2.741774369496852e-05, -2.3841855067985307e-07, -1.2124830391258001e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "BEAST"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.007038602251413}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "9", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 9, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -6.126962184906006, -1.9073468138230965e-06, -1.9073486328125e-06, -3.814697265625e-06, -1.1444091796875e-05, 0.0, -4.410743713378906e-05, -1.168244216387393e-05, -0.004396677017211914, -1.9073486328125e-06, 0.0, -5.7220458984375e-06, -4.38690185546875e-05, 0.0, -0.0004291534423828125, -2.2649508537142538e-05, -0.019742965698242188, 0.0, -0.0002727508544921875, -3.0517578125e-05, -7.390974587906385e-06, -1.9073486328125e-06, -9.1552734375e-05, -2.09808349609375e-05, -9.5367431640625e-06, -2.09808349609375e-05, -1.1444091796875e-05, -3.24249267578125e-05, -1.9073486328125e-06, -0.0004482269287109375, 0.0, -0.001621246337890625, 0.0, -0.012145042419433594, -7.748603820800781e-06, -0.0003910064697265625, -0.000209808349609375, -6.007957927067764e-05, -1.1920928244535389e-07, -1.1745549272745848e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 9, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.1771728396108685}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DRAGON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -0.01566314697265625, 0.0, -0.0001506805419921875, -4.00543212890625e-05, -6.79492904964718e-06, -1.9073486328125e-06, -7.62939453125e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.0017223358154296875, 0.0, -6.265697479248047, -1.537799835205078e-05, -8.0108642578125e-05, -4.00543212890625e-05, -3.0755531042814255e-05, -1.1920928244535389e-07, -9.703391697257757e-06, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.313353748566662}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.HUNTER, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -6.498270034790039, -1.9073486328125e-06, -3.814697265625e-06, 0.0, -7.82012939453125e-05, 0.0, -0.00019073486328125, -8.4638240878121e-06, -0.013545989990234375, 0.0, -9.72747802734375e-05, -2.288818359375e-05, -6.318092346191406e-06, -1.9073486328125e-06, -6.29425048828125e-05, -1.71661376953125e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.000400543212890625, 0.0, -0.0017604827880859375, 0.0, -0.011896133422851562, -7.748603820800781e-06, -0.0003871917724609375, -0.00020599365234375, -5.900676842429675e-05, -1.1920928244535389e-07, -1.0320683941245079e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.545013776902799}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "MECH", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.MECH)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -0.01566314697265625, 0.0, -0.0001506805419921875, -4.00543212890625e-05, -6.79492904964718e-06, -1.9073486328125e-06, -7.62939453125e-05, -2.09808349609375e-05, -7.62939453125e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.0017223358154296875, 0.0, -6.861781120300293, -5.7697296142578125e-05, -0.0001201629638671875, -0.0001430511474609375, -4.327195347286761e-05, -1.1920928244535389e-07, -1.2878444977104664e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "MECH"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.90963845153987}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -6.9659247398376465, -1.1920928244535389e-07, -1.9073486328125e-06, -1.9073486328125e-06, -7.62939453125e-06, 0.0, -9.5367431640625e-06, -7.033334895822918e-06, -0.009281277656555176, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -9.34600830078125e-05, 0.0, -0.000133514404296875, -1.1086402082582936e-05, -0.015592575073242188, 0.0, -0.0001468658447265625, -3.62396240234375e-05, -6.675719760096399e-06, -1.9073486328125e-06, -7.43865966796875e-05, -2.09808349609375e-05, -5.7220458984375e-06, -1.9073486328125e-05, -3.814697265625e-06, -3.62396240234375e-05, -1.9073486328125e-06, -0.000446319580078125, 0.0, -0.001728057861328125, 0.0, -0.011965751647949219, -7.748603820800781e-06, -0.0003910064697265625, -0.0002040863037109375, -6.031799057382159e-05, -1.1920928244535389e-07, -1.1392869055271149e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.016337459481051}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARLOCK", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.WARLOCK, CARD_RARITY.\n            RARE, True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -7.020345687866211, 0.0, -9.5367431640625e-06, 0.0, -3.814697265625e-05, 0.0, -5.91278076171875e-05, -1.0013530300057027e-05, -0.05127525329589844, 0.0, -0.0001010894775390625, -1.52587890625e-05, -6.198883056640625e-06, -1.9073486328125e-06, -6.103515625e-05, -1.52587890625e-05, -5.7220458984375e-06, -2.09808349609375e-05, -3.814697265625e-06, -4.1961669921875e-05, -1.9073486328125e-06, -0.0003604888916015625, 0.0, -0.00177764892578125, 0.0, -0.012125968933105469, -7.748603820800781e-06, -0.0003795623779296875, -0.0002155303955078125, -5.900676114833914e-05, -1.1920928244535389e-07, -1.1868251021951437e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARLOCK"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.1048550499424366}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 212, 40, 134, "Imp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "ALL", "<EOS>", 38, 126, "False", "<EOS>", 216, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 73, 146, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 1, CHARACTER_CLASS.ALL, CARD_RARITY.ALL,\n            True, minion_type=MINION_TYPE.DEMON)\n\n    def create_minion(self, player):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -0.007470130920410156, -2.288818359375e-05, -1.9073486328125e-06, -4.76837158203125e-05, 0.0, -1.263618378288811e-05, -3.814697265625e-06, -8.594989776611328e-05, 0.0, -0.0004520416259765625, -8.0108642578125e-05, -3.814697265625e-06, -2.741813204920618e-06, -2.7417810997576453e-05, -2.86102294921875e-05, -1.9073486328125e-06, -0.007774278987199068, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -5.7220458984375e-06, 0.0, -1.9073486328125e-05, -2.9802276912960224e-06, -0.011137127876281738, -5.7220458984375e-06, 0.0, -1.9073486328125e-06, -8.58306884765625e-05, 0.0, -0.0001373291015625, -1.0847986231965479e-05, -7.239527702331543, -3.814697265625e-06, -0.002712249755859375, -2.86102294921875e-05, -1.072883515007561e-05, -1.9073486328125e-06, -0.0001087188720703125, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-05, -5.7220458984375e-06, -2.86102294921875e-05, 0.0, -0.0003681182861328125, 0.0, -0.00180816650390625, 0.0, -0.012569427490234375, -7.748603820800781e-06, -0.0003757476806640625, -0.0003814697265625, -7.140370144043118e-05, -1.1920928244535389e-07, -1.1034368071705103e-05, 0.0], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": true, "_type": "NameConstant"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}, "arg": "minion_type", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 1, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.287355769712796}, {"choice_history": [55, 124, 221, 63, 103, "Imp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 101, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 213, 40, 134, "Imp", "<EOS>", 39, 130, "0", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 38, 126, "False", "<EOS>", 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DEMON", "<EOS>", 66, 108, "create_minion", "<EOS>", 195, 202, 194, "self", "<EOS>", 194, "p", "<EOS>", 221, 82, 170, "1", "<EOS>", "1", "<EOS>"], "inferred_code": "class Imp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Imp', 0, CHARACTER_CLASS.ALL, CARD_RARITY.RARE,\n            True, MINION_TYPE.DEMON)\n\n    def create_minion(self, p):\n        return Minion(1, 1)\n", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -4.9591064453125e-05, -2.6702880859375e-05, -0.000232696533203125, -2.264974000354414e-06, -9.584352665115148e-05, -5.7220458984375e-06, -0.0006732940673828125, 0.0, -0.0001649856276344508, -9.584426879882812e-05, -3.814697265625e-06, -1.52587890625e-05, -0.0001163482666015625, -7.43865966796875e-05, -8.821482879284304e-06, 0.0, -1.9073486328125e-06, -1.71661376953125e-05, -3.814697265625e-06, -2.1815170839545317e-05, -6.079673767089844e-06, -6.866455078125e-05, -7.2479248046875e-05, -1.71661376953125e-05, -5.7220458984375e-06, -5.013200759887695, -0.0006017684936523438, -3.814697265625e-06, -2.288818359375e-05, 0.0, -3.2901763916015625e-05, -1.9073486328125e-06, -0.000720977783203125, 0.0, -0.038330078125, -5.340576171875e-05, -5.7220458984375e-06, -1.5735575288999826e-05, -2.7179348762729205e-05, -2.6702880859375e-05, -9.5367431640625e-06, -1.154163122177124, 0.0, 0.0, -3.814697265625e-06, -2.288818359375e-05, 0.0, -5.7220458984375e-06, -6.198883056640625e-06, -0.4557209014892578, -5.7220458984375e-06, 0.0, -0.000469207763671875, -0.0001087188720703125, 0.0, -0.0001125335693359375, -2.6225699912174605e-05, -0.4819622039794922, 0.0, -0.0003108978271484375, -2.47955322265625e-05, -1.1444091796875e-05, 0.0, -0.000820159912109375, 0.0, -0.0012063980102539062, 0.0, -0.011079788208007812, -1.1920928244535389e-07, -0.04729270935058594, 0.0, -0.06435489654541016, -3.62396240234375e-05, -0.002115964889526367, -2.2649765014648438e-06, -1.9073486328125e-06, -0.0006618499755859375, -5.7220458984375e-06, -0.0002498626126907766, -6.794906312279636e-06, -5.7220458984375e-06, -0.01546323299407959, 0.0, -0.0001392364501953125, -0.0063343048095703125, -4.38690185546875e-05, -0.00018475747492630035, -1.2278481335670222e-05, -0.0007661521667614579, -1.1920928244535389e-07], "model_output": {"body": [{"name": "Imp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Imp", "_type": "Str"}, {"n": 0, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}, {"value": true, "_type": "NameConstant"}, {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DEMON"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"name": "create_minion", "args": {"args": [{"arg": "self", "_type": "arg"}, {"arg": "p", "_type": "arg"}], "_type": "arguments"}, "body": [{"hole1": 1, "hole0": 1, "_type": "Template34"}], "_type": "FunctionDef"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -7.298646902190498}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [-7.62939453125e-06, -6.67572021484375e-05, -19.99678611755371], "model_output": {"body": [], "_type": "Module"}, "score": -19.99686050415039}]}
{"gold_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.PRIEST,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.DRAGON, battlecry=\n            Battlecry(Give(Buff(ChangeHealth(2))), SelfSelector(),\n            GreaterThan(Count(CardSelector(condition=IsType(MINION_TYPE.\n            DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "beams": [{"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(2))]), SelfSelector(), GreaterThan(\n            Count(MinionSelector(IsType(MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.9235610961914062, -2.47955322265625e-05, -5.960462203802308e-06, -2.9087066650390625e-05, -2.0265579223632812e-06, 0.0, -1.8476916011422873e-05, -1.1920928244535389e-07, -0.2783396244049072, 0.0, -0.152521014213562, -2.3841855067985307e-07, -6.29425048828125e-05, -0.00035858154296875, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, -9.536738616588991e-07, -0.0005664825439453125, -0.00020599365234375, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0015005766181275249, -6.115436553955078e-05, -1.33514404296875e-05, -0.0733652114868164, -5.7220458984375e-05, -0.004146575927734375, -0.0010128021240234375, -0.000270843505859375, -0.007867754437029362, 0.0, -0.042865753173828125, -0.0004520416259765625, -0.20915207266807556, -2.861022494471399e-06, -0.018182754516601562, -1.9073486328125e-06, -0.000412583292927593, -6.127357482910156e-05, 0.0, -0.000270843505859375, -0.01165008544921875, -5.53131103515625e-05, -3.814697265625e-06, -0.000179290771484375, -0.00015234947204589844, -2.3841855067985307e-07, 0.0, -0.0001201629638671875, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028841474559158087, -0.00015091171371750534, -1.1444091796875e-05, -0.0044193267822265625, -0.11579704284667969, -1.33514404296875e-05, -1.9073486328125e-06, -0.0047751665115356445, -0.0002002716064453125, 0.0, -1.9073486328125e-05, -0.009868621826171875, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010198350064456463, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.0002574920654296875, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -0.6509416103363037, -1.1920928244535389e-07, -8.7738037109375e-05, -1.71661376953125e-05, 0.0, -0.0007266998291015625, -4.768370445162873e-07, -2.6702880859375e-05, -3.814697265625e-06, -0.00046122068306431174, -1.9073486328125e-06, -0.0003681182861328125, -1.9073486328125e-05, -0.0134633369743824, 0.0, -0.000632205163128674, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"_type": "Template3", "hole0": "Twilight Whelp", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 1, "hole3": "battlecry", "hole2": "HUNTER"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -2.5348780668788464}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "2", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, battlecry=Battlecry(Give([Buff(ChangeAttack\n            (1)), Buff(ChangeHealth(2))]), SelfSelector(), GreaterThan(\n            Count(MinionSelector(IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.9235610961914062, -2.47955322265625e-05, -5.960462203802308e-06, -2.9087066650390625e-05, -2.0265579223632812e-06, 0.0, -1.8476916011422873e-05, -1.1920928244535389e-07, -0.2783396244049072, 0.0, -0.152521014213562, -2.3841855067985307e-07, -6.29425048828125e-05, -0.00035858154296875, -9.5367431640625e-06, 0.0, -5.7220458984375e-05, -9.536738616588991e-07, -0.0005664825439453125, -0.00020599365234375, -1.1444091796875e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.0015005766181275249, -6.115436553955078e-05, -1.33514404296875e-05, -0.0733652114868164, -5.7220458984375e-05, -0.004146575927734375, -0.0010128021240234375, -0.000270843505859375, -0.007867754437029362, 0.0, -0.042865753173828125, -0.0004520416259765625, -0.20915207266807556, -2.861022494471399e-06, -0.018182754516601562, -1.9073486328125e-06, -0.000412583292927593, -6.127357482910156e-05, 0.0, -0.000270843505859375, -0.01165008544921875, -5.53131103515625e-05, -3.814697265625e-06, -0.000179290771484375, -0.00015234947204589844, -2.3841855067985307e-07, 0.0, -0.0001201629638671875, -1.52587890625e-05, -2.47955322265625e-05, -5.7220458984375e-06, -0.0028841474559158087, -0.00015091171371750534, -1.1444091796875e-05, -0.0044193267822265625, -0.11579704284667969, -1.33514404296875e-05, -1.9073486328125e-06, -0.0047751665115356445, -0.0002002716064453125, 0.0, -1.9073486328125e-05, -0.009868621826171875, -1.1444091796875e-05, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010198350064456463, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.0002574920654296875, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -1.2213895320892334, -7.867813110351562e-06, -3.24249267578125e-05, -1.1444091796875e-05, 0.0, -0.0009846687316894531, -2.3841855067985307e-07, -5.340576171875e-05, -5.7220458984375e-06, -0.00015020367573015392, -1.9073486328125e-06, -0.0003662109375, -1.52587890625e-05, -0.015020947903394699, 0.0, -0.000531174533534795, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"_type": "Template3", "hole0": "Twilight Whelp", "hole4": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 2, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "hole1": 1, "hole3": "battlecry", "hole2": "HUNTER"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.106698884039126}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -0.9836641550064087, -3.254413604736328e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -1.0371154530730564e-05, -0.003697514533996582, -8.976459503173828e-05, -0.2523345947265625, -3.0517578125e-05, 0.0, -0.058519601821899414, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0001163482666015625, -1.52587890625e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.1920928244535389e-07, -0.00154876708984375, -0.021241188049316406, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.0008160158758983016, -5.161762237548828e-05, -5.7220458984375e-06, -0.01406097412109375, -9.5367431640625e-06, -0.0056896209716796875, -0.0016994476318359375, -0.00046539306640625, -0.006992894224822521, -1.9073486328125e-06, -0.8264589309692383, -0.0011043548583984375, -0.10086005181074142, -0.00033652782440185547, -0.00020599365234375, -1.9073486328125e-06, -0.00041174879879690707, -0.00012421607971191406, 0.0, -0.0005245208740234375, -0.035602569580078125, -6.67572021484375e-05, -3.814697265625e-06, -0.0002170800871681422, -0.00017678736185189337, -2.3841855067985307e-07, 0.0, -0.00012969970703125, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0025418975856155157, -0.0001597328227944672, -1.1444091796875e-05, -0.0043506622314453125, -0.10756587982177734, -1.33514404296875e-05, -1.9073486328125e-06, -0.005258083343505859, -0.00020599365234375, 0.0, -2.09808349609375e-05, -0.010983467102050781, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010219807736575603, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000255584716796875, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -0.6486032009124756, -1.1920928244535389e-07, -0.0001220703125, -1.33514404296875e-05, 0.0, -0.0008124113082885742, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -0.0005645750788971782, -1.9073486328125e-06, -0.00038909912109375, -1.9073486328125e-05, -0.013980108313262463, 0.0, -0.0006164793740026653, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -3.625404217585931}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(3))]),\n            SelfSelector(), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -1.240465760231018, 0.0, 0.0, -4.9591064453125e-05, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.537788011773955e-05, -0.037062764167785645, -0.00029206275939941406, -0.6918716430664062, -3.814697265625e-06, -5.7220458984375e-06, -0.0003426074981689453, -8.82148651726311e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000164031982421875, 0.0, -6.29425048828125e-05, 0.0, -0.38492298126220703, -1.1920928244535389e-07, -5.7220458984375e-06, 0.0, -0.0035600662231445312, 0.0, -0.0005321502685546875, -0.0001468658447265625, -7.62939453125e-06, 0.0, -0.00010883808135986328, -1.1920928244535389e-07, -0.009420394897460938, -0.0011205673217773438, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0006192417349666357, -7.82012939453125e-05, -5.7220458984375e-06, -0.025243759155273438, -2.288818359375e-05, -0.0073223114013671875, -0.0009613037109375, -0.0004787445068359375, -0.008953791111707687, -1.9073486328125e-06, -0.18304729461669922, -0.0013484954833984375, -0.08844589442014694, -0.0004532337188720703, -0.0004901885986328125, -1.9073486328125e-06, -0.0003347395686432719, -0.00018155574798583984, 0.0, -0.0002841949462890625, -0.0104827880859375, -6.67572021484375e-05, -3.814697265625e-06, -0.00021302697132341564, -0.00015926359628792852, -2.3841855067985307e-07, 0.0, -0.0001316070556640625, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0025693157222121954, -0.00015746788994874805, -1.1444091796875e-05, -0.0044345855712890625, -0.11172676086425781, -1.33514404296875e-05, -1.9073486328125e-06, -0.00508272647857666, -0.0002002716064453125, 0.0, -2.09808349609375e-05, -0.010756492614746094, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010088677518069744, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00025177001953125, 0.0, -8.20159912109375e-05, -4.38690185546875e-05, -0.6507174968719482, -1.1920928244535389e-07, -0.0001201629638671875, -1.33514404296875e-05, 0.0, -0.0008047819137573242, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -0.000545024813618511, -1.9073486328125e-06, -0.0003833770751953125, -1.9073486328125e-05, -0.013898211531341076, 0.0, -0.0006194577435962856, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.013287048517562}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -0.9836641550064087, -3.254413604736328e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -1.0371154530730564e-05, -0.003697514533996582, -8.976459503173828e-05, -0.2523345947265625, -3.0517578125e-05, 0.0, -0.058519601821899414, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0001163482666015625, -1.52587890625e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.1920928244535389e-07, -0.00154876708984375, -0.021241188049316406, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.0008160158758983016, -5.161762237548828e-05, -5.7220458984375e-06, -0.01406097412109375, -9.5367431640625e-06, -0.0056896209716796875, -0.0016994476318359375, -0.00046539306640625, -0.006992894224822521, -1.9073486328125e-06, -0.8264589309692383, -0.0011043548583984375, -0.10086005181074142, -0.00033652782440185547, -0.00020599365234375, -1.9073486328125e-06, -0.00041174879879690707, -0.00012421607971191406, 0.0, -0.0005245208740234375, -0.035602569580078125, -6.67572021484375e-05, -3.814697265625e-06, -0.0002170800871681422, -0.00017678736185189337, -2.3841855067985307e-07, 0.0, -0.00012969970703125, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0025418975856155157, -0.0001597328227944672, -1.1444091796875e-05, -0.0043506622314453125, -0.10756587982177734, -1.33514404296875e-05, -1.9073486328125e-06, -0.005258083343505859, -0.00020599365234375, 0.0, -2.09808349609375e-05, -0.010983467102050781, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010219807736575603, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000255584716796875, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -1.228916883468628, -7.867813110351562e-06, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -0.0010067224502563477, -2.3841855067985307e-07, -4.9591064453125e-05, -5.7220458984375e-06, -0.0001446008391212672, -1.9073486328125e-06, -0.00037384033203125, -1.52587890625e-05, -0.015293817967176437, 0.0, -0.0005183066823519766, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.206631241642796}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -1.240465760231018, 0.0, 0.0, -4.9591064453125e-05, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.537788011773955e-05, -0.037062764167785645, -0.00029206275939941406, -0.6985721588134766, -2.288818359375e-05, 0.0, -0.08602488040924072, -1.1920928244535389e-07, -7.62939453125e-06, -0.0001354217529296875, -1.71661376953125e-05, -1.9073486328125e-06, -8.022785186767578e-05, -2.3841855067985307e-07, -0.001338958740234375, -0.035025596618652344, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -0.0009344504796899855, -6.878376007080078e-05, -5.7220458984375e-06, -0.0177764892578125, -1.1444091796875e-05, -0.006058692932128906, -0.0016803741455078125, -0.0004596710205078125, -0.007041652221232653, -1.9073486328125e-06, -0.8490839004516602, -0.0011005401611328125, -0.09861863404512405, -0.00033843517303466797, -0.00019073486328125, -1.9073486328125e-06, -0.0004132985195610672, -0.00012421607971191406, 0.0, -0.0005397796630859375, -0.038272857666015625, -6.67572021484375e-05, -3.814697265625e-06, -0.00021719929645769298, -0.00017678736185189337, -2.3841855067985307e-07, 0.0, -0.0001277923583984375, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.002539990236982703, -0.00015937523858156055, -1.1444091796875e-05, -0.00433349609375, -0.1072235107421875, -1.33514404296875e-05, -1.9073486328125e-06, -0.005256056785583496, -0.00020599365234375, 0.0, -2.09808349609375e-05, -0.010968208312988281, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010219807736575603, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.0002536773681640625, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -0.6488091945648193, -1.1920928244535389e-07, -0.0001220703125, -1.33514404296875e-05, 0.0, -0.0008124113082885742, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -0.0005664824275299907, -1.9073486328125e-06, -0.00038909912109375, -1.9073486328125e-05, -0.013968783430755138, 0.0, -0.0006165985250845551, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.430184478806822}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(3))]),\n            SelfSelector(), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -0.9836641550064087, -3.254413604736328e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -1.0371154530730564e-05, -0.003697514533996582, -8.976459503173828e-05, -1.506993293762207, -5.7220458984375e-06, -5.7220458984375e-06, -0.0006003379821777344, -8.82148651726311e-06, -1.33514404296875e-05, 0.0, -0.000194549560546875, 0.0, -7.62939453125e-05, 0.0, -0.37915897369384766, -1.1920928244535389e-07, -7.62939453125e-06, 0.0, -0.004656791687011719, 0.0, -0.00054168701171875, -0.000148773193359375, -7.62939453125e-06, 0.0, -0.00010883808135986328, -1.1920928244535389e-07, -0.009799957275390625, -0.0009756088256835938, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0005708532407879829, -7.43865966796875e-05, -7.62939453125e-06, -0.024567604064941406, -2.288818359375e-05, -0.007267951965332031, -0.00095367431640625, -0.00048065185546875, -0.00911995954811573, -1.9073486328125e-06, -0.18140888214111328, -0.001373291015625, -0.0897037610411644, -0.0004552602767944336, -0.00049591064453125, -1.9073486328125e-06, -0.00033879265538416803, -0.00018537044525146484, 0.0, -0.0002803802490234375, -0.010213851928710938, -6.4849853515625e-05, -3.814697265625e-06, -0.00021302697132341564, -0.00015926359628792852, -2.3841855067985307e-07, 0.0, -0.0001316070556640625, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0025693157222121954, -0.0001575870846863836, -1.1444091796875e-05, -0.0044403076171875, -0.11182212829589844, -1.33514404296875e-05, -1.9073486328125e-06, -0.005073189735412598, -0.0002002716064453125, 0.0, -2.09808349609375e-05, -0.010751724243164062, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010088677518069744, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00025177001953125, 0.0, -8.20159912109375e-05, -4.38690185546875e-05, -0.6505725383758545, -1.1920928244535389e-07, -0.0001201629638671875, -1.33514404296875e-05, 0.0, -0.0008047819137573242, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -0.000545024813618511, -1.9073486328125e-06, -0.0003833770751953125, -1.9073486328125e-05, -0.013894396834075451, 0.0, -0.0006196960457600653, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.532658290917318}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 217, 54, 197, "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, minion_type=MINION_TYPE.PIRATE, battlecry=\n            Battlecry(Give([Buff(ChangeAttack(1)), Buff(ChangeHealth(3))]),\n            SelfSelector(), GreaterThan(Count(MinionSelector(IsType(\n            MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -1.240465760231018, 0.0, 0.0, -4.9591064453125e-05, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.537788011773955e-05, -0.037062764167785645, -0.00029206275939941406, -0.6918716430664062, -3.814697265625e-06, -5.7220458984375e-06, -0.0003426074981689453, -8.82148651726311e-06, -9.5367431640625e-06, -1.9073486328125e-06, -0.000164031982421875, 0.0, -6.29425048828125e-05, 0.0, -0.38492298126220703, -1.1920928244535389e-07, -5.7220458984375e-06, 0.0, -0.0035600662231445312, 0.0, -0.0005321502685546875, -0.0001468658447265625, -7.62939453125e-06, 0.0, -0.00010883808135986328, -1.1920928244535389e-07, -0.009420394897460938, -0.0011205673217773438, -7.62939453125e-06, -1.33514404296875e-05, 0.0, -0.0006192417349666357, -7.82012939453125e-05, -5.7220458984375e-06, -0.025243759155273438, -2.288818359375e-05, -0.0073223114013671875, -0.0009613037109375, -0.0004787445068359375, -0.008953791111707687, -1.9073486328125e-06, -0.18304729461669922, -0.0013484954833984375, -0.08844589442014694, -0.0004532337188720703, -0.0004901885986328125, -1.9073486328125e-06, -0.0003347395686432719, -0.00018155574798583984, 0.0, -0.0002841949462890625, -0.0104827880859375, -6.67572021484375e-05, -3.814697265625e-06, -0.00021302697132341564, -0.00015926359628792852, -2.3841855067985307e-07, 0.0, -0.0001316070556640625, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0025693157222121954, -0.00015746788994874805, -1.1444091796875e-05, -0.0044345855712890625, -0.11172676086425781, -1.33514404296875e-05, -1.9073486328125e-06, -0.00508272647857666, -0.0002002716064453125, 0.0, -2.09808349609375e-05, -0.010756492614746094, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010088677518069744, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.00025177001953125, 0.0, -8.20159912109375e-05, -4.38690185546875e-05, -1.2239139080047607, -7.867813110351562e-06, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -0.0010097026824951172, -2.3841855067985307e-07, -5.14984130859375e-05, -5.7220458984375e-06, -0.00015246865223161876, -1.9073486328125e-06, -0.0003719329833984375, -1.52587890625e-05, -0.015278678387403488, 0.0, -0.0005225959466770291, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "arg": "minion_type", "_type": "keyword"}, {"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.587510526347657}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "HUNTER", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -2.1461386680603027, 0.0, 0.0, -7.62939453125e-06, -2.288818359375e-05, 0.0, -0.0001049041748046875, -5.483612312673358e-06, -0.0026084184646606445, -6.687641143798828e-05, -0.19803524017333984, -3.0517578125e-05, 0.0, -0.07199978828430176, -1.1920928244535389e-07, -1.33514404296875e-05, -0.000102996826171875, -1.52587890625e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.1920928244535389e-07, -0.002079010009765625, -0.02250385284423828, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.0008193565299734473, -5.543231964111328e-05, -5.7220458984375e-06, -0.013205528259277344, -9.5367431640625e-06, -0.005806922912597656, -0.001689910888671875, -0.0004673004150390625, -0.007013517897576094, -1.9073486328125e-06, -0.8392877578735352, -0.0011081695556640625, -0.09976446628570557, -0.00033843517303466797, -0.000213623046875, -1.9073486328125e-06, -0.0004000662884209305, -0.00012421607971191406, 0.0, -0.00048828125, -0.03492927551269531, -6.67572021484375e-05, -3.814697265625e-06, -0.0002170800871681422, -0.00017678736185189337, -2.3841855067985307e-07, 0.0, -0.00012969970703125, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.0025322416331619024, -0.00015961362805683166, -1.1444091796875e-05, -0.004344940185546875, -0.10761833190917969, -1.33514404296875e-05, -1.9073486328125e-06, -0.005282878875732422, -0.00020599365234375, 0.0, -2.09808349609375e-05, -0.010993003845214844, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010219807736575603, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.0002536773681640625, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -0.6490857601165771, -1.1920928244535389e-07, -0.0001220703125, -1.33514404296875e-05, 0.0, -0.0008105039596557617, -5.960462772236497e-07, -2.86102294921875e-05, -3.814697265625e-06, -0.0005645750788971782, -1.9073486328125e-06, -0.00038909912109375, -1.9073486328125e-05, -0.013995367102324963, 0.0, -0.0006162410718388855, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "HUNTER"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.7585964696576255}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "WARRIOR", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 32, 101, 19, 125, "Buff", "<EOS>", 208, 49, 174, "you", "Whelp", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.WARRIOR,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(youWhelp())]), SelfSelector(), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.PIRATE))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -0.9836641550064087, -3.254413604736328e-05, 0.0, -5.7220458984375e-06, -1.33514404296875e-05, 0.0, -7.62939453125e-05, -1.0371154530730564e-05, -0.003697514533996582, -8.976459503173828e-05, -0.2523345947265625, -3.0517578125e-05, 0.0, -0.058519601821899414, -1.1920928244535389e-07, -1.9073486328125e-05, -0.0001163482666015625, -1.52587890625e-05, -1.9073486328125e-06, -7.450580596923828e-05, -1.1920928244535389e-07, -0.00154876708984375, -0.021241188049316406, -9.5367431640625e-06, -2.09808349609375e-05, 0.0, -0.0008160158758983016, -5.161762237548828e-05, -5.7220458984375e-06, -0.01406097412109375, -9.5367431640625e-06, -0.0056896209716796875, -0.0016994476318359375, -0.00046539306640625, -0.006992894224822521, -1.9073486328125e-06, -0.6104850769042969, -2.47955322265625e-05, -7.62939453125e-06, 0.0, -0.10233545303344727, -2.968272747239098e-05, -6.866455078125e-05, -0.0002002716064453125, -7.62939453125e-06, -0.2003825604915619, -0.9721480011940002, -4.768370445162873e-07, -0.001922607421875, -5.7220458984375e-06, -0.02177572250366211, -5.006789251638111e-06, -2.3841855067985307e-07, -8.20159912109375e-05, -0.39638328552246094, -4.57763671875e-05, -1.9073486328125e-06, -0.00011658668518066406, -0.0002275705337524414, -1.1920928244535389e-07, 0.0, -7.43865966796875e-05, -3.0517578125e-05, -2.47955322265625e-05, -1.9073486328125e-06, -0.001236438169144094, -5.2808936743531376e-05, -1.33514404296875e-05, -0.0023326873779296875, -0.04555511474609375, -1.1444091796875e-05, -1.9073486328125e-06, -0.006402373313903809, -0.0001811981201171875, 0.0, -2.288818359375e-05, -0.00850677490234375, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010255570523440838, -4.8279762268066406e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.000293731689453125, 0.0, -9.1552734375e-05, -4.00543212890625e-05, -0.6946724653244019, -1.1920928244535389e-07, -9.72747802734375e-05, -1.1444091796875e-05, 0.0, -0.0008094310760498047, -4.768370445162873e-07, -4.00543212890625e-05, -5.7220458984375e-06, -0.000941276375669986, -3.814697265625e-06, -0.0004329681396484375, -2.288818359375e-05, -0.01285499893128872, 0.0, -0.0006648473208770156, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "WARRIOR"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"args": [{"hole0": "youWhelp", "_type": "Template38"}], "func": {"id": "Buff", "_type": "Name"}, "_type": "Call"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -4.944173138267445}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 66, 108, "__init__", "<EOS>", 195, 201, 194, "self", "<EOS>", 221, 64, 106, 14, 102, 11, 94, 26, 174, "super", "<EOS>", "__init__", "<EOS>", 211, 40, 134, "Twilight", " ", "Whelp", "<EOS>", 39, 130, "1", "<EOS>", 29, 94, 19, 125, "CHARACTER_CLASS", "<EOS>", "ALL", "<EOS>", 29, 94, 19, 125, "CARD_RARITY", "<EOS>", "RARE", "<EOS>", 216, 54, 197, "battlecry", "<EOS>", 14, 101, 19, 125, "Battlecry", "<EOS>", 210, 32, 101, 19, 125, "Give", "<EOS>", 208, 35, 120, 209, 43, 163, "1", "<EOS>", 42, 162, "3", "<EOS>", 49, 174, "Self", "Selector", "<EOS>", 32, 102, 19, 125, "Greater", "Than", "<EOS>", 208, 32, 101, 19, 125, "Count", "<EOS>", 208, 32, 101, 19, 125, "Minion", "Selector", "<EOS>", 208, 32, 101, 19, 125, "Is", "Type", "<EOS>", 208, 29, 94, 19, 125, "MINION_TYPE", "<EOS>", "DRAGON", "<EOS>", 216, 54, 197, "value", "<EOS>", 21, 130, "0", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.RARE, battlecry=Battlecry(Give([Buff(ChangeAttack(1\n            )), Buff(ChangeHealth(3))]), SelfSelector(), GreaterThan(Count(\n            MinionSelector(IsType(MINION_TYPE.DRAGON))), value=0)))\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.50634765625, -0.0001068115234375, -2.7060508728027344e-05, 0.0, -1.9073486328125e-06, -5.7220458984375e-06, 0.0, -3.3020813134498894e-05, -2.3841855067985307e-07, -1.33514404296875e-05, -8.392333984375e-05, -3.814697265625e-06, 0.0, -0.000118255615234375, -5.340576171875e-05, 0.0, -5.7220458984375e-06, -1.9073486328125e-06, -5.960462772236497e-07, -4.38690185546875e-05, -8.940695806813892e-06, 0.0, -0.000499725341796875, -4.9591064453125e-05, -1.1444091796875e-05, -1.3232166566012893e-05, -2.682209014892578e-05, -1.9192688341718167e-05, 0.0, -0.0012607574462890625, -4.38690185546875e-05, -1.4663120964542031e-05, 0.0, -1.9073486328125e-06, -3.814697265625e-06, -0.000247955322265625, -1.9073486328125e-06, -0.00021588802337646484, -5.9604644775390625e-06, -1.240465760231018, 0.0, 0.0, -4.9591064453125e-05, -2.86102294921875e-05, 0.0, -1.52587890625e-05, -1.537788011773955e-05, -0.037062764167785645, -0.00029206275939941406, -0.6985721588134766, -2.288818359375e-05, 0.0, -0.08602488040924072, -1.1920928244535389e-07, -7.62939453125e-06, -0.0001354217529296875, -1.71661376953125e-05, -1.9073486328125e-06, -8.022785186767578e-05, -2.3841855067985307e-07, -0.001338958740234375, -0.035025596618652344, -9.5367431640625e-06, -2.288818359375e-05, 0.0, -0.0009344504796899855, -6.878376007080078e-05, -5.7220458984375e-06, -0.0177764892578125, -1.1444091796875e-05, -0.006058692932128906, -0.0016803741455078125, -0.0004596710205078125, -0.007041652221232653, -1.9073486328125e-06, -0.8490839004516602, -0.0011005401611328125, -0.09861863404512405, -0.00033843517303466797, -0.00019073486328125, -1.9073486328125e-06, -0.0004132985195610672, -0.00012421607971191406, 0.0, -0.0005397796630859375, -0.038272857666015625, -6.67572021484375e-05, -3.814697265625e-06, -0.00021719929645769298, -0.00017678736185189337, -2.3841855067985307e-07, 0.0, -0.0001277923583984375, -1.52587890625e-05, -2.288818359375e-05, -5.7220458984375e-06, -0.002539990236982703, -0.00015937523858156055, -1.1444091796875e-05, -0.00433349609375, -0.1072235107421875, -1.33514404296875e-05, -1.9073486328125e-06, -0.005256056785583496, -0.00020599365234375, 0.0, -2.09808349609375e-05, -0.010968208312988281, -9.5367431640625e-06, -5.7220458984375e-06, -1.9073486328125e-06, -0.0010219807736575603, -5.0187110900878906e-05, -2.384185791015625e-06, -1.9073486328125e-06, -1.1444091796875e-05, -1.1444091796875e-05, -0.0002536773681640625, 0.0, -8.392333984375e-05, -4.38690185546875e-05, -1.2284505367279053, -7.867813110351562e-06, -3.62396240234375e-05, -1.1444091796875e-05, 0.0, -0.001007676124572754, -2.3841855067985307e-07, -4.9591064453125e-05, -5.7220458984375e-06, -0.0001446008391212672, -1.9073486328125e-06, -0.00037384033203125, -1.52587890625e-05, -0.015278439968824387, 0.0, -0.000517949229106307, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"name": "__init__", "args": {"args": [{"arg": "self", "_type": "arg"}], "_type": "arguments"}, "body": [{"value": {"args": [{"s": "Twilight Whelp", "_type": "Str"}, {"n": 1, "_type": "Num"}, {"value": {"id": "CHARACTER_CLASS", "_type": "Name"}, "_type": "Attribute", "attr": "ALL"}, {"value": {"id": "CARD_RARITY", "_type": "Name"}, "_type": "Attribute", "attr": "RARE"}], "keywords": [{"value": {"args": [{"args": [{"elts": [{"hole0": 1, "_type": "Template28"}, {"hole0": 3, "_type": "Template27"}], "_type": "List"}], "func": {"id": "Give", "_type": "Name"}, "_type": "Call"}, {"hole0": "SelfSelector", "_type": "Template38"}, {"args": [{"args": [{"args": [{"args": [{"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "DRAGON"}], "func": {"id": "IsType", "_type": "Name"}, "_type": "Call"}], "func": {"id": "MinionSelector", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Count", "_type": "Name"}, "_type": "Call"}], "keywords": [{"value": {"n": 0, "_type": "Num"}, "arg": "value", "_type": "keyword"}], "func": {"id": "GreaterThan", "_type": "Name"}, "_type": "Call"}], "func": {"id": "Battlecry", "_type": "Name"}, "_type": "Call"}, "arg": "battlecry", "_type": "keyword"}], "func": {"value": {"hole0": "super", "_type": "Template38"}, "_type": "Attribute", "attr": "__init__"}, "_type": "Call"}, "_type": "Expr"}], "_type": "FunctionDef"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.010733679076132}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.9235610961914062, -2.47955322265625e-05, -5.960462203802308e-06, -2.9087066650390625e-05, -2.0265579223632812e-06, 0.0, -1.8476916011422873e-05, -1.1920928244535389e-07, -0.2783396244049072, 0.0, -1.9752339124679565, -2.0265579223632812e-06, -0.0003414154052734375, 0.0, -0.0002346038818359375, 0.0, -8.20159912109375e-05, 0.0, -0.18500614166259766, -1.1920928244535389e-07, -1.792586326599121, -0.000102996826171875, -0.03385365009307861, -6.318072337307967e-06, -8.344644584212801e-07, -2.622600959512056e-06], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"_type": "Template3", "hole0": "Twilight Whelp", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 1, "hole3": "minion_type", "hole2": "HUNTER"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.190212312880661}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "HUNTER", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 72, 145, "2", "<EOS>", "1", "<EOS>", "auras", "<EOS>", 17, 120, 208, 32, 101, 19, 125, "Aura", "<EOS>", 209, 46, 171, "5", "<EOS>", 49, 174, "Self", "Selector", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.HUNTER,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1, auras=[Aura(ChangeAttack(5), SelfSelector())])\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.9235610961914062, -2.47955322265625e-05, -5.960462203802308e-06, -2.9087066650390625e-05, -2.0265579223632812e-06, 0.0, -1.8476916011422873e-05, -1.1920928244535389e-07, -0.2783396244049072, 0.0, -1.9752339124679565, -2.0265579223632812e-06, -0.0003414154052734375, 0.0, -0.0002346038818359375, 0.0, -8.20159912109375e-05, 0.0, -0.18500614166259766, -1.1920928244535389e-07, -0.21506023406982422, -6.4849853515625e-05, -0.0013611316680908203, -5.960462772236497e-07, -2.181499257858377e-05, -1.1920928244535389e-07, -0.21936023235321045, -0.00010072696750285104, -0.0013885498046875, -3.4332275390625e-05, -0.24697113037109375, -9.5367431640625e-06, -4.57763671875e-05, -3.24249267578125e-05, 0.0, -0.15880703926086426, -7.49826431274414e-05, -0.026953697204589844, -0.011332511901855469, -0.0017070770263671875, -0.7793861031532288, -1.978873842745088e-05, -0.28819751739501953, -3.814697265625e-06, -0.002754210028797388, -0.0001354217529296875, 0.0], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"_type": "Template3", "hole0": "Twilight Whelp", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 1, "hole3": "minion_type", "hole2": "HUNTER"}, {"hole1": 1, "hole3": {"elts": [{"args": [{"hole0": 5, "_type": "Template35"}, {"hole0": "SelfSelector", "_type": "Template38"}], "func": {"id": "Aura", "_type": "Name"}, "_type": "Call"}], "_type": "List"}, "hole0": 2, "_type": "Template10", "hole2": "auras"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -5.31748318367557}, {"choice_history": [55, 124, 221, 63, 103, "Twilight", "Whelp", "<EOS>", 208, 37, 125, "Minion", "Card", "<EOS>", 222, 80, 165, "Twilight", " ", "Whelp", "<EOS>", "1", "<EOS>", "ALL", "<EOS>", "minion_type", "<EOS>", 11, 94, 19, 125, "MINION_TYPE", "<EOS>", "PIRATE", "<EOS>", 73, 146, "2", "<EOS>", "1", "<EOS>"], "inferred_code": "class TwilightWhelp(MinionCard):\n\n    def __init__(self):\n        super().__init__('Twilight Whelp', 1, CHARACTER_CLASS.ALL,\n            CARD_RARITY.COMMON, minion_type=MINION_TYPE.PIRATE)\n\n    def create_minion(self, player):\n        return Minion(2, 1)\n", "score_history": [0.0, -5.7220458984375e-06, -2.09808349609375e-05, -1.1444091796875e-05, -1.9073486328125e-06, -4.577531944960356e-05, -0.0005893162451684475, -2.3841855067985307e-07, -1.9073486328125e-06, -3.24249267578125e-05, 0.0, -1.0728830375228426e-06, -5.01871072629001e-05, -7.62939453125e-06, -9.5367431640625e-06, -0.9235610961914062, -2.47955322265625e-05, -5.960462203802308e-06, -2.9087066650390625e-05, -2.0265579223632812e-06, 0.0, -1.8476916011422873e-05, -1.1920928244535389e-07, -1.8041746616363525, 0.0, -1.527185320854187, -2.2649765014648438e-06, -0.0007343292236328125, -1.9073486328125e-06, -0.000244140625, 0.0, -0.0001220703125, 0.0, -0.2437448501586914, -1.1920928244535389e-07, -1.5279312133789062, -0.00012969970703125, -0.03246891498565674, -6.437280717364047e-06, -8.344644584212801e-07, -2.7418097943154862e-06], "model_output": {"body": [{"name": "TwilightWhelp", "body": [{"_type": "Template3", "hole0": "Twilight Whelp", "hole4": {"value": {"id": "MINION_TYPE", "_type": "Name"}, "_type": "Attribute", "attr": "PIRATE"}, "hole1": 1, "hole3": "minion_type", "hole2": "ALL"}, {"hole1": 1, "hole0": 2, "_type": "Template11"}], "bases": [{"id": "MinionCard", "_type": "Name"}], "_type": "ClassDef"}], "_type": "Module"}, "score": -6.061169210614892}, {"choice_history": [55, 124, 220], "inferred_code": "", "score_history": [0.0, -5.7220458984375e-06, -21.38232421875], "model_output": {"body": [], "_type": "Module"}, "score": -21.3823299407959}]}
